

*****
Chime
*****

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: Chime.Client

  A low-level client representing Amazon Chime
  

  The Amazon Chime API (application programming interface) is designed for developers to perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes. It also includes some server-side API actions to use with the Amazon Chime SDK. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* .

   

  You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls. We recommend using an AWS SDK or the AWS CLI. Each API operation includes links to information about using it with a language-specific AWS SDK or the AWS CLI.

    Using an AWS SDK  

  You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the `AWS Developer Center <http://aws.amazon.com/developer/>`__ . 

    Using the AWS CLI  

  Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see `Installing the AWS Command Line Interface <https://docs.aws.amazon.com/cli/latest/userguide/installing.html>`__ in the *AWS Command Line Interface User Guide* . For a list of available Amazon Chime commands, see the `Amazon Chime commands <https://docs.aws.amazon.com/cli/latest/reference/chime/index.html>`__ in the *AWS CLI Command Reference* . 

    Using REST APIs  

  If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports signature version 4. For more information, see `Signature Version 4 Signing Process <https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html>`__ in the *Amazon Web Services General Reference* .

   

  When making REST API calls, use the service name ``chime`` and REST endpoint ``https://service.chime.aws.amazon.com`` .

     

  Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see `Identity and Access Management for Amazon Chime <https://docs.aws.amazon.com/chime/latest/ag/security-iam.html>`__ in the *Amazon Chime Administration Guide* .

  ::

    
    import boto3
    
    client = boto3.client('chime')

  
  These are the available methods:
  
  *   :py:meth:`~Chime.Client.associate_phone_number_with_user`

  
  *   :py:meth:`~Chime.Client.associate_phone_numbers_with_voice_connector`

  
  *   :py:meth:`~Chime.Client.associate_phone_numbers_with_voice_connector_group`

  
  *   :py:meth:`~Chime.Client.associate_signin_delegate_groups_with_account`

  
  *   :py:meth:`~Chime.Client.batch_create_attendee`

  
  *   :py:meth:`~Chime.Client.batch_create_channel_membership`

  
  *   :py:meth:`~Chime.Client.batch_create_room_membership`

  
  *   :py:meth:`~Chime.Client.batch_delete_phone_number`

  
  *   :py:meth:`~Chime.Client.batch_suspend_user`

  
  *   :py:meth:`~Chime.Client.batch_unsuspend_user`

  
  *   :py:meth:`~Chime.Client.batch_update_phone_number`

  
  *   :py:meth:`~Chime.Client.batch_update_user`

  
  *   :py:meth:`~Chime.Client.can_paginate`

  
  *   :py:meth:`~Chime.Client.create_account`

  
  *   :py:meth:`~Chime.Client.create_app_instance`

  
  *   :py:meth:`~Chime.Client.create_app_instance_admin`

  
  *   :py:meth:`~Chime.Client.create_app_instance_user`

  
  *   :py:meth:`~Chime.Client.create_attendee`

  
  *   :py:meth:`~Chime.Client.create_bot`

  
  *   :py:meth:`~Chime.Client.create_channel`

  
  *   :py:meth:`~Chime.Client.create_channel_ban`

  
  *   :py:meth:`~Chime.Client.create_channel_membership`

  
  *   :py:meth:`~Chime.Client.create_channel_moderator`

  
  *   :py:meth:`~Chime.Client.create_media_capture_pipeline`

  
  *   :py:meth:`~Chime.Client.create_meeting`

  
  *   :py:meth:`~Chime.Client.create_meeting_dial_out`

  
  *   :py:meth:`~Chime.Client.create_meeting_with_attendees`

  
  *   :py:meth:`~Chime.Client.create_phone_number_order`

  
  *   :py:meth:`~Chime.Client.create_proxy_session`

  
  *   :py:meth:`~Chime.Client.create_room`

  
  *   :py:meth:`~Chime.Client.create_room_membership`

  
  *   :py:meth:`~Chime.Client.create_sip_media_application`

  
  *   :py:meth:`~Chime.Client.create_sip_media_application_call`

  
  *   :py:meth:`~Chime.Client.create_sip_rule`

  
  *   :py:meth:`~Chime.Client.create_user`

  
  *   :py:meth:`~Chime.Client.create_voice_connector`

  
  *   :py:meth:`~Chime.Client.create_voice_connector_group`

  
  *   :py:meth:`~Chime.Client.delete_account`

  
  *   :py:meth:`~Chime.Client.delete_app_instance`

  
  *   :py:meth:`~Chime.Client.delete_app_instance_admin`

  
  *   :py:meth:`~Chime.Client.delete_app_instance_streaming_configurations`

  
  *   :py:meth:`~Chime.Client.delete_app_instance_user`

  
  *   :py:meth:`~Chime.Client.delete_attendee`

  
  *   :py:meth:`~Chime.Client.delete_channel`

  
  *   :py:meth:`~Chime.Client.delete_channel_ban`

  
  *   :py:meth:`~Chime.Client.delete_channel_membership`

  
  *   :py:meth:`~Chime.Client.delete_channel_message`

  
  *   :py:meth:`~Chime.Client.delete_channel_moderator`

  
  *   :py:meth:`~Chime.Client.delete_events_configuration`

  
  *   :py:meth:`~Chime.Client.delete_media_capture_pipeline`

  
  *   :py:meth:`~Chime.Client.delete_meeting`

  
  *   :py:meth:`~Chime.Client.delete_phone_number`

  
  *   :py:meth:`~Chime.Client.delete_proxy_session`

  
  *   :py:meth:`~Chime.Client.delete_room`

  
  *   :py:meth:`~Chime.Client.delete_room_membership`

  
  *   :py:meth:`~Chime.Client.delete_sip_media_application`

  
  *   :py:meth:`~Chime.Client.delete_sip_rule`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_emergency_calling_configuration`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_group`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_origination`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_proxy`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_streaming_configuration`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_termination`

  
  *   :py:meth:`~Chime.Client.delete_voice_connector_termination_credentials`

  
  *   :py:meth:`~Chime.Client.describe_app_instance`

  
  *   :py:meth:`~Chime.Client.describe_app_instance_admin`

  
  *   :py:meth:`~Chime.Client.describe_app_instance_user`

  
  *   :py:meth:`~Chime.Client.describe_channel`

  
  *   :py:meth:`~Chime.Client.describe_channel_ban`

  
  *   :py:meth:`~Chime.Client.describe_channel_membership`

  
  *   :py:meth:`~Chime.Client.describe_channel_membership_for_app_instance_user`

  
  *   :py:meth:`~Chime.Client.describe_channel_moderated_by_app_instance_user`

  
  *   :py:meth:`~Chime.Client.describe_channel_moderator`

  
  *   :py:meth:`~Chime.Client.disassociate_phone_number_from_user`

  
  *   :py:meth:`~Chime.Client.disassociate_phone_numbers_from_voice_connector`

  
  *   :py:meth:`~Chime.Client.disassociate_phone_numbers_from_voice_connector_group`

  
  *   :py:meth:`~Chime.Client.disassociate_signin_delegate_groups_from_account`

  
  *   :py:meth:`~Chime.Client.generate_presigned_url`

  
  *   :py:meth:`~Chime.Client.get_account`

  
  *   :py:meth:`~Chime.Client.get_account_settings`

  
  *   :py:meth:`~Chime.Client.get_app_instance_retention_settings`

  
  *   :py:meth:`~Chime.Client.get_app_instance_streaming_configurations`

  
  *   :py:meth:`~Chime.Client.get_attendee`

  
  *   :py:meth:`~Chime.Client.get_bot`

  
  *   :py:meth:`~Chime.Client.get_channel_message`

  
  *   :py:meth:`~Chime.Client.get_events_configuration`

  
  *   :py:meth:`~Chime.Client.get_global_settings`

  
  *   :py:meth:`~Chime.Client.get_media_capture_pipeline`

  
  *   :py:meth:`~Chime.Client.get_meeting`

  
  *   :py:meth:`~Chime.Client.get_messaging_session_endpoint`

  
  *   :py:meth:`~Chime.Client.get_paginator`

  
  *   :py:meth:`~Chime.Client.get_phone_number`

  
  *   :py:meth:`~Chime.Client.get_phone_number_order`

  
  *   :py:meth:`~Chime.Client.get_phone_number_settings`

  
  *   :py:meth:`~Chime.Client.get_proxy_session`

  
  *   :py:meth:`~Chime.Client.get_retention_settings`

  
  *   :py:meth:`~Chime.Client.get_room`

  
  *   :py:meth:`~Chime.Client.get_sip_media_application`

  
  *   :py:meth:`~Chime.Client.get_sip_media_application_logging_configuration`

  
  *   :py:meth:`~Chime.Client.get_sip_rule`

  
  *   :py:meth:`~Chime.Client.get_user`

  
  *   :py:meth:`~Chime.Client.get_user_settings`

  
  *   :py:meth:`~Chime.Client.get_voice_connector`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_emergency_calling_configuration`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_group`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_logging_configuration`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_origination`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_proxy`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_streaming_configuration`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_termination`

  
  *   :py:meth:`~Chime.Client.get_voice_connector_termination_health`

  
  *   :py:meth:`~Chime.Client.get_waiter`

  
  *   :py:meth:`~Chime.Client.invite_users`

  
  *   :py:meth:`~Chime.Client.list_accounts`

  
  *   :py:meth:`~Chime.Client.list_app_instance_admins`

  
  *   :py:meth:`~Chime.Client.list_app_instance_users`

  
  *   :py:meth:`~Chime.Client.list_app_instances`

  
  *   :py:meth:`~Chime.Client.list_attendee_tags`

  
  *   :py:meth:`~Chime.Client.list_attendees`

  
  *   :py:meth:`~Chime.Client.list_bots`

  
  *   :py:meth:`~Chime.Client.list_channel_bans`

  
  *   :py:meth:`~Chime.Client.list_channel_memberships`

  
  *   :py:meth:`~Chime.Client.list_channel_memberships_for_app_instance_user`

  
  *   :py:meth:`~Chime.Client.list_channel_messages`

  
  *   :py:meth:`~Chime.Client.list_channel_moderators`

  
  *   :py:meth:`~Chime.Client.list_channels`

  
  *   :py:meth:`~Chime.Client.list_channels_moderated_by_app_instance_user`

  
  *   :py:meth:`~Chime.Client.list_media_capture_pipelines`

  
  *   :py:meth:`~Chime.Client.list_meeting_tags`

  
  *   :py:meth:`~Chime.Client.list_meetings`

  
  *   :py:meth:`~Chime.Client.list_phone_number_orders`

  
  *   :py:meth:`~Chime.Client.list_phone_numbers`

  
  *   :py:meth:`~Chime.Client.list_proxy_sessions`

  
  *   :py:meth:`~Chime.Client.list_room_memberships`

  
  *   :py:meth:`~Chime.Client.list_rooms`

  
  *   :py:meth:`~Chime.Client.list_sip_media_applications`

  
  *   :py:meth:`~Chime.Client.list_sip_rules`

  
  *   :py:meth:`~Chime.Client.list_supported_phone_number_countries`

  
  *   :py:meth:`~Chime.Client.list_tags_for_resource`

  
  *   :py:meth:`~Chime.Client.list_users`

  
  *   :py:meth:`~Chime.Client.list_voice_connector_groups`

  
  *   :py:meth:`~Chime.Client.list_voice_connector_termination_credentials`

  
  *   :py:meth:`~Chime.Client.list_voice_connectors`

  
  *   :py:meth:`~Chime.Client.logout_user`

  
  *   :py:meth:`~Chime.Client.put_app_instance_retention_settings`

  
  *   :py:meth:`~Chime.Client.put_app_instance_streaming_configurations`

  
  *   :py:meth:`~Chime.Client.put_events_configuration`

  
  *   :py:meth:`~Chime.Client.put_retention_settings`

  
  *   :py:meth:`~Chime.Client.put_sip_media_application_logging_configuration`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_emergency_calling_configuration`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_logging_configuration`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_origination`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_proxy`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_streaming_configuration`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_termination`

  
  *   :py:meth:`~Chime.Client.put_voice_connector_termination_credentials`

  
  *   :py:meth:`~Chime.Client.redact_channel_message`

  
  *   :py:meth:`~Chime.Client.redact_conversation_message`

  
  *   :py:meth:`~Chime.Client.redact_room_message`

  
  *   :py:meth:`~Chime.Client.regenerate_security_token`

  
  *   :py:meth:`~Chime.Client.reset_personal_pin`

  
  *   :py:meth:`~Chime.Client.restore_phone_number`

  
  *   :py:meth:`~Chime.Client.search_available_phone_numbers`

  
  *   :py:meth:`~Chime.Client.send_channel_message`

  
  *   :py:meth:`~Chime.Client.tag_attendee`

  
  *   :py:meth:`~Chime.Client.tag_meeting`

  
  *   :py:meth:`~Chime.Client.tag_resource`

  
  *   :py:meth:`~Chime.Client.untag_attendee`

  
  *   :py:meth:`~Chime.Client.untag_meeting`

  
  *   :py:meth:`~Chime.Client.untag_resource`

  
  *   :py:meth:`~Chime.Client.update_account`

  
  *   :py:meth:`~Chime.Client.update_account_settings`

  
  *   :py:meth:`~Chime.Client.update_app_instance`

  
  *   :py:meth:`~Chime.Client.update_app_instance_user`

  
  *   :py:meth:`~Chime.Client.update_bot`

  
  *   :py:meth:`~Chime.Client.update_channel`

  
  *   :py:meth:`~Chime.Client.update_channel_message`

  
  *   :py:meth:`~Chime.Client.update_channel_read_marker`

  
  *   :py:meth:`~Chime.Client.update_global_settings`

  
  *   :py:meth:`~Chime.Client.update_phone_number`

  
  *   :py:meth:`~Chime.Client.update_phone_number_settings`

  
  *   :py:meth:`~Chime.Client.update_proxy_session`

  
  *   :py:meth:`~Chime.Client.update_room`

  
  *   :py:meth:`~Chime.Client.update_room_membership`

  
  *   :py:meth:`~Chime.Client.update_sip_media_application`

  
  *   :py:meth:`~Chime.Client.update_sip_media_application_call`

  
  *   :py:meth:`~Chime.Client.update_sip_rule`

  
  *   :py:meth:`~Chime.Client.update_user`

  
  *   :py:meth:`~Chime.Client.update_user_settings`

  
  *   :py:meth:`~Chime.Client.update_voice_connector`

  
  *   :py:meth:`~Chime.Client.update_voice_connector_group`

  

  .. py:method:: associate_phone_number_with_user(**kwargs)

    

    Associates a phone number with the specified Amazon Chime user.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/AssociatePhoneNumberWithUser>`_    


    **Request Syntax** 
    ::

      response = client.associate_phone_number_with_user(
          AccountId='string',
          UserId='string',
          E164PhoneNumber='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    :type E164PhoneNumber: string
    :param E164PhoneNumber: **[REQUIRED]** 

      The phone number, in E.164 format.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: associate_phone_numbers_with_voice_connector(**kwargs)

    

    Associates phone numbers with the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/AssociatePhoneNumbersWithVoiceConnector>`_    


    **Request Syntax** 
    ::

      response = client.associate_phone_numbers_with_voice_connector(
          VoiceConnectorId='string',
          E164PhoneNumbers=[
              'string',
          ],
          ForceAssociate=True|False
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type E164PhoneNumbers: list
    :param E164PhoneNumbers: **[REQUIRED]** 

      List of phone numbers, in E.164 format.

      

    
      - *(string) --* 

      
  
    :type ForceAssociate: boolean
    :param ForceAssociate: 

      If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberErrors': [
                {
                    'PhoneNumberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberErrors** *(list) --* 

          If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: associate_phone_numbers_with_voice_connector_group(**kwargs)

    

    Associates phone numbers with the specified Amazon Chime Voice Connector group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/AssociatePhoneNumbersWithVoiceConnectorGroup>`_    


    **Request Syntax** 
    ::

      response = client.associate_phone_numbers_with_voice_connector_group(
          VoiceConnectorGroupId='string',
          E164PhoneNumbers=[
              'string',
          ],
          ForceAssociate=True|False
      )
    :type VoiceConnectorGroupId: string
    :param VoiceConnectorGroupId: **[REQUIRED]** 

      The Amazon Chime Voice Connector group ID.

      

    
    :type E164PhoneNumbers: list
    :param E164PhoneNumbers: **[REQUIRED]** 

      List of phone numbers, in E.164 format.

      

    
      - *(string) --* 

      
  
    :type ForceAssociate: boolean
    :param ForceAssociate: 

      If true, associates the provided phone numbers with the provided Amazon Chime Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberErrors': [
                {
                    'PhoneNumberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberErrors** *(list) --* 

          If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: associate_signin_delegate_groups_with_account(**kwargs)

    

    Associates the specified sign-in delegate groups with the specified Amazon Chime account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/AssociateSigninDelegateGroupsWithAccount>`_    


    **Request Syntax** 
    ::

      response = client.associate_signin_delegate_groups_with_account(
          AccountId='string',
          SigninDelegateGroups=[
              {
                  'GroupName': 'string'
              },
          ]
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type SigninDelegateGroups: list
    :param SigninDelegateGroups: **[REQUIRED]** 

      The sign-in delegate groups.

      

    
      - *(dict) --* 

        An Active Directory (AD) group whose members are granted permission to act as delegates.

        

      
        - **GroupName** *(string) --* 

          The group name.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_create_attendee(**kwargs)

    

    Creates up to 100 new attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchCreateAttendee>`_    


    **Request Syntax** 
    ::

      response = client.batch_create_attendee(
          MeetingId='string',
          Attendees=[
              {
                  'ExternalUserId': 'string',
                  'Tags': [
                      {
                          'Key': 'string',
                          'Value': 'string'
                      },
                  ]
              },
          ]
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type Attendees: list
    :param Attendees: **[REQUIRED]** 

      The request containing the attendees to create.

      

    
      - *(dict) --* 

        The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.

        

      
        - **ExternalUserId** *(string) --* **[REQUIRED]** 

          The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

          

        
        - **Tags** *(list) --* 

          The tag key-value pairs.

          

        
          - *(dict) --* 

            Describes a tag applied to a resource.

            

          
            - **Key** *(string) --* **[REQUIRED]** 

              The key of the tag.

              

            
            - **Value** *(string) --* **[REQUIRED]** 

              The value of the tag.

              

            
          
      
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Attendees': [
                {
                    'ExternalUserId': 'string',
                    'AttendeeId': 'string',
                    'JoinToken': 'string'
                },
            ],
            'Errors': [
                {
                    'ExternalUserId': 'string',
                    'ErrorCode': 'string',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Attendees** *(list) --* 

          The attendee information, including attendees IDs and join tokens.

          
          

          - *(dict) --* 

            An Amazon Chime SDK meeting attendee. Includes a unique ``AttendeeId`` and ``JoinToken`` . The ``JoinToken`` allows a client to authenticate and join as the specified attendee. The ``JoinToken`` expires when the meeting ends or when  DeleteAttendee is called. After that, the attendee is unable to join the meeting. 

             

            We recommend securely transferring each ``JoinToken`` from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.

            
            

            - **ExternalUserId** *(string) --* 

              The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

              
            

            - **AttendeeId** *(string) --* 

              The Amazon Chime SDK attendee ID.

              
            

            - **JoinToken** *(string) --* 

              The join token used by the Amazon Chime SDK attendee.

              
        
      
        

        - **Errors** *(list) --* 

          If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.

            
            

            - **ExternalUserId** *(string) --* 

              The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_create_channel_membership(**kwargs)

    

    Adds a specified number of users to a channel. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchCreateChannelMembership>`_    


    **Request Syntax** 
    ::

      response = client.batch_create_channel_membership(
          ChannelArn='string',
          Type='DEFAULT'|'HIDDEN',
          MemberArns=[
              'string',
          ],
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel to which you're adding users.

      

    
    :type Type: string
    :param Type: 

      The membership type of a user, ``DEFAULT`` or ``HIDDEN`` . Default members are always returned as part of ``ListChannelMemberships`` . Hidden members are only returned if the type filter in ``ListChannelMemberships`` equals ``HIDDEN`` . Otherwise hidden members are not returned. This is only supported by moderators.

      

    
    :type MemberArns: list
    :param MemberArns: **[REQUIRED]** 

      The ARNs of the members you want to add to the channel.

      

    
      - *(string) --* 

      
  
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BatchChannelMemberships': {
                'InvitedBy': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'Type': 'DEFAULT'|'HIDDEN',
                'Members': [
                    {
                        'Arn': 'string',
                        'Name': 'string'
                    },
                ],
                'ChannelArn': 'string'
            },
            'Errors': [
                {
                    'MemberArn': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BatchChannelMemberships** *(dict) --* 

          The list of channel memberships in the response.

          
          

          - **InvitedBy** *(dict) --* 

            The details of a user.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **Type** *(string) --* 

            The membership types set for the channel users.

            
          

          - **Members** *(list) --* 

            The users successfully added to the request.

            
            

            - *(dict) --* 

              The details of a user.

              
              

              - **Arn** *(string) --* 

                The ARN in an Identity.

                
              

              - **Name** *(string) --* 

                The name in an Identity.

                
          
        
          

          - **ChannelArn** *(string) --* 

            The ARN of the channel to which you're adding users.

            
      
        

        - **Errors** *(list) --* 

          If the action fails for one or more of the memberships in the request, a list of the memberships is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            A list of failed member ARNs, error codes, and error messages.

            
            

            - **MemberArn** *(string) --* 

              The ARN of the member that the service couldn't add.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    

  .. py:method:: batch_create_room_membership(**kwargs)

    

    Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchCreateRoomMembership>`_    


    **Request Syntax** 
    ::

      response = client.batch_create_room_membership(
          AccountId='string',
          RoomId='string',
          MembershipItemList=[
              {
                  'MemberId': 'string',
                  'Role': 'Administrator'|'Member'
              },
          ]
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type MembershipItemList: list
    :param MembershipItemList: **[REQUIRED]** 

      The list of membership items.

      

    
      - *(dict) --* 

        Membership details, such as member ID and member role.

        

      
        - **MemberId** *(string) --* 

          The member ID.

          

        
        - **Role** *(string) --* 

          The member role.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Errors': [
                {
                    'MemberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Errors** *(list) --* 

          If the action fails for one or more of the member IDs in the request, a list of the member IDs is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            The list of errors returned when a member action results in an error.

            
            

            - **MemberId** *(string) --* 

              The member ID.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_delete_phone_number(**kwargs)

    

    Moves phone numbers into the **Deletion queue** . Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted. 

     

    Phone numbers remain in the **Deletion queue** for 7 days before they are deleted permanently. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchDeletePhoneNumber>`_    


    **Request Syntax** 
    ::

      response = client.batch_delete_phone_number(
          PhoneNumberIds=[
              'string',
          ]
      )
    :type PhoneNumberIds: list
    :param PhoneNumberIds: **[REQUIRED]** 

      List of phone number IDs.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberErrors': [
                {
                    'PhoneNumberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberErrors** *(list) --* 

          If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_suspend_user(**kwargs)

    

    Suspends up to 50 users from a ``Team`` or ``EnterpriseLWA`` Amazon Chime account. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

     

    Users suspended from a ``Team`` account are disassociated from the account,but they can continue to use Amazon Chime as free users. To remove the suspension from suspended ``Team`` account users, invite them to the ``Team`` account again. You can use the  InviteUsers action to do so.

     

    Users suspended from an ``EnterpriseLWA`` account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended ``EnterpriseLWA`` account users, use the  BatchUnsuspendUser action.

     

    To sign out users without suspending them, use the  LogoutUser action. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchSuspendUser>`_    


    **Request Syntax** 
    ::

      response = client.batch_suspend_user(
          AccountId='string',
          UserIdList=[
              'string',
          ]
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserIdList: list
    :param UserIdList: **[REQUIRED]** 

      The request containing the user IDs to suspend.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'UserErrors': [
                {
                    'UserId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **UserErrors** *(list) --* 

          If the  BatchSuspendUser action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            The list of errors returned when errors are encountered during the  BatchSuspendUser ,  BatchUnsuspendUser , or  BatchUpdateUser actions. This includes user IDs, error codes, and error messages.

            
            

            - **UserId** *(string) --* 

              The user ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_unsuspend_user(**kwargs)

    

    Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime ``EnterpriseLWA`` account. Only users on ``EnterpriseLWA`` accounts can be unsuspended using this action. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the account types, in the *Amazon Chime Administration Guide* . 

     

    Previously suspended users who are unsuspended using this action are returned to ``Registered`` status. Users who are not previously suspended are ignored. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchUnsuspendUser>`_    


    **Request Syntax** 
    ::

      response = client.batch_unsuspend_user(
          AccountId='string',
          UserIdList=[
              'string',
          ]
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserIdList: list
    :param UserIdList: **[REQUIRED]** 

      The request containing the user IDs to unsuspend.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'UserErrors': [
                {
                    'UserId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **UserErrors** *(list) --* 

          If the  BatchUnsuspendUser action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            The list of errors returned when errors are encountered during the  BatchSuspendUser ,  BatchUnsuspendUser , or  BatchUpdateUser actions. This includes user IDs, error codes, and error messages.

            
            

            - **UserId** *(string) --* 

              The user ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_update_phone_number(**kwargs)

    

    Updates phone number product types or calling names. You can update one attribute at a time for each ``UpdatePhoneNumberRequestItem`` . For example, you can update the product type or the calling name.

     

    For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.

     

    Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchUpdatePhoneNumber>`_    


    **Request Syntax** 
    ::

      response = client.batch_update_phone_number(
          UpdatePhoneNumberRequestItems=[
              {
                  'PhoneNumberId': 'string',
                  'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                  'CallingName': 'string'
              },
          ]
      )
    :type UpdatePhoneNumberRequestItems: list
    :param UpdatePhoneNumberRequestItems: **[REQUIRED]** 

      The request containing the phone number IDs and product types or calling names to update.

      

    
      - *(dict) --* 

        The phone number ID, product type, or calling name fields to update, used with the  BatchUpdatePhoneNumber and  UpdatePhoneNumber actions.

        

      
        - **PhoneNumberId** *(string) --* **[REQUIRED]** 

          The phone number ID to update.

          

        
        - **ProductType** *(string) --* 

          The product type to update.

          

        
        - **CallingName** *(string) --* 

          The outbound calling name to update.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberErrors': [
                {
                    'PhoneNumberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberErrors** *(list) --* 

          If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: batch_update_user(**kwargs)

    

    Updates user details within the  UpdateUserRequestItem object for up to 20 users for the specified Amazon Chime account. Currently, only ``LicenseType`` updates are supported for this action.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/BatchUpdateUser>`_    


    **Request Syntax** 
    ::

      response = client.batch_update_user(
          AccountId='string',
          UpdateUserRequestItems=[
              {
                  'UserId': 'string',
                  'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                  'UserType': 'PrivateUser'|'SharedDevice',
                  'AlexaForBusinessMetadata': {
                      'IsAlexaForBusinessEnabled': True|False,
                      'AlexaForBusinessRoomArn': 'string'
                  }
              },
          ]
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UpdateUserRequestItems: list
    :param UpdateUserRequestItems: **[REQUIRED]** 

      The request containing the user IDs and details to update.

      

    
      - *(dict) --* 

        The user ID and user fields to update, used with the  BatchUpdateUser action.

        

      
        - **UserId** *(string) --* **[REQUIRED]** 

          The user ID.

          

        
        - **LicenseType** *(string) --* 

          The user license type.

          

        
        - **UserType** *(string) --* 

          The user type.

          

        
        - **AlexaForBusinessMetadata** *(dict) --* 

          The Alexa for Business metadata.

          

        
          - **IsAlexaForBusinessEnabled** *(boolean) --* 

            Starts or stops Alexa for Business.

            

          
          - **AlexaForBusinessRoomArn** *(string) --* 

            The ARN of the room resource.

            

          
        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'UserErrors': [
                {
                    'UserId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **UserErrors** *(list) --* 

          If the  BatchUpdateUser action fails for one or more of the user IDs in the request, a list of the user IDs is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            The list of errors returned when errors are encountered during the  BatchSuspendUser ,  BatchUnsuspendUser , or  BatchUpdateUser actions. This includes user IDs, error codes, and error messages.

            
            

            - **UserId** *(string) --* 

              The user ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: create_account(**kwargs)

    

    Creates an Amazon Chime account under the administrator's AWS account. Only ``Team`` account types are currently supported for this action. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateAccount>`_    


    **Request Syntax** 
    ::

      response = client.create_account(
          Name='string'
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the Amazon Chime account.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Account': {
                'AwsAccountId': 'string',
                'AccountId': 'string',
                'Name': 'string',
                'AccountType': 'Team'|'EnterpriseDirectory'|'EnterpriseLWA'|'EnterpriseOIDC',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'DefaultLicense': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'SupportedLicenses': [
                    'Basic'|'Plus'|'Pro'|'ProTrial',
                ],
                'AccountStatus': 'Suspended'|'Active',
                'SigninDelegateGroups': [
                    {
                        'GroupName': 'string'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Account** *(dict) --* 

          The Amazon Chime account details.

          
          

          - **AwsAccountId** *(string) --* 

            The AWS account ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **Name** *(string) --* 

            The Amazon Chime account name.

            
          

          - **AccountType** *(string) --* 

            The Amazon Chime account type. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime account creation timestamp, in ISO 8601 format.

            
          

          - **DefaultLicense** *(string) --* 

            The default license for the Amazon Chime account.

            
          

          - **SupportedLicenses** *(list) --* 

            Supported licenses for the Amazon Chime account.

            
            

            - *(string) --* 
        
          

          - **AccountStatus** *(string) --* 

            The status of the account, ``Suspended`` or ``Active`` .

            
          

          - **SigninDelegateGroups** *(list) --* 

            The sign-in delegate groups associated with the account.

            
            

            - *(dict) --* 

              An Active Directory (AD) group whose members are granted permission to act as delegates.

              
              

              - **GroupName** *(string) --* 

                The group name.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_app_instance(**kwargs)

    

    Creates an Amazon Chime SDK messaging ``AppInstance`` under an AWS account. Only SDK messaging customers use this API. ``CreateAppInstance`` supports idempotency behavior as described in the AWS API Standard.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateAppInstance>`_    


    **Request Syntax** 
    ::

      response = client.create_app_instance(
          Name='string',
          Metadata='string',
          ClientRequestToken='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the ``AppInstance`` .

      

    
    :type Metadata: string
    :param Metadata: 

      The metadata of the ``AppInstance`` . Limited to a 1KB string in UTF-8.

      

    
    :type ClientRequestToken: string
    :param ClientRequestToken: **[REQUIRED]** 

      The ``ClientRequestToken`` of the ``AppInstance`` .

      This field is autopopulated if not provided.

    
    :type Tags: list
    :param Tags: 

      Tags assigned to the ``AppInstanceUser`` .

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceArn** *(string) --* 

          The Amazon Resource Number (ARN) of the ``AppInstance`` .

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_app_instance_admin(**kwargs)

    

    Promotes an ``AppInstanceUser`` to an ``AppInstanceAdmin`` . The promoted user can perform the following actions. 

     

     
    * ``ChannelModerator`` actions across all channels in the ``AppInstance`` . 
     
    * ``DeleteChannelMessage`` actions. 
     

     

    Only an ``AppInstanceUser`` can be promoted to an ``AppInstanceAdmin`` role.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateAppInstanceAdmin>`_    


    **Request Syntax** 
    ::

      response = client.create_app_instance_admin(
          AppInstanceAdminArn='string',
          AppInstanceArn='string'
      )
    :type AppInstanceAdminArn: string
    :param AppInstanceAdminArn: **[REQUIRED]** 

      The ARN of the administrator of the current ``AppInstance`` .

      

    
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceAdmin': {
                'Arn': 'string',
                'Name': 'string'
            },
            'AppInstanceArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceAdmin** *(dict) --* 

          The name and ARN of the admin for the ``AppInstance`` .

          
          

          - **Arn** *(string) --* 

            The ARN in an Identity.

            
          

          - **Name** *(string) --* 

            The name in an Identity.

            
      
        

        - **AppInstanceArn** *(string) --* 

          The ARN of the of the admin for the ``AppInstance`` .

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_app_instance_user(**kwargs)

    

    Creates a user under an Amazon Chime ``AppInstance`` . The request consists of a unique ``appInstanceUserId`` and ``Name`` for that user.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.create_app_instance_user(
          AppInstanceArn='string',
          AppInstanceUserId='string',
          Name='string',
          Metadata='string',
          ClientRequestToken='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` request.

      

    
    :type AppInstanceUserId: string
    :param AppInstanceUserId: **[REQUIRED]** 

      The user ID of the ``AppInstance`` .

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The user's name.

      

    
    :type Metadata: string
    :param Metadata: 

      The request's metadata. Limited to a 1KB string in UTF-8.

      

    
    :type ClientRequestToken: string
    :param ClientRequestToken: **[REQUIRED]** 

      The token assigned to the user requesting an ``AppInstance`` .

      This field is autopopulated if not provided.

    
    :type Tags: list
    :param Tags: 

      Tags assigned to the ``AppInstanceUser`` .

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceUserArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceUserArn** *(string) --* 

          The user's ARN.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_attendee(**kwargs)

    

    Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateAttendee>`_    


    **Request Syntax** 
    ::

      response = client.create_attendee(
          MeetingId='string',
          ExternalUserId='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type ExternalUserId: string
    :param ExternalUserId: **[REQUIRED]** 

      The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

      

    
    :type Tags: list
    :param Tags: 

      The tag key-value pairs.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Attendee': {
                'ExternalUserId': 'string',
                'AttendeeId': 'string',
                'JoinToken': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Attendee** *(dict) --* 

          The attendee information, including attendee ID and join token.

          
          

          - **ExternalUserId** *(string) --* 

            The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

            
          

          - **AttendeeId** *(string) --* 

            The Amazon Chime SDK attendee ID.

            
          

          - **JoinToken** *(string) --* 

            The join token used by the Amazon Chime SDK attendee.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_bot(**kwargs)

    

    Creates a bot for an Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateBot>`_    


    **Request Syntax** 
    ::

      response = client.create_bot(
          AccountId='string',
          DisplayName='string',
          Domain='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type DisplayName: string
    :param DisplayName: **[REQUIRED]** 

      The bot display name.

      

    
    :type Domain: string
    :param Domain: 

      The domain of the Amazon Chime Enterprise account.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Bot': {
                'BotId': 'string',
                'UserId': 'string',
                'DisplayName': 'string',
                'BotType': 'ChatBot',
                'Disabled': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'BotEmail': 'string',
                'SecurityToken': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Bot** *(dict) --* 

          The bot details.

          
          

          - **BotId** *(string) --* 

            The bot ID.

            
          

          - **UserId** *(string) --* 

            The unique ID for the bot user.

            
          

          - **DisplayName** *(string) --* 

            The bot display name.

            
          

          - **BotType** *(string) --* 

            The bot type.

            
          

          - **Disabled** *(boolean) --* 

            When true, the bot is stopped from running in your account.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The bot creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated bot timestamp, in ISO 8601 format.

            
          

          - **BotEmail** *(string) --* 

            The bot email address.

            
          

          - **SecurityToken** *(string) --* 

            The security token used to authenticate Amazon Chime with the outgoing event endpoint.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    

  .. py:method:: create_channel(**kwargs)

    

    Creates a channel to which you can add users and send messages.

     

     **Restriction** : You can't change a channel's privacy.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateChannel>`_    


    **Request Syntax** 
    ::

      response = client.create_channel(
          AppInstanceArn='string',
          Name='string',
          Mode='UNRESTRICTED'|'RESTRICTED',
          Privacy='PUBLIC'|'PRIVATE',
          Metadata='string',
          ClientRequestToken='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          ChimeBearer='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the channel request.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the channel.

      

    
    :type Mode: string
    :param Mode: 

      The channel mode: ``UNRESTRICTED`` or ``RESTRICTED`` . Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.

      

    
    :type Privacy: string
    :param Privacy: 

      The channel's privacy level: ``PUBLIC`` or ``PRIVATE`` . Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the ``AppInstance`` .

      

    
    :type Metadata: string
    :param Metadata: 

      The metadata of the creation request. Limited to 1KB and UTF-8.

      

    
    :type ClientRequestToken: string
    :param ClientRequestToken: **[REQUIRED]** 

      The client token for the request. An ``Idempotency`` token.

      This field is autopopulated if not provided.

    
    :type Tags: list
    :param Tags: 

      The tags for the creation request.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_channel_ban(**kwargs)

    

    Permanently bans a member from a channel. Moderators can't add banned members to a channel. To undo a ban, you first have to ``DeleteChannelBan`` , and then ``CreateChannelMembership`` . Bans are cleaned up when you delete users or channels.

     

    If you ban a user who is already part of a channel, that user is automatically kicked from the channel.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateChannelBan>`_    


    **Request Syntax** 
    ::

      response = client.create_channel_ban(
          ChannelArn='string',
          MemberArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the ban request.

      

    
    :type MemberArn: string
    :param MemberArn: **[REQUIRED]** 

      The ARN of the member being banned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'Member': {
                'Arn': 'string',
                'Name': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the response to the ban request.

          
        

        - **Member** *(dict) --* 

          The ``ChannelArn`` and ``BannedIdentity`` of the member in the ban response.

          
          

          - **Arn** *(string) --* 

            The ARN in an Identity.

            
          

          - **Name** *(string) --* 

            The name in an Identity.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_channel_membership(**kwargs)

    

    Adds a user to a channel. The ``InvitedBy`` response field is derived from the request header. A channel member can:

     

     
    * List messages 
     
    * Send messages 
     
    * Receive messages 
     
    * Edit their own messages 
     
    * Leave the channel 
     

     

    Privacy settings impact this action as follows:

     

     
    * Public Channels: You do not need to be a member to list messages, but you must be a member to send messages. 
     
    * Private Channels: You must be a member to list or send messages. 
     

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateChannelMembership>`_    


    **Request Syntax** 
    ::

      response = client.create_channel_membership(
          ChannelArn='string',
          MemberArn='string',
          Type='DEFAULT'|'HIDDEN',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel to which you're adding users.

      

    
    :type MemberArn: string
    :param MemberArn: **[REQUIRED]** 

      The ARN of the member you want to add to the channel.

      

    
    :type Type: string
    :param Type: **[REQUIRED]** 

      The membership type of a user, ``DEFAULT`` or ``HIDDEN`` . Default members are always returned as part of ``ListChannelMemberships`` . Hidden members are only returned if the type filter in ``ListChannelMemberships`` equals ``HIDDEN`` . Otherwise hidden members are not returned. This is only supported by moderators.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'Member': {
                'Arn': 'string',
                'Name': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **Member** *(dict) --* 

          The ARN and metadata of the member being added.

          
          

          - **Arn** *(string) --* 

            The ARN in an Identity.

            
          

          - **Name** *(string) --* 

            The name in an Identity.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_channel_moderator(**kwargs)

    

    Creates a new ``ChannelModerator`` . A channel moderator can:

     

     
    * Add and remove other members of the channel. 
     
    * Add and remove other moderators of the channel. 
     
    * Add and remove user bans for the channel. 
     
    * Redact messages in the channel. 
     
    * List messages in the channel. 
     

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateChannelModerator>`_    


    **Request Syntax** 
    ::

      response = client.create_channel_moderator(
          ChannelArn='string',
          ChannelModeratorArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type ChannelModeratorArn: string
    :param ChannelModeratorArn: **[REQUIRED]** 

      The ARN of the moderator.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'ChannelModerator': {
                'Arn': 'string',
                'Name': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **ChannelModerator** *(dict) --* 

          The ARNs of the channel and the moderator.

          
          

          - **Arn** *(string) --* 

            The ARN in an Identity.

            
          

          - **Name** *(string) --* 

            The name in an Identity.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_media_capture_pipeline(**kwargs)

    

    Creates a media capture pipeline.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateMediaCapturePipeline>`_    


    **Request Syntax** 
    ::

      response = client.create_media_capture_pipeline(
          SourceType='ChimeSdkMeeting',
          SourceArn='string',
          SinkType='S3Bucket',
          SinkArn='string',
          ClientRequestToken='string'
      )
    :type SourceType: string
    :param SourceType: **[REQUIRED]** 

      Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.

      

    
    :type SourceArn: string
    :param SourceArn: **[REQUIRED]** 

      ARN of the source from which the media artifacts are captured.

      

    
    :type SinkType: string
    :param SinkType: **[REQUIRED]** 

      Destination type to which the media artifacts are saved. You must use an S3 bucket. 

      

    
    :type SinkArn: string
    :param SinkArn: **[REQUIRED]** 

      The ARN of the sink type.

      

    
    :type ClientRequestToken: string
    :param ClientRequestToken: 

      The token assigned to the client making the pipeline request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'MediaCapturePipeline': {
                'MediaPipelineId': 'string',
                'SourceType': 'ChimeSdkMeeting',
                'SourceArn': 'string',
                'Status': 'Initializing'|'InProgress'|'Failed'|'Stopping'|'Stopped',
                'SinkType': 'S3Bucket',
                'SinkArn': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **MediaCapturePipeline** *(dict) --* 

          A media capture pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media capture pipeline object.

          
          

          - **MediaPipelineId** *(string) --* 

            The ID of a media capture pipeline.

            
          

          - **SourceType** *(string) --* 

            Source type from which media artifacts are saved. You must use ``ChimeMeeting`` .

            
          

          - **SourceArn** *(string) --* 

            ARN of the source from which the media artifacts will be saved.

            
          

          - **Status** *(string) --* 

            The status of the media capture pipeline.

            
          

          - **SinkType** *(string) --* 

            Destination type to which the media artifacts are saved. You must use an S3 Bucket.

            
          

          - **SinkArn** *(string) --* 

            ARN of the destination to which the media artifacts are saved.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the capture pipeline was created, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The time at which the capture pipeline was updated, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_meeting(**kwargs)

    

    Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see `Amazon Chime SDK Media Regions <https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html>`__ in the *Amazon Chime Developer Guide* . For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateMeeting>`_    


    **Request Syntax** 
    ::

      response = client.create_meeting(
          ClientRequestToken='string',
          ExternalMeetingId='string',
          MeetingHostId='string',
          MediaRegion='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          NotificationsConfiguration={
              'SnsTopicArn': 'string',
              'SqsQueueArn': 'string'
          }
      )
    :type ClientRequestToken: string
    :param ClientRequestToken: **[REQUIRED]** 

      The unique identifier for the client request. Use a different token for different meetings.

      This field is autopopulated if not provided.

    
    :type ExternalMeetingId: string
    :param ExternalMeetingId: 

      The external meeting ID.

      

    
    :type MeetingHostId: string
    :param MeetingHostId: 

      Reserved.

      

    
    :type MediaRegion: string
    :param MediaRegion: 

      The Region in which to create the meeting. Default: ``us-east-1`` . 

       

      Available values: ``af-south-1`` , ``ap-northeast-1`` , ``ap-northeast-2`` , ``ap-south-1`` , ``ap-southeast-1`` , ``ap-southeast-2`` , ``ca-central-1`` , ``eu-central-1`` , ``eu-north-1`` , ``eu-south-1`` , ``eu-west-1`` , ``eu-west-2`` , ``eu-west-3`` , ``sa-east-1`` , ``us-east-1`` , ``us-east-2`` , ``us-west-1`` , ``us-west-2`` . 

      

    
    :type Tags: list
    :param Tags: 

      The tag key-value pairs.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    :type NotificationsConfiguration: dict
    :param NotificationsConfiguration: 

      The configuration for resource targets to receive notifications when meeting and attendee events occur.

      

    
      - **SnsTopicArn** *(string) --* 

        The SNS topic ARN.

        

      
      - **SqsQueueArn** *(string) --* 

        The SQS queue ARN.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Meeting': {
                'MeetingId': 'string',
                'ExternalMeetingId': 'string',
                'MediaPlacement': {
                    'AudioHostUrl': 'string',
                    'AudioFallbackUrl': 'string',
                    'ScreenDataUrl': 'string',
                    'ScreenSharingUrl': 'string',
                    'ScreenViewingUrl': 'string',
                    'SignalingUrl': 'string',
                    'TurnControlUrl': 'string',
                    'EventIngestionUrl': 'string'
                },
                'MediaRegion': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Meeting** *(dict) --* 

          The meeting information, including the meeting ID and ``MediaPlacement`` . 

          
          

          - **MeetingId** *(string) --* 

            The Amazon Chime SDK meeting ID.

            
          

          - **ExternalMeetingId** *(string) --* 

            The external meeting ID.

            
          

          - **MediaPlacement** *(dict) --* 

            The media placement for the meeting.

            
            

            - **AudioHostUrl** *(string) --* 

              The audio host URL.

              
            

            - **AudioFallbackUrl** *(string) --* 

              The audio fallback URL.

              
            

            - **ScreenDataUrl** *(string) --* 

              The screen data URL.

              
            

            - **ScreenSharingUrl** *(string) --* 

              The screen sharing URL.

              
            

            - **ScreenViewingUrl** *(string) --* 

              The screen viewing URL.

              
            

            - **SignalingUrl** *(string) --* 

              The signaling URL.

              
            

            - **TurnControlUrl** *(string) --* 

              The turn control URL.

              
            

            - **EventIngestionUrl** *(string) --* 

              The event ingestion URL.

              
        
          

          - **MediaRegion** *(string) --* 

            The Region in which you create the meeting. Available values: ``af-south-1`` , ``ap-northeast-1`` , ``ap-northeast-2`` , ``ap-south-1`` , ``ap-southeast-1`` , ``ap-southeast-2`` , ``ca-central-1`` , ``eu-central-1`` , ``eu-north-1`` , ``eu-south-1`` , ``eu-west-1`` , ``eu-west-2`` , ``eu-west-3`` , ``sa-east-1`` , ``us-east-1`` , ``us-east-2`` , ``us-west-1`` , ``us-west-2`` .

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_meeting_dial_out(**kwargs)

    

    Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and join them into a Chime meeting. Also ensures that the From number belongs to the customer.

     

    To play welcome audio or implement an interactive voice response (IVR), use the ``CreateSipMediaApplicationCall`` action with the corresponding SIP media application ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateMeetingDialOut>`_    


    **Request Syntax** 
    ::

      response = client.create_meeting_dial_out(
          MeetingId='string',
          FromPhoneNumber='string',
          ToPhoneNumber='string',
          JoinToken='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type FromPhoneNumber: string
    :param FromPhoneNumber: **[REQUIRED]** 

      Phone number used as the caller ID when the remote party receives a call.

      

    
    :type ToPhoneNumber: string
    :param ToPhoneNumber: **[REQUIRED]** 

      Phone number called when inviting someone to a meeting.

      

    
    :type JoinToken: string
    :param JoinToken: **[REQUIRED]** 

      Token used by the Amazon Chime SDK attendee. Call the `CreateAttendee <https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html>`__ action to get a join token.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'TransactionId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **TransactionId** *(string) --* 

          Unique ID that tracks API calls.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_meeting_with_attendees(**kwargs)

    

    Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see `Amazon Chime SDK Media Regions <https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html>`__ in the *Amazon Chime Developer Guide* . For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateMeetingWithAttendees>`_    


    **Request Syntax** 
    ::

      response = client.create_meeting_with_attendees(
          ClientRequestToken='string',
          ExternalMeetingId='string',
          MeetingHostId='string',
          MediaRegion='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          NotificationsConfiguration={
              'SnsTopicArn': 'string',
              'SqsQueueArn': 'string'
          },
          Attendees=[
              {
                  'ExternalUserId': 'string',
                  'Tags': [
                      {
                          'Key': 'string',
                          'Value': 'string'
                      },
                  ]
              },
          ]
      )
    :type ClientRequestToken: string
    :param ClientRequestToken: **[REQUIRED]** 

      The unique identifier for the client request. Use a different token for different meetings.

      This field is autopopulated if not provided.

    
    :type ExternalMeetingId: string
    :param ExternalMeetingId: 

      The external meeting ID.

      

    
    :type MeetingHostId: string
    :param MeetingHostId: 

      Reserved.

      

    
    :type MediaRegion: string
    :param MediaRegion: 

      The Region in which to create the meeting. Default: ``us-east-1`` . 

       

      Available values: ``af-south-1`` , ``ap-northeast-1`` , ``ap-northeast-2`` , ``ap-south-1`` , ``ap-southeast-1`` , ``ap-southeast-2`` , ``ca-central-1`` , ``eu-central-1`` , ``eu-north-1`` , ``eu-south-1`` , ``eu-west-1`` , ``eu-west-2`` , ``eu-west-3`` , ``sa-east-1`` , ``us-east-1`` , ``us-east-2`` , ``us-west-1`` , ``us-west-2`` . 

      

    
    :type Tags: list
    :param Tags: 

      The tag key-value pairs.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    :type NotificationsConfiguration: dict
    :param NotificationsConfiguration: 

      The resource target configurations for receiving Amazon Chime SDK meeting and attendee event notifications. The Amazon Chime SDK supports resource targets located in the US East (N. Virginia) AWS Region (``us-east-1`` ). 

      

    
      - **SnsTopicArn** *(string) --* 

        The SNS topic ARN.

        

      
      - **SqsQueueArn** *(string) --* 

        The SQS queue ARN.

        

      
    
    :type Attendees: list
    :param Attendees: 

      The request containing the attendees to create.

      

    
      - *(dict) --* 

        The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.

        

      
        - **ExternalUserId** *(string) --* **[REQUIRED]** 

          The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

          

        
        - **Tags** *(list) --* 

          The tag key-value pairs.

          

        
          - *(dict) --* 

            Describes a tag applied to a resource.

            

          
            - **Key** *(string) --* **[REQUIRED]** 

              The key of the tag.

              

            
            - **Value** *(string) --* **[REQUIRED]** 

              The value of the tag.

              

            
          
      
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Meeting': {
                'MeetingId': 'string',
                'ExternalMeetingId': 'string',
                'MediaPlacement': {
                    'AudioHostUrl': 'string',
                    'AudioFallbackUrl': 'string',
                    'ScreenDataUrl': 'string',
                    'ScreenSharingUrl': 'string',
                    'ScreenViewingUrl': 'string',
                    'SignalingUrl': 'string',
                    'TurnControlUrl': 'string',
                    'EventIngestionUrl': 'string'
                },
                'MediaRegion': 'string'
            },
            'Attendees': [
                {
                    'ExternalUserId': 'string',
                    'AttendeeId': 'string',
                    'JoinToken': 'string'
                },
            ],
            'Errors': [
                {
                    'ExternalUserId': 'string',
                    'ErrorCode': 'string',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Meeting** *(dict) --* 

          A meeting created using the Amazon Chime SDK.

          
          

          - **MeetingId** *(string) --* 

            The Amazon Chime SDK meeting ID.

            
          

          - **ExternalMeetingId** *(string) --* 

            The external meeting ID.

            
          

          - **MediaPlacement** *(dict) --* 

            The media placement for the meeting.

            
            

            - **AudioHostUrl** *(string) --* 

              The audio host URL.

              
            

            - **AudioFallbackUrl** *(string) --* 

              The audio fallback URL.

              
            

            - **ScreenDataUrl** *(string) --* 

              The screen data URL.

              
            

            - **ScreenSharingUrl** *(string) --* 

              The screen sharing URL.

              
            

            - **ScreenViewingUrl** *(string) --* 

              The screen viewing URL.

              
            

            - **SignalingUrl** *(string) --* 

              The signaling URL.

              
            

            - **TurnControlUrl** *(string) --* 

              The turn control URL.

              
            

            - **EventIngestionUrl** *(string) --* 

              The event ingestion URL.

              
        
          

          - **MediaRegion** *(string) --* 

            The Region in which you create the meeting. Available values: ``af-south-1`` , ``ap-northeast-1`` , ``ap-northeast-2`` , ``ap-south-1`` , ``ap-southeast-1`` , ``ap-southeast-2`` , ``ca-central-1`` , ``eu-central-1`` , ``eu-north-1`` , ``eu-south-1`` , ``eu-west-1`` , ``eu-west-2`` , ``eu-west-3`` , ``sa-east-1`` , ``us-east-1`` , ``us-east-2`` , ``us-west-1`` , ``us-west-2`` .

            
      
        

        - **Attendees** *(list) --* 

          The attendee information, including attendees IDs and join tokens.

          
          

          - *(dict) --* 

            An Amazon Chime SDK meeting attendee. Includes a unique ``AttendeeId`` and ``JoinToken`` . The ``JoinToken`` allows a client to authenticate and join as the specified attendee. The ``JoinToken`` expires when the meeting ends or when  DeleteAttendee is called. After that, the attendee is unable to join the meeting. 

             

            We recommend securely transferring each ``JoinToken`` from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.

            
            

            - **ExternalUserId** *(string) --* 

              The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

              
            

            - **AttendeeId** *(string) --* 

              The Amazon Chime SDK attendee ID.

              
            

            - **JoinToken** *(string) --* 

              The join token used by the Amazon Chime SDK attendee.

              
        
      
        

        - **Errors** *(list) --* 

          If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.

            
            

            - **ExternalUserId** *(string) --* 

              The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_phone_number_order(**kwargs)

    

    Creates an order for phone numbers to be provisioned. For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreatePhoneNumberOrder>`_    


    **Request Syntax** 
    ::

      response = client.create_phone_number_order(
          ProductType='BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
          E164PhoneNumbers=[
              'string',
          ]
      )
    :type ProductType: string
    :param ProductType: **[REQUIRED]** 

      The phone number product type.

      

    
    :type E164PhoneNumbers: list
    :param E164PhoneNumbers: **[REQUIRED]** 

      List of phone numbers, in E.164 format.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberOrder': {
                'PhoneNumberOrderId': 'string',
                'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                'Status': 'Processing'|'Successful'|'Failed'|'Partial',
                'OrderedPhoneNumbers': [
                    {
                        'E164PhoneNumber': 'string',
                        'Status': 'Processing'|'Acquired'|'Failed'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberOrder** *(dict) --* 

          The phone number order details.

          
          

          - **PhoneNumberOrderId** *(string) --* 

            The phone number order ID.

            
          

          - **ProductType** *(string) --* 

            The phone number order product type.

            
          

          - **Status** *(string) --* 

            The status of the phone number order.

            
          

          - **OrderedPhoneNumbers** *(list) --* 

            The ordered phone number details, such as the phone number in E.164 format and the phone number status.

            
            

            - *(dict) --* 

              A phone number for which an order has been placed.

              
              

              - **E164PhoneNumber** *(string) --* 

                The phone number, in E.164 format.

                
              

              - **Status** *(string) --* 

                The phone number status.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The phone number order creation time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated phone number order time stamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_proxy_session(**kwargs)

    

    Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateProxySession>`_    


    **Request Syntax** 
    ::

      response = client.create_proxy_session(
          VoiceConnectorId='string',
          ParticipantPhoneNumbers=[
              'string',
          ],
          Name='string',
          ExpiryMinutes=123,
          Capabilities=[
              'Voice'|'SMS',
          ],
          NumberSelectionBehavior='PreferSticky'|'AvoidSticky',
          GeoMatchLevel='Country'|'AreaCode',
          GeoMatchParams={
              'Country': 'string',
              'AreaCode': 'string'
          }
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    :type ParticipantPhoneNumbers: list
    :param ParticipantPhoneNumbers: **[REQUIRED]** 

      The participant phone numbers.

      

    
      - *(string) --* 

      
  
    :type Name: string
    :param Name: 

      The name of the proxy session.

      

    
    :type ExpiryMinutes: integer
    :param ExpiryMinutes: 

      The number of minutes allowed for the proxy session.

      

    
    :type Capabilities: list
    :param Capabilities: **[REQUIRED]** 

      The proxy session capabilities.

      

    
      - *(string) --* 

      
  
    :type NumberSelectionBehavior: string
    :param NumberSelectionBehavior: 

      The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.

      

    
    :type GeoMatchLevel: string
    :param GeoMatchLevel: 

      The preference for matching the country or area code of the proxy phone number with that of the first participant.

      

    
    :type GeoMatchParams: dict
    :param GeoMatchParams: 

      The country and area code for the proxy phone number.

      

    
      - **Country** *(string) --* **[REQUIRED]** 

        The country.

        

      
      - **AreaCode** *(string) --* **[REQUIRED]** 

        The area code.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProxySession': {
                'VoiceConnectorId': 'string',
                'ProxySessionId': 'string',
                'Name': 'string',
                'Status': 'Open'|'InProgress'|'Closed',
                'ExpiryMinutes': 123,
                'Capabilities': [
                    'Voice'|'SMS',
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'EndedTimestamp': datetime(2015, 1, 1),
                'Participants': [
                    {
                        'PhoneNumber': 'string',
                        'ProxyPhoneNumber': 'string'
                    },
                ],
                'NumberSelectionBehavior': 'PreferSticky'|'AvoidSticky',
                'GeoMatchLevel': 'Country'|'AreaCode',
                'GeoMatchParams': {
                    'Country': 'string',
                    'AreaCode': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProxySession** *(dict) --* 

          The proxy session details.

          
          

          - **VoiceConnectorId** *(string) --* 

            The Amazon Chime voice connector ID.

            
          

          - **ProxySessionId** *(string) --* 

            The proxy session ID.

            
          

          - **Name** *(string) --* 

            The name of the proxy session.

            
          

          - **Status** *(string) --* 

            The status of the proxy session.

            
          

          - **ExpiryMinutes** *(integer) --* 

            The number of minutes allowed for the proxy session.

            
          

          - **Capabilities** *(list) --* 

            The proxy session capabilities.

            
            

            - *(string) --* 
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The created time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated time stamp, in ISO 8601 format.

            
          

          - **EndedTimestamp** *(datetime) --* 

            The ended time stamp, in ISO 8601 format.

            
          

          - **Participants** *(list) --* 

            The proxy session participants.

            
            

            - *(dict) --* 

              The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.

              
              

              - **PhoneNumber** *(string) --* 

                The participant's phone number.

                
              

              - **ProxyPhoneNumber** *(string) --* 

                The participant's proxy phone number.

                
          
        
          

          - **NumberSelectionBehavior** *(string) --* 

            The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.

            
          

          - **GeoMatchLevel** *(string) --* 

            The preference for matching the country or area code of the proxy phone number with that of the first participant.

            
          

          - **GeoMatchParams** *(dict) --* 

            The country and area code for the proxy phone number.

            
            

            - **Country** *(string) --* 

              The country.

              
            

            - **AreaCode** *(string) --* 

              The area code.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_room(**kwargs)

    

    Creates a chat room for the specified Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateRoom>`_    


    **Request Syntax** 
    ::

      response = client.create_room(
          AccountId='string',
          Name='string',
          ClientRequestToken='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The room name.

      

    
    :type ClientRequestToken: string
    :param ClientRequestToken: 

      The idempotency token for the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Room': {
                'RoomId': 'string',
                'Name': 'string',
                'AccountId': 'string',
                'CreatedBy': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Room** *(dict) --* 

          The room details.

          
          

          - **RoomId** *(string) --* 

            The room ID.

            
          

          - **Name** *(string) --* 

            The room name.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **CreatedBy** *(string) --* 

            The identifier of the room creator.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The room creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The room update timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_room_membership(**kwargs)

    

    Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateRoomMembership>`_    


    **Request Syntax** 
    ::

      response = client.create_room_membership(
          AccountId='string',
          RoomId='string',
          MemberId='string',
          Role='Administrator'|'Member'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type MemberId: string
    :param MemberId: **[REQUIRED]** 

      The Amazon Chime member ID (user ID or bot ID).

      

    
    :type Role: string
    :param Role: 

      The role of the member.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RoomMembership': {
                'RoomId': 'string',
                'Member': {
                    'MemberId': 'string',
                    'MemberType': 'User'|'Bot'|'Webhook',
                    'Email': 'string',
                    'FullName': 'string',
                    'AccountId': 'string'
                },
                'Role': 'Administrator'|'Member',
                'InvitedBy': 'string',
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RoomMembership** *(dict) --* 

          The room membership details.

          
          

          - **RoomId** *(string) --* 

            The room ID.

            
          

          - **Member** *(dict) --* 

            The member details, such as email address, name, member ID, and member type.

            
            

            - **MemberId** *(string) --* 

              The member ID (user ID or bot ID).

              
            

            - **MemberType** *(string) --* 

              The member type.

              
            

            - **Email** *(string) --* 

              The member email address.

              
            

            - **FullName** *(string) --* 

              The member name.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
        
          

          - **Role** *(string) --* 

            The membership role.

            
          

          - **InvitedBy** *(string) --* 

            The identifier of the user that invited the room member.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The room membership update timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_sip_media_application(**kwargs)

    

    Creates a SIP media application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateSipMediaApplication>`_    


    **Request Syntax** 
    ::

      response = client.create_sip_media_application(
          AwsRegion='string',
          Name='string',
          Endpoints=[
              {
                  'LambdaArn': 'string'
              },
          ]
      )
    :type AwsRegion: string
    :param AwsRegion: **[REQUIRED]** 

      The AWS Region assigned to the SIP media application.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The SIP media application name.

      

    
    :type Endpoints: list
    :param Endpoints: **[REQUIRED]** 

      List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.

      

    
      - *(dict) --* 

        The endpoint assigned to the SIP media application.

        

      
        - **LambdaArn** *(string) --* 

          Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplication': {
                'SipMediaApplicationId': 'string',
                'AwsRegion': 'string',
                'Name': 'string',
                'Endpoints': [
                    {
                        'LambdaArn': 'string'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplication** *(dict) --* 

          The SIP media application details.

          
          

          - **SipMediaApplicationId** *(string) --* 

            The SIP media application ID.

            
          

          - **AwsRegion** *(string) --* 

            The AWS Region in which the SIP media application is created.

            
          

          - **Name** *(string) --* 

            The name of the SIP media application.

            
          

          - **Endpoints** *(list) --* 

            List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted.

            
            

            - *(dict) --* 

              The endpoint assigned to the SIP media application.

              
              

              - **LambdaArn** *(string) --* 

                Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The SIP media application creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The SIP media application updated timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_sip_media_application_call(**kwargs)

    

    Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified ``sipMediaApplicationId`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateSipMediaApplicationCall>`_    


    **Request Syntax** 
    ::

      response = client.create_sip_media_application_call(
          FromPhoneNumber='string',
          ToPhoneNumber='string',
          SipMediaApplicationId='string'
      )
    :type FromPhoneNumber: string
    :param FromPhoneNumber: **[REQUIRED]** 

      The phone number that a user calls from. This is a phone number in your Amazon Chime phone number inventory.

      

    
    :type ToPhoneNumber: string
    :param ToPhoneNumber: **[REQUIRED]** 

      The phone number that the service should call.

      

    
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The ID of the SIP media application.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplicationCall': {
                'TransactionId': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplicationCall** *(dict) --* 

          The actual call.

          
          

          - **TransactionId** *(string) --* 

            The transaction ID of a call.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_sip_rule(**kwargs)

    

    Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateSipRule>`_    


    **Request Syntax** 
    ::

      response = client.create_sip_rule(
          Name='string',
          TriggerType='ToPhoneNumber'|'RequestUriHostname',
          TriggerValue='string',
          Disabled=True|False,
          TargetApplications=[
              {
                  'SipMediaApplicationId': 'string',
                  'Priority': 123,
                  'AwsRegion': 'string'
              },
          ]
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the SIP rule.

      

    
    :type TriggerType: string
    :param TriggerType: **[REQUIRED]** 

      The type of trigger assigned to the SIP rule in ``TriggerValue`` , currently ``RequestUriHostname`` or ``ToPhoneNumber`` .

      

    
    :type TriggerValue: string
    :param TriggerValue: **[REQUIRED]** 

      If ``TriggerType`` is ``RequestUriHostname`` , the value can be the outbound host name of an Amazon Chime Voice Connector. If ``TriggerType`` is ``ToPhoneNumber`` , the value can be a customer-owned phone number in the E164 format. The ``SipMediaApplication`` specified in the ``SipRule`` is triggered if the request URI in an incoming SIP request matches the ``RequestUriHostname`` , or if the ``To`` header in the incoming SIP request matches the ``ToPhoneNumber`` value.

      

    
    :type Disabled: boolean
    :param Disabled: 

      Enables or disables a rule. You must disable rules before you can delete them.

      

    
    :type TargetApplications: list
    :param TargetApplications: **[REQUIRED]** 

      List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used.

      

    
      - *(dict) --* 

        Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

        

      
        - **SipMediaApplicationId** *(string) --* 

          The SIP media application ID.

          

        
        - **Priority** *(integer) --* 

          Priority of the SIP media application in the target list.

          

        
        - **AwsRegion** *(string) --* 

          The AWS Region of the target application.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipRule': {
                'SipRuleId': 'string',
                'Name': 'string',
                'Disabled': True|False,
                'TriggerType': 'ToPhoneNumber'|'RequestUriHostname',
                'TriggerValue': 'string',
                'TargetApplications': [
                    {
                        'SipMediaApplicationId': 'string',
                        'Priority': 123,
                        'AwsRegion': 'string'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipRule** *(dict) --* 

          Returns the SIP rule information, including the rule ID, triggers, and target applications.

          
          

          - **SipRuleId** *(string) --* 

            The SIP rule ID.

            
          

          - **Name** *(string) --* 

            The name of the SIP rule.

            
          

          - **Disabled** *(boolean) --* 

            Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it.

            
          

          - **TriggerType** *(string) --* 

            The type of trigger assigned to the SIP rule in ``TriggerValue`` , currently ``RequestUriHostname`` or ``ToPhoneNumber`` .

            
          

          - **TriggerValue** *(string) --* 

            If ``TriggerType`` is ``RequestUriHostname`` , then the value can be the outbound host name of the Amazon Chime Voice Connector. If ``TriggerType`` is ``ToPhoneNumber`` , then the value can be a customer-owned phone number in E164 format. ``SipRule`` is triggered when a SIP rule requests host name or ``ToPhoneNumber`` matches in the incoming SIP request.

            
          

          - **TargetApplications** *(list) --* 

            Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

            
            

            - *(dict) --* 

              Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

              
              

              - **SipMediaApplicationId** *(string) --* 

                The SIP media application ID.

                
              

              - **Priority** *(integer) --* 

                Priority of the SIP media application in the target list.

                
              

              - **AwsRegion** *(string) --* 

                The AWS Region of the target application.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the SIP rule was created, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The time at which the SIP rule was last updated, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_user(**kwargs)

    

    Creates a user under the specified Amazon Chime account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateUser>`_    


    **Request Syntax** 
    ::

      response = client.create_user(
          AccountId='string',
          Username='string',
          Email='string',
          UserType='PrivateUser'|'SharedDevice'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type Username: string
    :param Username: 

      The user name.

      

    
    :type Email: string
    :param Email: 

      The user's email address.

      

    
    :type UserType: string
    :param UserType: 

      The user type.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'User': {
                'UserId': 'string',
                'AccountId': 'string',
                'PrimaryEmail': 'string',
                'PrimaryProvisionedNumber': 'string',
                'DisplayName': 'string',
                'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'UserType': 'PrivateUser'|'SharedDevice',
                'UserRegistrationStatus': 'Unregistered'|'Registered'|'Suspended',
                'UserInvitationStatus': 'Pending'|'Accepted'|'Failed',
                'RegisteredOn': datetime(2015, 1, 1),
                'InvitedOn': datetime(2015, 1, 1),
                'AlexaForBusinessMetadata': {
                    'IsAlexaForBusinessEnabled': True|False,
                    'AlexaForBusinessRoomArn': 'string'
                },
                'PersonalPIN': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **User** *(dict) --* 

          The user on the Amazon Chime account.

          
          

          - **UserId** *(string) --* 

            The user ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **PrimaryEmail** *(string) --* 

            The primary email address of the user.

            
          

          - **PrimaryProvisionedNumber** *(string) --* 

            The primary phone number associated with the user.

            
          

          - **DisplayName** *(string) --* 

            The display name of the user.

            
          

          - **LicenseType** *(string) --* 

            The license type for the user.

            
          

          - **UserType** *(string) --* 

            The user type.

            
          

          - **UserRegistrationStatus** *(string) --* 

            The user registration status.

            
          

          - **UserInvitationStatus** *(string) --* 

            The user invite status.

            
          

          - **RegisteredOn** *(datetime) --* 

            Date and time when the user is registered, in ISO 8601 format.

            
          

          - **InvitedOn** *(datetime) --* 

            Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.

            
          

          - **AlexaForBusinessMetadata** *(dict) --* 

            The Alexa for Business metadata.

            
            

            - **IsAlexaForBusinessEnabled** *(boolean) --* 

              Starts or stops Alexa for Business.

              
            

            - **AlexaForBusinessRoomArn** *(string) --* 

              The ARN of the room resource.

              
        
          

          - **PersonalPIN** *(string) --* 

            The user's personal meeting PIN.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_voice_connector(**kwargs)

    

    Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.

     

    Enabling  CreateVoiceConnectorRequest$RequireEncryption configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateVoiceConnector>`_    


    **Request Syntax** 
    ::

      response = client.create_voice_connector(
          Name='string',
          AwsRegion='us-east-1'|'us-west-2',
          RequireEncryption=True|False
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the Amazon Chime Voice Connector.

      

    
    :type AwsRegion: string
    :param AwsRegion: 

      The AWS Region in which the Amazon Chime Voice Connector is created. Default value: ``us-east-1`` . 

      

    
    :type RequireEncryption: boolean
    :param RequireEncryption: **[REQUIRED]** 

      When enabled, requires encryption for the Amazon Chime Voice Connector.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnector': {
                'VoiceConnectorId': 'string',
                'AwsRegion': 'us-east-1'|'us-west-2',
                'Name': 'string',
                'OutboundHostName': 'string',
                'RequireEncryption': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnector** *(dict) --* 

          The Amazon Chime Voice Connector details.

          
          

          - **VoiceConnectorId** *(string) --* 

            The Amazon Chime Voice Connector ID.

            
          

          - **AwsRegion** *(string) --* 

            The AWS Region in which the Amazon Chime Voice Connector is created. Default: ``us-east-1`` . 

            
          

          - **Name** *(string) --* 

            The name of the Amazon Chime Voice Connector.

            
          

          - **OutboundHostName** *(string) --* 

            The outbound host name for the Amazon Chime Voice Connector.

            
          

          - **RequireEncryption** *(boolean) --* 

            Designates whether encryption is required for the Amazon Chime Voice Connector.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: create_voice_connector_group(**kwargs)

    

    Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including ``VoiceConnectorItems`` in the request.

     

    You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/CreateVoiceConnectorGroup>`_    


    **Request Syntax** 
    ::

      response = client.create_voice_connector_group(
          Name='string',
          VoiceConnectorItems=[
              {
                  'VoiceConnectorId': 'string',
                  'Priority': 123
              },
          ]
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the Amazon Chime Voice Connector group.

      

    
    :type VoiceConnectorItems: list
    :param VoiceConnectorItems: 

      The Amazon Chime Voice Connectors to route inbound calls to.

      

    
      - *(dict) --* 

        For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 ``VoiceConnectorItems`` per Amazon Chime Voice Connector group.

        

      
        - **VoiceConnectorId** *(string) --* **[REQUIRED]** 

          The Amazon Chime Voice Connector ID.

          

        
        - **Priority** *(integer) --* **[REQUIRED]** 

          The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnectorGroup': {
                'VoiceConnectorGroupId': 'string',
                'Name': 'string',
                'VoiceConnectorItems': [
                    {
                        'VoiceConnectorId': 'string',
                        'Priority': 123
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnectorGroup** *(dict) --* 

          The Amazon Chime Voice Connector group details.

          
          

          - **VoiceConnectorGroupId** *(string) --* 

            The Amazon Chime Voice Connector group ID.

            
          

          - **Name** *(string) --* 

            The name of the Amazon Chime Voice Connector group.

            
          

          - **VoiceConnectorItems** *(list) --* 

            The Amazon Chime Voice Connectors to which to route inbound calls.

            
            

            - *(dict) --* 

              For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 ``VoiceConnectorItems`` per Amazon Chime Voice Connector group.

              
              

              - **VoiceConnectorId** *(string) --* 

                The Amazon Chime Voice Connector ID.

                
              

              - **Priority** *(integer) --* 

                The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_account(**kwargs)

    

    Deletes the specified Amazon Chime account. You must suspend all users before deleting ``Team`` account. You can use the  BatchSuspendUser action to dodo.

     

    For ``EnterpriseLWA`` and ``EnterpriseAD`` accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.

     

    Deleted accounts appear in your ``Disabled`` accounts list for 90 days. To restore deleted account from your ``Disabled`` accounts list, you must contact AWS Support.

     

    After 90 days, deleted accounts are permanently removed from your ``Disabled`` accounts list.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAccount>`_    


    **Request Syntax** 
    ::

      response = client.delete_account(
          AccountId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnprocessableEntityException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_app_instance(**kwargs)

    

    Deletes an ``AppInstance`` and all associated data asynchronously.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAppInstance>`_    


    **Request Syntax** 
    ::

      response = client.delete_app_instance(
          AppInstanceArn='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_app_instance_admin(**kwargs)

    

    Demotes an ``AppInstanceAdmin`` to an ``AppInstanceUser`` . This action does not delete the user.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAppInstanceAdmin>`_    


    **Request Syntax** 
    ::

      response = client.delete_app_instance_admin(
          AppInstanceAdminArn='string',
          AppInstanceArn='string'
      )
    :type AppInstanceAdminArn: string
    :param AppInstanceAdminArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` 's administrator.

      

    
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_app_instance_streaming_configurations(**kwargs)

    

    Deletes the streaming configurations of an ``AppInstance`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAppInstanceStreamingConfigurations>`_    


    **Request Syntax** 
    ::

      response = client.delete_app_instance_streaming_configurations(
          AppInstanceArn='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the streaming configurations being deleted.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_app_instance_user(**kwargs)

    

    Deletes an ``AppInstanceUser`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.delete_app_instance_user(
          AppInstanceUserArn='string'
      )
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: **[REQUIRED]** 

      The ARN of the user request being deleted.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_attendee(**kwargs)

    

    Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their ``JoinToken`` . Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteAttendee>`_    


    **Request Syntax** 
    ::

      response = client.delete_attendee(
          MeetingId='string',
          AttendeeId='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type AttendeeId: string
    :param AttendeeId: **[REQUIRED]** 

      The Amazon Chime SDK attendee ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_channel(**kwargs)

    

    Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteChannel>`_    


    **Request Syntax** 
    ::

      response = client.delete_channel(
          ChannelArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel being deleted.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_channel_ban(**kwargs)

    

    Removes a user from a channel's ban list.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteChannelBan>`_    


    **Request Syntax** 
    ::

      response = client.delete_channel_ban(
          ChannelArn='string',
          MemberArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel from which the ``AppInstanceUser`` was banned.

      

    
    :type MemberArn: string
    :param MemberArn: **[REQUIRED]** 

      The ARN of the ``AppInstanceUser`` that you want to reinstate.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_channel_membership(**kwargs)

    

    Removes a member from a channel.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteChannelMembership>`_    


    **Request Syntax** 
    ::

      response = client.delete_channel_membership(
          ChannelArn='string',
          MemberArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel from which you want to remove the user.

      

    
    :type MemberArn: string
    :param MemberArn: **[REQUIRED]** 

      The ARN of the member that you're removing from the channel.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_channel_message(**kwargs)

    

    Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by ``UpdateChannelMessage`` .

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteChannelMessage>`_    


    **Request Syntax** 
    ::

      response = client.delete_channel_message(
          ChannelArn='string',
          MessageId='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type MessageId: string
    :param MessageId: **[REQUIRED]** 

      The ID of the message being deleted.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_channel_moderator(**kwargs)

    

    Deletes a channel moderator.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteChannelModerator>`_    


    **Request Syntax** 
    ::

      response = client.delete_channel_moderator(
          ChannelArn='string',
          ChannelModeratorArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type ChannelModeratorArn: string
    :param ChannelModeratorArn: **[REQUIRED]** 

      The ARN of the moderator being deleted.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_events_configuration(**kwargs)

    

    Deletes the events configuration that allows a bot to receive outgoing events.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteEventsConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.delete_events_configuration(
          AccountId='string',
          BotId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type BotId: string
    :param BotId: **[REQUIRED]** 

      The bot ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    

  .. py:method:: delete_media_capture_pipeline(**kwargs)

    

    Deletes the media capture pipeline.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteMediaCapturePipeline>`_    


    **Request Syntax** 
    ::

      response = client.delete_media_capture_pipeline(
          MediaPipelineId='string'
      )
    :type MediaPipelineId: string
    :param MediaPipelineId: **[REQUIRED]** 

      The ID of the media capture pipeline being deleted. 

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_meeting(**kwargs)

    

    Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from joining the meeting. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteMeeting>`_    


    **Request Syntax** 
    ::

      response = client.delete_meeting(
          MeetingId='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_phone_number(**kwargs)

    

    Moves the specified phone number into the **Deletion queue** . A phone number must be disassociated from any users or Amazon Chime Voice Connectors before it can be deleted.

     

    Deleted phone numbers remain in the **Deletion queue** for 7 days before they are deleted permanently.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeletePhoneNumber>`_    


    **Request Syntax** 
    ::

      response = client.delete_phone_number(
          PhoneNumberId='string'
      )
    :type PhoneNumberId: string
    :param PhoneNumberId: **[REQUIRED]** 

      The phone number ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_proxy_session(**kwargs)

    

    Deletes the specified proxy session from the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteProxySession>`_    


    **Request Syntax** 
    ::

      response = client.delete_proxy_session(
          VoiceConnectorId='string',
          ProxySessionId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    :type ProxySessionId: string
    :param ProxySessionId: **[REQUIRED]** 

      The proxy session ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_room(**kwargs)

    

    Deletes a chat room in an Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteRoom>`_    


    **Request Syntax** 
    ::

      response = client.delete_room(
          AccountId='string',
          RoomId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The chat room ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_room_membership(**kwargs)

    

    Removes a member from a chat room in an Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteRoomMembership>`_    


    **Request Syntax** 
    ::

      response = client.delete_room_membership(
          AccountId='string',
          RoomId='string',
          MemberId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type MemberId: string
    :param MemberId: **[REQUIRED]** 

      The member ID (user ID or bot ID).

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_sip_media_application(**kwargs)

    

    Deletes a SIP media application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteSipMediaApplication>`_    


    **Request Syntax** 
    ::

      response = client.delete_sip_media_application(
          SipMediaApplicationId='string'
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The SIP media application ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_sip_rule(**kwargs)

    

    Deletes a SIP rule. You must disable a SIP rule before you can delete it.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteSipRule>`_    


    **Request Syntax** 
    ::

      response = client.delete_sip_rule(
          SipRuleId='string'
      )
    :type SipRuleId: string
    :param SipRuleId: **[REQUIRED]** 

      The SIP rule ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector(**kwargs)

    

    Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the Amazon Chime Voice Connector must be disassociated from it before it can be deleted.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnector>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_emergency_calling_configuration(**kwargs)

    

    Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorEmergencyCallingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_emergency_calling_configuration(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_group(**kwargs)

    

    Deletes the specified Amazon Chime Voice Connector group. Any ``VoiceConnectorItems`` and phone numbers associated with the group must be removed before it can be deleted.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorGroup>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_group(
          VoiceConnectorGroupId='string'
      )
    :type VoiceConnectorGroupId: string
    :param VoiceConnectorGroupId: **[REQUIRED]** 

      The Amazon Chime Voice Connector group ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_origination(**kwargs)

    

    Deletes the origination settings for the specified Amazon Chime Voice Connector.

     

    .. note::

       

      If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorOrigination>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_origination(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_proxy(**kwargs)

    

    Deletes the proxy configuration from the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorProxy>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_proxy(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_streaming_configuration(**kwargs)

    

    Deletes the streaming configuration for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorStreamingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_streaming_configuration(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_termination(**kwargs)

    

    Deletes the termination settings for the specified Amazon Chime Voice Connector.

     

    .. note::

       

      If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorTermination>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_termination(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: delete_voice_connector_termination_credentials(**kwargs)

    

    Deletes the specified SIP credentials used by your equipment to authenticate during call termination.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DeleteVoiceConnectorTerminationCredentials>`_    


    **Request Syntax** 
    ::

      response = client.delete_voice_connector_termination_credentials(
          VoiceConnectorId='string',
          Usernames=[
              'string',
          ]
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type Usernames: list
    :param Usernames: **[REQUIRED]** 

      The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_app_instance(**kwargs)

    

    Returns the full details of an ``AppInstance`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeAppInstance>`_    


    **Request Syntax** 
    ::

      response = client.describe_app_instance(
          AppInstanceArn='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstance': {
                'AppInstanceArn': 'string',
                'Name': 'string',
                'Metadata': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'LastUpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstance** *(dict) --* 

          The ARN, metadata, created and last-updated timestamps, and the name of the ``AppInstance`` . All timestamps use epoch milliseconds.

          
          

          - **AppInstanceArn** *(string) --* 

            The ARN of the messaging instance.

            
          

          - **Name** *(string) --* 

            The name of an ``AppInstance`` .

            
          

          - **Metadata** *(string) --* 

            The metadata of an ``AppInstance`` .

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which an ``AppInstance`` was created. In epoch milliseconds.

            
          

          - **LastUpdatedTimestamp** *(datetime) --* 

            The time an ``AppInstance`` was last updated. In epoch milliseconds.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_app_instance_admin(**kwargs)

    

    Returns the full details of an ``AppInstanceAdmin`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeAppInstanceAdmin>`_    


    **Request Syntax** 
    ::

      response = client.describe_app_instance_admin(
          AppInstanceAdminArn='string',
          AppInstanceArn='string'
      )
    :type AppInstanceAdminArn: string
    :param AppInstanceAdminArn: **[REQUIRED]** 

      The ARN of the ``AppInstanceAdmin`` .

      

    
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceAdmin': {
                'Admin': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'AppInstanceArn': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceAdmin** *(dict) --* 

          The ARN and name of the ``AppInstanceUser`` , the ARN of the ``AppInstance`` , and the created and last-updated timestamps. All timestamps use epoch milliseconds.

          
          

          - **Admin** *(dict) --* 

            The ``AppInstanceAdmin`` data.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **AppInstanceArn** *(string) --* 

            The ARN of the ``AppInstance`` for which the user is an administrator.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which an administrator was created.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_app_instance_user(**kwargs)

    

    Returns the full details of an ``AppInstanceUser`` . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.describe_app_instance_user(
          AppInstanceUserArn='string'
      )
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: **[REQUIRED]** 

      The ARN of the ``AppInstanceUser`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceUser': {
                'AppInstanceUserArn': 'string',
                'Name': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'Metadata': 'string',
                'LastUpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceUser** *(dict) --* 

          The name of the ``AppInstanceUser`` .

          
          

          - **AppInstanceUserArn** *(string) --* 

            The ARN of the ``AppInstanceUser`` .

            
          

          - **Name** *(string) --* 

            The name of the ``AppInstanceUser`` .

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the ``AppInstanceUser`` was created.

            
          

          - **Metadata** *(string) --* 

            The metadata of the ``AppInstanceUser`` .

            
          

          - **LastUpdatedTimestamp** *(datetime) --* 

            The time at which the ``AppInstanceUser`` was last updated.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_channel(**kwargs)

    

    Returns the full details of a channel in an Amazon Chime ``AppInstance`` .

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeChannel>`_    


    **Request Syntax** 
    ::

      response = client.describe_channel(
          ChannelArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Channel': {
                'Name': 'string',
                'ChannelArn': 'string',
                'Mode': 'UNRESTRICTED'|'RESTRICTED',
                'Privacy': 'PUBLIC'|'PRIVATE',
                'Metadata': 'string',
                'CreatedBy': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'CreatedTimestamp': datetime(2015, 1, 1),
                'LastMessageTimestamp': datetime(2015, 1, 1),
                'LastUpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Channel** *(dict) --* 

          The channel details.

          
          

          - **Name** *(string) --* 

            The name of the channel.

            
          

          - **ChannelArn** *(string) --* 

            The ARN of the channel.

            
          

          - **Mode** *(string) --* 

            The mode of the channel.

            
          

          - **Privacy** *(string) --* 

            The channel's privacy setting.

            
          

          - **Metadata** *(string) --* 

            The channel's metadata.

            
          

          - **CreatedBy** *(dict) --* 

            The ``AppInstanceUser`` who created the channel.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the ``AppInstanceUser`` created the channel.

            
          

          - **LastMessageTimestamp** *(datetime) --* 

            The time at which a member sent the last message in the channel.

            
          

          - **LastUpdatedTimestamp** *(datetime) --* 

            The time at which a channel was last updated.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_channel_ban(**kwargs)

    

    Returns the full details of a channel ban.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeChannelBan>`_    


    **Request Syntax** 
    ::

      response = client.describe_channel_ban(
          ChannelArn='string',
          MemberArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel from which the user is banned.

      

    
    :type MemberArn: string
    :param MemberArn: **[REQUIRED]** 

      The ARN of the member being banned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelBan': {
                'Member': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'ChannelArn': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'CreatedBy': {
                    'Arn': 'string',
                    'Name': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelBan** *(dict) --* 

          The details of the ban.

          
          

          - **Member** *(dict) --* 

            The member being banned from the channel.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **ChannelArn** *(string) --* 

            The ARN of the channel from which a member is being banned.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the ban was created.

            
          

          - **CreatedBy** *(dict) --* 

            The ``AppInstanceUser`` who created the ban.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_channel_membership(**kwargs)

    

    Returns the full details of a user's channel membership.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeChannelMembership>`_    


    **Request Syntax** 
    ::

      response = client.describe_channel_membership(
          ChannelArn='string',
          MemberArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type MemberArn: string
    :param MemberArn: **[REQUIRED]** 

      The ARN of the member.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelMembership': {
                'InvitedBy': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'Type': 'DEFAULT'|'HIDDEN',
                'Member': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'ChannelArn': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'LastUpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelMembership** *(dict) --* 

          The details of the membership.

          
          

          - **InvitedBy** *(dict) --* 

            The identifier of the member who invited another member.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **Type** *(string) --* 

            The membership type set for the channel member.

            
          

          - **Member** *(dict) --* 

            The data of the channel member.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **ChannelArn** *(string) --* 

            The ARN of the member's channel.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the channel membership was created.

            
          

          - **LastUpdatedTimestamp** *(datetime) --* 

            The time at which a channel membership was last updated.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_channel_membership_for_app_instance_user(**kwargs)

    

    Returns the details of a channel based on the membership of the specified ``AppInstanceUser`` .

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeChannelMembershipForAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.describe_channel_membership_for_app_instance_user(
          ChannelArn='string',
          AppInstanceUserArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel to which the user belongs.

      

    
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: **[REQUIRED]** 

      The ARN of the user in a channel.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelMembership': {
                'ChannelSummary': {
                    'Name': 'string',
                    'ChannelArn': 'string',
                    'Mode': 'UNRESTRICTED'|'RESTRICTED',
                    'Privacy': 'PUBLIC'|'PRIVATE',
                    'Metadata': 'string',
                    'LastMessageTimestamp': datetime(2015, 1, 1)
                },
                'AppInstanceUserMembershipSummary': {
                    'Type': 'DEFAULT'|'HIDDEN',
                    'ReadMarkerTimestamp': datetime(2015, 1, 1)
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelMembership** *(dict) --* 

          The channel to which a user belongs.

          
          

          - **ChannelSummary** *(dict) --* 

            Summary of the details of a ``Channel`` .

            
            

            - **Name** *(string) --* 

              The name of the channel.

              
            

            - **ChannelArn** *(string) --* 

              The ARN of the channel.

              
            

            - **Mode** *(string) --* 

              The mode of the channel.

              
            

            - **Privacy** *(string) --* 

              The privacy setting of the channel.

              
            

            - **Metadata** *(string) --* 

              The metadata of the channel.

              
            

            - **LastMessageTimestamp** *(datetime) --* 

              The time at which the last message in a channel was sent.

              
        
          

          - **AppInstanceUserMembershipSummary** *(dict) --* 

            Returns the channel membership data for an ``AppInstance`` .

            
            

            - **Type** *(string) --* 

              The type of ``ChannelMembership`` .

              
            

            - **ReadMarkerTimestamp** *(datetime) --* 

              The time at which a message was last read.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_channel_moderated_by_app_instance_user(**kwargs)

    

    Returns the full details of a channel moderated by the specified ``AppInstanceUser`` .

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeChannelModeratedByAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.describe_channel_moderated_by_app_instance_user(
          ChannelArn='string',
          AppInstanceUserArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the moderated channel.

      

    
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: **[REQUIRED]** 

      The ARN of the ``AppInstanceUser`` in the moderated channel.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Channel': {
                'ChannelSummary': {
                    'Name': 'string',
                    'ChannelArn': 'string',
                    'Mode': 'UNRESTRICTED'|'RESTRICTED',
                    'Privacy': 'PUBLIC'|'PRIVATE',
                    'Metadata': 'string',
                    'LastMessageTimestamp': datetime(2015, 1, 1)
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Channel** *(dict) --* 

          The moderated channel.

          
          

          - **ChannelSummary** *(dict) --* 

            Summary of the details of a ``Channel`` .

            
            

            - **Name** *(string) --* 

              The name of the channel.

              
            

            - **ChannelArn** *(string) --* 

              The ARN of the channel.

              
            

            - **Mode** *(string) --* 

              The mode of the channel.

              
            

            - **Privacy** *(string) --* 

              The privacy setting of the channel.

              
            

            - **Metadata** *(string) --* 

              The metadata of the channel.

              
            

            - **LastMessageTimestamp** *(datetime) --* 

              The time at which the last message in a channel was sent.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: describe_channel_moderator(**kwargs)

    

    Returns the full details of a single ChannelModerator.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DescribeChannelModerator>`_    


    **Request Syntax** 
    ::

      response = client.describe_channel_moderator(
          ChannelArn='string',
          ChannelModeratorArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type ChannelModeratorArn: string
    :param ChannelModeratorArn: **[REQUIRED]** 

      The ARN of the channel moderator.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelModerator': {
                'Moderator': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'ChannelArn': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'CreatedBy': {
                    'Arn': 'string',
                    'Name': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelModerator** *(dict) --* 

          The details of the channel moderator.

          
          

          - **Moderator** *(dict) --* 

            The moderator's data.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **ChannelArn** *(string) --* 

            The ARN of the moderator's channel.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the moderator was created.

            
          

          - **CreatedBy** *(dict) --* 

            The ``AppInstanceUser`` who created the moderator.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: disassociate_phone_number_from_user(**kwargs)

    

    Disassociates the primary provisioned phone number from the specified Amazon Chime user.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DisassociatePhoneNumberFromUser>`_    


    **Request Syntax** 
    ::

      response = client.disassociate_phone_number_from_user(
          AccountId='string',
          UserId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: disassociate_phone_numbers_from_voice_connector(**kwargs)

    

    Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DisassociatePhoneNumbersFromVoiceConnector>`_    


    **Request Syntax** 
    ::

      response = client.disassociate_phone_numbers_from_voice_connector(
          VoiceConnectorId='string',
          E164PhoneNumbers=[
              'string',
          ]
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type E164PhoneNumbers: list
    :param E164PhoneNumbers: **[REQUIRED]** 

      List of phone numbers, in E.164 format.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberErrors': [
                {
                    'PhoneNumberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberErrors** *(list) --* 

          If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: disassociate_phone_numbers_from_voice_connector_group(**kwargs)

    

    Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DisassociatePhoneNumbersFromVoiceConnectorGroup>`_    


    **Request Syntax** 
    ::

      response = client.disassociate_phone_numbers_from_voice_connector_group(
          VoiceConnectorGroupId='string',
          E164PhoneNumbers=[
              'string',
          ]
      )
    :type VoiceConnectorGroupId: string
    :param VoiceConnectorGroupId: **[REQUIRED]** 

      The Amazon Chime Voice Connector group ID.

      

    
    :type E164PhoneNumbers: list
    :param E164PhoneNumbers: **[REQUIRED]** 

      List of phone numbers, in E.164 format.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberErrors': [
                {
                    'PhoneNumberId': 'string',
                    'ErrorCode': 'BadRequest'|'Conflict'|'Forbidden'|'NotFound'|'PreconditionFailed'|'ResourceLimitExceeded'|'ServiceFailure'|'AccessDenied'|'ServiceUnavailable'|'Throttled'|'Throttling'|'Unauthorized'|'Unprocessable'|'VoiceConnectorGroupAssociationsExist'|'PhoneNumberAssociationsExist',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberErrors** *(list) --* 

          If the action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

          
          

          - *(dict) --* 

            If the phone number action fails for one or more of the phone numbers in the request, a list of the phone numbers is returned, along with error codes and error messages.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID for which the action failed.

              
            

            - **ErrorCode** *(string) --* 

              The error code.

              
            

            - **ErrorMessage** *(string) --* 

              The error message.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: disassociate_signin_delegate_groups_from_account(**kwargs)

    

    Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/DisassociateSigninDelegateGroupsFromAccount>`_    


    **Request Syntax** 
    ::

      response = client.disassociate_signin_delegate_groups_from_account(
          AccountId='string',
          GroupNames=[
              'string',
          ]
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type GroupNames: list
    :param GroupNames: **[REQUIRED]** 

      The sign-in delegate group names.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_account(**kwargs)

    

    Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetAccount>`_    


    **Request Syntax** 
    ::

      response = client.get_account(
          AccountId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Account': {
                'AwsAccountId': 'string',
                'AccountId': 'string',
                'Name': 'string',
                'AccountType': 'Team'|'EnterpriseDirectory'|'EnterpriseLWA'|'EnterpriseOIDC',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'DefaultLicense': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'SupportedLicenses': [
                    'Basic'|'Plus'|'Pro'|'ProTrial',
                ],
                'AccountStatus': 'Suspended'|'Active',
                'SigninDelegateGroups': [
                    {
                        'GroupName': 'string'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Account** *(dict) --* 

          The Amazon Chime account details.

          
          

          - **AwsAccountId** *(string) --* 

            The AWS account ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **Name** *(string) --* 

            The Amazon Chime account name.

            
          

          - **AccountType** *(string) --* 

            The Amazon Chime account type. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime account creation timestamp, in ISO 8601 format.

            
          

          - **DefaultLicense** *(string) --* 

            The default license for the Amazon Chime account.

            
          

          - **SupportedLicenses** *(list) --* 

            Supported licenses for the Amazon Chime account.

            
            

            - *(string) --* 
        
          

          - **AccountStatus** *(string) --* 

            The status of the account, ``Suspended`` or ``Active`` .

            
          

          - **SigninDelegateGroups** *(list) --* 

            The sign-in delegate groups associated with the account.

            
            

            - *(dict) --* 

              An Active Directory (AD) group whose members are granted permission to act as delegates.

              
              

              - **GroupName** *(string) --* 

                The group name.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_account_settings(**kwargs)

    

    Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dialout settings. For more information about these settings, see `Use the Policies Page <https://docs.aws.amazon.com/chime/latest/ag/policies.html>`__ in the *Amazon Chime Administration Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetAccountSettings>`_    


    **Request Syntax** 
    ::

      response = client.get_account_settings(
          AccountId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AccountSettings': {
                'DisableRemoteControl': True|False,
                'EnableDialOut': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AccountSettings** *(dict) --* 

          The Amazon Chime account settings.

          
          

          - **DisableRemoteControl** *(boolean) --* 

            Setting that stops or starts remote control of shared screens during meetings.

            
          

          - **EnableDialOut** *(boolean) --* 

            Setting that allows meeting participants to choose the **Call me at a phone number** option. For more information, see `Join a Meeting without the Amazon Chime App <https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html>`__ .

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_app_instance_retention_settings(**kwargs)

    

    Gets the retention settings for an ``AppInstance`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetAppInstanceRetentionSettings>`_    


    **Request Syntax** 
    ::

      response = client.get_app_instance_retention_settings(
          AppInstanceArn='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceRetentionSettings': {
                'ChannelRetentionSettings': {
                    'RetentionDays': 123
                }
            },
            'InitiateDeletionTimestamp': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceRetentionSettings** *(dict) --* 

          The retention settings for the ``AppInstance`` .

          
          

          - **ChannelRetentionSettings** *(dict) --* 

            The length of time in days to retain the messages in a channel.

            
            

            - **RetentionDays** *(integer) --* 

              The time in days to retain the messages in a channel.

              
        
      
        

        - **InitiateDeletionTimestamp** *(datetime) --* 

          The timestamp representing the time at which the specified items are retained, in Epoch Seconds.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_app_instance_streaming_configurations(**kwargs)

    

    Gets the streaming settings for an ``AppInstance`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetAppInstanceStreamingConfigurations>`_    


    **Request Syntax** 
    ::

      response = client.get_app_instance_streaming_configurations(
          AppInstanceArn='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceStreamingConfigurations': [
                {
                    'AppInstanceDataType': 'Channel'|'ChannelMessage',
                    'ResourceArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceStreamingConfigurations** *(list) --* 

          The streaming settings.

          
          

          - *(dict) --* 

            The details of the streaming configuration of an ``AppInstance`` .

            
            

            - **AppInstanceDataType** *(string) --* 

              The type of data to be streamed.

              
            

            - **ResourceArn** *(string) --* 

              The resource ARN.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_attendee(**kwargs)

    

    Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetAttendee>`_    


    **Request Syntax** 
    ::

      response = client.get_attendee(
          MeetingId='string',
          AttendeeId='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type AttendeeId: string
    :param AttendeeId: **[REQUIRED]** 

      The Amazon Chime SDK attendee ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Attendee': {
                'ExternalUserId': 'string',
                'AttendeeId': 'string',
                'JoinToken': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Attendee** *(dict) --* 

          The Amazon Chime SDK attendee information.

          
          

          - **ExternalUserId** *(string) --* 

            The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

            
          

          - **AttendeeId** *(string) --* 

            The Amazon Chime SDK attendee ID.

            
          

          - **JoinToken** *(string) --* 

            The join token used by the Amazon Chime SDK attendee.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_bot(**kwargs)

    

    Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetBot>`_    


    **Request Syntax** 
    ::

      response = client.get_bot(
          AccountId='string',
          BotId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type BotId: string
    :param BotId: **[REQUIRED]** 

      The bot ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Bot': {
                'BotId': 'string',
                'UserId': 'string',
                'DisplayName': 'string',
                'BotType': 'ChatBot',
                'Disabled': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'BotEmail': 'string',
                'SecurityToken': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Bot** *(dict) --* 

          The chat bot details.

          
          

          - **BotId** *(string) --* 

            The bot ID.

            
          

          - **UserId** *(string) --* 

            The unique ID for the bot user.

            
          

          - **DisplayName** *(string) --* 

            The bot display name.

            
          

          - **BotType** *(string) --* 

            The bot type.

            
          

          - **Disabled** *(boolean) --* 

            When true, the bot is stopped from running in your account.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The bot creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated bot timestamp, in ISO 8601 format.

            
          

          - **BotEmail** *(string) --* 

            The bot email address.

            
          

          - **SecurityToken** *(string) --* 

            The security token used to authenticate Amazon Chime with the outgoing event endpoint.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    

  .. py:method:: get_channel_message(**kwargs)

    

    Gets the full details of a channel message.

     

    .. note::

       

      The x-amz-chime-bearer request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetChannelMessage>`_    


    **Request Syntax** 
    ::

      response = client.get_channel_message(
          ChannelArn='string',
          MessageId='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type MessageId: string
    :param MessageId: **[REQUIRED]** 

      The ID of the message.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelMessage': {
                'ChannelArn': 'string',
                'MessageId': 'string',
                'Content': 'string',
                'Metadata': 'string',
                'Type': 'STANDARD'|'CONTROL',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'LastEditedTimestamp': datetime(2015, 1, 1),
                'LastUpdatedTimestamp': datetime(2015, 1, 1),
                'Sender': {
                    'Arn': 'string',
                    'Name': 'string'
                },
                'Redacted': True|False,
                'Persistence': 'PERSISTENT'|'NON_PERSISTENT'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelMessage** *(dict) --* 

          The details of and content in the message.

          
          

          - **ChannelArn** *(string) --* 

            The ARN of the channel.

            
          

          - **MessageId** *(string) --* 

            The ID of a message.

            
          

          - **Content** *(string) --* 

            The message content.

            
          

          - **Metadata** *(string) --* 

            The message metadata.

            
          

          - **Type** *(string) --* 

            The message type.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the message was created.

            
          

          - **LastEditedTimestamp** *(datetime) --* 

            The time at which a message was edited.

            
          

          - **LastUpdatedTimestamp** *(datetime) --* 

            The time at which a message was updated.

            
          

          - **Sender** *(dict) --* 

            The message sender.

            
            

            - **Arn** *(string) --* 

              The ARN in an Identity.

              
            

            - **Name** *(string) --* 

              The name in an Identity.

              
        
          

          - **Redacted** *(boolean) --* 

            Hides the content of a message.

            
          

          - **Persistence** *(string) --* 

            The persistence setting for a channel message.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_events_configuration(**kwargs)

    

    Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetEventsConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_events_configuration(
          AccountId='string',
          BotId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type BotId: string
    :param BotId: **[REQUIRED]** 

      The bot ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventsConfiguration': {
                'BotId': 'string',
                'OutboundEventsHTTPSEndpoint': 'string',
                'LambdaFunctionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventsConfiguration** *(dict) --* 

          The events configuration details.

          
          

          - **BotId** *(string) --* 

            The bot ID.

            
          

          - **OutboundEventsHTTPSEndpoint** *(string) --* 

            HTTPS endpoint that allows a bot to receive outgoing events.

            
          

          - **LambdaFunctionArn** *(string) --* 

            Lambda function ARN that allows a bot to receive outgoing events.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    

  .. py:method:: get_global_settings()

    

    Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetGlobalSettings>`_    


    **Request Syntax** 

    ::

      response = client.get_global_settings()
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BusinessCalling': {
                'CdrBucket': 'string'
            },
            'VoiceConnector': {
                'CdrBucket': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BusinessCalling** *(dict) --* 

          The Amazon Chime Business Calling settings.

          
          

          - **CdrBucket** *(string) --* 

            The Amazon S3 bucket designated for call detail record storage.

            
      
        

        - **VoiceConnector** *(dict) --* 

          The Amazon Chime Voice Connector settings.

          
          

          - **CdrBucket** *(string) --* 

            The Amazon S3 bucket designated for call detail record storage.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_media_capture_pipeline(**kwargs)

    

    Gets an existing media capture pipeline.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetMediaCapturePipeline>`_    


    **Request Syntax** 
    ::

      response = client.get_media_capture_pipeline(
          MediaPipelineId='string'
      )
    :type MediaPipelineId: string
    :param MediaPipelineId: **[REQUIRED]** 

      The ID of the pipeline that you want to get.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'MediaCapturePipeline': {
                'MediaPipelineId': 'string',
                'SourceType': 'ChimeSdkMeeting',
                'SourceArn': 'string',
                'Status': 'Initializing'|'InProgress'|'Failed'|'Stopping'|'Stopped',
                'SinkType': 'S3Bucket',
                'SinkArn': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **MediaCapturePipeline** *(dict) --* 

          The media capture pipeline object.

          
          

          - **MediaPipelineId** *(string) --* 

            The ID of a media capture pipeline.

            
          

          - **SourceType** *(string) --* 

            Source type from which media artifacts are saved. You must use ``ChimeMeeting`` .

            
          

          - **SourceArn** *(string) --* 

            ARN of the source from which the media artifacts will be saved.

            
          

          - **Status** *(string) --* 

            The status of the media capture pipeline.

            
          

          - **SinkType** *(string) --* 

            Destination type to which the media artifacts are saved. You must use an S3 Bucket.

            
          

          - **SinkArn** *(string) --* 

            ARN of the destination to which the media artifacts are saved.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the capture pipeline was created, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The time at which the capture pipeline was updated, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_meeting(**kwargs)

    

    Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetMeeting>`_    


    **Request Syntax** 
    ::

      response = client.get_meeting(
          MeetingId='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Meeting': {
                'MeetingId': 'string',
                'ExternalMeetingId': 'string',
                'MediaPlacement': {
                    'AudioHostUrl': 'string',
                    'AudioFallbackUrl': 'string',
                    'ScreenDataUrl': 'string',
                    'ScreenSharingUrl': 'string',
                    'ScreenViewingUrl': 'string',
                    'SignalingUrl': 'string',
                    'TurnControlUrl': 'string',
                    'EventIngestionUrl': 'string'
                },
                'MediaRegion': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Meeting** *(dict) --* 

          The Amazon Chime SDK meeting information.

          
          

          - **MeetingId** *(string) --* 

            The Amazon Chime SDK meeting ID.

            
          

          - **ExternalMeetingId** *(string) --* 

            The external meeting ID.

            
          

          - **MediaPlacement** *(dict) --* 

            The media placement for the meeting.

            
            

            - **AudioHostUrl** *(string) --* 

              The audio host URL.

              
            

            - **AudioFallbackUrl** *(string) --* 

              The audio fallback URL.

              
            

            - **ScreenDataUrl** *(string) --* 

              The screen data URL.

              
            

            - **ScreenSharingUrl** *(string) --* 

              The screen sharing URL.

              
            

            - **ScreenViewingUrl** *(string) --* 

              The screen viewing URL.

              
            

            - **SignalingUrl** *(string) --* 

              The signaling URL.

              
            

            - **TurnControlUrl** *(string) --* 

              The turn control URL.

              
            

            - **EventIngestionUrl** *(string) --* 

              The event ingestion URL.

              
        
          

          - **MediaRegion** *(string) --* 

            The Region in which you create the meeting. Available values: ``af-south-1`` , ``ap-northeast-1`` , ``ap-northeast-2`` , ``ap-south-1`` , ``ap-southeast-1`` , ``ap-southeast-2`` , ``ca-central-1`` , ``eu-central-1`` , ``eu-north-1`` , ``eu-south-1`` , ``eu-west-1`` , ``eu-west-2`` , ``eu-west-3`` , ``sa-east-1`` , ``us-east-1`` , ``us-east-2`` , ``us-west-1`` , ``us-west-2`` .

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_messaging_session_endpoint()

    

    The details of the endpoint for the messaging session.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetMessagingSessionEndpoint>`_    


    **Request Syntax** 
    ::

      response = client.get_messaging_session_endpoint()
      
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Endpoint': {
                'Url': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Endpoint** *(dict) --* 

          The endpoint returned in the response.

          
          

          - **Url** *(string) --* 

            The endpoint to which you establish a websocket connection.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_phone_number(**kwargs)

    

    Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetPhoneNumber>`_    


    **Request Syntax** 
    ::

      response = client.get_phone_number(
          PhoneNumberId='string'
      )
    :type PhoneNumberId: string
    :param PhoneNumberId: **[REQUIRED]** 

      The phone number ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumber': {
                'PhoneNumberId': 'string',
                'E164PhoneNumber': 'string',
                'Country': 'string',
                'Type': 'Local'|'TollFree',
                'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                'Status': 'AcquireInProgress'|'AcquireFailed'|'Unassigned'|'Assigned'|'ReleaseInProgress'|'DeleteInProgress'|'ReleaseFailed'|'DeleteFailed',
                'Capabilities': {
                    'InboundCall': True|False,
                    'OutboundCall': True|False,
                    'InboundSMS': True|False,
                    'OutboundSMS': True|False,
                    'InboundMMS': True|False,
                    'OutboundMMS': True|False
                },
                'Associations': [
                    {
                        'Value': 'string',
                        'Name': 'AccountId'|'UserId'|'VoiceConnectorId'|'VoiceConnectorGroupId'|'SipRuleId',
                        'AssociatedTimestamp': datetime(2015, 1, 1)
                    },
                ],
                'CallingName': 'string',
                'CallingNameStatus': 'Unassigned'|'UpdateInProgress'|'UpdateSucceeded'|'UpdateFailed',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'DeletionTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumber** *(dict) --* 

          The phone number details.

          
          

          - **PhoneNumberId** *(string) --* 

            The phone number ID.

            
          

          - **E164PhoneNumber** *(string) --* 

            The phone number, in E.164 format.

            
          

          - **Country** *(string) --* 

            The phone number country. Format: ISO 3166-1 alpha-2.

            
          

          - **Type** *(string) --* 

            The phone number type.

            
          

          - **ProductType** *(string) --* 

            The phone number product type.

            
          

          - **Status** *(string) --* 

            The phone number status.

            
          

          - **Capabilities** *(dict) --* 

            The phone number capabilities.

            
            

            - **InboundCall** *(boolean) --* 

              Allows or denies inbound calling for the specified phone number.

              
            

            - **OutboundCall** *(boolean) --* 

              Allows or denies outbound calling for the specified phone number.

              
            

            - **InboundSMS** *(boolean) --* 

              Allows or denies inbound SMS messaging for the specified phone number.

              
            

            - **OutboundSMS** *(boolean) --* 

              Allows or denies outbound SMS messaging for the specified phone number.

              
            

            - **InboundMMS** *(boolean) --* 

              Allows or denies inbound MMS messaging for the specified phone number.

              
            

            - **OutboundMMS** *(boolean) --* 

              Allows or denies outbound MMS messaging for the specified phone number.

              
        
          

          - **Associations** *(list) --* 

            The phone number associations.

            
            

            - *(dict) --* 

              The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

              
              

              - **Value** *(string) --* 

                Contains the ID for the entity specified in Name.

                
              

              - **Name** *(string) --* 

                Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

                
              

              - **AssociatedTimestamp** *(datetime) --* 

                The timestamp of the phone number association, in ISO 8601 format.

                
          
        
          

          - **CallingName** *(string) --* 

            The outbound calling name associated with the phone number.

            
          

          - **CallingNameStatus** *(string) --* 

            The outbound calling name status.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The phone number creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated phone number timestamp, in ISO 8601 format.

            
          

          - **DeletionTimestamp** *(datetime) --* 

            The deleted phone number timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_phone_number_order(**kwargs)

    

    Retrieves details for the specified phone number order, such as the order creation timestamp, phone numbers in E.164 format, product type, and order status.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetPhoneNumberOrder>`_    


    **Request Syntax** 
    ::

      response = client.get_phone_number_order(
          PhoneNumberOrderId='string'
      )
    :type PhoneNumberOrderId: string
    :param PhoneNumberOrderId: **[REQUIRED]** 

      The ID for the phone number order.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberOrder': {
                'PhoneNumberOrderId': 'string',
                'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                'Status': 'Processing'|'Successful'|'Failed'|'Partial',
                'OrderedPhoneNumbers': [
                    {
                        'E164PhoneNumber': 'string',
                        'Status': 'Processing'|'Acquired'|'Failed'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberOrder** *(dict) --* 

          The phone number order details.

          
          

          - **PhoneNumberOrderId** *(string) --* 

            The phone number order ID.

            
          

          - **ProductType** *(string) --* 

            The phone number order product type.

            
          

          - **Status** *(string) --* 

            The status of the phone number order.

            
          

          - **OrderedPhoneNumbers** *(list) --* 

            The ordered phone number details, such as the phone number in E.164 format and the phone number status.

            
            

            - *(dict) --* 

              A phone number for which an order has been placed.

              
              

              - **E164PhoneNumber** *(string) --* 

                The phone number, in E.164 format.

                
              

              - **Status** *(string) --* 

                The phone number status.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The phone number order creation time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated phone number order time stamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_phone_number_settings()

    

    Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetPhoneNumberSettings>`_    


    **Request Syntax** 

    ::

      response = client.get_phone_number_settings()
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'CallingName': 'string',
            'CallingNameUpdatedTimestamp': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **CallingName** *(string) --* 

          The default outbound calling name for the account.

          
        

        - **CallingNameUpdatedTimestamp** *(datetime) --* 

          The updated outbound calling name timestamp, in ISO 8601 format.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_proxy_session(**kwargs)

    

    Gets the specified proxy session details for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetProxySession>`_    


    **Request Syntax** 
    ::

      response = client.get_proxy_session(
          VoiceConnectorId='string',
          ProxySessionId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    :type ProxySessionId: string
    :param ProxySessionId: **[REQUIRED]** 

      The proxy session ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProxySession': {
                'VoiceConnectorId': 'string',
                'ProxySessionId': 'string',
                'Name': 'string',
                'Status': 'Open'|'InProgress'|'Closed',
                'ExpiryMinutes': 123,
                'Capabilities': [
                    'Voice'|'SMS',
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'EndedTimestamp': datetime(2015, 1, 1),
                'Participants': [
                    {
                        'PhoneNumber': 'string',
                        'ProxyPhoneNumber': 'string'
                    },
                ],
                'NumberSelectionBehavior': 'PreferSticky'|'AvoidSticky',
                'GeoMatchLevel': 'Country'|'AreaCode',
                'GeoMatchParams': {
                    'Country': 'string',
                    'AreaCode': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProxySession** *(dict) --* 

          The proxy session details.

          
          

          - **VoiceConnectorId** *(string) --* 

            The Amazon Chime voice connector ID.

            
          

          - **ProxySessionId** *(string) --* 

            The proxy session ID.

            
          

          - **Name** *(string) --* 

            The name of the proxy session.

            
          

          - **Status** *(string) --* 

            The status of the proxy session.

            
          

          - **ExpiryMinutes** *(integer) --* 

            The number of minutes allowed for the proxy session.

            
          

          - **Capabilities** *(list) --* 

            The proxy session capabilities.

            
            

            - *(string) --* 
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The created time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated time stamp, in ISO 8601 format.

            
          

          - **EndedTimestamp** *(datetime) --* 

            The ended time stamp, in ISO 8601 format.

            
          

          - **Participants** *(list) --* 

            The proxy session participants.

            
            

            - *(dict) --* 

              The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.

              
              

              - **PhoneNumber** *(string) --* 

                The participant's phone number.

                
              

              - **ProxyPhoneNumber** *(string) --* 

                The participant's proxy phone number.

                
          
        
          

          - **NumberSelectionBehavior** *(string) --* 

            The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.

            
          

          - **GeoMatchLevel** *(string) --* 

            The preference for matching the country or area code of the proxy phone number with that of the first participant.

            
          

          - **GeoMatchParams** *(dict) --* 

            The country and area code for the proxy phone number.

            
            

            - **Country** *(string) --* 

              The country.

              
            

            - **AreaCode** *(string) --* 

              The area code.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_retention_settings(**kwargs)

    

    Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see `Managing Chat Retention Policies <https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html>`__ in the *Amazon Chime Administration Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetRetentionSettings>`_    


    **Request Syntax** 
    ::

      response = client.get_retention_settings(
          AccountId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RetentionSettings': {
                'RoomRetentionSettings': {
                    'RetentionDays': 123
                },
                'ConversationRetentionSettings': {
                    'RetentionDays': 123
                }
            },
            'InitiateDeletionTimestamp': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RetentionSettings** *(dict) --* 

          The retention settings.

          
          

          - **RoomRetentionSettings** *(dict) --* 

            The chat room retention settings.

            
            

            - **RetentionDays** *(integer) --* 

              The number of days for which to retain chat-room messages.

              
        
          

          - **ConversationRetentionSettings** *(dict) --* 

            The chat conversation retention settings.

            
            

            - **RetentionDays** *(integer) --* 

              The number of days for which to retain conversation messages.

              
        
      
        

        - **InitiateDeletionTimestamp** *(datetime) --* 

          The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_room(**kwargs)

    

    Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetRoom>`_    


    **Request Syntax** 
    ::

      response = client.get_room(
          AccountId='string',
          RoomId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Room': {
                'RoomId': 'string',
                'Name': 'string',
                'AccountId': 'string',
                'CreatedBy': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Room** *(dict) --* 

          The room details.

          
          

          - **RoomId** *(string) --* 

            The room ID.

            
          

          - **Name** *(string) --* 

            The room name.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **CreatedBy** *(string) --* 

            The identifier of the room creator.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The room creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The room update timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_sip_media_application(**kwargs)

    

    Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetSipMediaApplication>`_    


    **Request Syntax** 
    ::

      response = client.get_sip_media_application(
          SipMediaApplicationId='string'
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The SIP media application ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplication': {
                'SipMediaApplicationId': 'string',
                'AwsRegion': 'string',
                'Name': 'string',
                'Endpoints': [
                    {
                        'LambdaArn': 'string'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplication** *(dict) --* 

          The SIP media application details.

          
          

          - **SipMediaApplicationId** *(string) --* 

            The SIP media application ID.

            
          

          - **AwsRegion** *(string) --* 

            The AWS Region in which the SIP media application is created.

            
          

          - **Name** *(string) --* 

            The name of the SIP media application.

            
          

          - **Endpoints** *(list) --* 

            List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted.

            
            

            - *(dict) --* 

              The endpoint assigned to the SIP media application.

              
              

              - **LambdaArn** *(string) --* 

                Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The SIP media application creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The SIP media application updated timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_sip_media_application_logging_configuration(**kwargs)

    

    Returns the logging configuration for the specified SIP media application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetSipMediaApplicationLoggingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_sip_media_application_logging_configuration(
          SipMediaApplicationId='string'
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The SIP media application ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplicationLoggingConfiguration': {
                'EnableSipMediaApplicationMessageLogs': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplicationLoggingConfiguration** *(dict) --* 

          The actual logging configuration.

          
          

          - **EnableSipMediaApplicationMessageLogs** *(boolean) --* 

            Enables application message logs for the SIP media application.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_sip_rule(**kwargs)

    

    Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetSipRule>`_    


    **Request Syntax** 
    ::

      response = client.get_sip_rule(
          SipRuleId='string'
      )
    :type SipRuleId: string
    :param SipRuleId: **[REQUIRED]** 

      The SIP rule ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipRule': {
                'SipRuleId': 'string',
                'Name': 'string',
                'Disabled': True|False,
                'TriggerType': 'ToPhoneNumber'|'RequestUriHostname',
                'TriggerValue': 'string',
                'TargetApplications': [
                    {
                        'SipMediaApplicationId': 'string',
                        'Priority': 123,
                        'AwsRegion': 'string'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipRule** *(dict) --* 

          The SIP rule details.

          
          

          - **SipRuleId** *(string) --* 

            The SIP rule ID.

            
          

          - **Name** *(string) --* 

            The name of the SIP rule.

            
          

          - **Disabled** *(boolean) --* 

            Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it.

            
          

          - **TriggerType** *(string) --* 

            The type of trigger assigned to the SIP rule in ``TriggerValue`` , currently ``RequestUriHostname`` or ``ToPhoneNumber`` .

            
          

          - **TriggerValue** *(string) --* 

            If ``TriggerType`` is ``RequestUriHostname`` , then the value can be the outbound host name of the Amazon Chime Voice Connector. If ``TriggerType`` is ``ToPhoneNumber`` , then the value can be a customer-owned phone number in E164 format. ``SipRule`` is triggered when a SIP rule requests host name or ``ToPhoneNumber`` matches in the incoming SIP request.

            
          

          - **TargetApplications** *(list) --* 

            Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

            
            

            - *(dict) --* 

              Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

              
              

              - **SipMediaApplicationId** *(string) --* 

                The SIP media application ID.

                
              

              - **Priority** *(integer) --* 

                Priority of the SIP media application in the target list.

                
              

              - **AwsRegion** *(string) --* 

                The AWS Region of the target application.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the SIP rule was created, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The time at which the SIP rule was last updated, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_user(**kwargs)

    

    Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN.

     

    To retrieve user details with an email address instead of a user ID, use the  ListUsers action, and then filter by email address. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetUser>`_    


    **Request Syntax** 
    ::

      response = client.get_user(
          AccountId='string',
          UserId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'User': {
                'UserId': 'string',
                'AccountId': 'string',
                'PrimaryEmail': 'string',
                'PrimaryProvisionedNumber': 'string',
                'DisplayName': 'string',
                'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'UserType': 'PrivateUser'|'SharedDevice',
                'UserRegistrationStatus': 'Unregistered'|'Registered'|'Suspended',
                'UserInvitationStatus': 'Pending'|'Accepted'|'Failed',
                'RegisteredOn': datetime(2015, 1, 1),
                'InvitedOn': datetime(2015, 1, 1),
                'AlexaForBusinessMetadata': {
                    'IsAlexaForBusinessEnabled': True|False,
                    'AlexaForBusinessRoomArn': 'string'
                },
                'PersonalPIN': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **User** *(dict) --* 

          The user details.

          
          

          - **UserId** *(string) --* 

            The user ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **PrimaryEmail** *(string) --* 

            The primary email address of the user.

            
          

          - **PrimaryProvisionedNumber** *(string) --* 

            The primary phone number associated with the user.

            
          

          - **DisplayName** *(string) --* 

            The display name of the user.

            
          

          - **LicenseType** *(string) --* 

            The license type for the user.

            
          

          - **UserType** *(string) --* 

            The user type.

            
          

          - **UserRegistrationStatus** *(string) --* 

            The user registration status.

            
          

          - **UserInvitationStatus** *(string) --* 

            The user invite status.

            
          

          - **RegisteredOn** *(datetime) --* 

            Date and time when the user is registered, in ISO 8601 format.

            
          

          - **InvitedOn** *(datetime) --* 

            Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.

            
          

          - **AlexaForBusinessMetadata** *(dict) --* 

            The Alexa for Business metadata.

            
            

            - **IsAlexaForBusinessEnabled** *(boolean) --* 

              Starts or stops Alexa for Business.

              
            

            - **AlexaForBusinessRoomArn** *(string) --* 

              The ARN of the room resource.

              
        
          

          - **PersonalPIN** *(string) --* 

            The user's personal meeting PIN.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_user_settings(**kwargs)

    

    Retrieves settings for the specified user ID, such as any associated phone number settings.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetUserSettings>`_    


    **Request Syntax** 
    ::

      response = client.get_user_settings(
          AccountId='string',
          UserId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'UserSettings': {
                'Telephony': {
                    'InboundCalling': True|False,
                    'OutboundCalling': True|False,
                    'SMS': True|False
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **UserSettings** *(dict) --* 

          The user settings.

          
          

          - **Telephony** *(dict) --* 

            The telephony settings associated with the user.

            
            

            - **InboundCalling** *(boolean) --* 

              Allows or denies inbound calling.

              
            

            - **OutboundCalling** *(boolean) --* 

              Allows or denies outbound calling.

              
            

            - **SMS** *(boolean) --* 

              Allows or denies SMS messaging.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector(**kwargs)

    

    Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnector>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnector': {
                'VoiceConnectorId': 'string',
                'AwsRegion': 'us-east-1'|'us-west-2',
                'Name': 'string',
                'OutboundHostName': 'string',
                'RequireEncryption': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnector** *(dict) --* 

          The Amazon Chime Voice Connector details.

          
          

          - **VoiceConnectorId** *(string) --* 

            The Amazon Chime Voice Connector ID.

            
          

          - **AwsRegion** *(string) --* 

            The AWS Region in which the Amazon Chime Voice Connector is created. Default: ``us-east-1`` . 

            
          

          - **Name** *(string) --* 

            The name of the Amazon Chime Voice Connector.

            
          

          - **OutboundHostName** *(string) --* 

            The outbound host name for the Amazon Chime Voice Connector.

            
          

          - **RequireEncryption** *(boolean) --* 

            Designates whether encryption is required for the Amazon Chime Voice Connector.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_emergency_calling_configuration(**kwargs)

    

    Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorEmergencyCallingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_emergency_calling_configuration(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EmergencyCallingConfiguration': {
                'DNIS': [
                    {
                        'EmergencyPhoneNumber': 'string',
                        'TestPhoneNumber': 'string',
                        'CallingCountry': 'string'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EmergencyCallingConfiguration** *(dict) --* 

          The emergency calling configuration details.

          
          

          - **DNIS** *(list) --* 

            The Dialed Number Identification Service (DNIS) emergency calling configuration details.

            
            

            - *(dict) --* 

              The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.

              
              

              - **EmergencyPhoneNumber** *(string) --* 

                The DNIS phone number to route emergency calls to, in E.164 format.

                
              

              - **TestPhoneNumber** *(string) --* 

                The DNIS phone number to route test emergency calls to, in E.164 format.

                
              

              - **CallingCountry** *(string) --* 

                The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_group(**kwargs)

    

    Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated ``VoiceConnectorItems`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorGroup>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_group(
          VoiceConnectorGroupId='string'
      )
    :type VoiceConnectorGroupId: string
    :param VoiceConnectorGroupId: **[REQUIRED]** 

      The Amazon Chime Voice Connector group ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnectorGroup': {
                'VoiceConnectorGroupId': 'string',
                'Name': 'string',
                'VoiceConnectorItems': [
                    {
                        'VoiceConnectorId': 'string',
                        'Priority': 123
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnectorGroup** *(dict) --* 

          The Amazon Chime Voice Connector group details.

          
          

          - **VoiceConnectorGroupId** *(string) --* 

            The Amazon Chime Voice Connector group ID.

            
          

          - **Name** *(string) --* 

            The name of the Amazon Chime Voice Connector group.

            
          

          - **VoiceConnectorItems** *(list) --* 

            The Amazon Chime Voice Connectors to which to route inbound calls.

            
            

            - *(dict) --* 

              For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 ``VoiceConnectorItems`` per Amazon Chime Voice Connector group.

              
              

              - **VoiceConnectorId** *(string) --* 

                The Amazon Chime Voice Connector ID.

                
              

              - **Priority** *(integer) --* 

                The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_logging_configuration(**kwargs)

    

    Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorLoggingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_logging_configuration(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'LoggingConfiguration': {
                'EnableSIPLogs': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **LoggingConfiguration** *(dict) --* 

          The logging configuration details.

          
          

          - **EnableSIPLogs** *(boolean) --* 

            When true, enables SIP message logs for sending to Amazon CloudWatch Logs.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_origination(**kwargs)

    

    Retrieves origination setting details for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorOrigination>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_origination(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Origination': {
                'Routes': [
                    {
                        'Host': 'string',
                        'Port': 123,
                        'Protocol': 'TCP'|'UDP',
                        'Priority': 123,
                        'Weight': 123
                    },
                ],
                'Disabled': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Origination** *(dict) --* 

          The origination setting details.

          
          

          - **Routes** *(list) --* 

            The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20.

            
            

            - *(dict) --* 

              Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector.

              
              

              - **Host** *(string) --* 

                The FQDN or IP address to contact for origination traffic.

                
              

              - **Port** *(integer) --* 

                The designated origination route port. Defaults to 5060.

                
              

              - **Protocol** *(string) --* 

                The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.

                
              

              - **Priority** *(integer) --* 

                The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.

                
              

              - **Weight** *(integer) --* 

                The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.

                
          
        
          

          - **Disabled** *(boolean) --* 

            When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_proxy(**kwargs)

    

    Gets the proxy configuration details for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorProxy>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_proxy(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Proxy': {
                'DefaultSessionExpiryMinutes': 123,
                'Disabled': True|False,
                'FallBackPhoneNumber': 'string',
                'PhoneNumberCountries': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Proxy** *(dict) --* 

          The proxy configuration details.

          
          

          - **DefaultSessionExpiryMinutes** *(integer) --* 

            The default number of minutes allowed for proxy sessions.

            
          

          - **Disabled** *(boolean) --* 

            When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.

            
          

          - **FallBackPhoneNumber** *(string) --* 

            The phone number to route calls to after a proxy session expires.

            
          

          - **PhoneNumberCountries** *(list) --* 

            The countries for proxy phone numbers to be selected from.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_streaming_configuration(**kwargs)

    

    Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector. Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows the retention period, in hours, for the Amazon Kinesis data.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorStreamingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_streaming_configuration(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'StreamingConfiguration': {
                'DataRetentionInHours': 123,
                'Disabled': True|False,
                'StreamingNotificationTargets': [
                    {
                        'NotificationTarget': 'EventBridge'|'SNS'|'SQS'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **StreamingConfiguration** *(dict) --* 

          The streaming configuration details.

          
          

          - **DataRetentionInHours** *(integer) --* 

            The retention period, in hours, for the Amazon Kinesis data.

            
          

          - **Disabled** *(boolean) --* 

            When true, media streaming to Amazon Kinesis is turned off.

            
          

          - **StreamingNotificationTargets** *(list) --* 

            The streaming notification targets.

            
            

            - *(dict) --* 

              The targeted recipient for a streaming configuration notification.

              
              

              - **NotificationTarget** *(string) --* 

                The streaming notification target.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_termination(**kwargs)

    

    Retrieves termination setting details for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorTermination>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_termination(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Termination': {
                'CpsLimit': 123,
                'DefaultPhoneNumber': 'string',
                'CallingRegions': [
                    'string',
                ],
                'CidrAllowedList': [
                    'string',
                ],
                'Disabled': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Termination** *(dict) --* 

          The termination setting details.

          
          

          - **CpsLimit** *(integer) --* 

            The limit on calls per second. Max value based on account service quota. Default value of 1.

            
          

          - **DefaultPhoneNumber** *(string) --* 

            The default caller ID phone number.

            
          

          - **CallingRegions** *(list) --* 

            The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required.

            
            

            - *(string) --* 
        
          

          - **CidrAllowedList** *(list) --* 

            The IP addresses allowed to make calls, in CIDR format. Required.

            
            

            - *(string) --* 
        
          

          - **Disabled** *(boolean) --* 

            When termination settings are disabled, outbound calls can not be made.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_voice_connector_termination_health(**kwargs)

    

    Retrieves information about the last time a SIP ``OPTIONS`` ping was received from your SIP infrastructure for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/GetVoiceConnectorTerminationHealth>`_    


    **Request Syntax** 
    ::

      response = client.get_voice_connector_termination_health(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'TerminationHealth': {
                'Timestamp': datetime(2015, 1, 1),
                'Source': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **TerminationHealth** *(dict) --* 

          The termination health details.

          
          

          - **Timestamp** *(datetime) --* 

            The timestamp, in ISO 8601 format.

            
          

          - **Source** *(string) --* 

            The source IP address.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: invite_users(**kwargs)

    

    Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime ``Team`` account. Only ``Team`` account types are currently supported for this action.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/InviteUsers>`_    


    **Request Syntax** 
    ::

      response = client.invite_users(
          AccountId='string',
          UserEmailList=[
              'string',
          ],
          UserType='PrivateUser'|'SharedDevice'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserEmailList: list
    :param UserEmailList: **[REQUIRED]** 

      The user email addresses to which to send the email invitation.

      

    
      - *(string) --* 

      
  
    :type UserType: string
    :param UserType: 

      The user type.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Invites': [
                {
                    'InviteId': 'string',
                    'Status': 'Pending'|'Accepted'|'Failed',
                    'EmailAddress': 'string',
                    'EmailStatus': 'NotSent'|'Sent'|'Failed'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Invites** *(list) --* 

          The email invitation details.

          
          

          - *(dict) --* 

            Invitation object returned after emailing users to invite them to join the Amazon Chime ``Team`` account.

            
            

            - **InviteId** *(string) --* 

              The invite ID.

              
            

            - **Status** *(string) --* 

              The status of the invite.

              
            

            - **EmailAddress** *(string) --* 

              The email address to which the invite is sent.

              
            

            - **EmailStatus** *(string) --* 

              The status of the invite email.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_accounts(**kwargs)

    

    Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user's email address, which returns one account result.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAccounts>`_    


    **Request Syntax** 
    ::

      response = client.list_accounts(
          Name='string',
          UserEmail='string',
          NextToken='string',
          MaxResults=123
      )
    :type Name: string
    :param Name: 

      Amazon Chime account name prefix with which to filter results.

      

    
    :type UserEmail: string
    :param UserEmail: 

      User email address with which to filter results.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call. Defaults to 100.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Accounts': [
                {
                    'AwsAccountId': 'string',
                    'AccountId': 'string',
                    'Name': 'string',
                    'AccountType': 'Team'|'EnterpriseDirectory'|'EnterpriseLWA'|'EnterpriseOIDC',
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'DefaultLicense': 'Basic'|'Plus'|'Pro'|'ProTrial',
                    'SupportedLicenses': [
                        'Basic'|'Plus'|'Pro'|'ProTrial',
                    ],
                    'AccountStatus': 'Suspended'|'Active',
                    'SigninDelegateGroups': [
                        {
                            'GroupName': 'string'
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Accounts** *(list) --* 

          List of Amazon Chime accounts and account details.

          
          

          - *(dict) --* 

            The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.

            
            

            - **AwsAccountId** *(string) --* 

              The AWS account ID.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
            

            - **Name** *(string) --* 

              The Amazon Chime account name.

              
            

            - **AccountType** *(string) --* 

              The Amazon Chime account type. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The Amazon Chime account creation timestamp, in ISO 8601 format.

              
            

            - **DefaultLicense** *(string) --* 

              The default license for the Amazon Chime account.

              
            

            - **SupportedLicenses** *(list) --* 

              Supported licenses for the Amazon Chime account.

              
              

              - *(string) --* 
          
            

            - **AccountStatus** *(string) --* 

              The status of the account, ``Suspended`` or ``Active`` .

              
            

            - **SigninDelegateGroups** *(list) --* 

              The sign-in delegate groups associated with the account.

              
              

              - *(dict) --* 

                An Active Directory (AD) group whose members are granted permission to act as delegates.

                
                

                - **GroupName** *(string) --* 

                  The group name.

                  
            
          
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_app_instance_admins(**kwargs)

    

    Returns a list of the administrators in the ``AppInstance`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAppInstanceAdmins>`_    


    **Request Syntax** 
    ::

      response = client.list_app_instance_admins(
          AppInstanceArn='string',
          MaxResults=123,
          NextToken='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of administrators that you want to return.

      

    
    :type NextToken: string
    :param NextToken: 

      The token returned from previous API requests until the number of administrators is reached.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceArn': 'string',
            'AppInstanceAdmins': [
                {
                    'Admin': {
                        'Arn': 'string',
                        'Name': 'string'
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceArn** *(string) --* 

          The ARN of the ``AppInstance`` .

          
        

        - **AppInstanceAdmins** *(list) --* 

          The information for each administrator.

          
          

          - *(dict) --* 

            Summary of the details of an ``AppInstanceAdmin`` .

            
            

            - **Admin** *(dict) --* 

              The details of the ``AppInstanceAdmin`` .

              
              

              - **Arn** *(string) --* 

                The ARN in an Identity.

                
              

              - **Name** *(string) --* 

                The name in an Identity.

                
          
        
      
        

        - **NextToken** *(string) --* 

          The token returned from previous API requests until the number of administrators is reached.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_app_instance_users(**kwargs)

    

    List all ``AppInstanceUsers`` created under a single ``AppInstance`` . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAppInstanceUsers>`_    


    **Request Syntax** 
    ::

      response = client.list_app_instance_users(
          AppInstanceArn='string',
          MaxResults=123,
          NextToken='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of requests that you want returned.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API calls until all requested users are returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceArn': 'string',
            'AppInstanceUsers': [
                {
                    'AppInstanceUserArn': 'string',
                    'Name': 'string',
                    'Metadata': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceArn** *(string) --* 

          The ARN of the ``AppInstance`` .

          
        

        - **AppInstanceUsers** *(list) --* 

          The information for each requested ``AppInstanceUser`` .

          
          

          - *(dict) --* 

            Summary of the details of an ``AppInstanceUser`` .

            
            

            - **AppInstanceUserArn** *(string) --* 

              The ARN of the ``AppInstanceUser`` .

              
            

            - **Name** *(string) --* 

              The name of an ``AppInstanceUser`` .

              
            

            - **Metadata** *(string) --* 

              The metadata of the ``AppInstanceUser`` .

              
        
      
        

        - **NextToken** *(string) --* 

          The token passed by previous API calls until all requested users are returned.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_app_instances(**kwargs)

    

    Lists all Amazon Chime ``AppInstance`` s created under a single AWS account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAppInstances>`_    


    **Request Syntax** 
    ::

      response = client.list_app_instances(
          MaxResults=123,
          NextToken='string'
      )
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of ``AppInstance`` s that you want to return.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API requests until you reach the maximum number of ``AppInstance`` s.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstances': [
                {
                    'AppInstanceArn': 'string',
                    'Name': 'string',
                    'Metadata': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstances** *(list) --* 

          The information for each ``AppInstance`` .

          
          

          - *(dict) --* 

            Summary of the data for an ``AppInstance`` .

            
            

            - **AppInstanceArn** *(string) --* 

              The ``AppInstance`` ARN.

              
            

            - **Name** *(string) --* 

              The name of the ``AppInstance`` .

              
            

            - **Metadata** *(string) --* 

              The metadata of the ``AppInstance`` .

              
        
      
        

        - **NextToken** *(string) --* 

          The token passed by previous API requests until the maximum number of ``AppInstance`` s is reached.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_attendee_tags(**kwargs)

    

    Lists the tags applied to an Amazon Chime SDK attendee resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAttendeeTags>`_    


    **Request Syntax** 
    ::

      response = client.list_attendee_tags(
          MeetingId='string',
          AttendeeId='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type AttendeeId: string
    :param AttendeeId: **[REQUIRED]** 

      The Amazon Chime SDK attendee ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Tags** *(list) --* 

          A list of tag key-value pairs.

          
          

          - *(dict) --* 

            Describes a tag applied to a resource.

            
            

            - **Key** *(string) --* 

              The key of the tag.

              
            

            - **Value** *(string) --* 

              The value of the tag.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_attendees(**kwargs)

    

    Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAttendees>`_    


    **Request Syntax** 
    ::

      response = client.list_attendees(
          MeetingId='string',
          NextToken='string',
          MaxResults=123
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Attendees': [
                {
                    'ExternalUserId': 'string',
                    'AttendeeId': 'string',
                    'JoinToken': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Attendees** *(list) --* 

          The Amazon Chime SDK attendee information.

          
          

          - *(dict) --* 

            An Amazon Chime SDK meeting attendee. Includes a unique ``AttendeeId`` and ``JoinToken`` . The ``JoinToken`` allows a client to authenticate and join as the specified attendee. The ``JoinToken`` expires when the meeting ends or when  DeleteAttendee is called. After that, the attendee is unable to join the meeting. 

             

            We recommend securely transferring each ``JoinToken`` from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.

            
            

            - **ExternalUserId** *(string) --* 

              The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.

              
            

            - **AttendeeId** *(string) --* 

              The Amazon Chime SDK attendee ID.

              
            

            - **JoinToken** *(string) --* 

              The join token used by the Amazon Chime SDK attendee.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_bots(**kwargs)

    

    Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListBots>`_    


    **Request Syntax** 
    ::

      response = client.list_bots(
          AccountId='string',
          MaxResults=123,
          NextToken='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call. The default is 10.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Bots': [
                {
                    'BotId': 'string',
                    'UserId': 'string',
                    'DisplayName': 'string',
                    'BotType': 'ChatBot',
                    'Disabled': True|False,
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1),
                    'BotEmail': 'string',
                    'SecurityToken': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Bots** *(list) --* 

          List of bots and bot details.

          
          

          - *(dict) --* 

            A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.

            
            

            - **BotId** *(string) --* 

              The bot ID.

              
            

            - **UserId** *(string) --* 

              The unique ID for the bot user.

              
            

            - **DisplayName** *(string) --* 

              The bot display name.

              
            

            - **BotType** *(string) --* 

              The bot type.

              
            

            - **Disabled** *(boolean) --* 

              When true, the bot is stopped from running in your account.

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The bot creation timestamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The updated bot timestamp, in ISO 8601 format.

              
            

            - **BotEmail** *(string) --* 

              The bot email address.

              
            

            - **SecurityToken** *(string) --* 

              The security token used to authenticate Amazon Chime with the outgoing event endpoint.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    

  .. py:method:: list_channel_bans(**kwargs)

    

    Lists all the users banned from a particular channel.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannelBans>`_    


    **Request Syntax** 
    ::

      response = client.list_channel_bans(
          ChannelArn='string',
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of bans that you want returned.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API calls until all requested bans are returned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'NextToken': 'string',
            'ChannelBans': [
                {
                    'Member': {
                        'Arn': 'string',
                        'Name': 'string'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **NextToken** *(string) --* 

          The token passed by previous API calls until all requested bans are returned.

          
        

        - **ChannelBans** *(list) --* 

          The information for each requested ban.

          
          

          - *(dict) --* 

            Summary of the details of a ``ChannelBan`` .

            
            

            - **Member** *(dict) --* 

              The member being banned from a channel.

              
              

              - **Arn** *(string) --* 

                The ARN in an Identity.

                
              

              - **Name** *(string) --* 

                The name in an Identity.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_channel_memberships(**kwargs)

    

    Lists all channel memberships in a channel.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannelMemberships>`_    


    **Request Syntax** 
    ::

      response = client.list_channel_memberships(
          ChannelArn='string',
          Type='DEFAULT'|'HIDDEN',
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The maximum number of channel memberships that you want returned.

      

    
    :type Type: string
    :param Type: 

      The membership type of a user, ``DEFAULT`` or ``HIDDEN`` . Default members are always returned as part of ``ListChannelMemberships`` . Hidden members are only returned if the type filter in ``ListChannelMemberships`` equals ``HIDDEN`` . Otherwise hidden members are not returned.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of channel memberships that you want returned.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API calls until all requested channel memberships are returned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'ChannelMemberships': [
                {
                    'Member': {
                        'Arn': 'string',
                        'Name': 'string'
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **ChannelMemberships** *(list) --* 

          The information for the requested channel memberships.

          
          

          - *(dict) --* 

            Summary of the details of a ``ChannelMembership`` .

            
            

            - **Member** *(dict) --* 

              A member's summary data.

              
              

              - **Arn** *(string) --* 

                The ARN in an Identity.

                
              

              - **Name** *(string) --* 

                The name in an Identity.

                
          
        
      
        

        - **NextToken** *(string) --* 

          The token passed by previous API calls until all requested channel memberships are returned.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_channel_memberships_for_app_instance_user(**kwargs)

    

    Lists all channels that a particular ``AppInstanceUser`` is a part of. Only an ``AppInstanceAdmin`` can call the API with a user ARN that is not their own. 

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannelMembershipsForAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.list_channel_memberships_for_app_instance_user(
          AppInstanceUserArn='string',
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: 

      The ARN of the ``AppInstanceUser`` s

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of users that you want returned.

      

    
    :type NextToken: string
    :param NextToken: 

      The token returned from previous API requests until the number of channel memberships is reached.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelMemberships': [
                {
                    'ChannelSummary': {
                        'Name': 'string',
                        'ChannelArn': 'string',
                        'Mode': 'UNRESTRICTED'|'RESTRICTED',
                        'Privacy': 'PUBLIC'|'PRIVATE',
                        'Metadata': 'string',
                        'LastMessageTimestamp': datetime(2015, 1, 1)
                    },
                    'AppInstanceUserMembershipSummary': {
                        'Type': 'DEFAULT'|'HIDDEN',
                        'ReadMarkerTimestamp': datetime(2015, 1, 1)
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelMemberships** *(list) --* 

          The token passed by previous API calls until all requested users are returned.

          
          

          - *(dict) --* 

            Summary of the channel membership details of an ``AppInstanceUser`` .

            
            

            - **ChannelSummary** *(dict) --* 

              Summary of the details of a ``Channel`` .

              
              

              - **Name** *(string) --* 

                The name of the channel.

                
              

              - **ChannelArn** *(string) --* 

                The ARN of the channel.

                
              

              - **Mode** *(string) --* 

                The mode of the channel.

                
              

              - **Privacy** *(string) --* 

                The privacy setting of the channel.

                
              

              - **Metadata** *(string) --* 

                The metadata of the channel.

                
              

              - **LastMessageTimestamp** *(datetime) --* 

                The time at which the last message in a channel was sent.

                
          
            

            - **AppInstanceUserMembershipSummary** *(dict) --* 

              Returns the channel membership data for an ``AppInstance`` .

              
              

              - **Type** *(string) --* 

                The type of ``ChannelMembership`` .

                
              

              - **ReadMarkerTimestamp** *(datetime) --* 

                The time at which a message was last read.

                
          
        
      
        

        - **NextToken** *(string) --* 

          The token passed by previous API calls until all requested users are returned.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_channel_messages(**kwargs)

    

    List all the messages in a channel. Returns a paginated list of ``ChannelMessages`` . By default, sorted by creation timestamp in descending order.

     

    .. note::

       

      Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.

       

      Also, the x-amz-chime-bearer request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannelMessages>`_    


    **Request Syntax** 
    ::

      response = client.list_channel_messages(
          ChannelArn='string',
          SortOrder='ASCENDING'|'DESCENDING',
          NotBefore=datetime(2015, 1, 1),
          NotAfter=datetime(2015, 1, 1),
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type SortOrder: string
    :param SortOrder: 

      The order in which you want messages sorted. Default is Descending, based on time created.

      

    
    :type NotBefore: datetime
    :param NotBefore: 

      The initial or starting time stamp for your requested messages.

      

    
    :type NotAfter: datetime
    :param NotAfter: 

      The final or ending time stamp for your requested messages.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of messages that you want returned.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API calls until all requested messages are returned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'NextToken': 'string',
            'ChannelMessages': [
                {
                    'MessageId': 'string',
                    'Content': 'string',
                    'Metadata': 'string',
                    'Type': 'STANDARD'|'CONTROL',
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'LastUpdatedTimestamp': datetime(2015, 1, 1),
                    'LastEditedTimestamp': datetime(2015, 1, 1),
                    'Sender': {
                        'Arn': 'string',
                        'Name': 'string'
                    },
                    'Redacted': True|False
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel containing the requested messages.

          
        

        - **NextToken** *(string) --* 

          The token passed by previous API calls until all requested messages are returned.

          
        

        - **ChannelMessages** *(list) --* 

          The information about, and content of, each requested message.

          
          

          - *(dict) --* 

            Summary of the messages in a ``Channel`` .

            
            

            - **MessageId** *(string) --* 

              The ID of the message.

              
            

            - **Content** *(string) --* 

              The content of the message.

              
            

            - **Metadata** *(string) --* 

              The metadata of the message.

              
            

            - **Type** *(string) --* 

              The type of message.

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The time at which the message summary was created.

              
            

            - **LastUpdatedTimestamp** *(datetime) --* 

              The time at which a message was last updated.

              
            

            - **LastEditedTimestamp** *(datetime) --* 

              The time at which a message was last edited.

              
            

            - **Sender** *(dict) --* 

              The message sender.

              
              

              - **Arn** *(string) --* 

                The ARN in an Identity.

                
              

              - **Name** *(string) --* 

                The name in an Identity.

                
          
            

            - **Redacted** *(boolean) --* 

              Indicates whether a message was redacted.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_channel_moderators(**kwargs)

    

    Lists all the moderators for a channel.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannelModerators>`_    


    **Request Syntax** 
    ::

      response = client.list_channel_moderators(
          ChannelArn='string',
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of moderators that you want returned.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API calls until all requested moderators are returned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'NextToken': 'string',
            'ChannelModerators': [
                {
                    'Moderator': {
                        'Arn': 'string',
                        'Name': 'string'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **NextToken** *(string) --* 

          The token passed by previous API calls until all requested moderators are returned.

          
        

        - **ChannelModerators** *(list) --* 

          The information about and names of each moderator.

          
          

          - *(dict) --* 

            Summary of the details of a ``ChannelModerator`` .

            
            

            - **Moderator** *(dict) --* 

              The data for a moderator.

              
              

              - **Arn** *(string) --* 

                The ARN in an Identity.

                
              

              - **Name** *(string) --* 

                The name in an Identity.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_channels(**kwargs)

    

    Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.

     

     **Functionality & restrictions**  

     

     
    * Use privacy = ``PUBLIC`` to retrieve all public channels in the account. 
     
    * Only an ``AppInstanceAdmin`` can set privacy = ``PRIVATE`` to list the private channels in an account. 
     

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannels>`_    


    **Request Syntax** 
    ::

      response = client.list_channels(
          AppInstanceArn='string',
          Privacy='PUBLIC'|'PRIVATE',
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    :type Privacy: string
    :param Privacy: 

      The privacy setting. ``PUBLIC`` retrieves all the public channels. ``PRIVATE`` retrieves private channels. Only an ``AppInstanceAdmin`` can retrieve private channels. 

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of channels that you want to return.

      

    
    :type NextToken: string
    :param NextToken: 

      The token passed by previous API calls until all requested channels are returned.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Channels': [
                {
                    'Name': 'string',
                    'ChannelArn': 'string',
                    'Mode': 'UNRESTRICTED'|'RESTRICTED',
                    'Privacy': 'PUBLIC'|'PRIVATE',
                    'Metadata': 'string',
                    'LastMessageTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Channels** *(list) --* 

          The information about each channel.

          
          

          - *(dict) --* 

            Summary of the details of a ``Channel`` .

            
            

            - **Name** *(string) --* 

              The name of the channel.

              
            

            - **ChannelArn** *(string) --* 

              The ARN of the channel.

              
            

            - **Mode** *(string) --* 

              The mode of the channel.

              
            

            - **Privacy** *(string) --* 

              The privacy setting of the channel.

              
            

            - **Metadata** *(string) --* 

              The metadata of the channel.

              
            

            - **LastMessageTimestamp** *(datetime) --* 

              The time at which the last message in a channel was sent.

              
        
      
        

        - **NextToken** *(string) --* 

          The token returned from previous API requests until the number of channels is reached.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_channels_moderated_by_app_instance_user(**kwargs)

    

    A list of the channels moderated by an ``AppInstanceUser`` .

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListChannelsModeratedByAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.list_channels_moderated_by_app_instance_user(
          AppInstanceUserArn='string',
          MaxResults=123,
          NextToken='string',
          ChimeBearer='string'
      )
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: 

      The ARN of the user in the moderated channel.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of channels in the request.

      

    
    :type NextToken: string
    :param NextToken: 

      The token returned from previous API requests until the number of channels moderated by the user is reached.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Channels': [
                {
                    'ChannelSummary': {
                        'Name': 'string',
                        'ChannelArn': 'string',
                        'Mode': 'UNRESTRICTED'|'RESTRICTED',
                        'Privacy': 'PUBLIC'|'PRIVATE',
                        'Metadata': 'string',
                        'LastMessageTimestamp': datetime(2015, 1, 1)
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Channels** *(list) --* 

          The moderated channels in the request.

          
          

          - *(dict) --* 

            Summary of the details of a moderated channel.

            
            

            - **ChannelSummary** *(dict) --* 

              Summary of the details of a ``Channel`` .

              
              

              - **Name** *(string) --* 

                The name of the channel.

                
              

              - **ChannelArn** *(string) --* 

                The ARN of the channel.

                
              

              - **Mode** *(string) --* 

                The mode of the channel.

                
              

              - **Privacy** *(string) --* 

                The privacy setting of the channel.

                
              

              - **Metadata** *(string) --* 

                The metadata of the channel.

                
              

              - **LastMessageTimestamp** *(datetime) --* 

                The time at which the last message in a channel was sent.

                
          
        
      
        

        - **NextToken** *(string) --* 

          The token returned from previous API requests until the number of channels moderated by the user is reached.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_media_capture_pipelines(**kwargs)

    

    Returns a list of media capture pipelines.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListMediaCapturePipelines>`_    


    **Request Syntax** 
    ::

      response = client.list_media_capture_pipelines(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The token used to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call. Valid Range: 1 - 99.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'MediaCapturePipelines': [
                {
                    'MediaPipelineId': 'string',
                    'SourceType': 'ChimeSdkMeeting',
                    'SourceArn': 'string',
                    'Status': 'Initializing'|'InProgress'|'Failed'|'Stopping'|'Stopped',
                    'SinkType': 'S3Bucket',
                    'SinkArn': 'string',
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **MediaCapturePipelines** *(list) --* 

          The media capture pipeline objects in the list.

          
          

          - *(dict) --* 

            A media capture pipeline object. A string consisting of an ID, source type, a source ARN, a sink type, and a sink ARN.

            
            

            - **MediaPipelineId** *(string) --* 

              The ID of a media capture pipeline.

              
            

            - **SourceType** *(string) --* 

              Source type from which media artifacts are saved. You must use ``ChimeMeeting`` .

              
            

            - **SourceArn** *(string) --* 

              ARN of the source from which the media artifacts will be saved.

              
            

            - **Status** *(string) --* 

              The status of the media capture pipeline.

              
            

            - **SinkType** *(string) --* 

              Destination type to which the media artifacts are saved. You must use an S3 Bucket.

              
            

            - **SinkArn** *(string) --* 

              ARN of the destination to which the media artifacts are saved.

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The time at which the capture pipeline was created, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The time at which the capture pipeline was updated, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token used to retrieve the next page of results. 

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_meeting_tags(**kwargs)

    

    Lists the tags applied to an Amazon Chime SDK meeting resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListMeetingTags>`_    


    **Request Syntax** 
    ::

      response = client.list_meeting_tags(
          MeetingId='string'
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Tags** *(list) --* 

          A list of tag key-value pairs.

          
          

          - *(dict) --* 

            Describes a tag applied to a resource.

            
            

            - **Key** *(string) --* 

              The key of the tag.

              
            

            - **Value** *(string) --* 

              The value of the tag.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_meetings(**kwargs)

    

    Lists up to 100 active Amazon Chime SDK meetings. For more information about the Amazon Chime SDK, see `Using the Amazon Chime SDK <https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html>`__ in the *Amazon Chime Developer Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListMeetings>`_    


    **Request Syntax** 
    ::

      response = client.list_meetings(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Meetings': [
                {
                    'MeetingId': 'string',
                    'ExternalMeetingId': 'string',
                    'MediaPlacement': {
                        'AudioHostUrl': 'string',
                        'AudioFallbackUrl': 'string',
                        'ScreenDataUrl': 'string',
                        'ScreenSharingUrl': 'string',
                        'ScreenViewingUrl': 'string',
                        'SignalingUrl': 'string',
                        'TurnControlUrl': 'string',
                        'EventIngestionUrl': 'string'
                    },
                    'MediaRegion': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Meetings** *(list) --* 

          The Amazon Chime SDK meeting information.

          
          

          - *(dict) --* 

            A meeting created using the Amazon Chime SDK.

            
            

            - **MeetingId** *(string) --* 

              The Amazon Chime SDK meeting ID.

              
            

            - **ExternalMeetingId** *(string) --* 

              The external meeting ID.

              
            

            - **MediaPlacement** *(dict) --* 

              The media placement for the meeting.

              
              

              - **AudioHostUrl** *(string) --* 

                The audio host URL.

                
              

              - **AudioFallbackUrl** *(string) --* 

                The audio fallback URL.

                
              

              - **ScreenDataUrl** *(string) --* 

                The screen data URL.

                
              

              - **ScreenSharingUrl** *(string) --* 

                The screen sharing URL.

                
              

              - **ScreenViewingUrl** *(string) --* 

                The screen viewing URL.

                
              

              - **SignalingUrl** *(string) --* 

                The signaling URL.

                
              

              - **TurnControlUrl** *(string) --* 

                The turn control URL.

                
              

              - **EventIngestionUrl** *(string) --* 

                The event ingestion URL.

                
          
            

            - **MediaRegion** *(string) --* 

              The Region in which you create the meeting. Available values: ``af-south-1`` , ``ap-northeast-1`` , ``ap-northeast-2`` , ``ap-south-1`` , ``ap-southeast-1`` , ``ap-southeast-2`` , ``ca-central-1`` , ``eu-central-1`` , ``eu-north-1`` , ``eu-south-1`` , ``eu-west-1`` , ``eu-west-2`` , ``eu-west-3`` , ``sa-east-1`` , ``us-east-1`` , ``us-east-2`` , ``us-west-1`` , ``us-west-2`` .

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_phone_number_orders(**kwargs)

    

    Lists the phone number orders for the administrator's Amazon Chime account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListPhoneNumberOrders>`_    


    **Request Syntax** 
    ::

      response = client.list_phone_number_orders(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberOrders': [
                {
                    'PhoneNumberOrderId': 'string',
                    'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                    'Status': 'Processing'|'Successful'|'Failed'|'Partial',
                    'OrderedPhoneNumbers': [
                        {
                            'E164PhoneNumber': 'string',
                            'Status': 'Processing'|'Acquired'|'Failed'
                        },
                    ],
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberOrders** *(list) --* 

          The phone number order details.

          
          

          - *(dict) --* 

            The details of a phone number order created for Amazon Chime.

            
            

            - **PhoneNumberOrderId** *(string) --* 

              The phone number order ID.

              
            

            - **ProductType** *(string) --* 

              The phone number order product type.

              
            

            - **Status** *(string) --* 

              The status of the phone number order.

              
            

            - **OrderedPhoneNumbers** *(list) --* 

              The ordered phone number details, such as the phone number in E.164 format and the phone number status.

              
              

              - *(dict) --* 

                A phone number for which an order has been placed.

                
                

                - **E164PhoneNumber** *(string) --* 

                  The phone number, in E.164 format.

                  
                

                - **Status** *(string) --* 

                  The phone number status.

                  
            
          
            

            - **CreatedTimestamp** *(datetime) --* 

              The phone number order creation time stamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The updated phone number order time stamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_phone_numbers(**kwargs)

    

    Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListPhoneNumbers>`_    


    **Request Syntax** 
    ::

      response = client.list_phone_numbers(
          Status='AcquireInProgress'|'AcquireFailed'|'Unassigned'|'Assigned'|'ReleaseInProgress'|'DeleteInProgress'|'ReleaseFailed'|'DeleteFailed',
          ProductType='BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
          FilterName='AccountId'|'UserId'|'VoiceConnectorId'|'VoiceConnectorGroupId'|'SipRuleId',
          FilterValue='string',
          MaxResults=123,
          NextToken='string'
      )
    :type Status: string
    :param Status: 

      The phone number status.

      

    
    :type ProductType: string
    :param ProductType: 

      The phone number product type.

      

    
    :type FilterName: string
    :param FilterName: 

      The filter to use to limit the number of results.

      

    
    :type FilterValue: string
    :param FilterValue: 

      The value to use for the filter.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumbers': [
                {
                    'PhoneNumberId': 'string',
                    'E164PhoneNumber': 'string',
                    'Country': 'string',
                    'Type': 'Local'|'TollFree',
                    'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                    'Status': 'AcquireInProgress'|'AcquireFailed'|'Unassigned'|'Assigned'|'ReleaseInProgress'|'DeleteInProgress'|'ReleaseFailed'|'DeleteFailed',
                    'Capabilities': {
                        'InboundCall': True|False,
                        'OutboundCall': True|False,
                        'InboundSMS': True|False,
                        'OutboundSMS': True|False,
                        'InboundMMS': True|False,
                        'OutboundMMS': True|False
                    },
                    'Associations': [
                        {
                            'Value': 'string',
                            'Name': 'AccountId'|'UserId'|'VoiceConnectorId'|'VoiceConnectorGroupId'|'SipRuleId',
                            'AssociatedTimestamp': datetime(2015, 1, 1)
                        },
                    ],
                    'CallingName': 'string',
                    'CallingNameStatus': 'Unassigned'|'UpdateInProgress'|'UpdateSucceeded'|'UpdateFailed',
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1),
                    'DeletionTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumbers** *(list) --* 

          The phone number details.

          
          

          - *(dict) --* 

            A phone number used for Amazon Chime Business Calling or an Amazon Chime Voice Connector.

            
            

            - **PhoneNumberId** *(string) --* 

              The phone number ID.

              
            

            - **E164PhoneNumber** *(string) --* 

              The phone number, in E.164 format.

              
            

            - **Country** *(string) --* 

              The phone number country. Format: ISO 3166-1 alpha-2.

              
            

            - **Type** *(string) --* 

              The phone number type.

              
            

            - **ProductType** *(string) --* 

              The phone number product type.

              
            

            - **Status** *(string) --* 

              The phone number status.

              
            

            - **Capabilities** *(dict) --* 

              The phone number capabilities.

              
              

              - **InboundCall** *(boolean) --* 

                Allows or denies inbound calling for the specified phone number.

                
              

              - **OutboundCall** *(boolean) --* 

                Allows or denies outbound calling for the specified phone number.

                
              

              - **InboundSMS** *(boolean) --* 

                Allows or denies inbound SMS messaging for the specified phone number.

                
              

              - **OutboundSMS** *(boolean) --* 

                Allows or denies outbound SMS messaging for the specified phone number.

                
              

              - **InboundMMS** *(boolean) --* 

                Allows or denies inbound MMS messaging for the specified phone number.

                
              

              - **OutboundMMS** *(boolean) --* 

                Allows or denies outbound MMS messaging for the specified phone number.

                
          
            

            - **Associations** *(list) --* 

              The phone number associations.

              
              

              - *(dict) --* 

                The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

                
                

                - **Value** *(string) --* 

                  Contains the ID for the entity specified in Name.

                  
                

                - **Name** *(string) --* 

                  Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

                  
                

                - **AssociatedTimestamp** *(datetime) --* 

                  The timestamp of the phone number association, in ISO 8601 format.

                  
            
          
            

            - **CallingName** *(string) --* 

              The outbound calling name associated with the phone number.

              
            

            - **CallingNameStatus** *(string) --* 

              The outbound calling name status.

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The phone number creation timestamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The updated phone number timestamp, in ISO 8601 format.

              
            

            - **DeletionTimestamp** *(datetime) --* 

              The deleted phone number timestamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_proxy_sessions(**kwargs)

    

    Lists the proxy sessions for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListProxySessions>`_    


    **Request Syntax** 
    ::

      response = client.list_proxy_sessions(
          VoiceConnectorId='string',
          Status='Open'|'InProgress'|'Closed',
          NextToken='string',
          MaxResults=123
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    :type Status: string
    :param Status: 

      The proxy session status.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProxySessions': [
                {
                    'VoiceConnectorId': 'string',
                    'ProxySessionId': 'string',
                    'Name': 'string',
                    'Status': 'Open'|'InProgress'|'Closed',
                    'ExpiryMinutes': 123,
                    'Capabilities': [
                        'Voice'|'SMS',
                    ],
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1),
                    'EndedTimestamp': datetime(2015, 1, 1),
                    'Participants': [
                        {
                            'PhoneNumber': 'string',
                            'ProxyPhoneNumber': 'string'
                        },
                    ],
                    'NumberSelectionBehavior': 'PreferSticky'|'AvoidSticky',
                    'GeoMatchLevel': 'Country'|'AreaCode',
                    'GeoMatchParams': {
                        'Country': 'string',
                        'AreaCode': 'string'
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProxySessions** *(list) --* 

          The proxy session details.

          
          

          - *(dict) --* 

            The proxy session for an Amazon Chime Voice Connector.

            
            

            - **VoiceConnectorId** *(string) --* 

              The Amazon Chime voice connector ID.

              
            

            - **ProxySessionId** *(string) --* 

              The proxy session ID.

              
            

            - **Name** *(string) --* 

              The name of the proxy session.

              
            

            - **Status** *(string) --* 

              The status of the proxy session.

              
            

            - **ExpiryMinutes** *(integer) --* 

              The number of minutes allowed for the proxy session.

              
            

            - **Capabilities** *(list) --* 

              The proxy session capabilities.

              
              

              - *(string) --* 
          
            

            - **CreatedTimestamp** *(datetime) --* 

              The created time stamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The updated time stamp, in ISO 8601 format.

              
            

            - **EndedTimestamp** *(datetime) --* 

              The ended time stamp, in ISO 8601 format.

              
            

            - **Participants** *(list) --* 

              The proxy session participants.

              
              

              - *(dict) --* 

                The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.

                
                

                - **PhoneNumber** *(string) --* 

                  The participant's phone number.

                  
                

                - **ProxyPhoneNumber** *(string) --* 

                  The participant's proxy phone number.

                  
            
          
            

            - **NumberSelectionBehavior** *(string) --* 

              The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.

              
            

            - **GeoMatchLevel** *(string) --* 

              The preference for matching the country or area code of the proxy phone number with that of the first participant.

              
            

            - **GeoMatchParams** *(dict) --* 

              The country and area code for the proxy phone number.

              
              

              - **Country** *(string) --* 

                The country.

                
              

              - **AreaCode** *(string) --* 

                The area code.

                
          
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_room_memberships(**kwargs)

    

    Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members' IDs, email addresses, and names.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListRoomMemberships>`_    


    **Request Syntax** 
    ::

      response = client.list_room_memberships(
          AccountId='string',
          RoomId='string',
          MaxResults=123,
          NextToken='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RoomMemberships': [
                {
                    'RoomId': 'string',
                    'Member': {
                        'MemberId': 'string',
                        'MemberType': 'User'|'Bot'|'Webhook',
                        'Email': 'string',
                        'FullName': 'string',
                        'AccountId': 'string'
                    },
                    'Role': 'Administrator'|'Member',
                    'InvitedBy': 'string',
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RoomMemberships** *(list) --* 

          The room membership details.

          
          

          - *(dict) --* 

            The room membership details.

            
            

            - **RoomId** *(string) --* 

              The room ID.

              
            

            - **Member** *(dict) --* 

              The member details, such as email address, name, member ID, and member type.

              
              

              - **MemberId** *(string) --* 

                The member ID (user ID or bot ID).

                
              

              - **MemberType** *(string) --* 

                The member type.

                
              

              - **Email** *(string) --* 

                The member email address.

                
              

              - **FullName** *(string) --* 

                The member name.

                
              

              - **AccountId** *(string) --* 

                The Amazon Chime account ID.

                
          
            

            - **Role** *(string) --* 

              The membership role.

              
            

            - **InvitedBy** *(string) --* 

              The identifier of the user that invited the room member.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The room membership update timestamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_rooms(**kwargs)

    

    Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListRooms>`_    


    **Request Syntax** 
    ::

      response = client.list_rooms(
          AccountId='string',
          MemberId='string',
          MaxResults=123,
          NextToken='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type MemberId: string
    :param MemberId: 

      The member ID (user ID or bot ID).

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Rooms': [
                {
                    'RoomId': 'string',
                    'Name': 'string',
                    'AccountId': 'string',
                    'CreatedBy': 'string',
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Rooms** *(list) --* 

          The room details.

          
          

          - *(dict) --* 

            The Amazon Chime chat room details.

            
            

            - **RoomId** *(string) --* 

              The room ID.

              
            

            - **Name** *(string) --* 

              The room name.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
            

            - **CreatedBy** *(string) --* 

              The identifier of the room creator.

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The room creation timestamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The room update timestamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_sip_media_applications(**kwargs)

    

    Lists the SIP media applications under the administrator's AWS account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListSipMediaApplications>`_    


    **Request Syntax** 
    ::

      response = client.list_sip_media_applications(
          MaxResults=123,
          NextToken='string'
      )
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call. Defaults to 100.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplications': [
                {
                    'SipMediaApplicationId': 'string',
                    'AwsRegion': 'string',
                    'Name': 'string',
                    'Endpoints': [
                        {
                            'LambdaArn': 'string'
                        },
                    ],
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplications** *(list) --* 

          List of SIP media applications and application details.

          
          

          - *(dict) --* 

            The details of the SIP media application, including name and endpoints. An AWS account can have multiple SIP media applications.

            
            

            - **SipMediaApplicationId** *(string) --* 

              The SIP media application ID.

              
            

            - **AwsRegion** *(string) --* 

              The AWS Region in which the SIP media application is created.

              
            

            - **Name** *(string) --* 

              The name of the SIP media application.

              
            

            - **Endpoints** *(list) --* 

              List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted.

              
              

              - *(dict) --* 

                The endpoint assigned to the SIP media application.

                
                

                - **LambdaArn** *(string) --* 

                  Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.

                  
            
          
            

            - **CreatedTimestamp** *(datetime) --* 

              The SIP media application creation timestamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The SIP media application updated timestamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_sip_rules(**kwargs)

    

    Lists the SIP rules under the administrator's AWS account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListSipRules>`_    


    **Request Syntax** 
    ::

      response = client.list_sip_rules(
          SipMediaApplicationId='string',
          MaxResults=123,
          NextToken='string'
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: 

      The SIP media application ID.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call. Defaults to 100.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipRules': [
                {
                    'SipRuleId': 'string',
                    'Name': 'string',
                    'Disabled': True|False,
                    'TriggerType': 'ToPhoneNumber'|'RequestUriHostname',
                    'TriggerValue': 'string',
                    'TargetApplications': [
                        {
                            'SipMediaApplicationId': 'string',
                            'Priority': 123,
                            'AwsRegion': 'string'
                        },
                    ],
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipRules** *(list) --* 

          List of SIP rules and rule details.

          
          

          - *(dict) --* 

            The SIP rule details, including name, triggers, and target applications. An AWS account can have multiple SIP rules.

            
            

            - **SipRuleId** *(string) --* 

              The SIP rule ID.

              
            

            - **Name** *(string) --* 

              The name of the SIP rule.

              
            

            - **Disabled** *(boolean) --* 

              Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it.

              
            

            - **TriggerType** *(string) --* 

              The type of trigger assigned to the SIP rule in ``TriggerValue`` , currently ``RequestUriHostname`` or ``ToPhoneNumber`` .

              
            

            - **TriggerValue** *(string) --* 

              If ``TriggerType`` is ``RequestUriHostname`` , then the value can be the outbound host name of the Amazon Chime Voice Connector. If ``TriggerType`` is ``ToPhoneNumber`` , then the value can be a customer-owned phone number in E164 format. ``SipRule`` is triggered when a SIP rule requests host name or ``ToPhoneNumber`` matches in the incoming SIP request.

              
            

            - **TargetApplications** *(list) --* 

              Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

              
              

              - *(dict) --* 

                Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

                
                

                - **SipMediaApplicationId** *(string) --* 

                  The SIP media application ID.

                  
                

                - **Priority** *(integer) --* 

                  Priority of the SIP media application in the target list.

                  
                

                - **AwsRegion** *(string) --* 

                  The AWS Region of the target application.

                  
            
          
            

            - **CreatedTimestamp** *(datetime) --* 

              The time at which the SIP rule was created, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The time at which the SIP rule was last updated, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_supported_phone_number_countries(**kwargs)

    

    Lists supported phone number countries.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListSupportedPhoneNumberCountries>`_    


    **Request Syntax** 
    ::

      response = client.list_supported_phone_number_countries(
          ProductType='BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn'
      )
    :type ProductType: string
    :param ProductType: **[REQUIRED]** 

      The phone number product type.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumberCountries': [
                {
                    'CountryCode': 'string',
                    'SupportedPhoneNumberTypes': [
                        'Local'|'TollFree',
                    ]
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumberCountries** *(list) --* 

          The supported phone number countries.

          
          

          - *(dict) --* 

            The phone number country.

            
            

            - **CountryCode** *(string) --* 

              The phone number country code. Format: ISO 3166-1 alpha-2.

              
            

            - **SupportedPhoneNumberTypes** *(list) --* 

              The supported phone number types. 

              
              

              - *(string) --* 
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_tags_for_resource(**kwargs)

    

    Lists the tags applied to an Amazon Chime SDK meeting resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          ResourceARN='string'
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The resource ARN.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Tags** *(list) --* 

          A list of tag-key value pairs.

          
          

          - *(dict) --* 

            Describes a tag applied to a resource.

            
            

            - **Key** *(string) --* 

              The key of the tag.

              
            

            - **Value** *(string) --* 

              The value of the tag.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_users(**kwargs)

    

    Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListUsers>`_    


    **Request Syntax** 
    ::

      response = client.list_users(
          AccountId='string',
          UserEmail='string',
          UserType='PrivateUser'|'SharedDevice',
          MaxResults=123,
          NextToken='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserEmail: string
    :param UserEmail: 

      Optional. The user email address used to filter results. Maximum 1.

      

    
    :type UserType: string
    :param UserType: 

      The user type.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call. Defaults to 100.

      

    
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Users': [
                {
                    'UserId': 'string',
                    'AccountId': 'string',
                    'PrimaryEmail': 'string',
                    'PrimaryProvisionedNumber': 'string',
                    'DisplayName': 'string',
                    'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                    'UserType': 'PrivateUser'|'SharedDevice',
                    'UserRegistrationStatus': 'Unregistered'|'Registered'|'Suspended',
                    'UserInvitationStatus': 'Pending'|'Accepted'|'Failed',
                    'RegisteredOn': datetime(2015, 1, 1),
                    'InvitedOn': datetime(2015, 1, 1),
                    'AlexaForBusinessMetadata': {
                        'IsAlexaForBusinessEnabled': True|False,
                        'AlexaForBusinessRoomArn': 'string'
                    },
                    'PersonalPIN': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Users** *(list) --* 

          List of users and user details.

          
          

          - *(dict) --* 

            The user on the Amazon Chime account.

            
            

            - **UserId** *(string) --* 

              The user ID.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
            

            - **PrimaryEmail** *(string) --* 

              The primary email address of the user.

              
            

            - **PrimaryProvisionedNumber** *(string) --* 

              The primary phone number associated with the user.

              
            

            - **DisplayName** *(string) --* 

              The display name of the user.

              
            

            - **LicenseType** *(string) --* 

              The license type for the user.

              
            

            - **UserType** *(string) --* 

              The user type.

              
            

            - **UserRegistrationStatus** *(string) --* 

              The user registration status.

              
            

            - **UserInvitationStatus** *(string) --* 

              The user invite status.

              
            

            - **RegisteredOn** *(datetime) --* 

              Date and time when the user is registered, in ISO 8601 format.

              
            

            - **InvitedOn** *(datetime) --* 

              Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.

              
            

            - **AlexaForBusinessMetadata** *(dict) --* 

              The Alexa for Business metadata.

              
              

              - **IsAlexaForBusinessEnabled** *(boolean) --* 

                Starts or stops Alexa for Business.

                
              

              - **AlexaForBusinessRoomArn** *(string) --* 

                The ARN of the room resource.

                
          
            

            - **PersonalPIN** *(string) --* 

              The user's personal meeting PIN.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_voice_connector_groups(**kwargs)

    

    Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListVoiceConnectorGroups>`_    


    **Request Syntax** 
    ::

      response = client.list_voice_connector_groups(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnectorGroups': [
                {
                    'VoiceConnectorGroupId': 'string',
                    'Name': 'string',
                    'VoiceConnectorItems': [
                        {
                            'VoiceConnectorId': 'string',
                            'Priority': 123
                        },
                    ],
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnectorGroups** *(list) --* 

          The details of the Amazon Chime Voice Connector groups.

          
          

          - *(dict) --* 

            The Amazon Chime Voice Connector group configuration, including associated Amazon Chime Voice Connectors. You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.

            
            

            - **VoiceConnectorGroupId** *(string) --* 

              The Amazon Chime Voice Connector group ID.

              
            

            - **Name** *(string) --* 

              The name of the Amazon Chime Voice Connector group.

              
            

            - **VoiceConnectorItems** *(list) --* 

              The Amazon Chime Voice Connectors to which to route inbound calls.

              
              

              - *(dict) --* 

                For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 ``VoiceConnectorItems`` per Amazon Chime Voice Connector group.

                
                

                - **VoiceConnectorId** *(string) --* 

                  The Amazon Chime Voice Connector ID.

                  
                

                - **Priority** *(integer) --* 

                  The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.

                  
            
          
            

            - **CreatedTimestamp** *(datetime) --* 

              The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_voice_connector_termination_credentials(**kwargs)

    

    Lists the SIP credentials for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListVoiceConnectorTerminationCredentials>`_    


    **Request Syntax** 
    ::

      response = client.list_voice_connector_termination_credentials(
          VoiceConnectorId='string'
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Usernames': [
                'string',
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Usernames** *(list) --* 

          A list of user names.

          
          

          - *(string) --* 
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: list_voice_connectors(**kwargs)

    

    Lists the Amazon Chime Voice Connectors for the administrator's AWS account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListVoiceConnectors>`_    


    **Request Syntax** 
    ::

      response = client.list_voice_connectors(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The token to use to retrieve the next page of results.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnectors': [
                {
                    'VoiceConnectorId': 'string',
                    'AwsRegion': 'us-east-1'|'us-west-2',
                    'Name': 'string',
                    'OutboundHostName': 'string',
                    'RequireEncryption': True|False,
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'UpdatedTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnectors** *(list) --* 

          The details of the Amazon Chime Voice Connectors.

          
          

          - *(dict) --* 

            The Amazon Chime Voice Connector configuration, including outbound host name and encryption settings.

            
            

            - **VoiceConnectorId** *(string) --* 

              The Amazon Chime Voice Connector ID.

              
            

            - **AwsRegion** *(string) --* 

              The AWS Region in which the Amazon Chime Voice Connector is created. Default: ``us-east-1`` . 

              
            

            - **Name** *(string) --* 

              The name of the Amazon Chime Voice Connector.

              
            

            - **OutboundHostName** *(string) --* 

              The outbound host name for the Amazon Chime Voice Connector.

              
            

            - **RequireEncryption** *(boolean) --* 

              Designates whether encryption is required for the Amazon Chime Voice Connector.

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format.

              
            

            - **UpdatedTimestamp** *(datetime) --* 

              The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format.

              
        
      
        

        - **NextToken** *(string) --* 

          The token to use to retrieve the next page of results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: logout_user(**kwargs)

    

    Logs out the specified user from all of the devices they are currently logged into.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/LogoutUser>`_    


    **Request Syntax** 
    ::

      response = client.logout_user(
          AccountId='string',
          UserId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_app_instance_retention_settings(**kwargs)

    

    Sets the amount of time in days that a given ``AppInstance`` retains data.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutAppInstanceRetentionSettings>`_    


    **Request Syntax** 
    ::

      response = client.put_app_instance_retention_settings(
          AppInstanceArn='string',
          AppInstanceRetentionSettings={
              'ChannelRetentionSettings': {
                  'RetentionDays': 123
              }
          }
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    :type AppInstanceRetentionSettings: dict
    :param AppInstanceRetentionSettings: **[REQUIRED]** 

      The time in days to retain data. Data type: number.

      

    
      - **ChannelRetentionSettings** *(dict) --* 

        The length of time in days to retain the messages in a channel.

        

      
        - **RetentionDays** *(integer) --* 

          The time in days to retain the messages in a channel.

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceRetentionSettings': {
                'ChannelRetentionSettings': {
                    'RetentionDays': 123
                }
            },
            'InitiateDeletionTimestamp': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceRetentionSettings** *(dict) --* 

          The time in days to retain data. Data type: number.

          
          

          - **ChannelRetentionSettings** *(dict) --* 

            The length of time in days to retain the messages in a channel.

            
            

            - **RetentionDays** *(integer) --* 

              The time in days to retain the messages in a channel.

              
        
      
        

        - **InitiateDeletionTimestamp** *(datetime) --* 

          The time at which the API deletes data.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_app_instance_streaming_configurations(**kwargs)

    

    The data streaming configurations of an ``AppInstance`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutAppInstanceStreamingConfigurations>`_    


    **Request Syntax** 
    ::

      response = client.put_app_instance_streaming_configurations(
          AppInstanceArn='string',
          AppInstanceStreamingConfigurations=[
              {
                  'AppInstanceDataType': 'Channel'|'ChannelMessage',
                  'ResourceArn': 'string'
              },
          ]
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    :type AppInstanceStreamingConfigurations: list
    :param AppInstanceStreamingConfigurations: **[REQUIRED]** 

      The streaming configurations set for an ``AppInstance`` .

      

    
      - *(dict) --* 

        The details of the streaming configuration of an ``AppInstance`` .

        

      
        - **AppInstanceDataType** *(string) --* **[REQUIRED]** 

          The type of data to be streamed.

          

        
        - **ResourceArn** *(string) --* **[REQUIRED]** 

          The resource ARN.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceStreamingConfigurations': [
                {
                    'AppInstanceDataType': 'Channel'|'ChannelMessage',
                    'ResourceArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceStreamingConfigurations** *(list) --* 

          The streaming configurations of an ``AppInstance`` .

          
          

          - *(dict) --* 

            The details of the streaming configuration of an ``AppInstance`` .

            
            

            - **AppInstanceDataType** *(string) --* 

              The type of data to be streamed.

              
            

            - **ResourceArn** *(string) --* 

              The resource ARN.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_events_configuration(**kwargs)

    

    Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information, see  Bot .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutEventsConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.put_events_configuration(
          AccountId='string',
          BotId='string',
          OutboundEventsHTTPSEndpoint='string',
          LambdaFunctionArn='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type BotId: string
    :param BotId: **[REQUIRED]** 

      The bot ID.

      

    
    :type OutboundEventsHTTPSEndpoint: string
    :param OutboundEventsHTTPSEndpoint: 

      HTTPS endpoint that allows the bot to receive outgoing events.

      

    
    :type LambdaFunctionArn: string
    :param LambdaFunctionArn: 

      Lambda function ARN that allows the bot to receive outgoing events.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventsConfiguration': {
                'BotId': 'string',
                'OutboundEventsHTTPSEndpoint': 'string',
                'LambdaFunctionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventsConfiguration** *(dict) --* 

          The configuration that allows a bot to receive outgoing events. Can be either an HTTPS endpoint or a Lambda function ARN.

          
          

          - **BotId** *(string) --* 

            The bot ID.

            
          

          - **OutboundEventsHTTPSEndpoint** *(string) --* 

            HTTPS endpoint that allows a bot to receive outgoing events.

            
          

          - **LambdaFunctionArn** *(string) --* 

            Lambda function ARN that allows a bot to receive outgoing events.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    

  .. py:method:: put_retention_settings(**kwargs)

    

    Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see `Logging Amazon Chime API Calls with AWS CloudTrail <https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html>`__ in the *Amazon Chime Administration Guide* .

     

    To turn off existing retention settings, remove the number of days from the corresponding **RetentionDays** field in the **RetentionSettings** object. For more information about retention settings, see `Managing Chat Retention Policies <https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html>`__ in the *Amazon Chime Administration Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutRetentionSettings>`_    


    **Request Syntax** 
    ::

      response = client.put_retention_settings(
          AccountId='string',
          RetentionSettings={
              'RoomRetentionSettings': {
                  'RetentionDays': 123
              },
              'ConversationRetentionSettings': {
                  'RetentionDays': 123
              }
          }
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RetentionSettings: dict
    :param RetentionSettings: **[REQUIRED]** 

      The retention settings.

      

    
      - **RoomRetentionSettings** *(dict) --* 

        The chat room retention settings.

        

      
        - **RetentionDays** *(integer) --* 

          The number of days for which to retain chat-room messages.

          

        
      
      - **ConversationRetentionSettings** *(dict) --* 

        The chat conversation retention settings.

        

      
        - **RetentionDays** *(integer) --* 

          The number of days for which to retain conversation messages.

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RetentionSettings': {
                'RoomRetentionSettings': {
                    'RetentionDays': 123
                },
                'ConversationRetentionSettings': {
                    'RetentionDays': 123
                }
            },
            'InitiateDeletionTimestamp': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RetentionSettings** *(dict) --* 

          The retention settings.

          
          

          - **RoomRetentionSettings** *(dict) --* 

            The chat room retention settings.

            
            

            - **RetentionDays** *(integer) --* 

              The number of days for which to retain chat-room messages.

              
        
          

          - **ConversationRetentionSettings** *(dict) --* 

            The chat conversation retention settings.

            
            

            - **RetentionDays** *(integer) --* 

              The number of days for which to retain conversation messages.

              
        
      
        

        - **InitiateDeletionTimestamp** *(datetime) --* 

          The timestamp representing the time at which the specified items are permanently deleted, in ISO 8601 format.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_sip_media_application_logging_configuration(**kwargs)

    

    Updates the logging configuration for the specified SIP media application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutSipMediaApplicationLoggingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.put_sip_media_application_logging_configuration(
          SipMediaApplicationId='string',
          SipMediaApplicationLoggingConfiguration={
              'EnableSipMediaApplicationMessageLogs': True|False
          }
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The SIP media application ID.

      

    
    :type SipMediaApplicationLoggingConfiguration: dict
    :param SipMediaApplicationLoggingConfiguration: 

      The actual logging configuration.

      

    
      - **EnableSipMediaApplicationMessageLogs** *(boolean) --* 

        Enables application message logs for the SIP media application.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplicationLoggingConfiguration': {
                'EnableSipMediaApplicationMessageLogs': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplicationLoggingConfiguration** *(dict) --* 

          Logging configuration of the SIP media application.

          
          

          - **EnableSipMediaApplicationMessageLogs** *(boolean) --* 

            Enables application message logs for the SIP media application.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_emergency_calling_configuration(**kwargs)

    

    Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for the Amazon Chime Voice Connector before emergency calling can be configured.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorEmergencyCallingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_emergency_calling_configuration(
          VoiceConnectorId='string',
          EmergencyCallingConfiguration={
              'DNIS': [
                  {
                      'EmergencyPhoneNumber': 'string',
                      'TestPhoneNumber': 'string',
                      'CallingCountry': 'string'
                  },
              ]
          }
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type EmergencyCallingConfiguration: dict
    :param EmergencyCallingConfiguration: **[REQUIRED]** 

      The emergency calling configuration details.

      

    
      - **DNIS** *(list) --* 

        The Dialed Number Identification Service (DNIS) emergency calling configuration details.

        

      
        - *(dict) --* 

          The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.

          

        
          - **EmergencyPhoneNumber** *(string) --* **[REQUIRED]** 

            The DNIS phone number to route emergency calls to, in E.164 format.

            

          
          - **TestPhoneNumber** *(string) --* 

            The DNIS phone number to route test emergency calls to, in E.164 format.

            

          
          - **CallingCountry** *(string) --* **[REQUIRED]** 

            The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format.

            

          
        
    
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EmergencyCallingConfiguration': {
                'DNIS': [
                    {
                        'EmergencyPhoneNumber': 'string',
                        'TestPhoneNumber': 'string',
                        'CallingCountry': 'string'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EmergencyCallingConfiguration** *(dict) --* 

          The emergency calling configuration details.

          
          

          - **DNIS** *(list) --* 

            The Dialed Number Identification Service (DNIS) emergency calling configuration details.

            
            

            - *(dict) --* 

              The Dialed Number Identification Service (DNIS) emergency calling configuration details associated with an Amazon Chime Voice Connector's emergency calling configuration.

              
              

              - **EmergencyPhoneNumber** *(string) --* 

                The DNIS phone number to route emergency calls to, in E.164 format.

                
              

              - **TestPhoneNumber** *(string) --* 

                The DNIS phone number to route test emergency calls to, in E.164 format.

                
              

              - **CallingCountry** *(string) --* 

                The country from which emergency calls are allowed, in ISO 3166-1 alpha-2 format.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_logging_configuration(**kwargs)

    

    Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorLoggingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_logging_configuration(
          VoiceConnectorId='string',
          LoggingConfiguration={
              'EnableSIPLogs': True|False
          }
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type LoggingConfiguration: dict
    :param LoggingConfiguration: **[REQUIRED]** 

      The logging configuration details to add.

      

    
      - **EnableSIPLogs** *(boolean) --* 

        When true, enables SIP message logs for sending to Amazon CloudWatch Logs.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'LoggingConfiguration': {
                'EnableSIPLogs': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **LoggingConfiguration** *(dict) --* 

          The updated logging configuration details.

          
          

          - **EnableSIPLogs** *(boolean) --* 

            When true, enables SIP message logs for sending to Amazon CloudWatch Logs.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_origination(**kwargs)

    

    Adds origination settings for the specified Amazon Chime Voice Connector.

     

    .. note::

       

      If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorOrigination>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_origination(
          VoiceConnectorId='string',
          Origination={
              'Routes': [
                  {
                      'Host': 'string',
                      'Port': 123,
                      'Protocol': 'TCP'|'UDP',
                      'Priority': 123,
                      'Weight': 123
                  },
              ],
              'Disabled': True|False
          }
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type Origination: dict
    :param Origination: **[REQUIRED]** 

      The origination setting details to add.

      

    
      - **Routes** *(list) --* 

        The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20.

        

      
        - *(dict) --* 

          Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector.

          

        
          - **Host** *(string) --* 

            The FQDN or IP address to contact for origination traffic.

            

          
          - **Port** *(integer) --* 

            The designated origination route port. Defaults to 5060.

            

          
          - **Protocol** *(string) --* 

            The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.

            

          
          - **Priority** *(integer) --* 

            The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.

            

          
          - **Weight** *(integer) --* 

            The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.

            

          
        
    
      - **Disabled** *(boolean) --* 

        When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Origination': {
                'Routes': [
                    {
                        'Host': 'string',
                        'Port': 123,
                        'Protocol': 'TCP'|'UDP',
                        'Priority': 123,
                        'Weight': 123
                    },
                ],
                'Disabled': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Origination** *(dict) --* 

          The updated origination setting details.

          
          

          - **Routes** *(list) --* 

            The call distribution properties defined for your SIP hosts. Valid range: Minimum value of 1. Maximum value of 20.

            
            

            - *(dict) --* 

              Origination routes define call distribution properties for your SIP hosts to receive inbound calls using your Amazon Chime Voice Connector. Limit: Ten origination routes for each Amazon Chime Voice Connector.

              
              

              - **Host** *(string) --* 

                The FQDN or IP address to contact for origination traffic.

                
              

              - **Port** *(integer) --* 

                The designated origination route port. Defaults to 5060.

                
              

              - **Protocol** *(string) --* 

                The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.

                
              

              - **Priority** *(integer) --* 

                The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.

                
              

              - **Weight** *(integer) --* 

                The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.

                
          
        
          

          - **Disabled** *(boolean) --* 

            When origination settings are disabled, inbound calls are not enabled for your Amazon Chime Voice Connector.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_proxy(**kwargs)

    

    Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorProxy>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_proxy(
          VoiceConnectorId='string',
          DefaultSessionExpiryMinutes=123,
          PhoneNumberPoolCountries=[
              'string',
          ],
          FallBackPhoneNumber='string',
          Disabled=True|False
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    :type DefaultSessionExpiryMinutes: integer
    :param DefaultSessionExpiryMinutes: **[REQUIRED]** 

      The default number of minutes allowed for proxy sessions.

      

    
    :type PhoneNumberPoolCountries: list
    :param PhoneNumberPoolCountries: **[REQUIRED]** 

      The countries for proxy phone numbers to be selected from.

      

    
      - *(string) --* 

      
  
    :type FallBackPhoneNumber: string
    :param FallBackPhoneNumber: 

      The phone number to route calls to after a proxy session expires.

      

    
    :type Disabled: boolean
    :param Disabled: 

      When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Proxy': {
                'DefaultSessionExpiryMinutes': 123,
                'Disabled': True|False,
                'FallBackPhoneNumber': 'string',
                'PhoneNumberCountries': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Proxy** *(dict) --* 

          The proxy configuration details.

          
          

          - **DefaultSessionExpiryMinutes** *(integer) --* 

            The default number of minutes allowed for proxy sessions.

            
          

          - **Disabled** *(boolean) --* 

            When true, stops proxy sessions from being created on the specified Amazon Chime Voice Connector.

            
          

          - **FallBackPhoneNumber** *(string) --* 

            The phone number to route calls to after a proxy session expires.

            
          

          - **PhoneNumberCountries** *(list) --* 

            The countries for proxy phone numbers to be selected from.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_streaming_configuration(**kwargs)

    

    Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Indonesians. It also sets the retention period, in hours, for the Amazon Kinesis data.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorStreamingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_streaming_configuration(
          VoiceConnectorId='string',
          StreamingConfiguration={
              'DataRetentionInHours': 123,
              'Disabled': True|False,
              'StreamingNotificationTargets': [
                  {
                      'NotificationTarget': 'EventBridge'|'SNS'|'SQS'
                  },
              ]
          }
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type StreamingConfiguration: dict
    :param StreamingConfiguration: **[REQUIRED]** 

      The streaming configuration details to add.

      

    
      - **DataRetentionInHours** *(integer) --* **[REQUIRED]** 

        The retention period, in hours, for the Amazon Kinesis data.

        

      
      - **Disabled** *(boolean) --* 

        When true, media streaming to Amazon Kinesis is turned off.

        

      
      - **StreamingNotificationTargets** *(list) --* 

        The streaming notification targets.

        

      
        - *(dict) --* 

          The targeted recipient for a streaming configuration notification.

          

        
          - **NotificationTarget** *(string) --* **[REQUIRED]** 

            The streaming notification target.

            

          
        
    
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'StreamingConfiguration': {
                'DataRetentionInHours': 123,
                'Disabled': True|False,
                'StreamingNotificationTargets': [
                    {
                        'NotificationTarget': 'EventBridge'|'SNS'|'SQS'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **StreamingConfiguration** *(dict) --* 

          The updated streaming configuration details.

          
          

          - **DataRetentionInHours** *(integer) --* 

            The retention period, in hours, for the Amazon Kinesis data.

            
          

          - **Disabled** *(boolean) --* 

            When true, media streaming to Amazon Kinesis is turned off.

            
          

          - **StreamingNotificationTargets** *(list) --* 

            The streaming notification targets.

            
            

            - *(dict) --* 

              The targeted recipient for a streaming configuration notification.

              
              

              - **NotificationTarget** *(string) --* 

                The streaming notification target.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_termination(**kwargs)

    

    Adds termination settings for the specified Amazon Chime Voice Connector.

     

    .. note::

       

      If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorTermination>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_termination(
          VoiceConnectorId='string',
          Termination={
              'CpsLimit': 123,
              'DefaultPhoneNumber': 'string',
              'CallingRegions': [
                  'string',
              ],
              'CidrAllowedList': [
                  'string',
              ],
              'Disabled': True|False
          }
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type Termination: dict
    :param Termination: **[REQUIRED]** 

      The termination setting details to add.

      

    
      - **CpsLimit** *(integer) --* 

        The limit on calls per second. Max value based on account service quota. Default value of 1.

        

      
      - **DefaultPhoneNumber** *(string) --* 

        The default caller ID phone number.

        

      
      - **CallingRegions** *(list) --* 

        The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required.

        

      
        - *(string) --* 

        
    
      - **CidrAllowedList** *(list) --* 

        The IP addresses allowed to make calls, in CIDR format. Required.

        

      
        - *(string) --* 

        
    
      - **Disabled** *(boolean) --* 

        When termination settings are disabled, outbound calls can not be made.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Termination': {
                'CpsLimit': 123,
                'DefaultPhoneNumber': 'string',
                'CallingRegions': [
                    'string',
                ],
                'CidrAllowedList': [
                    'string',
                ],
                'Disabled': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Termination** *(dict) --* 

          The updated termination setting details.

          
          

          - **CpsLimit** *(integer) --* 

            The limit on calls per second. Max value based on account service quota. Default value of 1.

            
          

          - **DefaultPhoneNumber** *(string) --* 

            The default caller ID phone number.

            
          

          - **CallingRegions** *(list) --* 

            The countries to which calls are allowed, in ISO 3166-1 alpha-2 format. Required.

            
            

            - *(string) --* 
        
          

          - **CidrAllowedList** *(list) --* 

            The IP addresses allowed to make calls, in CIDR format. Required.

            
            

            - *(string) --* 
        
          

          - **Disabled** *(boolean) --* 

            When termination settings are disabled, outbound calls can not be made.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: put_voice_connector_termination_credentials(**kwargs)

    

    Adds termination SIP credentials for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/PutVoiceConnectorTerminationCredentials>`_    


    **Request Syntax** 
    ::

      response = client.put_voice_connector_termination_credentials(
          VoiceConnectorId='string',
          Credentials=[
              {
                  'Username': 'string',
                  'Password': 'string'
              },
          ]
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type Credentials: list
    :param Credentials: 

      The termination SIP credentials.

      

    
      - *(dict) --* 

        The SIP credentials used to authenticate requests to your Amazon Chime Voice Connector.

        

      
        - **Username** *(string) --* 

          The RFC2617 compliant user name associated with the SIP credentials, in US-ASCII format.

          

        
        - **Password** *(string) --* 

          The RFC2617 compliant password associated with the SIP credentials, in US-ASCII format.

          

        
      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: redact_channel_message(**kwargs)

    

    Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/RedactChannelMessage>`_    


    **Request Syntax** 
    ::

      response = client.redact_channel_message(
          ChannelArn='string',
          MessageId='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel containing the messages that you want to redact.

      

    
    :type MessageId: string
    :param MessageId: **[REQUIRED]** 

      The ID of the message being redacted.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'MessageId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel containing the messages that you want to redact.

          
        

        - **MessageId** *(string) --* 

          The ID of the message being redacted.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: redact_conversation_message(**kwargs)

    

    Redacts the specified message from the specified Amazon Chime conversation.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/RedactConversationMessage>`_    


    **Request Syntax** 
    ::

      response = client.redact_conversation_message(
          AccountId='string',
          ConversationId='string',
          MessageId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type ConversationId: string
    :param ConversationId: **[REQUIRED]** 

      The conversation ID.

      

    
    :type MessageId: string
    :param MessageId: **[REQUIRED]** 

      The message ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: redact_room_message(**kwargs)

    

    Redacts the specified message from the specified Amazon Chime channel.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/RedactRoomMessage>`_    


    **Request Syntax** 
    ::

      response = client.redact_room_message(
          AccountId='string',
          RoomId='string',
          MessageId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type MessageId: string
    :param MessageId: **[REQUIRED]** 

      The message ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: regenerate_security_token(**kwargs)

    

    Regenerates the security token for a bot.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/RegenerateSecurityToken>`_    


    **Request Syntax** 
    ::

      response = client.regenerate_security_token(
          AccountId='string',
          BotId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type BotId: string
    :param BotId: **[REQUIRED]** 

      The bot ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Bot': {
                'BotId': 'string',
                'UserId': 'string',
                'DisplayName': 'string',
                'BotType': 'ChatBot',
                'Disabled': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'BotEmail': 'string',
                'SecurityToken': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Bot** *(dict) --* 

          A resource that allows Enterprise account administrators to configure an interface to receive events from Amazon Chime.

          
          

          - **BotId** *(string) --* 

            The bot ID.

            
          

          - **UserId** *(string) --* 

            The unique ID for the bot user.

            
          

          - **DisplayName** *(string) --* 

            The bot display name.

            
          

          - **BotType** *(string) --* 

            The bot type.

            
          

          - **Disabled** *(boolean) --* 

            When true, the bot is stopped from running in your account.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The bot creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated bot timestamp, in ISO 8601 format.

            
          

          - **BotEmail** *(string) --* 

            The bot email address.

            
          

          - **SecurityToken** *(string) --* 

            The security token used to authenticate Amazon Chime with the outgoing event endpoint.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    

  .. py:method:: reset_personal_pin(**kwargs)

    

    Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the  User object with the updated personal meeting PIN.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ResetPersonalPIN>`_    


    **Request Syntax** 
    ::

      response = client.reset_personal_pin(
          AccountId='string',
          UserId='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'User': {
                'UserId': 'string',
                'AccountId': 'string',
                'PrimaryEmail': 'string',
                'PrimaryProvisionedNumber': 'string',
                'DisplayName': 'string',
                'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'UserType': 'PrivateUser'|'SharedDevice',
                'UserRegistrationStatus': 'Unregistered'|'Registered'|'Suspended',
                'UserInvitationStatus': 'Pending'|'Accepted'|'Failed',
                'RegisteredOn': datetime(2015, 1, 1),
                'InvitedOn': datetime(2015, 1, 1),
                'AlexaForBusinessMetadata': {
                    'IsAlexaForBusinessEnabled': True|False,
                    'AlexaForBusinessRoomArn': 'string'
                },
                'PersonalPIN': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **User** *(dict) --* 

          The user details and new personal meeting PIN.

          
          

          - **UserId** *(string) --* 

            The user ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **PrimaryEmail** *(string) --* 

            The primary email address of the user.

            
          

          - **PrimaryProvisionedNumber** *(string) --* 

            The primary phone number associated with the user.

            
          

          - **DisplayName** *(string) --* 

            The display name of the user.

            
          

          - **LicenseType** *(string) --* 

            The license type for the user.

            
          

          - **UserType** *(string) --* 

            The user type.

            
          

          - **UserRegistrationStatus** *(string) --* 

            The user registration status.

            
          

          - **UserInvitationStatus** *(string) --* 

            The user invite status.

            
          

          - **RegisteredOn** *(datetime) --* 

            Date and time when the user is registered, in ISO 8601 format.

            
          

          - **InvitedOn** *(datetime) --* 

            Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.

            
          

          - **AlexaForBusinessMetadata** *(dict) --* 

            The Alexa for Business metadata.

            
            

            - **IsAlexaForBusinessEnabled** *(boolean) --* 

              Starts or stops Alexa for Business.

              
            

            - **AlexaForBusinessRoomArn** *(string) --* 

              The ARN of the room resource.

              
        
          

          - **PersonalPIN** *(string) --* 

            The user's personal meeting PIN.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: restore_phone_number(**kwargs)

    

    Moves a phone number from the **Deletion queue** back into the phone number **Inventory** .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/RestorePhoneNumber>`_    


    **Request Syntax** 
    ::

      response = client.restore_phone_number(
          PhoneNumberId='string'
      )
    :type PhoneNumberId: string
    :param PhoneNumberId: **[REQUIRED]** 

      The phone number.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumber': {
                'PhoneNumberId': 'string',
                'E164PhoneNumber': 'string',
                'Country': 'string',
                'Type': 'Local'|'TollFree',
                'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                'Status': 'AcquireInProgress'|'AcquireFailed'|'Unassigned'|'Assigned'|'ReleaseInProgress'|'DeleteInProgress'|'ReleaseFailed'|'DeleteFailed',
                'Capabilities': {
                    'InboundCall': True|False,
                    'OutboundCall': True|False,
                    'InboundSMS': True|False,
                    'OutboundSMS': True|False,
                    'InboundMMS': True|False,
                    'OutboundMMS': True|False
                },
                'Associations': [
                    {
                        'Value': 'string',
                        'Name': 'AccountId'|'UserId'|'VoiceConnectorId'|'VoiceConnectorGroupId'|'SipRuleId',
                        'AssociatedTimestamp': datetime(2015, 1, 1)
                    },
                ],
                'CallingName': 'string',
                'CallingNameStatus': 'Unassigned'|'UpdateInProgress'|'UpdateSucceeded'|'UpdateFailed',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'DeletionTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumber** *(dict) --* 

          The phone number details.

          
          

          - **PhoneNumberId** *(string) --* 

            The phone number ID.

            
          

          - **E164PhoneNumber** *(string) --* 

            The phone number, in E.164 format.

            
          

          - **Country** *(string) --* 

            The phone number country. Format: ISO 3166-1 alpha-2.

            
          

          - **Type** *(string) --* 

            The phone number type.

            
          

          - **ProductType** *(string) --* 

            The phone number product type.

            
          

          - **Status** *(string) --* 

            The phone number status.

            
          

          - **Capabilities** *(dict) --* 

            The phone number capabilities.

            
            

            - **InboundCall** *(boolean) --* 

              Allows or denies inbound calling for the specified phone number.

              
            

            - **OutboundCall** *(boolean) --* 

              Allows or denies outbound calling for the specified phone number.

              
            

            - **InboundSMS** *(boolean) --* 

              Allows or denies inbound SMS messaging for the specified phone number.

              
            

            - **OutboundSMS** *(boolean) --* 

              Allows or denies outbound SMS messaging for the specified phone number.

              
            

            - **InboundMMS** *(boolean) --* 

              Allows or denies inbound MMS messaging for the specified phone number.

              
            

            - **OutboundMMS** *(boolean) --* 

              Allows or denies outbound MMS messaging for the specified phone number.

              
        
          

          - **Associations** *(list) --* 

            The phone number associations.

            
            

            - *(dict) --* 

              The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

              
              

              - **Value** *(string) --* 

                Contains the ID for the entity specified in Name.

                
              

              - **Name** *(string) --* 

                Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

                
              

              - **AssociatedTimestamp** *(datetime) --* 

                The timestamp of the phone number association, in ISO 8601 format.

                
          
        
          

          - **CallingName** *(string) --* 

            The outbound calling name associated with the phone number.

            
          

          - **CallingNameStatus** *(string) --* 

            The outbound calling name status.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The phone number creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated phone number timestamp, in ISO 8601 format.

            
          

          - **DeletionTimestamp** *(datetime) --* 

            The deleted phone number timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: search_available_phone_numbers(**kwargs)

    

    Searches for phone numbers that can be ordered. For US numbers, provide at least one of the following search filters: ``AreaCode`` , ``City`` , ``State`` , or ``TollFreePrefix`` . If you provide ``City`` , you must also provide ``State`` . Numbers outside the US only support the ``PhoneNumberType`` filter, which you must use.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/SearchAvailablePhoneNumbers>`_    


    **Request Syntax** 
    ::

      response = client.search_available_phone_numbers(
          AreaCode='string',
          City='string',
          Country='string',
          State='string',
          TollFreePrefix='string',
          PhoneNumberType='Local'|'TollFree',
          MaxResults=123,
          NextToken='string'
      )
    :type AreaCode: string
    :param AreaCode: 

      The area code used to filter results. Only applies to the US.

      

    
    :type City: string
    :param City: 

      The city used to filter results. Only applies to the US.

      

    
    :type Country: string
    :param Country: 

      The country used to filter results. Defaults to the US Format: ISO 3166-1 alpha-2.

      

    
    :type State: string
    :param State: 

      The state used to filter results. Required only if you provide ``City`` . Only applies to the US.

      

    
    :type TollFreePrefix: string
    :param TollFreePrefix: 

      The toll-free prefix that you use to filter results. Only applies to the US.

      

    
    :type PhoneNumberType: string
    :param PhoneNumberType: 

      The phone number type used to filter results. Required for non-US numbers.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return in a single call.

      

    
    :type NextToken: string
    :param NextToken: 

      The token used to retrieve the next page of results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'E164PhoneNumbers': [
                'string',
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **E164PhoneNumbers** *(list) --* 

          List of phone numbers, in E.164 format.

          
          

          - *(string) --* 
      
        

        - **NextToken** *(string) --* 

          The token used to retrieve the next page of search results.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: send_channel_message(**kwargs)

    

    Sends a message to a particular channel that the member is a part of.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

      Also, ``STANDARD`` messages can contain 4KB of data and the 1KB of metadata. ``CONTROL`` messages can contain 30 bytes of data and no metadata.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/SendChannelMessage>`_    


    **Request Syntax** 
    ::

      response = client.send_channel_message(
          ChannelArn='string',
          Content='string',
          Type='STANDARD'|'CONTROL',
          Persistence='PERSISTENT'|'NON_PERSISTENT',
          Metadata='string',
          ClientRequestToken='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type Content: string
    :param Content: **[REQUIRED]** 

      The content of the message.

      

    
    :type Type: string
    :param Type: **[REQUIRED]** 

      The type of message, ``STANDARD`` or ``CONTROL`` .

      

    
    :type Persistence: string
    :param Persistence: **[REQUIRED]** 

      Boolean that controls whether the message is persisted on the back end. Required.

      

    
    :type Metadata: string
    :param Metadata: 

      The optional metadata for each message.

      

    
    :type ClientRequestToken: string
    :param ClientRequestToken: **[REQUIRED]** 

      The ``Idempotency`` token for each client request.

      This field is autopopulated if not provided.

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'MessageId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **MessageId** *(string) --* 

          The ID string assigned to each message.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: tag_attendee(**kwargs)

    

    Applies the specified tags to the specified Amazon Chime SDK attendee.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/TagAttendee>`_    


    **Request Syntax** 
    ::

      response = client.tag_attendee(
          MeetingId='string',
          AttendeeId='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type AttendeeId: string
    :param AttendeeId: **[REQUIRED]** 

      The Amazon Chime SDK attendee ID.

      

    
    :type Tags: list
    :param Tags: **[REQUIRED]** 

      The tag key-value pairs.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: tag_meeting(**kwargs)

    

    Applies the specified tags to the specified Amazon Chime SDK meeting.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/TagMeeting>`_    


    **Request Syntax** 
    ::

      response = client.tag_meeting(
          MeetingId='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type Tags: list
    :param Tags: **[REQUIRED]** 

      The tag key-value pairs.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Applies the specified tags to the specified Amazon Chime SDK meeting resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          ResourceARN='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The resource ARN.

      

    
    :type Tags: list
    :param Tags: **[REQUIRED]** 

      The tag key-value pairs.

      

    
      - *(dict) --* 

        Describes a tag applied to a resource.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the tag.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value of the tag.

          

        
      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: untag_attendee(**kwargs)

    

    Untags the specified tags from the specified Amazon Chime SDK attendee.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UntagAttendee>`_    


    **Request Syntax** 
    ::

      response = client.untag_attendee(
          MeetingId='string',
          AttendeeId='string',
          TagKeys=[
              'string',
          ]
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type AttendeeId: string
    :param AttendeeId: **[REQUIRED]** 

      The Amazon Chime SDK attendee ID.

      

    
    :type TagKeys: list
    :param TagKeys: **[REQUIRED]** 

      The tag keys.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: untag_meeting(**kwargs)

    

    Untags the specified tags from the specified Amazon Chime SDK meeting.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UntagMeeting>`_    


    **Request Syntax** 
    ::

      response = client.untag_meeting(
          MeetingId='string',
          TagKeys=[
              'string',
          ]
      )
    :type MeetingId: string
    :param MeetingId: **[REQUIRED]** 

      The Amazon Chime SDK meeting ID.

      

    
    :type TagKeys: list
    :param TagKeys: **[REQUIRED]** 

      The tag keys.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Untags the specified tags from the specified Amazon Chime SDK meeting resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          ResourceARN='string',
          TagKeys=[
              'string',
          ]
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The resource ARN.

      

    
    :type TagKeys: list
    :param TagKeys: **[REQUIRED]** 

      The tag keys.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_account(**kwargs)

    

    Updates account details for the specified Amazon Chime account. Currently, only account name and default license updates are supported for this action.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateAccount>`_    


    **Request Syntax** 
    ::

      response = client.update_account(
          AccountId='string',
          Name='string',
          DefaultLicense='Basic'|'Plus'|'Pro'|'ProTrial'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type Name: string
    :param Name: 

      The new name for the specified Amazon Chime account.

      

    
    :type DefaultLicense: string
    :param DefaultLicense: 

      The default license applied when you add users to an Amazon Chime account.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Account': {
                'AwsAccountId': 'string',
                'AccountId': 'string',
                'Name': 'string',
                'AccountType': 'Team'|'EnterpriseDirectory'|'EnterpriseLWA'|'EnterpriseOIDC',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'DefaultLicense': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'SupportedLicenses': [
                    'Basic'|'Plus'|'Pro'|'ProTrial',
                ],
                'AccountStatus': 'Suspended'|'Active',
                'SigninDelegateGroups': [
                    {
                        'GroupName': 'string'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Account** *(dict) --* 

          The updated Amazon Chime account details.

          
          

          - **AwsAccountId** *(string) --* 

            The AWS account ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **Name** *(string) --* 

            The Amazon Chime account name.

            
          

          - **AccountType** *(string) --* 

            The Amazon Chime account type. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime account creation timestamp, in ISO 8601 format.

            
          

          - **DefaultLicense** *(string) --* 

            The default license for the Amazon Chime account.

            
          

          - **SupportedLicenses** *(list) --* 

            Supported licenses for the Amazon Chime account.

            
            

            - *(string) --* 
        
          

          - **AccountStatus** *(string) --* 

            The status of the account, ``Suspended`` or ``Active`` .

            
          

          - **SigninDelegateGroups** *(list) --* 

            The sign-in delegate groups associated with the account.

            
            

            - *(dict) --* 

              An Active Directory (AD) group whose members are granted permission to act as delegates.

              
              

              - **GroupName** *(string) --* 

                The group name.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_account_settings(**kwargs)

    

    Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see `Use the Policies Page <https://docs.aws.amazon.com/chime/latest/ag/policies.html>`__ in the *Amazon Chime Administration Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateAccountSettings>`_    


    **Request Syntax** 
    ::

      response = client.update_account_settings(
          AccountId='string',
          AccountSettings={
              'DisableRemoteControl': True|False,
              'EnableDialOut': True|False
          }
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type AccountSettings: dict
    :param AccountSettings: **[REQUIRED]** 

      The Amazon Chime account settings to update.

      

    
      - **DisableRemoteControl** *(boolean) --* 

        Setting that stops or starts remote control of shared screens during meetings.

        

      
      - **EnableDialOut** *(boolean) --* 

        Setting that allows meeting participants to choose the **Call me at a phone number** option. For more information, see `Join a Meeting without the Amazon Chime App <https://docs.aws.amazon.com/chime/latest/ug/chime-join-meeting.html>`__ .

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_app_instance(**kwargs)

    

    Updates ``AppInstance`` metadata.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateAppInstance>`_    


    **Request Syntax** 
    ::

      response = client.update_app_instance(
          AppInstanceArn='string',
          Name='string',
          Metadata='string'
      )
    :type AppInstanceArn: string
    :param AppInstanceArn: **[REQUIRED]** 

      The ARN of the ``AppInstance`` .

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name that you want to change.

      

    
    :type Metadata: string
    :param Metadata: 

      The metadata that you want to change.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceArn** *(string) --* 

          The ARN of the ``AppInstance`` .

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_app_instance_user(**kwargs)

    

    Updates the details of an ``AppInstanceUser`` . You can update names and metadata.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateAppInstanceUser>`_    


    **Request Syntax** 
    ::

      response = client.update_app_instance_user(
          AppInstanceUserArn='string',
          Name='string',
          Metadata='string'
      )
    :type AppInstanceUserArn: string
    :param AppInstanceUserArn: **[REQUIRED]** 

      The ARN of the ``AppInstanceUser`` .

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the ``AppInstanceUser`` .

      

    
    :type Metadata: string
    :param Metadata: 

      The metadata of the ``AppInstanceUser`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AppInstanceUserArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AppInstanceUserArn** *(string) --* 

          The ARN of the ``AppInstanceUser`` .

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_bot(**kwargs)

    

    Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateBot>`_    


    **Request Syntax** 
    ::

      response = client.update_bot(
          AccountId='string',
          BotId='string',
          Disabled=True|False
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type BotId: string
    :param BotId: **[REQUIRED]** 

      The bot ID.

      

    
    :type Disabled: boolean
    :param Disabled: 

      When true, stops the specified bot from running in your account.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Bot': {
                'BotId': 'string',
                'UserId': 'string',
                'DisplayName': 'string',
                'BotType': 'ChatBot',
                'Disabled': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'BotEmail': 'string',
                'SecurityToken': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Bot** *(dict) --* 

          The updated bot details.

          
          

          - **BotId** *(string) --* 

            The bot ID.

            
          

          - **UserId** *(string) --* 

            The unique ID for the bot user.

            
          

          - **DisplayName** *(string) --* 

            The bot display name.

            
          

          - **BotType** *(string) --* 

            The bot type.

            
          

          - **Disabled** *(boolean) --* 

            When true, the bot is stopped from running in your account.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The bot creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated bot timestamp, in ISO 8601 format.

            
          

          - **BotEmail** *(string) --* 

            The bot email address.

            
          

          - **SecurityToken** *(string) --* 

            The security token used to authenticate Amazon Chime with the outgoing event endpoint.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    

  .. py:method:: update_channel(**kwargs)

    

    Update a channel's attributes.

     

     **Restriction** : You can't change a channel's privacy. 

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateChannel>`_    


    **Request Syntax** 
    ::

      response = client.update_channel(
          ChannelArn='string',
          Name='string',
          Mode='UNRESTRICTED'|'RESTRICTED',
          Metadata='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the channel.

      

    
    :type Mode: string
    :param Mode: **[REQUIRED]** 

      The mode of the update request.

      

    
    :type Metadata: string
    :param Metadata: 

      The metadata for the update request.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_channel_message(**kwargs)

    

    Updates the content of a message.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateChannelMessage>`_    


    **Request Syntax** 
    ::

      response = client.update_channel_message(
          ChannelArn='string',
          MessageId='string',
          Content='string',
          Metadata='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type MessageId: string
    :param MessageId: **[REQUIRED]** 

      The ID string of the message being updated.

      

    
    :type Content: string
    :param Content: 

      The content of the message being updated.

      

    
    :type Metadata: string
    :param Metadata: 

      The metadata of the message being updated.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string',
            'MessageId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
        

        - **MessageId** *(string) --* 

          The ID string of the message being updated.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_channel_read_marker(**kwargs)

    

    The details of the time when a user last read messages in a channel.

     

    .. note::

       

      The ``x-amz-chime-bearer`` request header is mandatory. Use the ``AppInstanceUserArn`` of the user that makes the API call as the value in the header.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateChannelReadMarker>`_    


    **Request Syntax** 
    ::

      response = client.update_channel_read_marker(
          ChannelArn='string',
          ChimeBearer='string'
      )
    :type ChannelArn: string
    :param ChannelArn: **[REQUIRED]** 

      The ARN of the channel.

      

    
    :type ChimeBearer: string
    :param ChimeBearer: 

      The ``AppInstanceUserArn`` of the user that makes the API call.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ChannelArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ChannelArn** *(string) --* 

          The ARN of the channel.

          
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_global_settings(**kwargs)

    

    Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateGlobalSettings>`_    


    **Request Syntax** 
    ::

      response = client.update_global_settings(
          BusinessCalling={
              'CdrBucket': 'string'
          },
          VoiceConnector={
              'CdrBucket': 'string'
          }
      )
    :type BusinessCalling: dict
    :param BusinessCalling: **[REQUIRED]** 

      The Amazon Chime Business Calling settings.

      

    
      - **CdrBucket** *(string) --* 

        The Amazon S3 bucket designated for call detail record storage.

        

      
    
    :type VoiceConnector: dict
    :param VoiceConnector: **[REQUIRED]** 

      The Amazon Chime Voice Connector settings.

      

    
      - **CdrBucket** *(string) --* 

        The Amazon S3 bucket designated for call detail record storage.

        

      
    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_phone_number(**kwargs)

    

    Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.

     

    For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.

     

    Updates to outbound calling names can take 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdatePhoneNumber>`_    


    **Request Syntax** 
    ::

      response = client.update_phone_number(
          PhoneNumberId='string',
          ProductType='BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
          CallingName='string'
      )
    :type PhoneNumberId: string
    :param PhoneNumberId: **[REQUIRED]** 

      The phone number ID.

      

    
    :type ProductType: string
    :param ProductType: 

      The product type.

      

    
    :type CallingName: string
    :param CallingName: 

      The outbound calling name associated with the phone number.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PhoneNumber': {
                'PhoneNumberId': 'string',
                'E164PhoneNumber': 'string',
                'Country': 'string',
                'Type': 'Local'|'TollFree',
                'ProductType': 'BusinessCalling'|'VoiceConnector'|'SipMediaApplicationDialIn',
                'Status': 'AcquireInProgress'|'AcquireFailed'|'Unassigned'|'Assigned'|'ReleaseInProgress'|'DeleteInProgress'|'ReleaseFailed'|'DeleteFailed',
                'Capabilities': {
                    'InboundCall': True|False,
                    'OutboundCall': True|False,
                    'InboundSMS': True|False,
                    'OutboundSMS': True|False,
                    'InboundMMS': True|False,
                    'OutboundMMS': True|False
                },
                'Associations': [
                    {
                        'Value': 'string',
                        'Name': 'AccountId'|'UserId'|'VoiceConnectorId'|'VoiceConnectorGroupId'|'SipRuleId',
                        'AssociatedTimestamp': datetime(2015, 1, 1)
                    },
                ],
                'CallingName': 'string',
                'CallingNameStatus': 'Unassigned'|'UpdateInProgress'|'UpdateSucceeded'|'UpdateFailed',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'DeletionTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **PhoneNumber** *(dict) --* 

          The updated phone number details.

          
          

          - **PhoneNumberId** *(string) --* 

            The phone number ID.

            
          

          - **E164PhoneNumber** *(string) --* 

            The phone number, in E.164 format.

            
          

          - **Country** *(string) --* 

            The phone number country. Format: ISO 3166-1 alpha-2.

            
          

          - **Type** *(string) --* 

            The phone number type.

            
          

          - **ProductType** *(string) --* 

            The phone number product type.

            
          

          - **Status** *(string) --* 

            The phone number status.

            
          

          - **Capabilities** *(dict) --* 

            The phone number capabilities.

            
            

            - **InboundCall** *(boolean) --* 

              Allows or denies inbound calling for the specified phone number.

              
            

            - **OutboundCall** *(boolean) --* 

              Allows or denies outbound calling for the specified phone number.

              
            

            - **InboundSMS** *(boolean) --* 

              Allows or denies inbound SMS messaging for the specified phone number.

              
            

            - **OutboundSMS** *(boolean) --* 

              Allows or denies outbound SMS messaging for the specified phone number.

              
            

            - **InboundMMS** *(boolean) --* 

              Allows or denies inbound MMS messaging for the specified phone number.

              
            

            - **OutboundMMS** *(boolean) --* 

              Allows or denies outbound MMS messaging for the specified phone number.

              
        
          

          - **Associations** *(list) --* 

            The phone number associations.

            
            

            - *(dict) --* 

              The phone number associations, such as Amazon Chime account ID, Amazon Chime user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

              
              

              - **Value** *(string) --* 

                Contains the ID for the entity specified in Name.

                
              

              - **Name** *(string) --* 

                Defines the association with an Amazon Chime account ID, user ID, Amazon Chime Voice Connector ID, or Amazon Chime Voice Connector group ID.

                
              

              - **AssociatedTimestamp** *(datetime) --* 

                The timestamp of the phone number association, in ISO 8601 format.

                
          
        
          

          - **CallingName** *(string) --* 

            The outbound calling name associated with the phone number.

            
          

          - **CallingNameStatus** *(string) --* 

            The outbound calling name status.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The phone number creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated phone number timestamp, in ISO 8601 format.

            
          

          - **DeletionTimestamp** *(datetime) --* 

            The deleted phone number timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_phone_number_settings(**kwargs)

    

    Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdatePhoneNumberSettings>`_    


    **Request Syntax** 
    ::

      response = client.update_phone_number_settings(
          CallingName='string'
      )
    :type CallingName: string
    :param CallingName: **[REQUIRED]** 

      The default outbound calling name for the account.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_proxy_session(**kwargs)

    

    Updates the specified proxy session details, such as voice or SMS capabilities.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateProxySession>`_    


    **Request Syntax** 
    ::

      response = client.update_proxy_session(
          VoiceConnectorId='string',
          ProxySessionId='string',
          Capabilities=[
              'Voice'|'SMS',
          ],
          ExpiryMinutes=123
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime voice connector ID.

      

    
    :type ProxySessionId: string
    :param ProxySessionId: **[REQUIRED]** 

      The proxy session ID.

      

    
    :type Capabilities: list
    :param Capabilities: **[REQUIRED]** 

      The proxy session capabilities.

      

    
      - *(string) --* 

      
  
    :type ExpiryMinutes: integer
    :param ExpiryMinutes: 

      The number of minutes allowed for the proxy session.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProxySession': {
                'VoiceConnectorId': 'string',
                'ProxySessionId': 'string',
                'Name': 'string',
                'Status': 'Open'|'InProgress'|'Closed',
                'ExpiryMinutes': 123,
                'Capabilities': [
                    'Voice'|'SMS',
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1),
                'EndedTimestamp': datetime(2015, 1, 1),
                'Participants': [
                    {
                        'PhoneNumber': 'string',
                        'ProxyPhoneNumber': 'string'
                    },
                ],
                'NumberSelectionBehavior': 'PreferSticky'|'AvoidSticky',
                'GeoMatchLevel': 'Country'|'AreaCode',
                'GeoMatchParams': {
                    'Country': 'string',
                    'AreaCode': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProxySession** *(dict) --* 

          The proxy session details.

          
          

          - **VoiceConnectorId** *(string) --* 

            The Amazon Chime voice connector ID.

            
          

          - **ProxySessionId** *(string) --* 

            The proxy session ID.

            
          

          - **Name** *(string) --* 

            The name of the proxy session.

            
          

          - **Status** *(string) --* 

            The status of the proxy session.

            
          

          - **ExpiryMinutes** *(integer) --* 

            The number of minutes allowed for the proxy session.

            
          

          - **Capabilities** *(list) --* 

            The proxy session capabilities.

            
            

            - *(string) --* 
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The created time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated time stamp, in ISO 8601 format.

            
          

          - **EndedTimestamp** *(datetime) --* 

            The ended time stamp, in ISO 8601 format.

            
          

          - **Participants** *(list) --* 

            The proxy session participants.

            
            

            - *(dict) --* 

              The phone number and proxy phone number for a participant in an Amazon Chime Voice Connector proxy session.

              
              

              - **PhoneNumber** *(string) --* 

                The participant's phone number.

                
              

              - **ProxyPhoneNumber** *(string) --* 

                The participant's proxy phone number.

                
          
        
          

          - **NumberSelectionBehavior** *(string) --* 

            The preference for proxy phone number reuse, or stickiness, between the same participants across sessions.

            
          

          - **GeoMatchLevel** *(string) --* 

            The preference for matching the country or area code of the proxy phone number with that of the first participant.

            
          

          - **GeoMatchParams** *(dict) --* 

            The country and area code for the proxy phone number.

            
            

            - **Country** *(string) --* 

              The country.

              
            

            - **AreaCode** *(string) --* 

              The area code.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_room(**kwargs)

    

    Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateRoom>`_    


    **Request Syntax** 
    ::

      response = client.update_room(
          AccountId='string',
          RoomId='string',
          Name='string'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type Name: string
    :param Name: 

      The room name.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Room': {
                'RoomId': 'string',
                'Name': 'string',
                'AccountId': 'string',
                'CreatedBy': 'string',
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Room** *(dict) --* 

          The room details.

          
          

          - **RoomId** *(string) --* 

            The room ID.

            
          

          - **Name** *(string) --* 

            The room name.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **CreatedBy** *(string) --* 

            The identifier of the room creator.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The room creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The room update timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_room_membership(**kwargs)

    

    Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account. The member role designates whether the member is a chat room administrator or a general chat room member. The member role can be updated only for user IDs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateRoomMembership>`_    


    **Request Syntax** 
    ::

      response = client.update_room_membership(
          AccountId='string',
          RoomId='string',
          MemberId='string',
          Role='Administrator'|'Member'
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type RoomId: string
    :param RoomId: **[REQUIRED]** 

      The room ID.

      

    
    :type MemberId: string
    :param MemberId: **[REQUIRED]** 

      The member ID.

      

    
    :type Role: string
    :param Role: 

      The role of the member.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RoomMembership': {
                'RoomId': 'string',
                'Member': {
                    'MemberId': 'string',
                    'MemberType': 'User'|'Bot'|'Webhook',
                    'Email': 'string',
                    'FullName': 'string',
                    'AccountId': 'string'
                },
                'Role': 'Administrator'|'Member',
                'InvitedBy': 'string',
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RoomMembership** *(dict) --* 

          The room membership details.

          
          

          - **RoomId** *(string) --* 

            The room ID.

            
          

          - **Member** *(dict) --* 

            The member details, such as email address, name, member ID, and member type.

            
            

            - **MemberId** *(string) --* 

              The member ID (user ID or bot ID).

              
            

            - **MemberType** *(string) --* 

              The member type.

              
            

            - **Email** *(string) --* 

              The member email address.

              
            

            - **FullName** *(string) --* 

              The member name.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
        
          

          - **Role** *(string) --* 

            The membership role.

            
          

          - **InvitedBy** *(string) --* 

            The identifier of the user that invited the room member.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The room membership update timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_sip_media_application(**kwargs)

    

    Updates the details of the specified SIP media application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateSipMediaApplication>`_    


    **Request Syntax** 
    ::

      response = client.update_sip_media_application(
          SipMediaApplicationId='string',
          Name='string',
          Endpoints=[
              {
                  'LambdaArn': 'string'
              },
          ]
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The SIP media application ID.

      

    
    :type Name: string
    :param Name: 

      The new name for the specified SIP media application.

      

    
    :type Endpoints: list
    :param Endpoints: 

      The new set of endpoints for the specified SIP media application.

      

    
      - *(dict) --* 

        The endpoint assigned to the SIP media application.

        

      
        - **LambdaArn** *(string) --* 

          Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplication': {
                'SipMediaApplicationId': 'string',
                'AwsRegion': 'string',
                'Name': 'string',
                'Endpoints': [
                    {
                        'LambdaArn': 'string'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplication** *(dict) --* 

          The updated SIP media application details.

          
          

          - **SipMediaApplicationId** *(string) --* 

            The SIP media application ID.

            
          

          - **AwsRegion** *(string) --* 

            The AWS Region in which the SIP media application is created.

            
          

          - **Name** *(string) --* 

            The name of the SIP media application.

            
          

          - **Endpoints** *(list) --* 

            List of endpoints for SIP media application. Currently, only one endpoint per SIP media application is permitted.

            
            

            - *(dict) --* 

              The endpoint assigned to the SIP media application.

              
              

              - **LambdaArn** *(string) --* 

                Valid Amazon Resource Name (ARN) of the Lambda function. The function must be created in the same AWS Region as the SIP media application.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The SIP media application creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The SIP media application updated timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_sip_media_application_call(**kwargs)

    

    Allows you to trigger a Lambda function at any time while a call is active, and replace the current actions with new actions returned by the invocation.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateSipMediaApplicationCall>`_    


    **Request Syntax** 
    ::

      response = client.update_sip_media_application_call(
          SipMediaApplicationId='string',
          TransactionId='string',
          Arguments={
              'string': 'string'
          }
      )
    :type SipMediaApplicationId: string
    :param SipMediaApplicationId: **[REQUIRED]** 

      The ID of the SIP media application handling the call.

      

    
    :type TransactionId: string
    :param TransactionId: **[REQUIRED]** 

      The ID of the call transaction.

      

    
    :type Arguments: dict
    :param Arguments: **[REQUIRED]** 

      Arguments made available to the Lambda function as part of the ``CALL_UPDATE_REQUESTED`` event. Can contain 0-20 key-value pairs.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipMediaApplicationCall': {
                'TransactionId': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipMediaApplicationCall** *(dict) --* 

          A ``Call`` instance for a SIP media application.

          
          

          - **TransactionId** *(string) --* 

            The transaction ID of a call.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_sip_rule(**kwargs)

    

    Updates the details of the specified SIP rule.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateSipRule>`_    


    **Request Syntax** 
    ::

      response = client.update_sip_rule(
          SipRuleId='string',
          Name='string',
          Disabled=True|False,
          TargetApplications=[
              {
                  'SipMediaApplicationId': 'string',
                  'Priority': 123,
                  'AwsRegion': 'string'
              },
          ]
      )
    :type SipRuleId: string
    :param SipRuleId: **[REQUIRED]** 

      The SIP rule ID.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The new name for the specified SIP rule.

      

    
    :type Disabled: boolean
    :param Disabled: 

      The new value specified to indicate whether the rule is disabled.

      

    
    :type TargetApplications: list
    :param TargetApplications: 

      The new value of the list of target applications.

      

    
      - *(dict) --* 

        Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

        

      
        - **SipMediaApplicationId** *(string) --* 

          The SIP media application ID.

          

        
        - **Priority** *(integer) --* 

          Priority of the SIP media application in the target list.

          

        
        - **AwsRegion** *(string) --* 

          The AWS Region of the target application.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SipRule': {
                'SipRuleId': 'string',
                'Name': 'string',
                'Disabled': True|False,
                'TriggerType': 'ToPhoneNumber'|'RequestUriHostname',
                'TriggerValue': 'string',
                'TargetApplications': [
                    {
                        'SipMediaApplicationId': 'string',
                        'Priority': 123,
                        'AwsRegion': 'string'
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SipRule** *(dict) --* 

          Updated SIP rule details.

          
          

          - **SipRuleId** *(string) --* 

            The SIP rule ID.

            
          

          - **Name** *(string) --* 

            The name of the SIP rule.

            
          

          - **Disabled** *(boolean) --* 

            Indicates whether the SIP rule is enabled or disabled. You must disable a rule before you can delete it.

            
          

          - **TriggerType** *(string) --* 

            The type of trigger assigned to the SIP rule in ``TriggerValue`` , currently ``RequestUriHostname`` or ``ToPhoneNumber`` .

            
          

          - **TriggerValue** *(string) --* 

            If ``TriggerType`` is ``RequestUriHostname`` , then the value can be the outbound host name of the Amazon Chime Voice Connector. If ``TriggerType`` is ``ToPhoneNumber`` , then the value can be a customer-owned phone number in E164 format. ``SipRule`` is triggered when a SIP rule requests host name or ``ToPhoneNumber`` matches in the incoming SIP request.

            
          

          - **TargetApplications** *(list) --* 

            Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

            
            

            - *(dict) --* 

              Target SIP media application and other details, such as priority and AWS Region, to be specified in the SIP rule. Only one SIP rule per AWS Region can be provided.

              
              

              - **SipMediaApplicationId** *(string) --* 

                The SIP media application ID.

                
              

              - **Priority** *(integer) --* 

                Priority of the SIP media application in the target list.

                
              

              - **AwsRegion** *(string) --* 

                The AWS Region of the target application.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The time at which the SIP rule was created, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The time at which the SIP rule was last updated, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_user(**kwargs)

    

    Updates user details for a specified user ID. Currently, only ``LicenseType`` updates are supported for this action.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateUser>`_    


    **Request Syntax** 
    ::

      response = client.update_user(
          AccountId='string',
          UserId='string',
          LicenseType='Basic'|'Plus'|'Pro'|'ProTrial',
          UserType='PrivateUser'|'SharedDevice',
          AlexaForBusinessMetadata={
              'IsAlexaForBusinessEnabled': True|False,
              'AlexaForBusinessRoomArn': 'string'
          }
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    :type LicenseType: string
    :param LicenseType: 

      The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.

      

    
    :type UserType: string
    :param UserType: 

      The user type.

      

    
    :type AlexaForBusinessMetadata: dict
    :param AlexaForBusinessMetadata: 

      The Alexa for Business metadata.

      

    
      - **IsAlexaForBusinessEnabled** *(boolean) --* 

        Starts or stops Alexa for Business.

        

      
      - **AlexaForBusinessRoomArn** *(string) --* 

        The ARN of the room resource.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'User': {
                'UserId': 'string',
                'AccountId': 'string',
                'PrimaryEmail': 'string',
                'PrimaryProvisionedNumber': 'string',
                'DisplayName': 'string',
                'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                'UserType': 'PrivateUser'|'SharedDevice',
                'UserRegistrationStatus': 'Unregistered'|'Registered'|'Suspended',
                'UserInvitationStatus': 'Pending'|'Accepted'|'Failed',
                'RegisteredOn': datetime(2015, 1, 1),
                'InvitedOn': datetime(2015, 1, 1),
                'AlexaForBusinessMetadata': {
                    'IsAlexaForBusinessEnabled': True|False,
                    'AlexaForBusinessRoomArn': 'string'
                },
                'PersonalPIN': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **User** *(dict) --* 

          The updated user details.

          
          

          - **UserId** *(string) --* 

            The user ID.

            
          

          - **AccountId** *(string) --* 

            The Amazon Chime account ID.

            
          

          - **PrimaryEmail** *(string) --* 

            The primary email address of the user.

            
          

          - **PrimaryProvisionedNumber** *(string) --* 

            The primary phone number associated with the user.

            
          

          - **DisplayName** *(string) --* 

            The display name of the user.

            
          

          - **LicenseType** *(string) --* 

            The license type for the user.

            
          

          - **UserType** *(string) --* 

            The user type.

            
          

          - **UserRegistrationStatus** *(string) --* 

            The user registration status.

            
          

          - **UserInvitationStatus** *(string) --* 

            The user invite status.

            
          

          - **RegisteredOn** *(datetime) --* 

            Date and time when the user is registered, in ISO 8601 format.

            
          

          - **InvitedOn** *(datetime) --* 

            Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.

            
          

          - **AlexaForBusinessMetadata** *(dict) --* 

            The Alexa for Business metadata.

            
            

            - **IsAlexaForBusinessEnabled** *(boolean) --* 

              Starts or stops Alexa for Business.

              
            

            - **AlexaForBusinessRoomArn** *(string) --* 

              The ARN of the room resource.

              
        
          

          - **PersonalPIN** *(string) --* 

            The user's personal meeting PIN.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_user_settings(**kwargs)

    

    Updates the settings for the specified user, such as phone number settings.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateUserSettings>`_    


    **Request Syntax** 
    ::

      response = client.update_user_settings(
          AccountId='string',
          UserId='string',
          UserSettings={
              'Telephony': {
                  'InboundCalling': True|False,
                  'OutboundCalling': True|False,
                  'SMS': True|False
              }
          }
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserId: string
    :param UserId: **[REQUIRED]** 

      The user ID.

      

    
    :type UserSettings: dict
    :param UserSettings: **[REQUIRED]** 

      The user settings to update.

      

    
      - **Telephony** *(dict) --* **[REQUIRED]** 

        The telephony settings associated with the user.

        

      
        - **InboundCalling** *(boolean) --* **[REQUIRED]** 

          Allows or denies inbound calling.

          

        
        - **OutboundCalling** *(boolean) --* **[REQUIRED]** 

          Allows or denies outbound calling.

          

        
        - **SMS** *(boolean) --* **[REQUIRED]** 

          Allows or denies SMS messaging.

          

        
      
    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_voice_connector(**kwargs)

    

    Updates details for the specified Amazon Chime Voice Connector.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateVoiceConnector>`_    


    **Request Syntax** 
    ::

      response = client.update_voice_connector(
          VoiceConnectorId='string',
          Name='string',
          RequireEncryption=True|False
      )
    :type VoiceConnectorId: string
    :param VoiceConnectorId: **[REQUIRED]** 

      The Amazon Chime Voice Connector ID.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the Amazon Chime Voice Connector.

      

    
    :type RequireEncryption: boolean
    :param RequireEncryption: **[REQUIRED]** 

      When enabled, requires encryption for the Amazon Chime Voice Connector.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnector': {
                'VoiceConnectorId': 'string',
                'AwsRegion': 'us-east-1'|'us-west-2',
                'Name': 'string',
                'OutboundHostName': 'string',
                'RequireEncryption': True|False,
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnector** *(dict) --* 

          The updated Amazon Chime Voice Connector details.

          
          

          - **VoiceConnectorId** *(string) --* 

            The Amazon Chime Voice Connector ID.

            
          

          - **AwsRegion** *(string) --* 

            The AWS Region in which the Amazon Chime Voice Connector is created. Default: ``us-east-1`` . 

            
          

          - **Name** *(string) --* 

            The name of the Amazon Chime Voice Connector.

            
          

          - **OutboundHostName** *(string) --* 

            The outbound host name for the Amazon Chime Voice Connector.

            
          

          - **RequireEncryption** *(boolean) --* 

            Designates whether encryption is required for the Amazon Chime Voice Connector.

            
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime Voice Connector creation timestamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated Amazon Chime Voice Connector timestamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

  .. py:method:: update_voice_connector_group(**kwargs)

    

    Updates details of the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/UpdateVoiceConnectorGroup>`_    


    **Request Syntax** 
    ::

      response = client.update_voice_connector_group(
          VoiceConnectorGroupId='string',
          Name='string',
          VoiceConnectorItems=[
              {
                  'VoiceConnectorId': 'string',
                  'Priority': 123
              },
          ]
      )
    :type VoiceConnectorGroupId: string
    :param VoiceConnectorGroupId: **[REQUIRED]** 

      The Amazon Chime Voice Connector group ID.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name of the Amazon Chime Voice Connector group.

      

    
    :type VoiceConnectorItems: list
    :param VoiceConnectorItems: **[REQUIRED]** 

      The ``VoiceConnectorItems`` to associate with the group.

      

    
      - *(dict) --* 

        For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 ``VoiceConnectorItems`` per Amazon Chime Voice Connector group.

        

      
        - **VoiceConnectorId** *(string) --* **[REQUIRED]** 

          The Amazon Chime Voice Connector ID.

          

        
        - **Priority** *(integer) --* **[REQUIRED]** 

          The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VoiceConnectorGroup': {
                'VoiceConnectorGroupId': 'string',
                'Name': 'string',
                'VoiceConnectorItems': [
                    {
                        'VoiceConnectorId': 'string',
                        'Priority': 123
                    },
                ],
                'CreatedTimestamp': datetime(2015, 1, 1),
                'UpdatedTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VoiceConnectorGroup** *(dict) --* 

          The updated Amazon Chime Voice Connector group details.

          
          

          - **VoiceConnectorGroupId** *(string) --* 

            The Amazon Chime Voice Connector group ID.

            
          

          - **Name** *(string) --* 

            The name of the Amazon Chime Voice Connector group.

            
          

          - **VoiceConnectorItems** *(list) --* 

            The Amazon Chime Voice Connectors to which to route inbound calls.

            
            

            - *(dict) --* 

              For Amazon Chime Voice Connector groups, the Amazon Chime Voice Connectors to which to route inbound calls. Includes priority configuration settings. Limit: 3 ``VoiceConnectorItems`` per Amazon Chime Voice Connector group.

              
              

              - **VoiceConnectorId** *(string) --* 

                The Amazon Chime Voice Connector ID.

                
              

              - **Priority** *(integer) --* 

                The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.

                
          
        
          

          - **CreatedTimestamp** *(datetime) --* 

            The Amazon Chime Voice Connector group creation time stamp, in ISO 8601 format.

            
          

          - **UpdatedTimestamp** *(datetime) --* 

            The updated Amazon Chime Voice Connector group time stamp, in ISO 8601 format.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Chime.Client.exceptions.UnauthorizedClientException`

    
    *     :py:class:`Chime.Client.exceptions.NotFoundException`

    
    *     :py:class:`Chime.Client.exceptions.ForbiddenException`

    
    *     :py:class:`Chime.Client.exceptions.BadRequestException`

    
    *     :py:class:`Chime.Client.exceptions.ConflictException`

    
    *     :py:class:`Chime.Client.exceptions.ThrottledClientException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Chime.Client.exceptions.ServiceFailureException`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`Chime.Paginator.ListAccounts`


* :py:class:`Chime.Paginator.ListUsers`



.. py:class:: Chime.Paginator.ListAccounts

  ::

    
    paginator = client.get_paginator('list_accounts')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`Chime.Client.list_accounts`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListAccounts>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          Name='string',
          UserEmail='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type Name: string
    :param Name: 

      Amazon Chime account name prefix with which to filter results.

      

    
    :type UserEmail: string
    :param UserEmail: 

      User email address with which to filter results.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Accounts': [
                {
                    'AwsAccountId': 'string',
                    'AccountId': 'string',
                    'Name': 'string',
                    'AccountType': 'Team'|'EnterpriseDirectory'|'EnterpriseLWA'|'EnterpriseOIDC',
                    'CreatedTimestamp': datetime(2015, 1, 1),
                    'DefaultLicense': 'Basic'|'Plus'|'Pro'|'ProTrial',
                    'SupportedLicenses': [
                        'Basic'|'Plus'|'Pro'|'ProTrial',
                    ],
                    'AccountStatus': 'Suspended'|'Active',
                    'SigninDelegateGroups': [
                        {
                            'GroupName': 'string'
                        },
                    ]
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Accounts** *(list) --* 

          List of Amazon Chime accounts and account details.

          
          

          - *(dict) --* 

            The Amazon Chime account details. An AWS account can have multiple Amazon Chime accounts.

            
            

            - **AwsAccountId** *(string) --* 

              The AWS account ID.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
            

            - **Name** *(string) --* 

              The Amazon Chime account name.

              
            

            - **AccountType** *(string) --* 

              The Amazon Chime account type. For more information about different account types, see `Managing Your Amazon Chime Accounts <https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html>`__ in the *Amazon Chime Administration Guide* .

              
            

            - **CreatedTimestamp** *(datetime) --* 

              The Amazon Chime account creation timestamp, in ISO 8601 format.

              
            

            - **DefaultLicense** *(string) --* 

              The default license for the Amazon Chime account.

              
            

            - **SupportedLicenses** *(list) --* 

              Supported licenses for the Amazon Chime account.

              
              

              - *(string) --* 
          
            

            - **AccountStatus** *(string) --* 

              The status of the account, ``Suspended`` or ``Active`` .

              
            

            - **SigninDelegateGroups** *(list) --* 

              The sign-in delegate groups associated with the account.

              
              

              - *(dict) --* 

                An Active Directory (AD) group whose members are granted permission to act as delegates.

                
                

                - **GroupName** *(string) --* 

                  The group name.

                  
            
          
        
      
    

.. py:class:: Chime.Paginator.ListUsers

  ::

    
    paginator = client.get_paginator('list_users')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`Chime.Client.list_users`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/chime-2018-05-01/ListUsers>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          AccountId='string',
          UserEmail='string',
          UserType='PrivateUser'|'SharedDevice',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type AccountId: string
    :param AccountId: **[REQUIRED]** 

      The Amazon Chime account ID.

      

    
    :type UserEmail: string
    :param UserEmail: 

      Optional. The user email address used to filter results. Maximum 1.

      

    
    :type UserType: string
    :param UserType: 

      The user type.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Users': [
                {
                    'UserId': 'string',
                    'AccountId': 'string',
                    'PrimaryEmail': 'string',
                    'PrimaryProvisionedNumber': 'string',
                    'DisplayName': 'string',
                    'LicenseType': 'Basic'|'Plus'|'Pro'|'ProTrial',
                    'UserType': 'PrivateUser'|'SharedDevice',
                    'UserRegistrationStatus': 'Unregistered'|'Registered'|'Suspended',
                    'UserInvitationStatus': 'Pending'|'Accepted'|'Failed',
                    'RegisteredOn': datetime(2015, 1, 1),
                    'InvitedOn': datetime(2015, 1, 1),
                    'AlexaForBusinessMetadata': {
                        'IsAlexaForBusinessEnabled': True|False,
                        'AlexaForBusinessRoomArn': 'string'
                    },
                    'PersonalPIN': 'string'
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Users** *(list) --* 

          List of users and user details.

          
          

          - *(dict) --* 

            The user on the Amazon Chime account.

            
            

            - **UserId** *(string) --* 

              The user ID.

              
            

            - **AccountId** *(string) --* 

              The Amazon Chime account ID.

              
            

            - **PrimaryEmail** *(string) --* 

              The primary email address of the user.

              
            

            - **PrimaryProvisionedNumber** *(string) --* 

              The primary phone number associated with the user.

              
            

            - **DisplayName** *(string) --* 

              The display name of the user.

              
            

            - **LicenseType** *(string) --* 

              The license type for the user.

              
            

            - **UserType** *(string) --* 

              The user type.

              
            

            - **UserRegistrationStatus** *(string) --* 

              The user registration status.

              
            

            - **UserInvitationStatus** *(string) --* 

              The user invite status.

              
            

            - **RegisteredOn** *(datetime) --* 

              Date and time when the user is registered, in ISO 8601 format.

              
            

            - **InvitedOn** *(datetime) --* 

              Date and time when the user is invited to the Amazon Chime account, in ISO 8601 format.

              
            

            - **AlexaForBusinessMetadata** *(dict) --* 

              The Alexa for Business metadata.

              
              

              - **IsAlexaForBusinessEnabled** *(boolean) --* 

                Starts or stops Alexa for Business.

                
              

              - **AlexaForBusinessRoomArn** *(string) --* 

                The ARN of the room resource.

                
          
            

            - **PersonalPIN** *(string) --* 

              The user's personal meeting PIN.

              
        
      
    