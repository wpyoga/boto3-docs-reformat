

**********
DevOpsGuru
**********

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: DevOpsGuru.Client

  A low-level client representing Amazon DevOps Guru
  

  Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the AWS resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and AWS CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an *insight* that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see `What is Amazon DevOps Guru <https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html>`__ . 

   

  You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in AWS Systems Manager for each insight to help you manage and track your work addressing insights. 

   

  To learn about the DevOps Guru workflow, see `How DevOps Guru works <https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works>`__ . To learn about DevOps Guru concepts, see `Concepts in DevOps Guru <https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html>`__ . 

  ::

    
    import boto3
    
    client = boto3.client('devops-guru')

  
  These are the available methods:
  
  *   :py:meth:`~DevOpsGuru.Client.add_notification_channel`

  
  *   :py:meth:`~DevOpsGuru.Client.can_paginate`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_account_health`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_account_overview`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_anomaly`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_feedback`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_insight`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_resource_collection_health`

  
  *   :py:meth:`~DevOpsGuru.Client.describe_service_integration`

  
  *   :py:meth:`~DevOpsGuru.Client.generate_presigned_url`

  
  *   :py:meth:`~DevOpsGuru.Client.get_cost_estimation`

  
  *   :py:meth:`~DevOpsGuru.Client.get_paginator`

  
  *   :py:meth:`~DevOpsGuru.Client.get_resource_collection`

  
  *   :py:meth:`~DevOpsGuru.Client.get_waiter`

  
  *   :py:meth:`~DevOpsGuru.Client.list_anomalies_for_insight`

  
  *   :py:meth:`~DevOpsGuru.Client.list_events`

  
  *   :py:meth:`~DevOpsGuru.Client.list_insights`

  
  *   :py:meth:`~DevOpsGuru.Client.list_notification_channels`

  
  *   :py:meth:`~DevOpsGuru.Client.list_recommendations`

  
  *   :py:meth:`~DevOpsGuru.Client.put_feedback`

  
  *   :py:meth:`~DevOpsGuru.Client.remove_notification_channel`

  
  *   :py:meth:`~DevOpsGuru.Client.search_insights`

  
  *   :py:meth:`~DevOpsGuru.Client.start_cost_estimation`

  
  *   :py:meth:`~DevOpsGuru.Client.update_resource_collection`

  
  *   :py:meth:`~DevOpsGuru.Client.update_service_integration`

  

  .. py:method:: add_notification_channel(**kwargs)

    

    Adds a notification channel to DevOps Guru. A notification channel is used to notify you about important DevOps Guru events, such as when an insight is generated. 

     

    If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see `Permissions for cross account Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html>`__ .

     

    If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see `Permissions for AWS KMS–encrypted Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/AddNotificationChannel>`_    


    **Request Syntax** 
    ::

      response = client.add_notification_channel(
          Config={
              'Sns': {
                  'TopicArn': 'string'
              }
          }
      )
    :type Config: dict
    :param Config: **[REQUIRED]** 

      A ``NotificationChannelConfig`` object that specifies what type of notification channel to add. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). 

      

    
      - **Sns** *(dict) --* **[REQUIRED]** 

        Information about a notification channel configured in DevOps Guru to send notifications when insights are created. 

         

        If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see `Permissions for cross account Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html>`__ .

         

        If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see `Permissions for AWS KMS–encrypted Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html>`__ .

        

      
        - **TopicArn** *(string) --* 

          The Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic. 

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The ID of the added notification channel. 

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ConflictException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: describe_account_health()

    

    Returns the number of open reactive insights, the number of open proactive insights, and the number of metrics analyzed in your AWS account. Use these numbers to gauge the health of operations in your AWS account. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeAccountHealth>`_    


    **Request Syntax** 
    ::

      response = client.describe_account_health()
      
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'OpenReactiveInsights': 123,
            'OpenProactiveInsights': 123,
            'MetricsAnalyzed': 123,
            'ResourceHours': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **OpenReactiveInsights** *(integer) --* 

          An integer that specifies the number of open reactive insights in your AWS account. 

          
        

        - **OpenProactiveInsights** *(integer) --* 

          An integer that specifies the number of open proactive insights in your AWS account. 

          
        

        - **MetricsAnalyzed** *(integer) --* 

          An integer that specifies the number of metrics that have been analyzed in your AWS account. 

          
        

        - **ResourceHours** *(integer) --* 

          The number of Amazon DevOps Guru resource analysis hours billed to the current AWS account in the last hour. 

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: describe_account_overview(**kwargs)

    

    For the time range passed in, returns the number of open reactive insight that were created, the number of open proactive insights that were created, and the Mean Time to Recover (MTTR) for all closed reactive insights. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeAccountOverview>`_    


    **Request Syntax** 
    ::

      response = client.describe_account_overview(
          FromTime=datetime(2015, 1, 1),
          ToTime=datetime(2015, 1, 1)
      )
    :type FromTime: datetime
    :param FromTime: **[REQUIRED]** 

      The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. 

      

    
    :type ToTime: datetime
    :param ToTime: 

      The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ReactiveInsights': 123,
            'ProactiveInsights': 123,
            'MeanTimeToRecoverInMilliseconds': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ReactiveInsights** *(integer) --* 

          An integer that specifies the number of open reactive insights in your AWS account that were created during the time range passed in. 

          
        

        - **ProactiveInsights** *(integer) --* 

          An integer that specifies the number of open proactive insights in your AWS account that were created during the time range passed in. 

          
        

        - **MeanTimeToRecoverInMilliseconds** *(integer) --* 

          The Mean Time to Recover (MTTR) for all closed insights that were created during the time range passed in. 

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: describe_anomaly(**kwargs)

    

    Returns details about an anomaly that you specify using its ID. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeAnomaly>`_    


    **Request Syntax** 
    ::

      response = client.describe_anomaly(
          Id='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The ID of the anomaly. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveAnomaly': {
                'Id': 'string',
                'Severity': 'LOW'|'MEDIUM'|'HIGH',
                'Status': 'ONGOING'|'CLOSED',
                'UpdateTime': datetime(2015, 1, 1),
                'AnomalyTimeRange': {
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1)
                },
                'AnomalyReportedTimeRange': {
                    'OpenTime': datetime(2015, 1, 1),
                    'CloseTime': datetime(2015, 1, 1)
                },
                'PredictionTimeRange': {
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1)
                },
                'SourceDetails': {
                    'CloudWatchMetrics': [
                        {
                            'MetricName': 'string',
                            'Namespace': 'string',
                            'Dimensions': [
                                {
                                    'Name': 'string',
                                    'Value': 'string'
                                },
                            ],
                            'Stat': 'Sum'|'Average'|'SampleCount'|'Minimum'|'Maximum'|'p99'|'p90'|'p50',
                            'Unit': 'string',
                            'Period': 123
                        },
                    ]
                },
                'AssociatedInsightId': 'string',
                'ResourceCollection': {
                    'CloudFormation': {
                        'StackNames': [
                            'string',
                        ]
                    }
                },
                'Limit': 123.0
            },
            'ReactiveAnomaly': {
                'Id': 'string',
                'Severity': 'LOW'|'MEDIUM'|'HIGH',
                'Status': 'ONGOING'|'CLOSED',
                'AnomalyTimeRange': {
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1)
                },
                'AnomalyReportedTimeRange': {
                    'OpenTime': datetime(2015, 1, 1),
                    'CloseTime': datetime(2015, 1, 1)
                },
                'SourceDetails': {
                    'CloudWatchMetrics': [
                        {
                            'MetricName': 'string',
                            'Namespace': 'string',
                            'Dimensions': [
                                {
                                    'Name': 'string',
                                    'Value': 'string'
                                },
                            ],
                            'Stat': 'Sum'|'Average'|'SampleCount'|'Minimum'|'Maximum'|'p99'|'p90'|'p50',
                            'Unit': 'string',
                            'Period': 123
                        },
                    ]
                },
                'AssociatedInsightId': 'string',
                'ResourceCollection': {
                    'CloudFormation': {
                        'StackNames': [
                            'string',
                        ]
                    }
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveAnomaly** *(dict) --* 

          A ``ReactiveAnomaly`` object that represents the requested anomaly. 

          
          

          - **Id** *(string) --* 

            The ID of a proactive anomaly. 

            
          

          - **Severity** *(string) --* 

            The severity of a proactive anomaly. 

            
          

          - **Status** *(string) --* 

            The status of a proactive anomaly. 

            
          

          - **UpdateTime** *(datetime) --* 

            The time of the anomaly's most recent update. 

            
          

          - **AnomalyTimeRange** *(dict) --* 

            A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from ``AnomalyReportedTimeRange`` , which specifies the time range when DevOps Guru opens and then closes an anomaly. 

            
            

            - **StartTime** *(datetime) --* 

              The time when the anomalous behavior started. 

              
            

            - **EndTime** *(datetime) --* 

              The time when the anomalous behavior ended. 

              
        
          

          - **AnomalyReportedTimeRange** *(dict) --* 

            A ``AnomalyReportedTimeRange`` object that specifies the time range between when the anomaly is opened and the time when it is closed. 

            
            

            - **OpenTime** *(datetime) --* 

              The time when an anomaly is opened. 

              
            

            - **CloseTime** *(datetime) --* 

              The time when an anomaly is closed. 

              
        
          

          - **PredictionTimeRange** *(dict) --* 

            The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

            
            

            - **StartTime** *(datetime) --* 

              The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

              
            

            - **EndTime** *(datetime) --* 

              The time when the behavior in a proactive insight is expected to end. 

              
        
          

          - **SourceDetails** *(dict) --* 

            Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics. 

            
            

            - **CloudWatchMetrics** *(list) --* 

              An array of ``CloudWatchMetricsDetail`` object that contains information about the analyzed metrics that displayed anomalous behavior. 

              
              

              - *(dict) --* 

                Information about an Amazon CloudWatch metric. 

                
                

                - **MetricName** *(string) --* 

                  The name of the CloudWatch metric. 

                  
                

                - **Namespace** *(string) --* 

                  The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics. 

                  
                

                - **Dimensions** *(list) --* 

                  An array of CloudWatch dimensions associated with 

                  
                  

                  - *(dict) --* 

                    The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see `Dimensions <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension>`__ in the *Amazon CloudWatch User Guide* . 

                    
                    

                    - **Name** *(string) --* 

                      The name of the CloudWatch dimension. 

                      
                    

                    - **Value** *(string) --* 

                      The value of the CloudWatch dimension. 

                      
                
              
                

                - **Stat** *(string) --* 

                  The type of statistic associated with the CloudWatch metric. For more information, see `Statistics <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic>`__ in the *Amazon CloudWatch User Guide* . 

                  
                

                - **Unit** *(string) --* 

                  The unit of measure used for the CloudWatch metric. For example, ``Bytes`` , ``Seconds`` , ``Count`` , and ``Percent`` . 

                  
                

                - **Period** *(integer) --* 

                  The length of time associated with the CloudWatch metric in number of seconds. 

                  
            
          
        
          

          - **AssociatedInsightId** *(string) --* 

            The ID of the insight that contains this anomaly. An insight is composed of related anomalies. 

            
          

          - **ResourceCollection** *(dict) --* 

            A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

            
            

            - **CloudFormation** *(dict) --* 

              An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **StackNames** *(list) --* 

                An array of CloudFormation stack names. 

                
                

                - *(string) --* 
            
          
        
          

          - **Limit** *(float) --* 

            A threshold that was exceeded by behavior in analyzed resources. Exceeding this threshold is related to the anomalous behavior that generated this anomaly. 

            
      
        

        - **ReactiveAnomaly** *(dict) --* 

          A ``ProactiveAnomaly`` object that represents the requested anomaly. 

          
          

          - **Id** *(string) --* 

            The ID of the reactive anomaly. 

            
          

          - **Severity** *(string) --* 

            The severity of the anomaly. 

            
          

          - **Status** *(string) --* 

            The status of the anomaly. 

            
          

          - **AnomalyTimeRange** *(dict) --* 

            A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from ``AnomalyReportedTimeRange`` , which specifies the time range when DevOps Guru opens and then closes an anomaly. 

            
            

            - **StartTime** *(datetime) --* 

              The time when the anomalous behavior started. 

              
            

            - **EndTime** *(datetime) --* 

              The time when the anomalous behavior ended. 

              
        
          

          - **AnomalyReportedTimeRange** *(dict) --* 

            A ``AnomalyReportedTimeRange`` object that specifies the time range between when the anomaly is opened and the time when it is closed. 

            
            

            - **OpenTime** *(datetime) --* 

              The time when an anomaly is opened. 

              
            

            - **CloseTime** *(datetime) --* 

              The time when an anomaly is closed. 

              
        
          

          - **SourceDetails** *(dict) --* 

            Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics. 

            
            

            - **CloudWatchMetrics** *(list) --* 

              An array of ``CloudWatchMetricsDetail`` object that contains information about the analyzed metrics that displayed anomalous behavior. 

              
              

              - *(dict) --* 

                Information about an Amazon CloudWatch metric. 

                
                

                - **MetricName** *(string) --* 

                  The name of the CloudWatch metric. 

                  
                

                - **Namespace** *(string) --* 

                  The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics. 

                  
                

                - **Dimensions** *(list) --* 

                  An array of CloudWatch dimensions associated with 

                  
                  

                  - *(dict) --* 

                    The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see `Dimensions <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension>`__ in the *Amazon CloudWatch User Guide* . 

                    
                    

                    - **Name** *(string) --* 

                      The name of the CloudWatch dimension. 

                      
                    

                    - **Value** *(string) --* 

                      The value of the CloudWatch dimension. 

                      
                
              
                

                - **Stat** *(string) --* 

                  The type of statistic associated with the CloudWatch metric. For more information, see `Statistics <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic>`__ in the *Amazon CloudWatch User Guide* . 

                  
                

                - **Unit** *(string) --* 

                  The unit of measure used for the CloudWatch metric. For example, ``Bytes`` , ``Seconds`` , ``Count`` , and ``Percent`` . 

                  
                

                - **Period** *(integer) --* 

                  The length of time associated with the CloudWatch metric in number of seconds. 

                  
            
          
        
          

          - **AssociatedInsightId** *(string) --* 

            The ID of the insight that contains this anomaly. An insight is composed of related anomalies. 

            
          

          - **ResourceCollection** *(dict) --* 

            A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

            
            

            - **CloudFormation** *(dict) --* 

              An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **StackNames** *(list) --* 

                An array of CloudFormation stack names. 

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: describe_feedback(**kwargs)

    

    Returns the most recent feedback submitted in the current AWS account and Region. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeFeedback>`_    


    **Request Syntax** 
    ::

      response = client.describe_feedback(
          InsightId='string'
      )
    :type InsightId: string
    :param InsightId: 

      The ID of the insight for which the feedback was provided. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'InsightFeedback': {
                'Id': 'string',
                'Feedback': 'VALID_COLLECTION'|'RECOMMENDATION_USEFUL'|'ALERT_TOO_SENSITIVE'|'DATA_NOISY_ANOMALY'|'DATA_INCORRECT'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **InsightFeedback** *(dict) --* 

          Information about insight feedback received from a customer. 

          
          

          - **Id** *(string) --* 

            The insight feedback ID. 

            
          

          - **Feedback** *(string) --* 

            The feedback provided by the customer. 

            
      
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: describe_insight(**kwargs)

    

    Returns details about an insight that you specify using its ID. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeInsight>`_    


    **Request Syntax** 
    ::

      response = client.describe_insight(
          Id='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The ID of the insight. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveInsight': {
                'Id': 'string',
                'Name': 'string',
                'Severity': 'LOW'|'MEDIUM'|'HIGH',
                'Status': 'ONGOING'|'CLOSED',
                'InsightTimeRange': {
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1)
                },
                'PredictionTimeRange': {
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1)
                },
                'ResourceCollection': {
                    'CloudFormation': {
                        'StackNames': [
                            'string',
                        ]
                    }
                },
                'SsmOpsItemId': 'string'
            },
            'ReactiveInsight': {
                'Id': 'string',
                'Name': 'string',
                'Severity': 'LOW'|'MEDIUM'|'HIGH',
                'Status': 'ONGOING'|'CLOSED',
                'InsightTimeRange': {
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1)
                },
                'ResourceCollection': {
                    'CloudFormation': {
                        'StackNames': [
                            'string',
                        ]
                    }
                },
                'SsmOpsItemId': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveInsight** *(dict) --* 

          A ``ProactiveInsight`` object that represents the requested insight. 

          
          

          - **Id** *(string) --* 

            The ID of the proactive insight. 

            
          

          - **Name** *(string) --* 

            The name of the proactive insight. 

            
          

          - **Severity** *(string) --* 

            The severity of the proactive insight. 

            
          

          - **Status** *(string) --* 

            The status of the proactive insight. 

            
          

          - **InsightTimeRange** *(dict) --* 

            A time ranged that specifies when the observed behavior in an insight started and ended. 

            
            

            - **StartTime** *(datetime) --* 

              The time when the behavior described in an insight started. 

              
            

            - **EndTime** *(datetime) --* 

              The time when the behavior described in an insight ended. 

              
        
          

          - **PredictionTimeRange** *(dict) --* 

            The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

            
            

            - **StartTime** *(datetime) --* 

              The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

              
            

            - **EndTime** *(datetime) --* 

              The time when the behavior in a proactive insight is expected to end. 

              
        
          

          - **ResourceCollection** *(dict) --* 

            A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

            
            

            - **CloudFormation** *(dict) --* 

              An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **StackNames** *(list) --* 

                An array of CloudFormation stack names. 

                
                

                - *(string) --* 
            
          
        
          

          - **SsmOpsItemId** *(string) --* 

            The ID of the AWS System Manager OpsItem created for this insight. You must enable the creation of OpstItems insights before they are created for each insight. 

            
      
        

        - **ReactiveInsight** *(dict) --* 

          A ``ReactiveInsight`` object that represents the requested insight. 

          
          

          - **Id** *(string) --* 

            The ID of a reactive insight. 

            
          

          - **Name** *(string) --* 

            The name of a reactive insight. 

            
          

          - **Severity** *(string) --* 

            The severity of a reactive insight. 

            
          

          - **Status** *(string) --* 

            The status of a reactive insight. 

            
          

          - **InsightTimeRange** *(dict) --* 

            A time ranged that specifies when the observed behavior in an insight started and ended. 

            
            

            - **StartTime** *(datetime) --* 

              The time when the behavior described in an insight started. 

              
            

            - **EndTime** *(datetime) --* 

              The time when the behavior described in an insight ended. 

              
        
          

          - **ResourceCollection** *(dict) --* 

            A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

            
            

            - **CloudFormation** *(dict) --* 

              An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **StackNames** *(list) --* 

                An array of CloudFormation stack names. 

                
                

                - *(string) --* 
            
          
        
          

          - **SsmOpsItemId** *(string) --* 

            The ID of the AWS System Manager OpsItem created for this insight. You must enable the creation of OpstItems insights before they are created for each insight. 

            
      
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: describe_resource_collection_health(**kwargs)

    

    Returns the number of open proactive insights, open reactive insights, and the Mean Time to Recover (MTTR) for all closed insights in resource collections in your account. You specify the type of AWS resources collection. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeResourceCollectionHealth>`_    


    **Request Syntax** 
    ::

      response = client.describe_resource_collection_health(
          ResourceCollectionType='AWS_CLOUD_FORMATION'|'AWS_SERVICE',
          NextToken='string'
      )
    :type ResourceCollectionType: string
    :param ResourceCollectionType: **[REQUIRED]** 

      An AWS resource collection type. This type specifies how analyzed AWS resources are defined. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'CloudFormation': [
                {
                    'StackName': 'string',
                    'Insight': {
                        'OpenProactiveInsights': 123,
                        'OpenReactiveInsights': 123,
                        'MeanTimeToRecoverInMilliseconds': 123
                    }
                },
            ],
            'Service': [
                {
                    'ServiceName': 'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                    'Insight': {
                        'OpenProactiveInsights': 123,
                        'OpenReactiveInsights': 123
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **CloudFormation** *(list) --* 

          The returned ``CloudFormationHealthOverview`` object that contains an ``InsightHealthOverview`` object with the requested system health information. 

          
          

          - *(dict) --* 

            Information about the health of AWS resources in your account that are specified by an AWS CloudFormation stack. 

            
            

            - **StackName** *(string) --* 

              The name of the CloudFormation stack. 

              
            

            - **Insight** *(dict) --* 

              Information about the health of the AWS resources in your account that are specified by an AWS CloudFormation stack, including the number of open proactive, open reactive insights, and the Mean Time to Recover (MTTR) of closed insights. 

              
              

              - **OpenProactiveInsights** *(integer) --* 

                The number of open proactive insights. 

                
              

              - **OpenReactiveInsights** *(integer) --* 

                The number of open reactive insights. 

                
              

              - **MeanTimeToRecoverInMilliseconds** *(integer) --* 

                The Meant Time to Recover (MTTR) for the insight. 

                
          
        
      
        

        - **Service** *(list) --* 

          An array of ``ServiceHealth`` objects that describes the health of the AWS services associated with the resources in the collection.

          
          

          - *(dict) --* 

            Represents the health of an AWS service.

            
            

            - **ServiceName** *(string) --* 

              The name of the AWS service.

              
            

            - **Insight** *(dict) --* 

              Represents the health of an AWS service. This is a ``ServiceInsightHealth`` that contains the number of open proactive and reactive insights for this service.

              
              

              - **OpenProactiveInsights** *(integer) --* 

                The number of open proactive insights in the AWS service

                
              

              - **OpenReactiveInsights** *(integer) --* 

                The number of open reactive insights in the AWS service

                
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: describe_service_integration()

    

    Returns the integration status of services that are integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is AWS Systems Manager, which can be used to create an OpsItem for each generated insight. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeServiceIntegration>`_    


    **Request Syntax** 
    ::

      response = client.describe_service_integration()
      
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ServiceIntegration': {
                'OpsCenter': {
                    'OptInStatus': 'ENABLED'|'DISABLED'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ServiceIntegration** *(dict) --* 

          Information about the integration of DevOps Guru with another AWS service, such as AWS Systems Manager. 

          
          

          - **OpsCenter** *(dict) --* 

            Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight. 

            
            

            - **OptInStatus** *(string) --* 

              Specifies if DevOps Guru is enabled to create an AWS Systems Manager OpsItem for each created insight. 

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_cost_estimation(**kwargs)

    

    Returns an estimate of the monthly cost for DevOps Guru to analyze your AWS resources. For more information, see `Estimate your Amazon DevOps Guru costs <https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html>`__ and `Amazon DevOps Guru pricing <http://aws.amazon.com/devops-guru/pricing/>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/GetCostEstimation>`_    


    **Request Syntax** 
    ::

      response = client.get_cost_estimation(
          NextToken='string'
      )
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceCollection': {
                'CloudFormation': {
                    'StackNames': [
                        'string',
                    ]
                }
            },
            'Status': 'ONGOING'|'COMPLETED',
            'Costs': [
                {
                    'Type': 'string',
                    'State': 'ACTIVE'|'INACTIVE',
                    'Count': 123,
                    'UnitCost': 123.0,
                    'Cost': 123.0
                },
            ],
            'TimeRange': {
                'StartTime': datetime(2015, 1, 1),
                'EndTime': datetime(2015, 1, 1)
            },
            'TotalCost': 123.0,
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceCollection** *(dict) --* 

          The collection of the AWS resources used to create your monthly DevOps Guru cost estimate.

          
          

          - **CloudFormation** *(dict) --* 

            An object that specifies the CloudFormation stack that defines the AWS resources used to create a monthly estimate for DevOps Guru.

            
            

            - **StackNames** *(list) --* 

              An array of CloudFormation stack names. Its size is fixed at 1 item.

              
              

              - *(string) --* 
          
        
      
        

        - **Status** *(string) --* 

          The status of creating this cost estimate. If it's still in progress, the status ``ONGOING`` is returned. If it is finished, the status ``COMPLETED`` is returned.

          
        

        - **Costs** *(list) --* 

          An array of ``ResourceCost`` objects that each contains details about the monthly cost estimate to analyze one of your AWS resources.

          
          

          - *(dict) --* 

            An object that contains information about the estimated monthly cost to analyze an AWS resource. For more information, see `Estimate your Amazon DevOps Guru costs <https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html>`__ and `Amazon DevOps Guru pricing <http://aws.amazon.com/devops-guru/pricing/>`__ .

            
            

            - **Type** *(string) --* 

              The type of the AWS resource.

              
            

            - **State** *(string) --* 

              The state of the resource. The resource is ``ACTIVE`` if it produces metrics, events, or logs within an hour, otherwise it is ``INACTIVE`` . You pay for the number of active AWS resource hours analyzed for each resource. Inactive resources are not charged. 

              
            

            - **Count** *(integer) --* 

              The number of active resources analyzed for this service to create a monthly cost estimate.

              
            

            - **UnitCost** *(float) --* 

              The price per hour to analyze the resources in the service. For more information, see `Estimate your Amazon DevOps Guru costs <https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html>`__ and `Amazon DevOps Guru pricing <http://aws.amazon.com/devops-guru/pricing/>`__ .

              
            

            - **Cost** *(float) --* 

              The total estimated monthly cost to analyze the active resources for this resource.

              
        
      
        

        - **TimeRange** *(dict) --* 

          The start and end time of the cost estimation.

          
          

          - **StartTime** *(datetime) --* 

            The start time of the cost estimation.

            
          

          - **EndTime** *(datetime) --* 

            The end time of the cost estimation.

            
      
        

        - **TotalCost** *(float) --* 

          The estimated monthly cost to analyze the AWS resources. This value is the sum of the estimated costs to analyze each resource in the ``Costs`` object in this response.

          
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_resource_collection(**kwargs)

    

    Returns lists AWS resources that are of the specified resource collection type. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/GetResourceCollection>`_    


    **Request Syntax** 
    ::

      response = client.get_resource_collection(
          ResourceCollectionType='AWS_CLOUD_FORMATION'|'AWS_SERVICE',
          NextToken='string'
      )
    :type ResourceCollectionType: string
    :param ResourceCollectionType: **[REQUIRED]** 

      The type of AWS resource collections to return. The one valid value is ``CLOUD_FORMATION`` for AWS CloudFormation stacks. 

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceCollection': {
                'CloudFormation': {
                    'StackNames': [
                        'string',
                    ]
                }
            },
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceCollection** *(dict) --* 

          The requested list of AWS resource collections. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

          
          

          - **CloudFormation** *(dict) --* 

            Information about AWS CloudFormation stacks. You can use up to 500 stacks to specify which AWS resources in your account to analyze. For more information, see `Stacks <https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html>`__ in the *AWS CloudFormation User Guide* . 

            
            

            - **StackNames** *(list) --* 

              An array of CloudFormation stack names. 

              
              

              - *(string) --* 
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_anomalies_for_insight(**kwargs)

    

    Returns a list of the anomalies that belong to an insight that you specify using its ID. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListAnomaliesForInsight>`_    


    **Request Syntax** 
    ::

      response = client.list_anomalies_for_insight(
          InsightId='string',
          StartTimeRange={
              'FromTime': datetime(2015, 1, 1),
              'ToTime': datetime(2015, 1, 1)
          },
          MaxResults=123,
          NextToken='string'
      )
    :type InsightId: string
    :param InsightId: **[REQUIRED]** 

      The ID of the insight. The returned anomalies belong to this insight. 

      

    
    :type StartTimeRange: dict
    :param StartTimeRange: 

      A time range used to specify when the requested anomalies started. All returned anomalies started during this time range. 

      

    
      - **FromTime** *(datetime) --* 

        The start time of the time range. 

        

      
      - **ToTime** *(datetime) --* 

        The end time of the time range. 

        

      
    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned ``nextToken`` value.

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveAnomalies': [
                {
                    'Id': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'UpdateTime': datetime(2015, 1, 1),
                    'AnomalyTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'AnomalyReportedTimeRange': {
                        'OpenTime': datetime(2015, 1, 1),
                        'CloseTime': datetime(2015, 1, 1)
                    },
                    'PredictionTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'SourceDetails': {
                        'CloudWatchMetrics': [
                            {
                                'MetricName': 'string',
                                'Namespace': 'string',
                                'Dimensions': [
                                    {
                                        'Name': 'string',
                                        'Value': 'string'
                                    },
                                ],
                                'Stat': 'Sum'|'Average'|'SampleCount'|'Minimum'|'Maximum'|'p99'|'p90'|'p50',
                                'Unit': 'string',
                                'Period': 123
                            },
                        ]
                    },
                    'AssociatedInsightId': 'string',
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'Limit': 123.0
                },
            ],
            'ReactiveAnomalies': [
                {
                    'Id': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'AnomalyTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'AnomalyReportedTimeRange': {
                        'OpenTime': datetime(2015, 1, 1),
                        'CloseTime': datetime(2015, 1, 1)
                    },
                    'SourceDetails': {
                        'CloudWatchMetrics': [
                            {
                                'MetricName': 'string',
                                'Namespace': 'string',
                                'Dimensions': [
                                    {
                                        'Name': 'string',
                                        'Value': 'string'
                                    },
                                ],
                                'Stat': 'Sum'|'Average'|'SampleCount'|'Minimum'|'Maximum'|'p99'|'p90'|'p50',
                                'Unit': 'string',
                                'Period': 123
                            },
                        ]
                    },
                    'AssociatedInsightId': 'string',
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveAnomalies** *(list) --* 

          An array of ``ProactiveAnomalySummary`` objects that represent the requested anomalies 

          
          

          - *(dict) --* 

            Details about a proactive anomaly. This object is returned by ``DescribeAnomaly.``  

            
            

            - **Id** *(string) --* 

              The ID of the anomaly.

              
            

            - **Severity** *(string) --* 

              The severity of the anomaly.

              
            

            - **Status** *(string) --* 

              The status of the anomaly.

              
            

            - **UpdateTime** *(datetime) --* 

              The time of the anomaly's most recent update. 

              
            

            - **AnomalyTimeRange** *(dict) --* 

              A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from ``AnomalyReportedTimeRange`` , which specifies the time range when DevOps Guru opens and then closes an anomaly. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the anomalous behavior started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the anomalous behavior ended. 

                
          
            

            - **AnomalyReportedTimeRange** *(dict) --* 

              A ``AnomalyReportedTimeRange`` object that specifies the time range between when the anomaly is opened and the time when it is closed. 

              
              

              - **OpenTime** *(datetime) --* 

                The time when an anomaly is opened. 

                
              

              - **CloseTime** *(datetime) --* 

                The time when an anomaly is closed. 

                
          
            

            - **PredictionTimeRange** *(dict) --* 

              The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

              
              

              - **StartTime** *(datetime) --* 

                The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior in a proactive insight is expected to end. 

                
          
            

            - **SourceDetails** *(dict) --* 

              Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics. 

              
              

              - **CloudWatchMetrics** *(list) --* 

                An array of ``CloudWatchMetricsDetail`` object that contains information about the analyzed metrics that displayed anomalous behavior. 

                
                

                - *(dict) --* 

                  Information about an Amazon CloudWatch metric. 

                  
                  

                  - **MetricName** *(string) --* 

                    The name of the CloudWatch metric. 

                    
                  

                  - **Namespace** *(string) --* 

                    The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics. 

                    
                  

                  - **Dimensions** *(list) --* 

                    An array of CloudWatch dimensions associated with 

                    
                    

                    - *(dict) --* 

                      The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see `Dimensions <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension>`__ in the *Amazon CloudWatch User Guide* . 

                      
                      

                      - **Name** *(string) --* 

                        The name of the CloudWatch dimension. 

                        
                      

                      - **Value** *(string) --* 

                        The value of the CloudWatch dimension. 

                        
                  
                
                  

                  - **Stat** *(string) --* 

                    The type of statistic associated with the CloudWatch metric. For more information, see `Statistics <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic>`__ in the *Amazon CloudWatch User Guide* . 

                    
                  

                  - **Unit** *(string) --* 

                    The unit of measure used for the CloudWatch metric. For example, ``Bytes`` , ``Seconds`` , ``Count`` , and ``Percent`` . 

                    
                  

                  - **Period** *(integer) --* 

                    The length of time associated with the CloudWatch metric in number of seconds. 

                    
              
            
          
            

            - **AssociatedInsightId** *(string) --* 

              The ID of the insight that contains this anomaly. An insight is composed of related anomalies. 

              
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **Limit** *(float) --* 

              A threshold that was exceeded by behavior in analyzed resources. Exceeding this threshold is related to the anomalous behavior that generated this anomaly. 

              
        
      
        

        - **ReactiveAnomalies** *(list) --* 

          An array of ``ReactiveAnomalySummary`` objects that represent the requested anomalies 

          
          

          - *(dict) --* 

            Details about a reactive anomaly. This object is returned by ``DescribeAnomaly.``  

            
            

            - **Id** *(string) --* 

              The ID of the reactive anomaly. 

              
            

            - **Severity** *(string) --* 

              The severity of the reactive anomaly. 

              
            

            - **Status** *(string) --* 

              The status of the reactive anomaly. 

              
            

            - **AnomalyTimeRange** *(dict) --* 

              A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from ``AnomalyReportedTimeRange`` , which specifies the time range when DevOps Guru opens and then closes an anomaly. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the anomalous behavior started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the anomalous behavior ended. 

                
          
            

            - **AnomalyReportedTimeRange** *(dict) --* 

              A ``AnomalyReportedTimeRange`` object that specifies the time range between when the anomaly is opened and the time when it is closed. 

              
              

              - **OpenTime** *(datetime) --* 

                The time when an anomaly is opened. 

                
              

              - **CloseTime** *(datetime) --* 

                The time when an anomaly is closed. 

                
          
            

            - **SourceDetails** *(dict) --* 

              Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics. 

              
              

              - **CloudWatchMetrics** *(list) --* 

                An array of ``CloudWatchMetricsDetail`` object that contains information about the analyzed metrics that displayed anomalous behavior. 

                
                

                - *(dict) --* 

                  Information about an Amazon CloudWatch metric. 

                  
                  

                  - **MetricName** *(string) --* 

                    The name of the CloudWatch metric. 

                    
                  

                  - **Namespace** *(string) --* 

                    The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics. 

                    
                  

                  - **Dimensions** *(list) --* 

                    An array of CloudWatch dimensions associated with 

                    
                    

                    - *(dict) --* 

                      The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see `Dimensions <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension>`__ in the *Amazon CloudWatch User Guide* . 

                      
                      

                      - **Name** *(string) --* 

                        The name of the CloudWatch dimension. 

                        
                      

                      - **Value** *(string) --* 

                        The value of the CloudWatch dimension. 

                        
                  
                
                  

                  - **Stat** *(string) --* 

                    The type of statistic associated with the CloudWatch metric. For more information, see `Statistics <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic>`__ in the *Amazon CloudWatch User Guide* . 

                    
                  

                  - **Unit** *(string) --* 

                    The unit of measure used for the CloudWatch metric. For example, ``Bytes`` , ``Seconds`` , ``Count`` , and ``Percent`` . 

                    
                  

                  - **Period** *(integer) --* 

                    The length of time associated with the CloudWatch metric in number of seconds. 

                    
              
            
          
            

            - **AssociatedInsightId** *(string) --* 

              The ID of the insight that contains this anomaly. An insight is composed of related anomalies. 

              
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: list_events(**kwargs)

    

    Returns a list of the events emitted by the resources that are evaluated by DevOps Guru. You can use filters to specify which events are returned. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListEvents>`_    


    **Request Syntax** 
    ::

      response = client.list_events(
          Filters={
              'InsightId': 'string',
              'EventTimeRange': {
                  'FromTime': datetime(2015, 1, 1),
                  'ToTime': datetime(2015, 1, 1)
              },
              'EventClass': 'INFRASTRUCTURE'|'DEPLOYMENT'|'SECURITY_CHANGE'|'CONFIG_CHANGE'|'SCHEMA_CHANGE',
              'EventSource': 'string',
              'DataSource': 'AWS_CLOUD_TRAIL'|'AWS_CODE_DEPLOY',
              'ResourceCollection': {
                  'CloudFormation': {
                      'StackNames': [
                          'string',
                      ]
                  }
              }
          },
          MaxResults=123,
          NextToken='string'
      )
    :type Filters: dict
    :param Filters: **[REQUIRED]** 

      A ``ListEventsFilters`` object used to specify which events to return. 

      

    
      - **InsightId** *(string) --* 

        An ID of an insight that is related to the events you want to filter for. 

        

      
      - **EventTimeRange** *(dict) --* 

        A time range during which you want the filtered events to have occurred. 

        

      
        - **FromTime** *(datetime) --* **[REQUIRED]** 

          The time when the event started. 

          

        
        - **ToTime** *(datetime) --* **[REQUIRED]** 

          The time when the event ended. 

          

        
      
      - **EventClass** *(string) --* 

        The class of the events you want to filter for, such as an infrastructure change, a deployment, or a schema change. 

        

      
      - **EventSource** *(string) --* 

        The AWS source that emitted the events you want to filter for. 

        

      
      - **DataSource** *(string) --* 

        The source, ``AWS_CLOUD_TRAIL`` or ``AWS_CODE_DEPLOY`` , of the events you want returned. 

        

      
      - **ResourceCollection** *(dict) --* 

        A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

        

      
        - **CloudFormation** *(dict) --* 

          An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

          

        
          - **StackNames** *(list) --* 

            An array of CloudFormation stack names. 

            

          
            - *(string) --* 

            
        
        
      
    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned ``nextToken`` value.

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Events': [
                {
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'Id': 'string',
                    'Time': datetime(2015, 1, 1),
                    'EventSource': 'string',
                    'Name': 'string',
                    'DataSource': 'AWS_CLOUD_TRAIL'|'AWS_CODE_DEPLOY',
                    'EventClass': 'INFRASTRUCTURE'|'DEPLOYMENT'|'SECURITY_CHANGE'|'CONFIG_CHANGE'|'SCHEMA_CHANGE',
                    'Resources': [
                        {
                            'Type': 'string',
                            'Name': 'string',
                            'Arn': 'string'
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Events** *(list) --* 

          A list of the requested events. 

          
          

          - *(dict) --* 

            An AWS resource event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 

            
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **Id** *(string) --* 

              The ID of the event. 

              
            

            - **Time** *(datetime) --* 

              A ``Timestamp`` that specifies the time the event occurred. 

              
            

            - **EventSource** *(string) --* 

              The AWS source that emitted the event. 

              
            

            - **Name** *(string) --* 

              The name of the event. 

              
            

            - **DataSource** *(string) --* 

              The source, ``AWS_CLOUD_TRAIL`` or ``AWS_CODE_DEPLOY`` , where DevOps Guru analysis found the event. 

              
            

            - **EventClass** *(string) --* 

              The class of the event. The class specifies what the event is related to, such as an infrastructure change, a deployment, or a schema change. 

              
            

            - **Resources** *(list) --* 

              An ``EventResource`` object that contains information about the resource that emitted the event. 

              
              

              - *(dict) --* 

                The AWS resource that emitted an event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 

                
                

                - **Type** *(string) --* 

                  The type of resource that emitted an event. 

                  
                

                - **Name** *(string) --* 

                  The name of the resource that emitted an event. 

                  
                

                - **Arn** *(string) --* 

                  The Amazon Resource Name (ARN) of the resource that emitted an event. 

                  
            
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: list_insights(**kwargs)

    

    Returns a list of insights in your AWS account. You can specify which insights are returned by their start time and status (``ONGOING`` , ``CLOSED`` , or ``ANY`` ). 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListInsights>`_    


    **Request Syntax** 
    ::

      response = client.list_insights(
          StatusFilter={
              'Ongoing': {
                  'Type': 'REACTIVE'|'PROACTIVE'
              },
              'Closed': {
                  'Type': 'REACTIVE'|'PROACTIVE',
                  'EndTimeRange': {
                      'FromTime': datetime(2015, 1, 1),
                      'ToTime': datetime(2015, 1, 1)
                  }
              },
              'Any': {
                  'Type': 'REACTIVE'|'PROACTIVE',
                  'StartTimeRange': {
                      'FromTime': datetime(2015, 1, 1),
                      'ToTime': datetime(2015, 1, 1)
                  }
              }
          },
          MaxResults=123,
          NextToken='string'
      )
    :type StatusFilter: dict
    :param StatusFilter: **[REQUIRED]** 

      A filter used to filter the returned insights by their status. You can specify one status filter. 

      

    
      - **Ongoing** *(dict) --* 

        A ``ListInsightsAnyStatusFilter`` that specifies ongoing insights that are either ``REACTIVE`` or ``PROACTIVE`` . 

        

      
        - **Type** *(string) --* **[REQUIRED]** 

          Use to filter for either ``REACTIVE`` or ``PROACTIVE`` insights. 

          

        
      
      - **Closed** *(dict) --* 

        A ``ListInsightsClosedStatusFilter`` that specifies closed insights that are either ``REACTIVE`` or ``PROACTIVE`` . 

        

      
        - **Type** *(string) --* **[REQUIRED]** 

          Use to filter for either ``REACTIVE`` or ``PROACTIVE`` insights. 

          

        
        - **EndTimeRange** *(dict) --* **[REQUIRED]** 

          A time range used to specify when the behavior of the filtered insights ended. 

          

        
          - **FromTime** *(datetime) --* 

            The earliest end time in the time range. 

            

          
          - **ToTime** *(datetime) --* 

            The latest end time in the time range. 

            

          
        
      
      - **Any** *(dict) --* 

        A ``ListInsightsAnyStatusFilter`` that specifies insights of any status that are either ``REACTIVE`` or ``PROACTIVE`` . 

        

      
        - **Type** *(string) --* **[REQUIRED]** 

          Use to filter for either ``REACTIVE`` or ``PROACTIVE`` insights. 

          

        
        - **StartTimeRange** *(dict) --* **[REQUIRED]** 

          A time range used to specify when the behavior of the filtered insights started. 

          

        
          - **FromTime** *(datetime) --* 

            The start time of the time range. 

            

          
          - **ToTime** *(datetime) --* 

            The end time of the time range. 

            

          
        
      
    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned ``nextToken`` value.

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'PredictionTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            'ReactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveInsights** *(list) --* 

          The returned list of proactive insights. 

          
          

          - *(dict) --* 

            Details about a proactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of the proactive insight. 

              
            

            - **Name** *(string) --* 

              The name of the proactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of the proactive insight. 

              
            

            - **Status** *(string) --* 

              The status of the proactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **PredictionTimeRange** *(dict) --* 

              The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

              
              

              - **StartTime** *(datetime) --* 

                The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior in a proactive insight is expected to end. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
        

        - **ReactiveInsights** *(list) --* 

          The returned list of reactive insights. 

          
          

          - *(dict) --* 

            Information about a reactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of a reactive summary. 

              
            

            - **Name** *(string) --* 

              The name of a reactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of a reactive insight. 

              
            

            - **Status** *(string) --* 

              The status of a reactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: list_notification_channels(**kwargs)

    

    Returns a list of notification channels configured for DevOps Guru. Each notification channel is used to notify you when DevOps Guru generates an insight that contains information about how to improve your operations. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListNotificationChannels>`_    


    **Request Syntax** 
    ::

      response = client.list_notification_channels(
          NextToken='string'
      )
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Channels': [
                {
                    'Id': 'string',
                    'Config': {
                        'Sns': {
                            'TopicArn': 'string'
                        }
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Channels** *(list) --* 

          An array that contains the requested notification channels. 

          
          

          - *(dict) --* 

            Information about a notification channel. A notification channel is used to notify you when DevOps Guru creates an insight. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). 

             

            If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see `Permissions for cross account Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html>`__ .

             

            If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see `Permissions for AWS KMS–encrypted Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html>`__ .

            
            

            - **Id** *(string) --* 

              The ID of a notification channel. 

              
            

            - **Config** *(dict) --* 

              A ``NotificationChannelConfig`` object that contains information about configured notification channels. 

              
              

              - **Sns** *(dict) --* 

                Information about a notification channel configured in DevOps Guru to send notifications when insights are created. 

                 

                If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see `Permissions for cross account Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html>`__ .

                 

                If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see `Permissions for AWS KMS–encrypted Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html>`__ .

                
                

                - **TopicArn** *(string) --* 

                  The Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic. 

                  
            
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: list_recommendations(**kwargs)

    

    Returns a list of a specified insight's recommendations. Each recommendation includes a list of related metrics and a list of related events. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListRecommendations>`_    


    **Request Syntax** 
    ::

      response = client.list_recommendations(
          InsightId='string',
          NextToken='string',
          Locale='DE_DE'|'EN_US'|'EN_GB'|'ES_ES'|'FR_FR'|'IT_IT'|'JA_JP'|'KO_KR'|'PT_BR'|'ZH_CN'|'ZH_TW'
      )
    :type InsightId: string
    :param InsightId: **[REQUIRED]** 

      The ID of the requested insight. 

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    :type Locale: string
    :param Locale: 

      A locale that specifies the language to use for recommendations.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Recommendations': [
                {
                    'Description': 'string',
                    'Link': 'string',
                    'Name': 'string',
                    'Reason': 'string',
                    'RelatedEvents': [
                        {
                            'Name': 'string',
                            'Resources': [
                                {
                                    'Name': 'string',
                                    'Type': 'string'
                                },
                            ]
                        },
                    ],
                    'RelatedAnomalies': [
                        {
                            'Resources': [
                                {
                                    'Name': 'string',
                                    'Type': 'string'
                                },
                            ],
                            'SourceDetails': [
                                {
                                    'CloudWatchMetrics': [
                                        {
                                            'MetricName': 'string',
                                            'Namespace': 'string'
                                        },
                                    ]
                                },
                            ]
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Recommendations** *(list) --* 

          An array of the requested recommendations. 

          
          

          - *(dict) --* 

            Recommendation information to help you remediate detected anomalous behavior that generated an insight. 

            
            

            - **Description** *(string) --* 

              A description of the problem. 

              
            

            - **Link** *(string) --* 

              A hyperlink to information to help you address the problem. 

              
            

            - **Name** *(string) --* 

              The name of the recommendation. 

              
            

            - **Reason** *(string) --* 

              The reason DevOps Guru flagged the anomalous behavior as a problem. 

              
            

            - **RelatedEvents** *(list) --* 

              Events that are related to the problem. Use these events to learn more about what's happening and to help address the issue. 

              
              

              - *(dict) --* 

                Information about an event that is related to a recommendation. 

                
                

                - **Name** *(string) --* 

                  The name of the event. This corresponds to the ``Name`` field in an ``Event`` object. 

                  
                

                - **Resources** *(list) --* 

                  A ``ResourceCollection`` object that contains arrays of the names of AWS CloudFormation stacks. You can specify up to 500 AWS CloudFormation stacks. 

                  
                  

                  - *(dict) --* 

                    Information about an AWS resource that emitted and event that is related to a recommendation in an insight. 

                    
                    

                    - **Name** *(string) --* 

                      The name of the resource that emitted the event. This corresponds to the ``Name`` field in an ``EventResource`` object. 

                      
                    

                    - **Type** *(string) --* 

                      The type of the resource that emitted the event. This corresponds to the ``Type`` field in an ``EventResource`` object. 

                      
                
              
            
          
            

            - **RelatedAnomalies** *(list) --* 

              Anomalies that are related to the problem. Use these Anomalies to learn more about what's happening and to help address the issue. 

              
              

              - *(dict) --* 

                Information about an anomaly that is related to a recommendation. 

                
                

                - **Resources** *(list) --* 

                  An array of objects that represent resources in which DevOps Guru detected anomalous behavior. Each object contains the name and type of the resource. 

                  
                  

                  - *(dict) --* 

                    Information about a resource in which DevOps Guru detected anomalous behavior. 

                    
                    

                    - **Name** *(string) --* 

                      The name of the resource. 

                      
                    

                    - **Type** *(string) --* 

                      The type of the resource. 

                      
                
              
                

                - **SourceDetails** *(list) --* 

                  Information about where the anomalous behavior related the recommendation was found. For example, details in Amazon CloudWatch metrics. 

                  
                  

                  - *(dict) --* 

                    Contains an array of ``RecommendationRelatedCloudWatchMetricsSourceDetail`` objects that contain the name and namespace of an Amazon CloudWatch metric. 

                    
                    

                    - **CloudWatchMetrics** *(list) --* 

                      An array of ``CloudWatchMetricsDetail`` objects that contains information about the analyzed metrics that displayed anomalous behavior. 

                      
                      

                      - *(dict) --* 

                        Information about an Amazon CloudWatch metric that is analyzed by DevOps Guru. It is one of many analyzed metrics that are used to generate insights. 

                        
                        

                        - **MetricName** *(string) --* 

                          The name of the CloudWatch metric.

                          
                        

                        - **Namespace** *(string) --* 

                          The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics.

                          
                    
                  
                
              
            
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: put_feedback(**kwargs)

    

    Collects customer feedback about the specified insight. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/PutFeedback>`_    


    **Request Syntax** 
    ::

      response = client.put_feedback(
          InsightFeedback={
              'Id': 'string',
              'Feedback': 'VALID_COLLECTION'|'RECOMMENDATION_USEFUL'|'ALERT_TOO_SENSITIVE'|'DATA_NOISY_ANOMALY'|'DATA_INCORRECT'
          }
      )
    :type InsightFeedback: dict
    :param InsightFeedback: 

      The feedback from customers is about the recommendations in this insight. 

      

    
      - **Id** *(string) --* 

        The insight feedback ID. 

        

      
      - **Feedback** *(string) --* 

        The feedback provided by the customer. 

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ConflictException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: remove_notification_channel(**kwargs)

    

    Removes a notification channel from DevOps Guru. A notification channel is used to notify you when DevOps Guru generates an insight that contains information about how to improve your operations. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/RemoveNotificationChannel>`_    


    **Request Syntax** 
    ::

      response = client.remove_notification_channel(
          Id='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The ID of the notification channel to be removed. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ConflictException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: search_insights(**kwargs)

    

    Returns a list of insights in your AWS account. You can specify which insights are returned by their start time, one or more statuses (``ONGOING`` , ``CLOSED`` , and ``CLOSED`` ), one or more severities (``LOW`` , ``MEDIUM`` , and ``HIGH`` ), and type (``REACTIVE`` or ``PROACTIVE`` ). 

     

    Use the ``Filters`` parameter to specify status and severity search parameters. Use the ``Type`` parameter to specify ``REACTIVE`` or ``PROACTIVE`` in your search. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/SearchInsights>`_    


    **Request Syntax** 
    ::

      response = client.search_insights(
          StartTimeRange={
              'FromTime': datetime(2015, 1, 1),
              'ToTime': datetime(2015, 1, 1)
          },
          Filters={
              'Severities': [
                  'LOW'|'MEDIUM'|'HIGH',
              ],
              'Statuses': [
                  'ONGOING'|'CLOSED',
              ],
              'ResourceCollection': {
                  'CloudFormation': {
                      'StackNames': [
                          'string',
                      ]
                  }
              },
              'ServiceCollection': {
                  'ServiceNames': [
                      'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                  ]
              }
          },
          MaxResults=123,
          NextToken='string',
          Type='REACTIVE'|'PROACTIVE'
      )
    :type StartTimeRange: dict
    :param StartTimeRange: **[REQUIRED]** 

      The start of the time range passed in. Returned insights occurred after this time. 

      

    
      - **FromTime** *(datetime) --* 

        The start time of the time range. 

        

      
      - **ToTime** *(datetime) --* 

        The end time of the time range. 

        

      
    
    :type Filters: dict
    :param Filters: 

      A ``SearchInsightsFilters`` object that is used to set the severity and status filters on your insight search. 

      

    
      - **Severities** *(list) --* 

        An array of severity values used to search for insights. 

        

      
        - *(string) --* 

        
    
      - **Statuses** *(list) --* 

        An array of status values used to search for insights. 

        

      
        - *(string) --* 

        
    
      - **ResourceCollection** *(dict) --* 

        A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

        

      
        - **CloudFormation** *(dict) --* 

          An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

          

        
          - **StackNames** *(list) --* 

            An array of CloudFormation stack names. 

            

          
            - *(string) --* 

            
        
        
      
      - **ServiceCollection** *(dict) --* 

        A collection of the names of AWS services.

        

      
        - **ServiceNames** *(list) --* 

          An array of strings that each specifies the name of an AWS service.

          

        
          - *(string) --* 

          
      
      
    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned ``nextToken`` value.

      

    
    :type NextToken: string
    :param NextToken: 

      The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

      

    
    :type Type: string
    :param Type: **[REQUIRED]** 

      The type of insights you are searching for (``REACTIVE`` or ``PROACTIVE`` ). 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'PredictionTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            'ReactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveInsights** *(list) --* 

          The returned proactive insights. 

          
          

          - *(dict) --* 

            Details about a proactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of the proactive insight. 

              
            

            - **Name** *(string) --* 

              The name of the proactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of the proactive insight. 

              
            

            - **Status** *(string) --* 

              The status of the proactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **PredictionTimeRange** *(dict) --* 

              The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

              
              

              - **StartTime** *(datetime) --* 

                The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior in a proactive insight is expected to end. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
        

        - **ReactiveInsights** *(list) --* 

          The returned reactive insights. 

          
          

          - *(dict) --* 

            Information about a reactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of a reactive summary. 

              
            

            - **Name** *(string) --* 

              The name of a reactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of a reactive insight. 

              
            

            - **Status** *(string) --* 

              The status of a reactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
        

        - **NextToken** *(string) --* 

          The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.

          
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: start_cost_estimation(**kwargs)

    

    Starts the creation of an estimate of the monthly cost to analyze your AWS resources.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/StartCostEstimation>`_    


    **Request Syntax** 
    ::

      response = client.start_cost_estimation(
          ResourceCollection={
              'CloudFormation': {
                  'StackNames': [
                      'string',
                  ]
              }
          },
          ClientToken='string'
      )
    :type ResourceCollection: dict
    :param ResourceCollection: **[REQUIRED]** 

      The collection of AWS resources used to create a monthly DevOps Guru cost estimate.

      

    
      - **CloudFormation** *(dict) --* 

        An object that specifies the CloudFormation stack that defines the AWS resources used to create a monthly estimate for DevOps Guru.

        

      
        - **StackNames** *(list) --* 

          An array of CloudFormation stack names. Its size is fixed at 1 item.

          

        
          - *(string) --* 

          
      
      
    
    :type ClientToken: string
    :param ClientToken: 

      The idempotency token used to identify each cost estimate request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ConflictException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: update_resource_collection(**kwargs)

    

    Updates the collection of resources that DevOps Guru analyzes. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. This method also creates the IAM role required for you to use DevOps Guru. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/UpdateResourceCollection>`_    


    **Request Syntax** 
    ::

      response = client.update_resource_collection(
          Action='ADD'|'REMOVE',
          ResourceCollection={
              'CloudFormation': {
                  'StackNames': [
                      'string',
                  ]
              }
          }
      )
    :type Action: string
    :param Action: **[REQUIRED]** 

      Specifies if the resource collection in the request is added or deleted to the resource collection. 

      

    
    :type ResourceCollection: dict
    :param ResourceCollection: **[REQUIRED]** 

      Contains information used to update a collection of AWS resources. 

      

    
      - **CloudFormation** *(dict) --* 

        An collection of AWS CloudFormation stacks. You can specify up to 500 AWS CloudFormation stacks. 

        

      
        - **StackNames** *(list) --* 

          An array of the names of the AWS CloudFormation stacks to update. You can specify up to 500 AWS CloudFormation stacks. 

          

        
          - *(string) --* 

          
      
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ConflictException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

  .. py:method:: update_service_integration(**kwargs)

    

    Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is AWS Systems Manager, which can be used to create an OpsItem for each generated insight. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/UpdateServiceIntegration>`_    


    **Request Syntax** 
    ::

      response = client.update_service_integration(
          ServiceIntegration={
              'OpsCenter': {
                  'OptInStatus': 'ENABLED'|'DISABLED'
              }
          }
      )
    :type ServiceIntegration: dict
    :param ServiceIntegration: **[REQUIRED]** 

      An ``IntegratedServiceConfig`` object used to specify the integrated service you want to update, and whether you want to update it to enabled or disabled. 

      

    
      - **OpsCenter** *(dict) --* 

        Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight. 

        

      
        - **OptInStatus** *(string) --* 

          Specifies if DevOps Guru is enabled to create an AWS Systems Manager OpsItem for each created insight. 

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`DevOpsGuru.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ConflictException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.InternalServerException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ThrottlingException`

    
    *     :py:class:`DevOpsGuru.Client.exceptions.ValidationException`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`DevOpsGuru.Paginator.DescribeResourceCollectionHealth`


* :py:class:`DevOpsGuru.Paginator.GetCostEstimation`


* :py:class:`DevOpsGuru.Paginator.GetResourceCollection`


* :py:class:`DevOpsGuru.Paginator.ListAnomaliesForInsight`


* :py:class:`DevOpsGuru.Paginator.ListEvents`


* :py:class:`DevOpsGuru.Paginator.ListInsights`


* :py:class:`DevOpsGuru.Paginator.ListNotificationChannels`


* :py:class:`DevOpsGuru.Paginator.ListRecommendations`


* :py:class:`DevOpsGuru.Paginator.SearchInsights`



.. py:class:: DevOpsGuru.Paginator.DescribeResourceCollectionHealth

  ::

    
    paginator = client.get_paginator('describe_resource_collection_health')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.describe_resource_collection_health`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/DescribeResourceCollectionHealth>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          ResourceCollectionType='AWS_CLOUD_FORMATION'|'AWS_SERVICE',
          PaginationConfig={
              'MaxItems': 123,
              'StartingToken': 'string'
          }
      )
    :type ResourceCollectionType: string
    :param ResourceCollectionType: **[REQUIRED]** 

      An AWS resource collection type. This type specifies how analyzed AWS resources are defined. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'CloudFormation': [
                {
                    'StackName': 'string',
                    'Insight': {
                        'OpenProactiveInsights': 123,
                        'OpenReactiveInsights': 123,
                        'MeanTimeToRecoverInMilliseconds': 123
                    }
                },
            ],
            'Service': [
                {
                    'ServiceName': 'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                    'Insight': {
                        'OpenProactiveInsights': 123,
                        'OpenReactiveInsights': 123
                    }
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **CloudFormation** *(list) --* 

          The returned ``CloudFormationHealthOverview`` object that contains an ``InsightHealthOverview`` object with the requested system health information. 

          
          

          - *(dict) --* 

            Information about the health of AWS resources in your account that are specified by an AWS CloudFormation stack. 

            
            

            - **StackName** *(string) --* 

              The name of the CloudFormation stack. 

              
            

            - **Insight** *(dict) --* 

              Information about the health of the AWS resources in your account that are specified by an AWS CloudFormation stack, including the number of open proactive, open reactive insights, and the Mean Time to Recover (MTTR) of closed insights. 

              
              

              - **OpenProactiveInsights** *(integer) --* 

                The number of open proactive insights. 

                
              

              - **OpenReactiveInsights** *(integer) --* 

                The number of open reactive insights. 

                
              

              - **MeanTimeToRecoverInMilliseconds** *(integer) --* 

                The Meant Time to Recover (MTTR) for the insight. 

                
          
        
      
        

        - **Service** *(list) --* 

          An array of ``ServiceHealth`` objects that describes the health of the AWS services associated with the resources in the collection.

          
          

          - *(dict) --* 

            Represents the health of an AWS service.

            
            

            - **ServiceName** *(string) --* 

              The name of the AWS service.

              
            

            - **Insight** *(dict) --* 

              Represents the health of an AWS service. This is a ``ServiceInsightHealth`` that contains the number of open proactive and reactive insights for this service.

              
              

              - **OpenProactiveInsights** *(integer) --* 

                The number of open proactive insights in the AWS service

                
              

              - **OpenReactiveInsights** *(integer) --* 

                The number of open reactive insights in the AWS service

                
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.GetCostEstimation

  ::

    
    paginator = client.get_paginator('get_cost_estimation')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.get_cost_estimation`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/GetCostEstimation>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          PaginationConfig={
              'MaxItems': 123,
              'StartingToken': 'string'
          }
      )
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceCollection': {
                'CloudFormation': {
                    'StackNames': [
                        'string',
                    ]
                }
            },
            'Status': 'ONGOING'|'COMPLETED',
            'Costs': [
                {
                    'Type': 'string',
                    'State': 'ACTIVE'|'INACTIVE',
                    'Count': 123,
                    'UnitCost': 123.0,
                    'Cost': 123.0
                },
            ],
            'TimeRange': {
                'StartTime': datetime(2015, 1, 1),
                'EndTime': datetime(2015, 1, 1)
            },
            'TotalCost': 123.0,
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceCollection** *(dict) --* 

          The collection of the AWS resources used to create your monthly DevOps Guru cost estimate.

          
          

          - **CloudFormation** *(dict) --* 

            An object that specifies the CloudFormation stack that defines the AWS resources used to create a monthly estimate for DevOps Guru.

            
            

            - **StackNames** *(list) --* 

              An array of CloudFormation stack names. Its size is fixed at 1 item.

              
              

              - *(string) --* 
          
        
      
        

        - **Status** *(string) --* 

          The status of creating this cost estimate. If it's still in progress, the status ``ONGOING`` is returned. If it is finished, the status ``COMPLETED`` is returned.

          
        

        - **Costs** *(list) --* 

          An array of ``ResourceCost`` objects that each contains details about the monthly cost estimate to analyze one of your AWS resources.

          
          

          - *(dict) --* 

            An object that contains information about the estimated monthly cost to analyze an AWS resource. For more information, see `Estimate your Amazon DevOps Guru costs <https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html>`__ and `Amazon DevOps Guru pricing <http://aws.amazon.com/devops-guru/pricing/>`__ .

            
            

            - **Type** *(string) --* 

              The type of the AWS resource.

              
            

            - **State** *(string) --* 

              The state of the resource. The resource is ``ACTIVE`` if it produces metrics, events, or logs within an hour, otherwise it is ``INACTIVE`` . You pay for the number of active AWS resource hours analyzed for each resource. Inactive resources are not charged. 

              
            

            - **Count** *(integer) --* 

              The number of active resources analyzed for this service to create a monthly cost estimate.

              
            

            - **UnitCost** *(float) --* 

              The price per hour to analyze the resources in the service. For more information, see `Estimate your Amazon DevOps Guru costs <https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html>`__ and `Amazon DevOps Guru pricing <http://aws.amazon.com/devops-guru/pricing/>`__ .

              
            

            - **Cost** *(float) --* 

              The total estimated monthly cost to analyze the active resources for this resource.

              
        
      
        

        - **TimeRange** *(dict) --* 

          The start and end time of the cost estimation.

          
          

          - **StartTime** *(datetime) --* 

            The start time of the cost estimation.

            
          

          - **EndTime** *(datetime) --* 

            The end time of the cost estimation.

            
      
        

        - **TotalCost** *(float) --* 

          The estimated monthly cost to analyze the AWS resources. This value is the sum of the estimated costs to analyze each resource in the ``Costs`` object in this response.

          
    

.. py:class:: DevOpsGuru.Paginator.GetResourceCollection

  ::

    
    paginator = client.get_paginator('get_resource_collection')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.get_resource_collection`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/GetResourceCollection>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          ResourceCollectionType='AWS_CLOUD_FORMATION'|'AWS_SERVICE',
          PaginationConfig={
              'MaxItems': 123,
              'StartingToken': 'string'
          }
      )
    :type ResourceCollectionType: string
    :param ResourceCollectionType: **[REQUIRED]** 

      The type of AWS resource collections to return. The one valid value is ``CLOUD_FORMATION`` for AWS CloudFormation stacks. 

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceCollection': {
                'CloudFormation': {
                    'StackNames': [
                        'string',
                    ]
                }
            },
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceCollection** *(dict) --* 

          The requested list of AWS resource collections. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

          
          

          - **CloudFormation** *(dict) --* 

            Information about AWS CloudFormation stacks. You can use up to 500 stacks to specify which AWS resources in your account to analyze. For more information, see `Stacks <https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html>`__ in the *AWS CloudFormation User Guide* . 

            
            

            - **StackNames** *(list) --* 

              An array of CloudFormation stack names. 

              
              

              - *(string) --* 
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.ListAnomaliesForInsight

  ::

    
    paginator = client.get_paginator('list_anomalies_for_insight')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.list_anomalies_for_insight`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListAnomaliesForInsight>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          InsightId='string',
          StartTimeRange={
              'FromTime': datetime(2015, 1, 1),
              'ToTime': datetime(2015, 1, 1)
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type InsightId: string
    :param InsightId: **[REQUIRED]** 

      The ID of the insight. The returned anomalies belong to this insight. 

      

    
    :type StartTimeRange: dict
    :param StartTimeRange: 

      A time range used to specify when the requested anomalies started. All returned anomalies started during this time range. 

      

    
      - **FromTime** *(datetime) --* 

        The start time of the time range. 

        

      
      - **ToTime** *(datetime) --* 

        The end time of the time range. 

        

      
    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveAnomalies': [
                {
                    'Id': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'UpdateTime': datetime(2015, 1, 1),
                    'AnomalyTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'AnomalyReportedTimeRange': {
                        'OpenTime': datetime(2015, 1, 1),
                        'CloseTime': datetime(2015, 1, 1)
                    },
                    'PredictionTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'SourceDetails': {
                        'CloudWatchMetrics': [
                            {
                                'MetricName': 'string',
                                'Namespace': 'string',
                                'Dimensions': [
                                    {
                                        'Name': 'string',
                                        'Value': 'string'
                                    },
                                ],
                                'Stat': 'Sum'|'Average'|'SampleCount'|'Minimum'|'Maximum'|'p99'|'p90'|'p50',
                                'Unit': 'string',
                                'Period': 123
                            },
                        ]
                    },
                    'AssociatedInsightId': 'string',
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'Limit': 123.0
                },
            ],
            'ReactiveAnomalies': [
                {
                    'Id': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'AnomalyTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'AnomalyReportedTimeRange': {
                        'OpenTime': datetime(2015, 1, 1),
                        'CloseTime': datetime(2015, 1, 1)
                    },
                    'SourceDetails': {
                        'CloudWatchMetrics': [
                            {
                                'MetricName': 'string',
                                'Namespace': 'string',
                                'Dimensions': [
                                    {
                                        'Name': 'string',
                                        'Value': 'string'
                                    },
                                ],
                                'Stat': 'Sum'|'Average'|'SampleCount'|'Minimum'|'Maximum'|'p99'|'p90'|'p50',
                                'Unit': 'string',
                                'Period': 123
                            },
                        ]
                    },
                    'AssociatedInsightId': 'string',
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    }
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveAnomalies** *(list) --* 

          An array of ``ProactiveAnomalySummary`` objects that represent the requested anomalies 

          
          

          - *(dict) --* 

            Details about a proactive anomaly. This object is returned by ``DescribeAnomaly.``  

            
            

            - **Id** *(string) --* 

              The ID of the anomaly.

              
            

            - **Severity** *(string) --* 

              The severity of the anomaly.

              
            

            - **Status** *(string) --* 

              The status of the anomaly.

              
            

            - **UpdateTime** *(datetime) --* 

              The time of the anomaly's most recent update. 

              
            

            - **AnomalyTimeRange** *(dict) --* 

              A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from ``AnomalyReportedTimeRange`` , which specifies the time range when DevOps Guru opens and then closes an anomaly. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the anomalous behavior started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the anomalous behavior ended. 

                
          
            

            - **AnomalyReportedTimeRange** *(dict) --* 

              A ``AnomalyReportedTimeRange`` object that specifies the time range between when the anomaly is opened and the time when it is closed. 

              
              

              - **OpenTime** *(datetime) --* 

                The time when an anomaly is opened. 

                
              

              - **CloseTime** *(datetime) --* 

                The time when an anomaly is closed. 

                
          
            

            - **PredictionTimeRange** *(dict) --* 

              The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

              
              

              - **StartTime** *(datetime) --* 

                The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior in a proactive insight is expected to end. 

                
          
            

            - **SourceDetails** *(dict) --* 

              Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics. 

              
              

              - **CloudWatchMetrics** *(list) --* 

                An array of ``CloudWatchMetricsDetail`` object that contains information about the analyzed metrics that displayed anomalous behavior. 

                
                

                - *(dict) --* 

                  Information about an Amazon CloudWatch metric. 

                  
                  

                  - **MetricName** *(string) --* 

                    The name of the CloudWatch metric. 

                    
                  

                  - **Namespace** *(string) --* 

                    The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics. 

                    
                  

                  - **Dimensions** *(list) --* 

                    An array of CloudWatch dimensions associated with 

                    
                    

                    - *(dict) --* 

                      The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see `Dimensions <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension>`__ in the *Amazon CloudWatch User Guide* . 

                      
                      

                      - **Name** *(string) --* 

                        The name of the CloudWatch dimension. 

                        
                      

                      - **Value** *(string) --* 

                        The value of the CloudWatch dimension. 

                        
                  
                
                  

                  - **Stat** *(string) --* 

                    The type of statistic associated with the CloudWatch metric. For more information, see `Statistics <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic>`__ in the *Amazon CloudWatch User Guide* . 

                    
                  

                  - **Unit** *(string) --* 

                    The unit of measure used for the CloudWatch metric. For example, ``Bytes`` , ``Seconds`` , ``Count`` , and ``Percent`` . 

                    
                  

                  - **Period** *(integer) --* 

                    The length of time associated with the CloudWatch metric in number of seconds. 

                    
              
            
          
            

            - **AssociatedInsightId** *(string) --* 

              The ID of the insight that contains this anomaly. An insight is composed of related anomalies. 

              
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **Limit** *(float) --* 

              A threshold that was exceeded by behavior in analyzed resources. Exceeding this threshold is related to the anomalous behavior that generated this anomaly. 

              
        
      
        

        - **ReactiveAnomalies** *(list) --* 

          An array of ``ReactiveAnomalySummary`` objects that represent the requested anomalies 

          
          

          - *(dict) --* 

            Details about a reactive anomaly. This object is returned by ``DescribeAnomaly.``  

            
            

            - **Id** *(string) --* 

              The ID of the reactive anomaly. 

              
            

            - **Severity** *(string) --* 

              The severity of the reactive anomaly. 

              
            

            - **Status** *(string) --* 

              The status of the reactive anomaly. 

              
            

            - **AnomalyTimeRange** *(dict) --* 

              A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from ``AnomalyReportedTimeRange`` , which specifies the time range when DevOps Guru opens and then closes an anomaly. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the anomalous behavior started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the anomalous behavior ended. 

                
          
            

            - **AnomalyReportedTimeRange** *(dict) --* 

              A ``AnomalyReportedTimeRange`` object that specifies the time range between when the anomaly is opened and the time when it is closed. 

              
              

              - **OpenTime** *(datetime) --* 

                The time when an anomaly is opened. 

                
              

              - **CloseTime** *(datetime) --* 

                The time when an anomaly is closed. 

                
          
            

            - **SourceDetails** *(dict) --* 

              Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics. 

              
              

              - **CloudWatchMetrics** *(list) --* 

                An array of ``CloudWatchMetricsDetail`` object that contains information about the analyzed metrics that displayed anomalous behavior. 

                
                

                - *(dict) --* 

                  Information about an Amazon CloudWatch metric. 

                  
                  

                  - **MetricName** *(string) --* 

                    The name of the CloudWatch metric. 

                    
                  

                  - **Namespace** *(string) --* 

                    The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics. 

                    
                  

                  - **Dimensions** *(list) --* 

                    An array of CloudWatch dimensions associated with 

                    
                    

                    - *(dict) --* 

                      The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see `Dimensions <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension>`__ in the *Amazon CloudWatch User Guide* . 

                      
                      

                      - **Name** *(string) --* 

                        The name of the CloudWatch dimension. 

                        
                      

                      - **Value** *(string) --* 

                        The value of the CloudWatch dimension. 

                        
                  
                
                  

                  - **Stat** *(string) --* 

                    The type of statistic associated with the CloudWatch metric. For more information, see `Statistics <https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic>`__ in the *Amazon CloudWatch User Guide* . 

                    
                  

                  - **Unit** *(string) --* 

                    The unit of measure used for the CloudWatch metric. For example, ``Bytes`` , ``Seconds`` , ``Count`` , and ``Percent`` . 

                    
                  

                  - **Period** *(integer) --* 

                    The length of time associated with the CloudWatch metric in number of seconds. 

                    
              
            
          
            

            - **AssociatedInsightId** *(string) --* 

              The ID of the insight that contains this anomaly. An insight is composed of related anomalies. 

              
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.ListEvents

  ::

    
    paginator = client.get_paginator('list_events')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.list_events`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListEvents>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          Filters={
              'InsightId': 'string',
              'EventTimeRange': {
                  'FromTime': datetime(2015, 1, 1),
                  'ToTime': datetime(2015, 1, 1)
              },
              'EventClass': 'INFRASTRUCTURE'|'DEPLOYMENT'|'SECURITY_CHANGE'|'CONFIG_CHANGE'|'SCHEMA_CHANGE',
              'EventSource': 'string',
              'DataSource': 'AWS_CLOUD_TRAIL'|'AWS_CODE_DEPLOY',
              'ResourceCollection': {
                  'CloudFormation': {
                      'StackNames': [
                          'string',
                      ]
                  }
              }
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type Filters: dict
    :param Filters: **[REQUIRED]** 

      A ``ListEventsFilters`` object used to specify which events to return. 

      

    
      - **InsightId** *(string) --* 

        An ID of an insight that is related to the events you want to filter for. 

        

      
      - **EventTimeRange** *(dict) --* 

        A time range during which you want the filtered events to have occurred. 

        

      
        - **FromTime** *(datetime) --* **[REQUIRED]** 

          The time when the event started. 

          

        
        - **ToTime** *(datetime) --* **[REQUIRED]** 

          The time when the event ended. 

          

        
      
      - **EventClass** *(string) --* 

        The class of the events you want to filter for, such as an infrastructure change, a deployment, or a schema change. 

        

      
      - **EventSource** *(string) --* 

        The AWS source that emitted the events you want to filter for. 

        

      
      - **DataSource** *(string) --* 

        The source, ``AWS_CLOUD_TRAIL`` or ``AWS_CODE_DEPLOY`` , of the events you want returned. 

        

      
      - **ResourceCollection** *(dict) --* 

        A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

        

      
        - **CloudFormation** *(dict) --* 

          An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

          

        
          - **StackNames** *(list) --* 

            An array of CloudFormation stack names. 

            

          
            - *(string) --* 

            
        
        
      
    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Events': [
                {
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'Id': 'string',
                    'Time': datetime(2015, 1, 1),
                    'EventSource': 'string',
                    'Name': 'string',
                    'DataSource': 'AWS_CLOUD_TRAIL'|'AWS_CODE_DEPLOY',
                    'EventClass': 'INFRASTRUCTURE'|'DEPLOYMENT'|'SECURITY_CHANGE'|'CONFIG_CHANGE'|'SCHEMA_CHANGE',
                    'Resources': [
                        {
                            'Type': 'string',
                            'Name': 'string',
                            'Arn': 'string'
                        },
                    ]
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Events** *(list) --* 

          A list of the requested events. 

          
          

          - *(dict) --* 

            An AWS resource event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 

            
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **Id** *(string) --* 

              The ID of the event. 

              
            

            - **Time** *(datetime) --* 

              A ``Timestamp`` that specifies the time the event occurred. 

              
            

            - **EventSource** *(string) --* 

              The AWS source that emitted the event. 

              
            

            - **Name** *(string) --* 

              The name of the event. 

              
            

            - **DataSource** *(string) --* 

              The source, ``AWS_CLOUD_TRAIL`` or ``AWS_CODE_DEPLOY`` , where DevOps Guru analysis found the event. 

              
            

            - **EventClass** *(string) --* 

              The class of the event. The class specifies what the event is related to, such as an infrastructure change, a deployment, or a schema change. 

              
            

            - **Resources** *(list) --* 

              An ``EventResource`` object that contains information about the resource that emitted the event. 

              
              

              - *(dict) --* 

                The AWS resource that emitted an event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 

                
                

                - **Type** *(string) --* 

                  The type of resource that emitted an event. 

                  
                

                - **Name** *(string) --* 

                  The name of the resource that emitted an event. 

                  
                

                - **Arn** *(string) --* 

                  The Amazon Resource Name (ARN) of the resource that emitted an event. 

                  
            
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.ListInsights

  ::

    
    paginator = client.get_paginator('list_insights')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.list_insights`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListInsights>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          StatusFilter={
              'Ongoing': {
                  'Type': 'REACTIVE'|'PROACTIVE'
              },
              'Closed': {
                  'Type': 'REACTIVE'|'PROACTIVE',
                  'EndTimeRange': {
                      'FromTime': datetime(2015, 1, 1),
                      'ToTime': datetime(2015, 1, 1)
                  }
              },
              'Any': {
                  'Type': 'REACTIVE'|'PROACTIVE',
                  'StartTimeRange': {
                      'FromTime': datetime(2015, 1, 1),
                      'ToTime': datetime(2015, 1, 1)
                  }
              }
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type StatusFilter: dict
    :param StatusFilter: **[REQUIRED]** 

      A filter used to filter the returned insights by their status. You can specify one status filter. 

      

    
      - **Ongoing** *(dict) --* 

        A ``ListInsightsAnyStatusFilter`` that specifies ongoing insights that are either ``REACTIVE`` or ``PROACTIVE`` . 

        

      
        - **Type** *(string) --* **[REQUIRED]** 

          Use to filter for either ``REACTIVE`` or ``PROACTIVE`` insights. 

          

        
      
      - **Closed** *(dict) --* 

        A ``ListInsightsClosedStatusFilter`` that specifies closed insights that are either ``REACTIVE`` or ``PROACTIVE`` . 

        

      
        - **Type** *(string) --* **[REQUIRED]** 

          Use to filter for either ``REACTIVE`` or ``PROACTIVE`` insights. 

          

        
        - **EndTimeRange** *(dict) --* **[REQUIRED]** 

          A time range used to specify when the behavior of the filtered insights ended. 

          

        
          - **FromTime** *(datetime) --* 

            The earliest end time in the time range. 

            

          
          - **ToTime** *(datetime) --* 

            The latest end time in the time range. 

            

          
        
      
      - **Any** *(dict) --* 

        A ``ListInsightsAnyStatusFilter`` that specifies insights of any status that are either ``REACTIVE`` or ``PROACTIVE`` . 

        

      
        - **Type** *(string) --* **[REQUIRED]** 

          Use to filter for either ``REACTIVE`` or ``PROACTIVE`` insights. 

          

        
        - **StartTimeRange** *(dict) --* **[REQUIRED]** 

          A time range used to specify when the behavior of the filtered insights started. 

          

        
          - **FromTime** *(datetime) --* 

            The start time of the time range. 

            

          
          - **ToTime** *(datetime) --* 

            The end time of the time range. 

            

          
        
      
    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'PredictionTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            'ReactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveInsights** *(list) --* 

          The returned list of proactive insights. 

          
          

          - *(dict) --* 

            Details about a proactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of the proactive insight. 

              
            

            - **Name** *(string) --* 

              The name of the proactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of the proactive insight. 

              
            

            - **Status** *(string) --* 

              The status of the proactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **PredictionTimeRange** *(dict) --* 

              The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

              
              

              - **StartTime** *(datetime) --* 

                The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior in a proactive insight is expected to end. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
        

        - **ReactiveInsights** *(list) --* 

          The returned list of reactive insights. 

          
          

          - *(dict) --* 

            Information about a reactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of a reactive summary. 

              
            

            - **Name** *(string) --* 

              The name of a reactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of a reactive insight. 

              
            

            - **Status** *(string) --* 

              The status of a reactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.ListNotificationChannels

  ::

    
    paginator = client.get_paginator('list_notification_channels')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.list_notification_channels`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListNotificationChannels>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          PaginationConfig={
              'MaxItems': 123,
              'StartingToken': 'string'
          }
      )
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Channels': [
                {
                    'Id': 'string',
                    'Config': {
                        'Sns': {
                            'TopicArn': 'string'
                        }
                    }
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Channels** *(list) --* 

          An array that contains the requested notification channels. 

          
          

          - *(dict) --* 

            Information about a notification channel. A notification channel is used to notify you when DevOps Guru creates an insight. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). 

             

            If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see `Permissions for cross account Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html>`__ .

             

            If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see `Permissions for AWS KMS–encrypted Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html>`__ .

            
            

            - **Id** *(string) --* 

              The ID of a notification channel. 

              
            

            - **Config** *(dict) --* 

              A ``NotificationChannelConfig`` object that contains information about configured notification channels. 

              
              

              - **Sns** *(dict) --* 

                Information about a notification channel configured in DevOps Guru to send notifications when insights are created. 

                 

                If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see `Permissions for cross account Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html>`__ .

                 

                If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see `Permissions for AWS KMS–encrypted Amazon SNS topics <https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html>`__ .

                
                

                - **TopicArn** *(string) --* 

                  The Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic. 

                  
            
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.ListRecommendations

  ::

    
    paginator = client.get_paginator('list_recommendations')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.list_recommendations`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/ListRecommendations>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          InsightId='string',
          Locale='DE_DE'|'EN_US'|'EN_GB'|'ES_ES'|'FR_FR'|'IT_IT'|'JA_JP'|'KO_KR'|'PT_BR'|'ZH_CN'|'ZH_TW',
          PaginationConfig={
              'MaxItems': 123,
              'StartingToken': 'string'
          }
      )
    :type InsightId: string
    :param InsightId: **[REQUIRED]** 

      The ID of the requested insight. 

      

    
    :type Locale: string
    :param Locale: 

      A locale that specifies the language to use for recommendations.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Recommendations': [
                {
                    'Description': 'string',
                    'Link': 'string',
                    'Name': 'string',
                    'Reason': 'string',
                    'RelatedEvents': [
                        {
                            'Name': 'string',
                            'Resources': [
                                {
                                    'Name': 'string',
                                    'Type': 'string'
                                },
                            ]
                        },
                    ],
                    'RelatedAnomalies': [
                        {
                            'Resources': [
                                {
                                    'Name': 'string',
                                    'Type': 'string'
                                },
                            ],
                            'SourceDetails': [
                                {
                                    'CloudWatchMetrics': [
                                        {
                                            'MetricName': 'string',
                                            'Namespace': 'string'
                                        },
                                    ]
                                },
                            ]
                        },
                    ]
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Recommendations** *(list) --* 

          An array of the requested recommendations. 

          
          

          - *(dict) --* 

            Recommendation information to help you remediate detected anomalous behavior that generated an insight. 

            
            

            - **Description** *(string) --* 

              A description of the problem. 

              
            

            - **Link** *(string) --* 

              A hyperlink to information to help you address the problem. 

              
            

            - **Name** *(string) --* 

              The name of the recommendation. 

              
            

            - **Reason** *(string) --* 

              The reason DevOps Guru flagged the anomalous behavior as a problem. 

              
            

            - **RelatedEvents** *(list) --* 

              Events that are related to the problem. Use these events to learn more about what's happening and to help address the issue. 

              
              

              - *(dict) --* 

                Information about an event that is related to a recommendation. 

                
                

                - **Name** *(string) --* 

                  The name of the event. This corresponds to the ``Name`` field in an ``Event`` object. 

                  
                

                - **Resources** *(list) --* 

                  A ``ResourceCollection`` object that contains arrays of the names of AWS CloudFormation stacks. You can specify up to 500 AWS CloudFormation stacks. 

                  
                  

                  - *(dict) --* 

                    Information about an AWS resource that emitted and event that is related to a recommendation in an insight. 

                    
                    

                    - **Name** *(string) --* 

                      The name of the resource that emitted the event. This corresponds to the ``Name`` field in an ``EventResource`` object. 

                      
                    

                    - **Type** *(string) --* 

                      The type of the resource that emitted the event. This corresponds to the ``Type`` field in an ``EventResource`` object. 

                      
                
              
            
          
            

            - **RelatedAnomalies** *(list) --* 

              Anomalies that are related to the problem. Use these Anomalies to learn more about what's happening and to help address the issue. 

              
              

              - *(dict) --* 

                Information about an anomaly that is related to a recommendation. 

                
                

                - **Resources** *(list) --* 

                  An array of objects that represent resources in which DevOps Guru detected anomalous behavior. Each object contains the name and type of the resource. 

                  
                  

                  - *(dict) --* 

                    Information about a resource in which DevOps Guru detected anomalous behavior. 

                    
                    

                    - **Name** *(string) --* 

                      The name of the resource. 

                      
                    

                    - **Type** *(string) --* 

                      The type of the resource. 

                      
                
              
                

                - **SourceDetails** *(list) --* 

                  Information about where the anomalous behavior related the recommendation was found. For example, details in Amazon CloudWatch metrics. 

                  
                  

                  - *(dict) --* 

                    Contains an array of ``RecommendationRelatedCloudWatchMetricsSourceDetail`` objects that contain the name and namespace of an Amazon CloudWatch metric. 

                    
                    

                    - **CloudWatchMetrics** *(list) --* 

                      An array of ``CloudWatchMetricsDetail`` objects that contains information about the analyzed metrics that displayed anomalous behavior. 

                      
                      

                      - *(dict) --* 

                        Information about an Amazon CloudWatch metric that is analyzed by DevOps Guru. It is one of many analyzed metrics that are used to generate insights. 

                        
                        

                        - **MetricName** *(string) --* 

                          The name of the CloudWatch metric.

                          
                        

                        - **Namespace** *(string) --* 

                          The namespace of the CloudWatch metric. A namespace is a container for CloudWatch metrics.

                          
                    
                  
                
              
            
          
        
      
    

.. py:class:: DevOpsGuru.Paginator.SearchInsights

  ::

    
    paginator = client.get_paginator('search_insights')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DevOpsGuru.Client.search_insights`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/devops-guru-2020-12-01/SearchInsights>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          StartTimeRange={
              'FromTime': datetime(2015, 1, 1),
              'ToTime': datetime(2015, 1, 1)
          },
          Filters={
              'Severities': [
                  'LOW'|'MEDIUM'|'HIGH',
              ],
              'Statuses': [
                  'ONGOING'|'CLOSED',
              ],
              'ResourceCollection': {
                  'CloudFormation': {
                      'StackNames': [
                          'string',
                      ]
                  }
              },
              'ServiceCollection': {
                  'ServiceNames': [
                      'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                  ]
              }
          },
          Type='REACTIVE'|'PROACTIVE',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type StartTimeRange: dict
    :param StartTimeRange: **[REQUIRED]** 

      The start of the time range passed in. Returned insights occurred after this time. 

      

    
      - **FromTime** *(datetime) --* 

        The start time of the time range. 

        

      
      - **ToTime** *(datetime) --* 

        The end time of the time range. 

        

      
    
    :type Filters: dict
    :param Filters: 

      A ``SearchInsightsFilters`` object that is used to set the severity and status filters on your insight search. 

      

    
      - **Severities** *(list) --* 

        An array of severity values used to search for insights. 

        

      
        - *(string) --* 

        
    
      - **Statuses** *(list) --* 

        An array of status values used to search for insights. 

        

      
        - *(string) --* 

        
    
      - **ResourceCollection** *(dict) --* 

        A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

        

      
        - **CloudFormation** *(dict) --* 

          An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

          

        
          - **StackNames** *(list) --* 

            An array of CloudFormation stack names. 

            

          
            - *(string) --* 

            
        
        
      
      - **ServiceCollection** *(dict) --* 

        A collection of the names of AWS services.

        

      
        - **ServiceNames** *(list) --* 

          An array of strings that each specifies the name of an AWS service.

          

        
          - *(string) --* 

          
      
      
    
    :type Type: string
    :param Type: **[REQUIRED]** 

      The type of insights you are searching for (``REACTIVE`` or ``PROACTIVE`` ). 

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ProactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'PredictionTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            'ReactiveInsights': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Severity': 'LOW'|'MEDIUM'|'HIGH',
                    'Status': 'ONGOING'|'CLOSED',
                    'InsightTimeRange': {
                        'StartTime': datetime(2015, 1, 1),
                        'EndTime': datetime(2015, 1, 1)
                    },
                    'ResourceCollection': {
                        'CloudFormation': {
                            'StackNames': [
                                'string',
                            ]
                        }
                    },
                    'ServiceCollection': {
                        'ServiceNames': [
                            'API_GATEWAY'|'APPLICATION_ELB'|'AUTO_SCALING_GROUP'|'CLOUD_FRONT'|'DYNAMO_DB'|'EC2'|'ECS'|'EKS'|'ELASTIC_BEANSTALK'|'ELASTI_CACHE'|'ELB'|'ES'|'KINESIS'|'LAMBDA'|'NAT_GATEWAY'|'NETWORK_ELB'|'RDS'|'REDSHIFT'|'ROUTE_53'|'S3'|'SAGE_MAKER'|'SNS'|'SQS'|'STEP_FUNCTIONS'|'SWF',
                        ]
                    }
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ProactiveInsights** *(list) --* 

          The returned proactive insights. 

          
          

          - *(dict) --* 

            Details about a proactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of the proactive insight. 

              
            

            - **Name** *(string) --* 

              The name of the proactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of the proactive insight. 

              
            

            - **Status** *(string) --* 

              The status of the proactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **PredictionTimeRange** *(dict) --* 

              The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 

              
              

              - **StartTime** *(datetime) --* 

                The time range during which a metric limit is expected to be exceeded. This applies to proactive insights only. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior in a proactive insight is expected to end. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
        

        - **ReactiveInsights** *(list) --* 

          The returned reactive insights. 

          
          

          - *(dict) --* 

            Information about a reactive insight. This object is returned by ``DescribeInsight.``  

            
            

            - **Id** *(string) --* 

              The ID of a reactive summary. 

              
            

            - **Name** *(string) --* 

              The name of a reactive insight. 

              
            

            - **Severity** *(string) --* 

              The severity of a reactive insight. 

              
            

            - **Status** *(string) --* 

              The status of a reactive insight. 

              
            

            - **InsightTimeRange** *(dict) --* 

              A time ranged that specifies when the observed behavior in an insight started and ended. 

              
              

              - **StartTime** *(datetime) --* 

                The time when the behavior described in an insight started. 

                
              

              - **EndTime** *(datetime) --* 

                The time when the behavior described in an insight ended. 

                
          
            

            - **ResourceCollection** *(dict) --* 

              A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks. 

              
              

              - **CloudFormation** *(dict) --* 

                An array of the names of AWS CloudFormation stacks. The stacks define AWS resources that DevOps Guru analyzes. You can specify up to 500 AWS CloudFormation stacks. 

                
                

                - **StackNames** *(list) --* 

                  An array of CloudFormation stack names. 

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ServiceCollection** *(dict) --* 

              A collection of the names of AWS services.

              
              

              - **ServiceNames** *(list) --* 

                An array of strings that each specifies the name of an AWS service.

                
                

                - *(string) --* 
            
          
        
      
    