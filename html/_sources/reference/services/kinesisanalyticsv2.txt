

******************
KinesisAnalyticsV2
******************

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: KinesisAnalyticsV2.Client

  A low-level client representing Amazon Kinesis Analytics (Kinesis Analytics V2)
  

  Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.

  ::

    
    import boto3
    
    client = boto3.client('kinesisanalyticsv2')

  
  These are the available methods:
  
  *   :py:meth:`~KinesisAnalyticsV2.Client.add_application_cloud_watch_logging_option`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.add_application_input`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.add_application_input_processing_configuration`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.add_application_output`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.add_application_reference_data_source`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.add_application_vpc_configuration`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.can_paginate`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.create_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.create_application_presigned_url`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.create_application_snapshot`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application_cloud_watch_logging_option`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application_input_processing_configuration`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application_output`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application_reference_data_source`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application_snapshot`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.delete_application_vpc_configuration`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.describe_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.describe_application_snapshot`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.describe_application_version`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.discover_input_schema`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.generate_presigned_url`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.get_paginator`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.get_waiter`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.list_application_snapshots`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.list_application_versions`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.list_applications`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.list_tags_for_resource`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.rollback_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.start_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.stop_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.tag_resource`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.untag_resource`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.update_application`

  
  *   :py:meth:`~KinesisAnalyticsV2.Client.update_application_maintenance_configuration`

  

  .. py:method:: add_application_cloud_watch_logging_option(**kwargs)

    

    Adds an Amazon CloudWatch log stream to monitor application configuration errors.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationCloudWatchLoggingOption>`_    


    **Request Syntax** 
    ::

      response = client.add_application_cloud_watch_logging_option(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          CloudWatchLoggingOption={
              'LogStreamARN': 'string'
          },
          ConditionalToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The Kinesis Data Analytics application name.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: 

      The version ID of the Kinesis Data Analytics application. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` .You can retrieve the application version ID using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    :type CloudWatchLoggingOption: dict
    :param CloudWatchLoggingOption: **[REQUIRED]** 

      Provides the Amazon CloudWatch log stream Amazon Resource Name (ARN). 

      

    
      - **LogStreamARN** *(string) --* **[REQUIRED]** 

        The ARN of the CloudWatch log to receive application messages.

        

      
    
    :type ConditionalToken: string
    :param ConditionalToken: 

      A value you use to implement strong concurrency for application updates. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You get the application's current ``ConditionalToken`` using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'CloudWatchLoggingOptionDescriptions': [
                {
                    'CloudWatchLoggingOptionId': 'string',
                    'LogStreamARN': 'string',
                    'RoleARN': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The application's ARN.

          
        

        - **ApplicationVersionId** *(integer) --* 

          The new version ID of the Kinesis Data Analytics application. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you change the CloudWatch logging options. 

          
        

        - **CloudWatchLoggingOptionDescriptions** *(list) --* 

          The descriptions of the current CloudWatch logging options for the Kinesis Data Analytics application.

          
          

          - *(dict) --* 

            Describes the Amazon CloudWatch logging option.

            
            

            - **CloudWatchLoggingOptionId** *(string) --* 

              The ID of the CloudWatch logging option description.

              
            

            - **LogStreamARN** *(string) --* 

              The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

              
            

            - **RoleARN** *(string) --* 

              The IAM ARN of the role to use to send application messages. 

               

              .. note::

                 

                Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                 

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    

  .. py:method:: add_application_input(**kwargs)

    

    Adds a streaming source to your SQL-based Kinesis Data Analytics application. 

     

    You can add a streaming source when you create an application, or you can use this operation to add a streaming source after you create an application. For more information, see  CreateApplication .

     

    Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the  DescribeApplication operation to find the current application version. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationInput>`_    


    **Request Syntax** 
    ::

      response = client.add_application_input(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          Input={
              'NamePrefix': 'string',
              'InputProcessingConfiguration': {
                  'InputLambdaProcessor': {
                      'ResourceARN': 'string'
                  }
              },
              'KinesisStreamsInput': {
                  'ResourceARN': 'string'
              },
              'KinesisFirehoseInput': {
                  'ResourceARN': 'string'
              },
              'InputParallelism': {
                  'Count': 123
              },
              'InputSchema': {
                  'RecordFormat': {
                      'RecordFormatType': 'JSON'|'CSV',
                      'MappingParameters': {
                          'JSONMappingParameters': {
                              'RecordRowPath': 'string'
                          },
                          'CSVMappingParameters': {
                              'RecordRowDelimiter': 'string',
                              'RecordColumnDelimiter': 'string'
                          }
                      }
                  },
                  'RecordEncoding': 'string',
                  'RecordColumns': [
                      {
                          'Name': 'string',
                          'Mapping': 'string',
                          'SqlType': 'string'
                      },
                  ]
              }
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of your existing application to which you want to add the streaming source.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The current version of your application. You must provide the ``ApplicationVersionID`` or the ``ConditionalToken`` .You can use the  DescribeApplication operation to find the current application version.

      

    
    :type Input: dict
    :param Input: **[REQUIRED]** 

      The  Input to add.

      

    
      - **NamePrefix** *(string) --* **[REQUIRED]** 

        The name prefix to use when creating an in-application stream. Suppose that you specify a prefix "``MyInApplicationStream`` ." Kinesis Data Analytics then creates one or more (as per the ``InputParallelism`` count you specified) in-application streams with the names "``MyInApplicationStream_001`` ," "``MyInApplicationStream_002`` ," and so on. 

        

      
      - **InputProcessingConfiguration** *(dict) --* 

        The  InputProcessingConfiguration for the input. An input processor transforms records as they are received from the stream, before the application's SQL code executes. Currently, the only input processing configuration available is  InputLambdaProcessor . 

        

      
        - **InputLambdaProcessor** *(dict) --* **[REQUIRED]** 

          The  InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.

          

        
          - **ResourceARN** *(string) --* **[REQUIRED]** 

            The ARN of the AWS Lambda function that operates on records in the stream.

             

            .. note::

               

              To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

               

            

          
        
      
      - **KinesisStreamsInput** *(dict) --* 

        If the streaming source is an Amazon Kinesis data stream, identifies the stream's Amazon Resource Name (ARN). 

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The ARN of the input Kinesis data stream to read.

          

        
      
      - **KinesisFirehoseInput** *(dict) --* 

        If the streaming source is an Amazon Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of the delivery stream.

          

        
      
      - **InputParallelism** *(dict) --* 

        Describes the number of in-application streams to create. 

        

      
        - **Count** *(integer) --* 

          The number of in-application streams to create.

          

        
      
      - **InputSchema** *(dict) --* **[REQUIRED]** 

        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.

         

        Also used to describe the format of the reference data source.

        

      
        - **RecordFormat** *(dict) --* **[REQUIRED]** 

          Specifies the format of the records on the streaming source.

          

        
          - **RecordFormatType** *(string) --* **[REQUIRED]** 

            The type of record format.

            

          
          - **MappingParameters** *(dict) --* 

            When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

            

          
            - **JSONMappingParameters** *(dict) --* 

              Provides additional mapping information when JSON is the record format on the streaming source.

              

            
              - **RecordRowPath** *(string) --* **[REQUIRED]** 

                The path to the top-level parent that contains the records.

                

              
            
            - **CSVMappingParameters** *(dict) --* 

              Provides additional mapping information when the record format uses delimiters (for example, CSV).

              

            
              - **RecordRowDelimiter** *(string) --* **[REQUIRED]** 

                The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                

              
              - **RecordColumnDelimiter** *(string) --* **[REQUIRED]** 

                The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                

              
            
          
        
        - **RecordEncoding** *(string) --* 

          Specifies the encoding of the records in the streaming source. For example, UTF-8.

          

        
        - **RecordColumns** *(list) --* **[REQUIRED]** 

          A list of ``RecordColumn`` objects. 

          

        
          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

             

            Also used to describe the format of the reference data source.

            

          
            - **Name** *(string) --* **[REQUIRED]** 

              The name of the column that is created in the in-application input stream or reference table.

              

            
            - **Mapping** *(string) --* 

              A reference to the data element in the streaming input or the reference data source.

              

            
            - **SqlType** *(string) --* **[REQUIRED]** 

              The type of column created in the in-application input stream or reference table.

              

            
          
      
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'InputDescriptions': [
                {
                    'InputId': 'string',
                    'NamePrefix': 'string',
                    'InAppStreamNames': [
                        'string',
                    ],
                    'InputProcessingConfigurationDescription': {
                        'InputLambdaProcessorDescription': {
                            'ResourceARN': 'string',
                            'RoleARN': 'string'
                        }
                    },
                    'KinesisStreamsInputDescription': {
                        'ResourceARN': 'string',
                        'RoleARN': 'string'
                    },
                    'KinesisFirehoseInputDescription': {
                        'ResourceARN': 'string',
                        'RoleARN': 'string'
                    },
                    'InputSchema': {
                        'RecordFormat': {
                            'RecordFormatType': 'JSON'|'CSV',
                            'MappingParameters': {
                                'JSONMappingParameters': {
                                    'RecordRowPath': 'string'
                                },
                                'CSVMappingParameters': {
                                    'RecordRowDelimiter': 'string',
                                    'RecordColumnDelimiter': 'string'
                                }
                            }
                        },
                        'RecordEncoding': 'string',
                        'RecordColumns': [
                            {
                                'Name': 'string',
                                'Mapping': 'string',
                                'SqlType': 'string'
                            },
                        ]
                    },
                    'InputParallelism': {
                        'Count': 123
                    },
                    'InputStartingPositionConfiguration': {
                        'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The Amazon Resource Name (ARN) of the application.

          
        

        - **ApplicationVersionId** *(integer) --* 

          Provides the current application version.

          
        

        - **InputDescriptions** *(list) --* 

          Describes the application input configuration. 

          
          

          - *(dict) --* 

            Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 

            
            

            - **InputId** *(string) --* 

              The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application. 

              
            

            - **NamePrefix** *(string) --* 

              The in-application name prefix.

              
            

            - **InAppStreamNames** *(list) --* 

              Returns the in-application stream names that are mapped to the stream source. 

              
              

              - *(string) --* 
          
            

            - **InputProcessingConfigurationDescription** *(dict) --* 

              The description of the preprocessor that executes on records in this input before the application's code is run. 

              
              

              - **InputLambdaProcessorDescription** *(dict) --* 

                Provides configuration information about the associated  InputLambdaProcessorDescription  

                
                

                - **ResourceARN** *(string) --* 

                  The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

                   

                  .. note::

                     

                    To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                     

                  
                

                - **RoleARN** *(string) --* 

                  The ARN of the IAM role that is used to access the AWS Lambda function.

                   

                  .. note::

                     

                    Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                     

                  
            
          
            

            - **KinesisStreamsInputDescription** *(dict) --* 

              If a Kinesis data stream is configured as a streaming source, provides the Kinesis data stream's Amazon Resource Name (ARN). 

              
              

              - **ResourceARN** *(string) --* 

                The Amazon Resource Name (ARN) of the Kinesis data stream.

                
              

              - **RoleARN** *(string) --* 

                The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                 

                .. note::

                   

                  Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
            

            - **KinesisFirehoseInputDescription** *(dict) --* 

              If a Kinesis Data Firehose delivery stream is configured as a streaming source, provides the delivery stream's ARN. 

              
              

              - **ResourceARN** *(string) --* 

                The Amazon Resource Name (ARN) of the delivery stream.

                
              

              - **RoleARN** *(string) --* 

                The ARN of the IAM role that Kinesis Data Analytics assumes to access the stream.

                 

                .. note::

                   

                  Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
            

            - **InputSchema** *(dict) --* 

              Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created. 

              
              

              - **RecordFormat** *(dict) --* 

                Specifies the format of the records on the streaming source.

                
                

                - **RecordFormatType** *(string) --* 

                  The type of record format.

                  
                

                - **MappingParameters** *(dict) --* 

                  When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                  
                  

                  - **JSONMappingParameters** *(dict) --* 

                    Provides additional mapping information when JSON is the record format on the streaming source.

                    
                    

                    - **RecordRowPath** *(string) --* 

                      The path to the top-level parent that contains the records.

                      
                
                  

                  - **CSVMappingParameters** *(dict) --* 

                    Provides additional mapping information when the record format uses delimiters (for example, CSV).

                    
                    

                    - **RecordRowDelimiter** *(string) --* 

                      The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                      
                    

                    - **RecordColumnDelimiter** *(string) --* 

                      The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                      
                
              
            
              

              - **RecordEncoding** *(string) --* 

                Specifies the encoding of the records in the streaming source. For example, UTF-8.

                
              

              - **RecordColumns** *(list) --* 

                A list of ``RecordColumn`` objects. 

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                   

                  Also used to describe the format of the reference data source.

                  
                  

                  - **Name** *(string) --* 

                    The name of the column that is created in the in-application input stream or reference table.

                    
                  

                  - **Mapping** *(string) --* 

                    A reference to the data element in the streaming input or the reference data source.

                    
                  

                  - **SqlType** *(string) --* 

                    The type of column created in the in-application input stream or reference table.

                    
              
            
          
            

            - **InputParallelism** *(dict) --* 

              Describes the configured parallelism (number of in-application streams mapped to the streaming source). 

              
              

              - **Count** *(integer) --* 

                The number of in-application streams to create.

                
          
            

            - **InputStartingPositionConfiguration** *(dict) --* 

              The point at which the application is configured to read from the input stream.

              
              

              - **InputStartingPosition** *(string) --* 

                The starting position on the stream.

                 

                 
                * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
                 
                * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
                 
                * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
                 

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.CodeValidationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: add_application_input_processing_configuration(**kwargs)

    

    Adds an  InputProcessingConfiguration to a SQL-based Kinesis Data Analytics application. An input processor pre-processes records on the input stream before the application's SQL code executes. Currently, the only input processor available is `AWS Lambda <https://docs.aws.amazon.com/lambda/>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationInputProcessingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.add_application_input_processing_configuration(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          InputId='string',
          InputProcessingConfiguration={
              'InputLambdaProcessor': {
                  'ResourceARN': 'string'
              }
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application to which you want to add the input processing configuration.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The version of the application to which you want to add the input processing configuration. You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned.

      

    
    :type InputId: string
    :param InputId: **[REQUIRED]** 

      The ID of the input configuration to add the input processing configuration to. You can get a list of the input IDs for an application using the  DescribeApplication operation.

      

    
    :type InputProcessingConfiguration: dict
    :param InputProcessingConfiguration: **[REQUIRED]** 

      The  InputProcessingConfiguration to add to the application.

      

    
      - **InputLambdaProcessor** *(dict) --* **[REQUIRED]** 

        The  InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The ARN of the AWS Lambda function that operates on records in the stream.

           

          .. note::

             

            To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

             

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'InputId': 'string',
            'InputProcessingConfigurationDescription': {
                'InputLambdaProcessorDescription': {
                    'ResourceARN': 'string',
                    'RoleARN': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The Amazon Resource Name (ARN) of the application.

          
        

        - **ApplicationVersionId** *(integer) --* 

          Provides the current application version. 

          
        

        - **InputId** *(string) --* 

          The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application.

          
        

        - **InputProcessingConfigurationDescription** *(dict) --* 

          The description of the preprocessor that executes on records in this input before the application's code is run.

          
          

          - **InputLambdaProcessorDescription** *(dict) --* 

            Provides configuration information about the associated  InputLambdaProcessorDescription  

            
            

            - **ResourceARN** *(string) --* 

              The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

               

              .. note::

                 

                To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                 

              
            

            - **RoleARN** *(string) --* 

              The ARN of the IAM role that is used to access the AWS Lambda function.

               

              .. note::

                 

                Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                 

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: add_application_output(**kwargs)

    

    Adds an external destination to your SQL-based Kinesis Data Analytics application.

     

    If you want Kinesis Data Analytics to deliver data from an in-application stream within your application to an external destination (such as an Kinesis data stream, a Kinesis Data Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.

     

    You can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. 

     

    Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the  DescribeApplication operation to find the current application version.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationOutput>`_    


    **Request Syntax** 
    ::

      response = client.add_application_output(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          Output={
              'Name': 'string',
              'KinesisStreamsOutput': {
                  'ResourceARN': 'string'
              },
              'KinesisFirehoseOutput': {
                  'ResourceARN': 'string'
              },
              'LambdaOutput': {
                  'ResourceARN': 'string'
              },
              'DestinationSchema': {
                  'RecordFormatType': 'JSON'|'CSV'
              }
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application to which you want to add the output configuration.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The version of the application to which you want to add the output configuration. You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned. 

      

    
    :type Output: dict
    :param Output: **[REQUIRED]** 

      An array of objects, each describing one output configuration. In the output configuration, you specify the name of an in-application stream, a destination (that is, a Kinesis data stream, a Kinesis Data Firehose delivery stream, or an AWS Lambda function), and record the formation to use when writing to the destination.

      

    
      - **Name** *(string) --* **[REQUIRED]** 

        The name of the in-application stream.

        

      
      - **KinesisStreamsOutput** *(dict) --* 

        Identifies a Kinesis data stream as the destination.

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The ARN of the destination Kinesis data stream to write to.

          

        
      
      - **KinesisFirehoseOutput** *(dict) --* 

        Identifies a Kinesis Data Firehose delivery stream as the destination.

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The ARN of the destination delivery stream to write to.

          

        
      
      - **LambdaOutput** *(dict) --* 

        Identifies an AWS Lambda function as the destination.

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of the destination Lambda function to write to.

           

          .. note::

             

            To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

             

          

        
      
      - **DestinationSchema** *(dict) --* **[REQUIRED]** 

        Describes the data format when records are written to the destination. 

        

      
        - **RecordFormatType** *(string) --* **[REQUIRED]** 

          Specifies the format of the records on the output stream.

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'OutputDescriptions': [
                {
                    'OutputId': 'string',
                    'Name': 'string',
                    'KinesisStreamsOutputDescription': {
                        'ResourceARN': 'string',
                        'RoleARN': 'string'
                    },
                    'KinesisFirehoseOutputDescription': {
                        'ResourceARN': 'string',
                        'RoleARN': 'string'
                    },
                    'LambdaOutputDescription': {
                        'ResourceARN': 'string',
                        'RoleARN': 'string'
                    },
                    'DestinationSchema': {
                        'RecordFormatType': 'JSON'|'CSV'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The application Amazon Resource Name (ARN).

          
        

        - **ApplicationVersionId** *(integer) --* 

          The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.

          
        

        - **OutputDescriptions** *(list) --* 

          Describes the application output configuration. For more information, see `Configuring Application Output <https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html>`__ . 

          
          

          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

            
            

            - **OutputId** *(string) --* 

              A unique identifier for the output configuration.

              
            

            - **Name** *(string) --* 

              The name of the in-application stream that is configured as output.

              
            

            - **KinesisStreamsOutputDescription** *(dict) --* 

              Describes the Kinesis data stream that is configured as the destination where output is written.

              
              

              - **ResourceARN** *(string) --* 

                The Amazon Resource Name (ARN) of the Kinesis data stream.

                
              

              - **RoleARN** *(string) --* 

                The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                 

                .. note::

                   

                  Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
            

            - **KinesisFirehoseOutputDescription** *(dict) --* 

              Describes the Kinesis Data Firehose delivery stream that is configured as the destination where output is written.

              
              

              - **ResourceARN** *(string) --* 

                The Amazon Resource Name (ARN) of the delivery stream.

                
              

              - **RoleARN** *(string) --* 

                The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                 

                .. note::

                   

                  Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
            

            - **LambdaOutputDescription** *(dict) --* 

              Describes the Lambda function that is configured as the destination where output is written.

              
              

              - **ResourceARN** *(string) --* 

                The Amazon Resource Name (ARN) of the destination Lambda function.

                
              

              - **RoleARN** *(string) --* 

                The ARN of the IAM role that Kinesis Data Analytics can assume to write to the destination function.

                 

                .. note::

                   

                  Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
            

            - **DestinationSchema** *(dict) --* 

              The data format used for writing data to the destination.

              
              

              - **RecordFormatType** *(string) --* 

                Specifies the format of the records on the output stream.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: add_application_reference_data_source(**kwargs)

    

    Adds a reference data source to an existing SQL-based Kinesis Data Analytics application.

     

    Kinesis Data Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in an Amazon S3 object maps to columns in the resulting in-application table.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationReferenceDataSource>`_    


    **Request Syntax** 
    ::

      response = client.add_application_reference_data_source(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          ReferenceDataSource={
              'TableName': 'string',
              'S3ReferenceDataSource': {
                  'BucketARN': 'string',
                  'FileKey': 'string'
              },
              'ReferenceSchema': {
                  'RecordFormat': {
                      'RecordFormatType': 'JSON'|'CSV',
                      'MappingParameters': {
                          'JSONMappingParameters': {
                              'RecordRowPath': 'string'
                          },
                          'CSVMappingParameters': {
                              'RecordRowDelimiter': 'string',
                              'RecordColumnDelimiter': 'string'
                          }
                      }
                  },
                  'RecordEncoding': 'string',
                  'RecordColumns': [
                      {
                          'Name': 'string',
                          'Mapping': 'string',
                          'SqlType': 'string'
                      },
                  ]
              }
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The version of the application for which you are adding the reference data source. You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned.

      

    
    :type ReferenceDataSource: dict
    :param ReferenceDataSource: **[REQUIRED]** 

      The reference data source can be an object in your Amazon S3 bucket. Kinesis Data Analytics reads the object and copies the data into the in-application table that is created. You provide an S3 bucket, object key name, and the resulting in-application table that is created. 

      

    
      - **TableName** *(string) --* **[REQUIRED]** 

        The name of the in-application table to create.

        

      
      - **S3ReferenceDataSource** *(dict) --* 

        Identifies the S3 bucket and object that contains the reference data. A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the  UpdateApplication operation to trigger reloading of data into your application. 

        

      
        - **BucketARN** *(string) --* 

          The Amazon Resource Name (ARN) of the S3 bucket.

          

        
        - **FileKey** *(string) --* 

          The object key name containing the reference data.

          

        
      
      - **ReferenceSchema** *(dict) --* **[REQUIRED]** 

        Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

        

      
        - **RecordFormat** *(dict) --* **[REQUIRED]** 

          Specifies the format of the records on the streaming source.

          

        
          - **RecordFormatType** *(string) --* **[REQUIRED]** 

            The type of record format.

            

          
          - **MappingParameters** *(dict) --* 

            When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

            

          
            - **JSONMappingParameters** *(dict) --* 

              Provides additional mapping information when JSON is the record format on the streaming source.

              

            
              - **RecordRowPath** *(string) --* **[REQUIRED]** 

                The path to the top-level parent that contains the records.

                

              
            
            - **CSVMappingParameters** *(dict) --* 

              Provides additional mapping information when the record format uses delimiters (for example, CSV).

              

            
              - **RecordRowDelimiter** *(string) --* **[REQUIRED]** 

                The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                

              
              - **RecordColumnDelimiter** *(string) --* **[REQUIRED]** 

                The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                

              
            
          
        
        - **RecordEncoding** *(string) --* 

          Specifies the encoding of the records in the streaming source. For example, UTF-8.

          

        
        - **RecordColumns** *(list) --* **[REQUIRED]** 

          A list of ``RecordColumn`` objects. 

          

        
          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

             

            Also used to describe the format of the reference data source.

            

          
            - **Name** *(string) --* **[REQUIRED]** 

              The name of the column that is created in the in-application input stream or reference table.

              

            
            - **Mapping** *(string) --* 

              A reference to the data element in the streaming input or the reference data source.

              

            
            - **SqlType** *(string) --* **[REQUIRED]** 

              The type of column created in the in-application input stream or reference table.

              

            
          
      
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'ReferenceDataSourceDescriptions': [
                {
                    'ReferenceId': 'string',
                    'TableName': 'string',
                    'S3ReferenceDataSourceDescription': {
                        'BucketARN': 'string',
                        'FileKey': 'string',
                        'ReferenceRoleARN': 'string'
                    },
                    'ReferenceSchema': {
                        'RecordFormat': {
                            'RecordFormatType': 'JSON'|'CSV',
                            'MappingParameters': {
                                'JSONMappingParameters': {
                                    'RecordRowPath': 'string'
                                },
                                'CSVMappingParameters': {
                                    'RecordRowDelimiter': 'string',
                                    'RecordColumnDelimiter': 'string'
                                }
                            }
                        },
                        'RecordEncoding': 'string',
                        'RecordColumns': [
                            {
                                'Name': 'string',
                                'Mapping': 'string',
                                'SqlType': 'string'
                            },
                        ]
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The application Amazon Resource Name (ARN).

          
        

        - **ApplicationVersionId** *(integer) --* 

          The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.

          
        

        - **ReferenceDataSourceDescriptions** *(list) --* 

          Describes reference data sources configured for the application. 

          
          

          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.

            
            

            - **ReferenceId** *(string) --* 

              The ID of the reference data source. This is the ID that Kinesis Data Analytics assigns when you add the reference data source to your application using the  CreateApplication or  UpdateApplication operation.

              
            

            - **TableName** *(string) --* 

              The in-application table name created by the specific reference data source configuration.

              
            

            - **S3ReferenceDataSourceDescription** *(dict) --* 

              Provides the Amazon S3 bucket name, the object key name that contains the reference data. 

              
              

              - **BucketARN** *(string) --* 

                The Amazon Resource Name (ARN) of the S3 bucket.

                
              

              - **FileKey** *(string) --* 

                Amazon S3 object key name.

                
              

              - **ReferenceRoleARN** *(string) --* 

                The ARN of the IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table. 

                 

                .. note::

                   

                  Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
            

            - **ReferenceSchema** *(dict) --* 

              Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

              
              

              - **RecordFormat** *(dict) --* 

                Specifies the format of the records on the streaming source.

                
                

                - **RecordFormatType** *(string) --* 

                  The type of record format.

                  
                

                - **MappingParameters** *(dict) --* 

                  When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                  
                  

                  - **JSONMappingParameters** *(dict) --* 

                    Provides additional mapping information when JSON is the record format on the streaming source.

                    
                    

                    - **RecordRowPath** *(string) --* 

                      The path to the top-level parent that contains the records.

                      
                
                  

                  - **CSVMappingParameters** *(dict) --* 

                    Provides additional mapping information when the record format uses delimiters (for example, CSV).

                    
                    

                    - **RecordRowDelimiter** *(string) --* 

                      The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                      
                    

                    - **RecordColumnDelimiter** *(string) --* 

                      The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                      
                
              
            
              

              - **RecordEncoding** *(string) --* 

                Specifies the encoding of the records in the streaming source. For example, UTF-8.

                
              

              - **RecordColumns** *(list) --* 

                A list of ``RecordColumn`` objects. 

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                   

                  Also used to describe the format of the reference data source.

                  
                  

                  - **Name** *(string) --* 

                    The name of the column that is created in the in-application input stream or reference table.

                    
                  

                  - **Mapping** *(string) --* 

                    A reference to the data element in the streaming input or the reference data source.

                    
                  

                  - **SqlType** *(string) --* 

                    The type of column created in the in-application input stream or reference table.

                    
              
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: add_application_vpc_configuration(**kwargs)

    

    Adds a Virtual Private Cloud (VPC) configuration to the application. Applications can use VPCs to store and access resources securely.

     

    Note the following about VPC configurations for Kinesis Data Analytics applications:

     

     
    * VPC configurations are not supported for SQL applications. 
     
    * When a VPC is added to a Kinesis Data Analytics application, the application can no longer be accessed from the Internet directly. To enable Internet access to the application, add an Internet gateway to your VPC. 
     

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/AddApplicationVpcConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.add_application_vpc_configuration(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          VpcConfiguration={
              'SubnetIds': [
                  'string',
              ],
              'SecurityGroupIds': [
                  'string',
              ]
          },
          ConditionalToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: 

      The version of the application to which you want to add the VPC configuration. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned. For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    :type VpcConfiguration: dict
    :param VpcConfiguration: **[REQUIRED]** 

      Description of the VPC to add to the application.

      

    
      - **SubnetIds** *(list) --* **[REQUIRED]** 

        The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

        

      
        - *(string) --* 

        
    
      - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

        The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

        

      
        - *(string) --* 

        
    
    
    :type ConditionalToken: string
    :param ConditionalToken: 

      A value you use to implement strong concurrency for application updates. You must provide the ``ApplicationVersionID`` or the ``ConditionalToken`` . You get the application's current ``ConditionalToken`` using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'VpcConfigurationDescription': {
                'VpcConfigurationId': 'string',
                'VpcId': 'string',
                'SubnetIds': [
                    'string',
                ],
                'SecurityGroupIds': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The ARN of the application.

          
        

        - **ApplicationVersionId** *(integer) --* 

          Provides the current application version. Kinesis Data Analytics updates the ApplicationVersionId each time you update the application.

          
        

        - **VpcConfigurationDescription** *(dict) --* 

          The parameters of the new VPC configuration.

          
          

          - **VpcConfigurationId** *(string) --* 

            The ID of the VPC configuration.

            
          

          - **VpcId** *(string) --* 

            The ID of the associated VPC.

            
          

          - **SubnetIds** *(list) --* 

            The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

            
            

            - *(string) --* 
        
          

          - **SecurityGroupIds** *(list) --* 

            The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: create_application(**kwargs)

    

    Creates a Kinesis Data Analytics application. For information about creating a Kinesis Data Analytics application, see `Creating an Application <https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/CreateApplication>`_    


    **Request Syntax** 
    ::

      response = client.create_application(
          ApplicationName='string',
          ApplicationDescription='string',
          RuntimeEnvironment='SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
          ServiceExecutionRole='string',
          ApplicationConfiguration={
              'SqlApplicationConfiguration': {
                  'Inputs': [
                      {
                          'NamePrefix': 'string',
                          'InputProcessingConfiguration': {
                              'InputLambdaProcessor': {
                                  'ResourceARN': 'string'
                              }
                          },
                          'KinesisStreamsInput': {
                              'ResourceARN': 'string'
                          },
                          'KinesisFirehoseInput': {
                              'ResourceARN': 'string'
                          },
                          'InputParallelism': {
                              'Count': 123
                          },
                          'InputSchema': {
                              'RecordFormat': {
                                  'RecordFormatType': 'JSON'|'CSV',
                                  'MappingParameters': {
                                      'JSONMappingParameters': {
                                          'RecordRowPath': 'string'
                                      },
                                      'CSVMappingParameters': {
                                          'RecordRowDelimiter': 'string',
                                          'RecordColumnDelimiter': 'string'
                                      }
                                  }
                              },
                              'RecordEncoding': 'string',
                              'RecordColumns': [
                                  {
                                      'Name': 'string',
                                      'Mapping': 'string',
                                      'SqlType': 'string'
                                  },
                              ]
                          }
                      },
                  ],
                  'Outputs': [
                      {
                          'Name': 'string',
                          'KinesisStreamsOutput': {
                              'ResourceARN': 'string'
                          },
                          'KinesisFirehoseOutput': {
                              'ResourceARN': 'string'
                          },
                          'LambdaOutput': {
                              'ResourceARN': 'string'
                          },
                          'DestinationSchema': {
                              'RecordFormatType': 'JSON'|'CSV'
                          }
                      },
                  ],
                  'ReferenceDataSources': [
                      {
                          'TableName': 'string',
                          'S3ReferenceDataSource': {
                              'BucketARN': 'string',
                              'FileKey': 'string'
                          },
                          'ReferenceSchema': {
                              'RecordFormat': {
                                  'RecordFormatType': 'JSON'|'CSV',
                                  'MappingParameters': {
                                      'JSONMappingParameters': {
                                          'RecordRowPath': 'string'
                                      },
                                      'CSVMappingParameters': {
                                          'RecordRowDelimiter': 'string',
                                          'RecordColumnDelimiter': 'string'
                                      }
                                  }
                              },
                              'RecordEncoding': 'string',
                              'RecordColumns': [
                                  {
                                      'Name': 'string',
                                      'Mapping': 'string',
                                      'SqlType': 'string'
                                  },
                              ]
                          }
                      },
                  ]
              },
              'FlinkApplicationConfiguration': {
                  'CheckpointConfiguration': {
                      'ConfigurationType': 'DEFAULT'|'CUSTOM',
                      'CheckpointingEnabled': True|False,
                      'CheckpointInterval': 123,
                      'MinPauseBetweenCheckpoints': 123
                  },
                  'MonitoringConfiguration': {
                      'ConfigurationType': 'DEFAULT'|'CUSTOM',
                      'MetricsLevel': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                      'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                  },
                  'ParallelismConfiguration': {
                      'ConfigurationType': 'DEFAULT'|'CUSTOM',
                      'Parallelism': 123,
                      'ParallelismPerKPU': 123,
                      'AutoScalingEnabled': True|False
                  }
              },
              'EnvironmentProperties': {
                  'PropertyGroups': [
                      {
                          'PropertyGroupId': 'string',
                          'PropertyMap': {
                              'string': 'string'
                          }
                      },
                  ]
              },
              'ApplicationCodeConfiguration': {
                  'CodeContent': {
                      'TextContent': 'string',
                      'ZipFileContent': b'bytes',
                      'S3ContentLocation': {
                          'BucketARN': 'string',
                          'FileKey': 'string',
                          'ObjectVersion': 'string'
                      }
                  },
                  'CodeContentType': 'PLAINTEXT'|'ZIPFILE'
              },
              'ApplicationSnapshotConfiguration': {
                  'SnapshotsEnabled': True|False
              },
              'VpcConfigurations': [
                  {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
              ],
              'ZeppelinApplicationConfiguration': {
                  'MonitoringConfiguration': {
                      'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                  },
                  'CatalogConfiguration': {
                      'GlueDataCatalogConfiguration': {
                          'DatabaseARN': 'string'
                      }
                  },
                  'DeployAsApplicationConfiguration': {
                      'S3ContentLocation': {
                          'BucketARN': 'string',
                          'BasePath': 'string'
                      }
                  },
                  'CustomArtifactsConfiguration': [
                      {
                          'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                          'S3ContentLocation': {
                              'BucketARN': 'string',
                              'FileKey': 'string',
                              'ObjectVersion': 'string'
                          },
                          'MavenReference': {
                              'GroupId': 'string',
                              'ArtifactId': 'string',
                              'Version': 'string'
                          }
                      },
                  ]
              }
          },
          CloudWatchLoggingOptions=[
              {
                  'LogStreamARN': 'string'
              },
          ],
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          ApplicationMode='STREAMING'|'INTERACTIVE'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of your application (for example, ``sample-app`` ).

      

    
    :type ApplicationDescription: string
    :param ApplicationDescription: 

      A summary description of the application.

      

    
    :type RuntimeEnvironment: string
    :param RuntimeEnvironment: **[REQUIRED]** 

      The runtime environment for the application (``SQL-1_0`` , ``FLINK-1_6`` , ``FLINK-1_8`` , or ``FLINK-1_11`` ).

      

    
    :type ServiceExecutionRole: string
    :param ServiceExecutionRole: **[REQUIRED]** 

      The IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.

      

    
    :type ApplicationConfiguration: dict
    :param ApplicationConfiguration: 

      Use this parameter to configure the application.

      

    
      - **SqlApplicationConfiguration** *(dict) --* 

        The creation and update parameters for a SQL-based Kinesis Data Analytics application.

        

      
        - **Inputs** *(list) --* 

          The array of  Input objects describing the input streams used by the application.

          

        
          - *(dict) --* 

            When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. 

            

          
            - **NamePrefix** *(string) --* **[REQUIRED]** 

              The name prefix to use when creating an in-application stream. Suppose that you specify a prefix "``MyInApplicationStream`` ." Kinesis Data Analytics then creates one or more (as per the ``InputParallelism`` count you specified) in-application streams with the names "``MyInApplicationStream_001`` ," "``MyInApplicationStream_002`` ," and so on. 

              

            
            - **InputProcessingConfiguration** *(dict) --* 

              The  InputProcessingConfiguration for the input. An input processor transforms records as they are received from the stream, before the application's SQL code executes. Currently, the only input processing configuration available is  InputLambdaProcessor . 

              

            
              - **InputLambdaProcessor** *(dict) --* **[REQUIRED]** 

                The  InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.

                

              
                - **ResourceARN** *(string) --* **[REQUIRED]** 

                  The ARN of the AWS Lambda function that operates on records in the stream.

                   

                  .. note::

                     

                    To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                     

                  

                
              
            
            - **KinesisStreamsInput** *(dict) --* 

              If the streaming source is an Amazon Kinesis data stream, identifies the stream's Amazon Resource Name (ARN). 

              

            
              - **ResourceARN** *(string) --* **[REQUIRED]** 

                The ARN of the input Kinesis data stream to read.

                

              
            
            - **KinesisFirehoseInput** *(dict) --* 

              If the streaming source is an Amazon Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.

              

            
              - **ResourceARN** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the delivery stream.

                

              
            
            - **InputParallelism** *(dict) --* 

              Describes the number of in-application streams to create. 

              

            
              - **Count** *(integer) --* 

                The number of in-application streams to create.

                

              
            
            - **InputSchema** *(dict) --* **[REQUIRED]** 

              Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.

               

              Also used to describe the format of the reference data source.

              

            
              - **RecordFormat** *(dict) --* **[REQUIRED]** 

                Specifies the format of the records on the streaming source.

                

              
                - **RecordFormatType** *(string) --* **[REQUIRED]** 

                  The type of record format.

                  

                
                - **MappingParameters** *(dict) --* 

                  When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                  

                
                  - **JSONMappingParameters** *(dict) --* 

                    Provides additional mapping information when JSON is the record format on the streaming source.

                    

                  
                    - **RecordRowPath** *(string) --* **[REQUIRED]** 

                      The path to the top-level parent that contains the records.

                      

                    
                  
                  - **CSVMappingParameters** *(dict) --* 

                    Provides additional mapping information when the record format uses delimiters (for example, CSV).

                    

                  
                    - **RecordRowDelimiter** *(string) --* **[REQUIRED]** 

                      The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                      

                    
                    - **RecordColumnDelimiter** *(string) --* **[REQUIRED]** 

                      The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                      

                    
                  
                
              
              - **RecordEncoding** *(string) --* 

                Specifies the encoding of the records in the streaming source. For example, UTF-8.

                

              
              - **RecordColumns** *(list) --* **[REQUIRED]** 

                A list of ``RecordColumn`` objects. 

                

              
                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                   

                  Also used to describe the format of the reference data source.

                  

                
                  - **Name** *(string) --* **[REQUIRED]** 

                    The name of the column that is created in the in-application input stream or reference table.

                    

                  
                  - **Mapping** *(string) --* 

                    A reference to the data element in the streaming input or the reference data source.

                    

                  
                  - **SqlType** *(string) --* **[REQUIRED]** 

                    The type of column created in the in-application input stream or reference table.

                    

                  
                
            
            
          
      
        - **Outputs** *(list) --* 

          The array of  Output objects describing the destination streams used by the application.

          

        
          - *(dict) --* 

            Describes a SQL-based Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

             

            

            

          
            - **Name** *(string) --* **[REQUIRED]** 

              The name of the in-application stream.

              

            
            - **KinesisStreamsOutput** *(dict) --* 

              Identifies a Kinesis data stream as the destination.

              

            
              - **ResourceARN** *(string) --* **[REQUIRED]** 

                The ARN of the destination Kinesis data stream to write to.

                

              
            
            - **KinesisFirehoseOutput** *(dict) --* 

              Identifies a Kinesis Data Firehose delivery stream as the destination.

              

            
              - **ResourceARN** *(string) --* **[REQUIRED]** 

                The ARN of the destination delivery stream to write to.

                

              
            
            - **LambdaOutput** *(dict) --* 

              Identifies an AWS Lambda function as the destination.

              

            
              - **ResourceARN** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the destination Lambda function to write to.

                 

                .. note::

                   

                  To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                   

                

              
            
            - **DestinationSchema** *(dict) --* **[REQUIRED]** 

              Describes the data format when records are written to the destination. 

              

            
              - **RecordFormatType** *(string) --* **[REQUIRED]** 

                Specifies the format of the records on the output stream.

                

              
            
          
      
        - **ReferenceDataSources** *(list) --* 

          The array of  ReferenceDataSource objects describing the reference data sources used by the application.

          

        
          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.

            

          
            - **TableName** *(string) --* **[REQUIRED]** 

              The name of the in-application table to create.

              

            
            - **S3ReferenceDataSource** *(dict) --* 

              Identifies the S3 bucket and object that contains the reference data. A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the  UpdateApplication operation to trigger reloading of data into your application. 

              

            
              - **BucketARN** *(string) --* 

                The Amazon Resource Name (ARN) of the S3 bucket.

                

              
              - **FileKey** *(string) --* 

                The object key name containing the reference data.

                

              
            
            - **ReferenceSchema** *(dict) --* **[REQUIRED]** 

              Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

              

            
              - **RecordFormat** *(dict) --* **[REQUIRED]** 

                Specifies the format of the records on the streaming source.

                

              
                - **RecordFormatType** *(string) --* **[REQUIRED]** 

                  The type of record format.

                  

                
                - **MappingParameters** *(dict) --* 

                  When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                  

                
                  - **JSONMappingParameters** *(dict) --* 

                    Provides additional mapping information when JSON is the record format on the streaming source.

                    

                  
                    - **RecordRowPath** *(string) --* **[REQUIRED]** 

                      The path to the top-level parent that contains the records.

                      

                    
                  
                  - **CSVMappingParameters** *(dict) --* 

                    Provides additional mapping information when the record format uses delimiters (for example, CSV).

                    

                  
                    - **RecordRowDelimiter** *(string) --* **[REQUIRED]** 

                      The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                      

                    
                    - **RecordColumnDelimiter** *(string) --* **[REQUIRED]** 

                      The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                      

                    
                  
                
              
              - **RecordEncoding** *(string) --* 

                Specifies the encoding of the records in the streaming source. For example, UTF-8.

                

              
              - **RecordColumns** *(list) --* **[REQUIRED]** 

                A list of ``RecordColumn`` objects. 

                

              
                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                   

                  Also used to describe the format of the reference data source.

                  

                
                  - **Name** *(string) --* **[REQUIRED]** 

                    The name of the column that is created in the in-application input stream or reference table.

                    

                  
                  - **Mapping** *(string) --* 

                    A reference to the data element in the streaming input or the reference data source.

                    

                  
                  - **SqlType** *(string) --* **[REQUIRED]** 

                    The type of column created in the in-application input stream or reference table.

                    

                  
                
            
            
          
      
      
      - **FlinkApplicationConfiguration** *(dict) --* 

        The creation and update parameters for a Flink-based Kinesis Data Analytics application.

        

      
        - **CheckpointConfiguration** *(dict) --* 

          Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see `Checkpoints for Fault Tolerance <https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ . 

          

        
          - **ConfigurationType** *(string) --* **[REQUIRED]** 

            Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. You must set this property to ``CUSTOM`` in order to set the ``CheckpointingEnabled`` , ``CheckpointInterval`` , or ``MinPauseBetweenCheckpoints`` parameters.

             

            .. note::

               

              If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

               

               
              * **CheckpointingEnabled:** true 
               
              * **CheckpointInterval:** 60000 
               
              * **MinPauseBetweenCheckpoints:** 5000 
               

               

            

          
          - **CheckpointingEnabled** *(boolean) --* 

            Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.

             

            .. note::

               

              If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

               

            

          
          - **CheckpointInterval** *(integer) --* 

            Describes the interval in milliseconds between checkpoint operations. 

             

            .. note::

               

              If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

               

            

          
          - **MinPauseBetweenCheckpoints** *(integer) --* 

            Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. If a checkpoint operation takes longer than the ``CheckpointInterval`` , the application otherwise performs continual checkpoint operations. For more information, see `Tuning Checkpointing <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/large_state_tuning.html#tuning-checkpointing>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

             

            .. note::

               

              If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

               

            

          
        
        - **MonitoringConfiguration** *(dict) --* 

          Describes configuration parameters for Amazon CloudWatch logging for an application.

          

        
          - **ConfigurationType** *(string) --* **[REQUIRED]** 

            Describes whether to use the default CloudWatch logging configuration for an application. You must set this property to ``CUSTOM`` in order to set the ``LogLevel`` or ``MetricsLevel`` parameters.

            

          
          - **MetricsLevel** *(string) --* 

            Describes the granularity of the CloudWatch Logs for an application. The ``Parallelism`` level is not recommended for applications with a Parallelism over 64 due to excessive costs.

            

          
          - **LogLevel** *(string) --* 

            Describes the verbosity of the CloudWatch Logs for an application.

            

          
        
        - **ParallelismConfiguration** *(dict) --* 

          Describes parameters for how an application executes multiple tasks simultaneously.

          

        
          - **ConfigurationType** *(string) --* **[REQUIRED]** 

            Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. You must set this property to ``CUSTOM`` in order to change your application's ``AutoScalingEnabled`` , ``Parallelism`` , or ``ParallelismPerKPU`` properties.

            

          
          - **Parallelism** *(integer) --* 

            Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, Kinesis Data Analytics increases the ``CurrentParallelism`` value in response to application load. The service can increase the ``CurrentParallelism`` value up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

            

          
          - **ParallelismPerKPU** *(integer) --* 

            Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application. For more information about KPUs, see `Amazon Kinesis Data Analytics Pricing <http://aws.amazon.com/kinesis/data-analytics/pricing/>`__ .

            

          
          - **AutoScalingEnabled** *(boolean) --* 

            Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.

            

          
        
      
      - **EnvironmentProperties** *(dict) --* 

        Describes execution properties for a Flink-based Kinesis Data Analytics application.

        

      
        - **PropertyGroups** *(list) --* **[REQUIRED]** 

          Describes the execution property groups.

          

        
          - *(dict) --* 

            Property key-value pairs passed into an application.

            

          
            - **PropertyGroupId** *(string) --* **[REQUIRED]** 

              Describes the key of an application execution property key-value pair.

              

            
            - **PropertyMap** *(dict) --* **[REQUIRED]** 

              Describes the value of an application execution property key-value pair.

              

            
              - *(string) --* 

              
                - *(string) --* 

                
          
        
          
      
      
      - **ApplicationCodeConfiguration** *(dict) --* 

        The code location and type parameters for a Flink-based Kinesis Data Analytics application.

        

      
        - **CodeContent** *(dict) --* 

          The location and type of the application code.

          

        
          - **TextContent** *(string) --* 

            The text-format code for a Flink-based Kinesis Data Analytics application.

            

          
          - **ZipFileContent** *(bytes) --* 

            The zip-format code for a Flink-based Kinesis Data Analytics application.

            

          
          - **S3ContentLocation** *(dict) --* 

            Information about the Amazon S3 bucket that contains the application code.

            

          
            - **BucketARN** *(string) --* **[REQUIRED]** 

              The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

              

            
            - **FileKey** *(string) --* **[REQUIRED]** 

              The file key for the object containing the application code.

              

            
            - **ObjectVersion** *(string) --* 

              The version of the object containing the application code.

              

            
          
        
        - **CodeContentType** *(string) --* **[REQUIRED]** 

          Specifies whether the code content is in text or zip format.

          

        
      
      - **ApplicationSnapshotConfiguration** *(dict) --* 

        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

        

      
        - **SnapshotsEnabled** *(boolean) --* **[REQUIRED]** 

          Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

          

        
      
      - **VpcConfigurations** *(list) --* 

        The array of descriptions of VPC configurations available to the application.

        

      
        - *(dict) --* 

          Describes the parameters of a VPC used by the application.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

            

          
            - *(string) --* 

            
        
        
    
      - **ZeppelinApplicationConfiguration** *(dict) --* 

        The configuration parameters for a Kinesis Data Analytics Studio notebook.

        

      
        - **MonitoringConfiguration** *(dict) --* 

          The monitoring configuration of a Kinesis Data Analytics Studio notebook.

          

        
          - **LogLevel** *(string) --* **[REQUIRED]** 

            The verbosity of the CloudWatch Logs for an application.

            

          
        
        - **CatalogConfiguration** *(dict) --* 

          The AWS Glue Data Catalog that you use in queries in a Kinesis Data Analytics Studio notebook.

          

        
          - **GlueDataCatalogConfiguration** *(dict) --* **[REQUIRED]** 

            The configuration parameters for the default AWS Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.

            

          
            - **DatabaseARN** *(string) --* **[REQUIRED]** 

              The Amazon Resource Name (ARN) of the database.

              

            
          
        
        - **DeployAsApplicationConfiguration** *(dict) --* 

          The information required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..

          

        
          - **S3ContentLocation** *(dict) --* **[REQUIRED]** 

            The description of an Amazon S3 object that contains the Amazon Data Analytics application, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

            

          
            - **BucketARN** *(string) --* **[REQUIRED]** 

              The Amazon Resource Name (ARN) of the S3 bucket.

              

            
            - **BasePath** *(string) --* 

              The base path for the S3 bucket.

              

            
          
        
        - **CustomArtifactsConfiguration** *(list) --* 

          Custom artifacts are dependency JARs and user-defined functions (UDF).

          

        
          - *(dict) --* 

            Specifies dependency JARs, as well as JAR files that contain user-defined functions (UDF).

            

          
            - **ArtifactType** *(string) --* **[REQUIRED]** 

               ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

              

            
            - **S3ContentLocation** *(dict) --* 

              For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

              

            
              - **BucketARN** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                

              
              - **FileKey** *(string) --* **[REQUIRED]** 

                The file key for the object containing the application code.

                

              
              - **ObjectVersion** *(string) --* 

                The version of the object containing the application code.

                

              
            
            - **MavenReference** *(dict) --* 

              The parameters required to fully specify a Maven reference.

              

            
              - **GroupId** *(string) --* **[REQUIRED]** 

                The group ID of the Maven reference.

                

              
              - **ArtifactId** *(string) --* **[REQUIRED]** 

                The artifact ID of the Maven reference.

                

              
              - **Version** *(string) --* **[REQUIRED]** 

                The version of the Maven reference.

                

              
            
          
      
      
    
    :type CloudWatchLoggingOptions: list
    :param CloudWatchLoggingOptions: 

      Use this parameter to configure an Amazon CloudWatch log stream to monitor application configuration errors. 

      

    
      - *(dict) --* 

        Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN). 

        

      
        - **LogStreamARN** *(string) --* **[REQUIRED]** 

          The ARN of the CloudWatch log to receive application messages.

          

        
      
  
    :type Tags: list
    :param Tags: 

      A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

      

    
      - *(dict) --* 

        A key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the key-value tag.

          

        
        - **Value** *(string) --* 

          The value of the key-value tag. The value is optional.

          

        
      
  
    :type ApplicationMode: string
    :param ApplicationMode: 

      Use the ``STREAMING`` mode to create a Kinesis Data Analytics Studio notebook. To create a Kinesis Data Analytics Studio notebook, use the ``INTERACTIVE`` mode.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationDetail': {
                'ApplicationARN': 'string',
                'ApplicationDescription': 'string',
                'ApplicationName': 'string',
                'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                'ServiceExecutionRole': 'string',
                'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                'ApplicationVersionId': 123,
                'CreateTimestamp': datetime(2015, 1, 1),
                'LastUpdateTimestamp': datetime(2015, 1, 1),
                'ApplicationConfigurationDescription': {
                    'SqlApplicationConfigurationDescription': {
                        'InputDescriptions': [
                            {
                                'InputId': 'string',
                                'NamePrefix': 'string',
                                'InAppStreamNames': [
                                    'string',
                                ],
                                'InputProcessingConfigurationDescription': {
                                    'InputLambdaProcessorDescription': {
                                        'ResourceARN': 'string',
                                        'RoleARN': 'string'
                                    }
                                },
                                'KinesisStreamsInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'InputSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                },
                                'InputParallelism': {
                                    'Count': 123
                                },
                                'InputStartingPositionConfiguration': {
                                    'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                                }
                            },
                        ],
                        'OutputDescriptions': [
                            {
                                'OutputId': 'string',
                                'Name': 'string',
                                'KinesisStreamsOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'LambdaOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'DestinationSchema': {
                                    'RecordFormatType': 'JSON'|'CSV'
                                }
                            },
                        ],
                        'ReferenceDataSourceDescriptions': [
                            {
                                'ReferenceId': 'string',
                                'TableName': 'string',
                                'S3ReferenceDataSourceDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ReferenceRoleARN': 'string'
                                },
                                'ReferenceSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                }
                            },
                        ]
                    },
                    'ApplicationCodeConfigurationDescription': {
                        'CodeContentType': 'PLAINTEXT'|'ZIPFILE',
                        'CodeContentDescription': {
                            'TextContent': 'string',
                            'CodeMD5': 'string',
                            'CodeSize': 123,
                            'S3ApplicationCodeLocationDescription': {
                                'BucketARN': 'string',
                                'FileKey': 'string',
                                'ObjectVersion': 'string'
                            }
                        }
                    },
                    'RunConfigurationDescription': {
                        'ApplicationRestoreConfigurationDescription': {
                            'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                            'SnapshotName': 'string'
                        },
                        'FlinkRunConfigurationDescription': {
                            'AllowNonRestoredState': True|False
                        }
                    },
                    'FlinkApplicationConfigurationDescription': {
                        'CheckpointConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'CheckpointingEnabled': True|False,
                            'CheckpointInterval': 123,
                            'MinPauseBetweenCheckpoints': 123
                        },
                        'MonitoringConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'MetricsLevel': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'ParallelismConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'Parallelism': 123,
                            'ParallelismPerKPU': 123,
                            'CurrentParallelism': 123,
                            'AutoScalingEnabled': True|False
                        },
                        'JobPlanDescription': 'string'
                    },
                    'EnvironmentPropertyDescriptions': {
                        'PropertyGroupDescriptions': [
                            {
                                'PropertyGroupId': 'string',
                                'PropertyMap': {
                                    'string': 'string'
                                }
                            },
                        ]
                    },
                    'ApplicationSnapshotConfigurationDescription': {
                        'SnapshotsEnabled': True|False
                    },
                    'VpcConfigurationDescriptions': [
                        {
                            'VpcConfigurationId': 'string',
                            'VpcId': 'string',
                            'SubnetIds': [
                                'string',
                            ],
                            'SecurityGroupIds': [
                                'string',
                            ]
                        },
                    ],
                    'ZeppelinApplicationConfigurationDescription': {
                        'MonitoringConfigurationDescription': {
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'CatalogConfigurationDescription': {
                            'GlueDataCatalogConfigurationDescription': {
                                'DatabaseARN': 'string'
                            }
                        },
                        'DeployAsApplicationConfigurationDescription': {
                            'S3ContentLocationDescription': {
                                'BucketARN': 'string',
                                'BasePath': 'string'
                            }
                        },
                        'CustomArtifactsConfigurationDescription': [
                            {
                                'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                                'S3ContentLocationDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ObjectVersion': 'string'
                                },
                                'MavenReferenceDescription': {
                                    'GroupId': 'string',
                                    'ArtifactId': 'string',
                                    'Version': 'string'
                                }
                            },
                        ]
                    }
                },
                'CloudWatchLoggingOptionDescriptions': [
                    {
                        'CloudWatchLoggingOptionId': 'string',
                        'LogStreamARN': 'string',
                        'RoleARN': 'string'
                    },
                ],
                'ApplicationMaintenanceConfigurationDescription': {
                    'ApplicationMaintenanceWindowStartTime': 'string',
                    'ApplicationMaintenanceWindowEndTime': 'string'
                },
                'ApplicationVersionUpdatedFrom': 123,
                'ApplicationVersionRolledBackFrom': 123,
                'ConditionalToken': 'string',
                'ApplicationVersionRolledBackTo': 123,
                'ApplicationMode': 'STREAMING'|'INTERACTIVE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationDetail** *(dict) --* 

          In response to your ``CreateApplication`` request, Kinesis Data Analytics returns a response with details of the application it created.

          
          

          - **ApplicationARN** *(string) --* 

            The ARN of the application.

            
          

          - **ApplicationDescription** *(string) --* 

            The description of the application.

            
          

          - **ApplicationName** *(string) --* 

            The name of the application.

            
          

          - **RuntimeEnvironment** *(string) --* 

            The runtime environment for the application (``SQL-1_0`` , ``FLINK-1_6`` , ``FLINK-1_8`` , or ``FLINK-1_11`` ).

            
          

          - **ServiceExecutionRole** *(string) --* 

            Specifies the IAM role that the application uses to access external resources.

            
          

          - **ApplicationStatus** *(string) --* 

            The status of the application.

            
          

          - **ApplicationVersionId** *(integer) --* 

            Provides the current application version. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update the application.

            
          

          - **CreateTimestamp** *(datetime) --* 

            The current timestamp when the application was created.

            
          

          - **LastUpdateTimestamp** *(datetime) --* 

            The current timestamp when the application was last updated.

            
          

          - **ApplicationConfigurationDescription** *(dict) --* 

            Describes details about the application code and starting parameters for a Kinesis Data Analytics application.

            
            

            - **SqlApplicationConfigurationDescription** *(dict) --* 

              The details about inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.

              
              

              - **InputDescriptions** *(list) --* 

                The array of  InputDescription objects describing the input streams used by the application.

                
                

                - *(dict) --* 

                  Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 

                  
                  

                  - **InputId** *(string) --* 

                    The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application. 

                    
                  

                  - **NamePrefix** *(string) --* 

                    The in-application name prefix.

                    
                  

                  - **InAppStreamNames** *(list) --* 

                    Returns the in-application stream names that are mapped to the stream source. 

                    
                    

                    - *(string) --* 
                
                  

                  - **InputProcessingConfigurationDescription** *(dict) --* 

                    The description of the preprocessor that executes on records in this input before the application's code is run. 

                    
                    

                    - **InputLambdaProcessorDescription** *(dict) --* 

                      Provides configuration information about the associated  InputLambdaProcessorDescription  

                      
                      

                      - **ResourceARN** *(string) --* 

                        The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

                         

                        .. note::

                           

                          To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                           

                        
                      

                      - **RoleARN** *(string) --* 

                        The ARN of the IAM role that is used to access the AWS Lambda function.

                         

                        .. note::

                           

                          Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                           

                        
                  
                
                  

                  - **KinesisStreamsInputDescription** *(dict) --* 

                    If a Kinesis data stream is configured as a streaming source, provides the Kinesis data stream's Amazon Resource Name (ARN). 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseInputDescription** *(dict) --* 

                    If a Kinesis Data Firehose delivery stream is configured as a streaming source, provides the delivery stream's ARN. 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics assumes to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **InputSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created. 

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
                  

                  - **InputParallelism** *(dict) --* 

                    Describes the configured parallelism (number of in-application streams mapped to the streaming source). 

                    
                    

                    - **Count** *(integer) --* 

                      The number of in-application streams to create.

                      
                
                  

                  - **InputStartingPositionConfiguration** *(dict) --* 

                    The point at which the application is configured to read from the input stream.

                    
                    

                    - **InputStartingPosition** *(string) --* 

                      The starting position on the stream.

                       

                       
                      * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
                       
                      * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
                       
                      * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
                       

                      
                
              
            
              

              - **OutputDescriptions** *(list) --* 

                The array of  OutputDescription objects describing the destination streams used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

                  
                  

                  - **OutputId** *(string) --* 

                    A unique identifier for the output configuration.

                    
                  

                  - **Name** *(string) --* 

                    The name of the in-application stream that is configured as output.

                    
                  

                  - **KinesisStreamsOutputDescription** *(dict) --* 

                    Describes the Kinesis data stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseOutputDescription** *(dict) --* 

                    Describes the Kinesis Data Firehose delivery stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **LambdaOutputDescription** *(dict) --* 

                    Describes the Lambda function that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the destination Lambda function.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to write to the destination function.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **DestinationSchema** *(dict) --* 

                    The data format used for writing data to the destination.

                    
                    

                    - **RecordFormatType** *(string) --* 

                      Specifies the format of the records on the output stream.

                      
                
              
            
              

              - **ReferenceDataSourceDescriptions** *(list) --* 

                The array of  ReferenceDataSourceDescription objects describing the reference data sources used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.

                  
                  

                  - **ReferenceId** *(string) --* 

                    The ID of the reference data source. This is the ID that Kinesis Data Analytics assigns when you add the reference data source to your application using the  CreateApplication or  UpdateApplication operation.

                    
                  

                  - **TableName** *(string) --* 

                    The in-application table name created by the specific reference data source configuration.

                    
                  

                  - **S3ReferenceDataSourceDescription** *(dict) --* 

                    Provides the Amazon S3 bucket name, the object key name that contains the reference data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the S3 bucket.

                      
                    

                    - **FileKey** *(string) --* 

                      Amazon S3 object key name.

                      
                    

                    - **ReferenceRoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table. 

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **ReferenceSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
              
            
          
            

            - **ApplicationCodeConfigurationDescription** *(dict) --* 

              The details about the application code for a Flink-based Kinesis Data Analytics application.

              
              

              - **CodeContentType** *(string) --* 

                Specifies whether the code content is in text or zip format.

                
              

              - **CodeContentDescription** *(dict) --* 

                Describes details about the location and format of the application code.

                
                

                - **TextContent** *(string) --* 

                  The text-format code

                  
                

                - **CodeMD5** *(string) --* 

                  The checksum that can be used to validate zip-format code.

                  
                

                - **CodeSize** *(integer) --* 

                  The size in bytes of the application code. Can be used to validate zip-format code.

                  
                

                - **S3ApplicationCodeLocationDescription** *(dict) --* 

                  The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                    
                  

                  - **FileKey** *(string) --* 

                    The file key for the object containing the application code.

                    
                  

                  - **ObjectVersion** *(string) --* 

                    The version of the object containing the application code.

                    
              
            
          
            

            - **RunConfigurationDescription** *(dict) --* 

              The details about the starting properties for a Kinesis Data Analytics application.

              
              

              - **ApplicationRestoreConfigurationDescription** *(dict) --* 

                Describes the restore behavior of a restarting application.

                
                

                - **ApplicationRestoreType** *(string) --* 

                  Specifies how the application should be restored.

                  
                

                - **SnapshotName** *(string) --* 

                  The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

                  
            
              

              - **FlinkRunConfigurationDescription** *(dict) --* 

                Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

                
                

                - **AllowNonRestoredState** *(boolean) --* 

                  When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

                   

                  .. note::

                     

                    This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

                     

                  
            
          
            

            - **FlinkApplicationConfigurationDescription** *(dict) --* 

              The details about a Flink-based Kinesis Data Analytics application.

              
              

              - **CheckpointConfigurationDescription** *(dict) --* 

                Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default checkpointing behavior in Kinesis Data Analytics. 

                   

                  .. note::

                     

                    If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

                     

                     
                    * **CheckpointingEnabled:** true 
                     
                    * **CheckpointInterval:** 60000 
                     
                    * **MinPauseBetweenCheckpoints:** 5000 
                     

                     

                  
                

                - **CheckpointingEnabled** *(boolean) --* 

                  Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

                     

                  
                

                - **CheckpointInterval** *(integer) --* 

                  Describes the interval in milliseconds between checkpoint operations. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

                     

                  
                

                - **MinPauseBetweenCheckpoints** *(integer) --* 

                  Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

                     

                  
            
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                Describes configuration parameters for Amazon CloudWatch logging for an application.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether to use the default CloudWatch logging configuration for an application.

                  
                

                - **MetricsLevel** *(string) --* 

                  Describes the granularity of the CloudWatch Logs for an application.

                  
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **ParallelismConfigurationDescription** *(dict) --* 

                Describes parameters for how an application executes multiple tasks simultaneously.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. 

                  
                

                - **Parallelism** *(integer) --* 

                  Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, then Kinesis Data Analytics can increase the ``CurrentParallelism`` value in response to application load. The service can increase ``CurrentParallelism`` up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **ParallelismPerKPU** *(integer) --* 

                  Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.

                  
                

                - **CurrentParallelism** *(integer) --* 

                  Describes the current number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, Kinesis Data Analytics can increase this value in response to application load. The service can increase this value up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **AutoScalingEnabled** *(boolean) --* 

                  Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.

                  
            
              

              - **JobPlanDescription** *(string) --* 

                The job plan for an application. For more information about the job plan, see `Jobs and Scheduling <https://ci.apache.org/projects/flink/flink-docs-release-1.8/internals/job_scheduling.html>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ . To retrieve the job plan for the application, use the  DescribeApplicationRequest$IncludeAdditionalDetails parameter of the  DescribeApplication operation.

                
          
            

            - **EnvironmentPropertyDescriptions** *(dict) --* 

              Describes execution properties for a Flink-based Kinesis Data Analytics application.

              
              

              - **PropertyGroupDescriptions** *(list) --* 

                Describes the execution property groups.

                
                

                - *(dict) --* 

                  Property key-value pairs passed into an application.

                  
                  

                  - **PropertyGroupId** *(string) --* 

                    Describes the key of an application execution property key-value pair.

                    
                  

                  - **PropertyMap** *(dict) --* 

                    Describes the value of an application execution property key-value pair.

                    
                    

                    - *(string) --* 
                      

                      - *(string) --* 
                
              
              
            
          
            

            - **ApplicationSnapshotConfigurationDescription** *(dict) --* 

              Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

              
              

              - **SnapshotsEnabled** *(boolean) --* 

                Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

                
          
            

            - **VpcConfigurationDescriptions** *(list) --* 

              The array of descriptions of VPC configurations available to the application.

              
              

              - *(dict) --* 

                Describes the parameters of a VPC used by the application.

                
                

                - **VpcConfigurationId** *(string) --* 

                  The ID of the VPC configuration.

                  
                

                - **VpcId** *(string) --* 

                  The ID of the associated VPC.

                  
                

                - **SubnetIds** *(list) --* 

                  The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
                

                - **SecurityGroupIds** *(list) --* 

                  The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ZeppelinApplicationConfigurationDescription** *(dict) --* 

              The configuration parameters for a Kinesis Data Analytics Studio notebook.

              
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                The monitoring configuration of a Kinesis Data Analytics Studio notebook.

                
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **CatalogConfigurationDescription** *(dict) --* 

                The AWS Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook.

                
                

                - **GlueDataCatalogConfigurationDescription** *(dict) --* 

                  The configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.

                  
                  

                  - **DatabaseARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the database.

                    
              
            
              

              - **DeployAsApplicationConfigurationDescription** *(dict) --* 

                The parameters required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..

                
                

                - **S3ContentLocationDescription** *(dict) --* 

                  The location that holds the data required to specify an Amazon Data Analytics application.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the S3 bucket.

                    
                  

                  - **BasePath** *(string) --* 

                    The base path for the S3 bucket.

                    
              
            
              

              - **CustomArtifactsConfigurationDescription** *(list) --* 

                Custom artifacts are dependency JARs and user-defined functions (UDF).

                
                

                - *(dict) --* 

                  Specifies a dependency JAR or a JAR of user-defined functions.

                  
                  

                  - **ArtifactType** *(string) --* 

                     ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

                    
                  

                  - **S3ContentLocationDescription** *(dict) --* 

                    For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                      
                    

                    - **FileKey** *(string) --* 

                      The file key for the object containing the application code.

                      
                    

                    - **ObjectVersion** *(string) --* 

                      The version of the object containing the application code.

                      
                
                  

                  - **MavenReferenceDescription** *(dict) --* 

                    The parameters that are required to specify a Maven dependency.

                    
                    

                    - **GroupId** *(string) --* 

                      The group ID of the Maven reference.

                      
                    

                    - **ArtifactId** *(string) --* 

                      The artifact ID of the Maven reference.

                      
                    

                    - **Version** *(string) --* 

                      The version of the Maven reference.

                      
                
              
            
          
        
          

          - **CloudWatchLoggingOptionDescriptions** *(list) --* 

            Describes the application Amazon CloudWatch logging options.

            
            

            - *(dict) --* 

              Describes the Amazon CloudWatch logging option.

              
              

              - **CloudWatchLoggingOptionId** *(string) --* 

                The ID of the CloudWatch logging option description.

                
              

              - **LogStreamARN** *(string) --* 

                The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

                
              

              - **RoleARN** *(string) --* 

                The IAM ARN of the role to use to send application messages. 

                 

                .. note::

                   

                  Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
        
          

          - **ApplicationMaintenanceConfigurationDescription** *(dict) --* 

            The details of the maintenance configuration for the application.

            
            

            - **ApplicationMaintenanceWindowStartTime** *(string) --* 

              The start time for the maintenance window.

              
            

            - **ApplicationMaintenanceWindowEndTime** *(string) --* 

              The end time for the maintenance window.

              
        
          

          - **ApplicationVersionUpdatedFrom** *(integer) --* 

            The previous application version before the latest application update.  RollbackApplication reverts the application to this version.

            
          

          - **ApplicationVersionRolledBackFrom** *(integer) --* 

            If you reverted the application using  RollbackApplication , the application version when ``RollbackApplication`` was called.

            
          

          - **ConditionalToken** *(string) --* 

            A value you use to implement strong concurrency for application updates.

            
          

          - **ApplicationVersionRolledBackTo** *(integer) --* 

            The version to which you want to roll back the application.

            
          

          - **ApplicationMode** *(string) --* 

            To create a Kinesis Data Analytics Studio notebook, you must set the mode to ``INTERACTIVE`` . However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.CodeValidationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.LimitExceededException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.TooManyTagsException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    

  .. py:method:: create_application_presigned_url(**kwargs)

    

    Creates and returns a URL that you can use to connect to an application's extension. Currently, the only available extension is the Apache Flink dashboard.

     

    The IAM role or user used to call this API defines the permissions to access the extension. After the presigned URL is created, no additional permission is required to access this URL. IAM authorization policies for this API are also enforced for every HTTP request that attempts to connect to the extension. 

     

    You control the amount of time that the URL will be valid using the ``SessionExpirationDurationInSeconds`` parameter. If you do not provide this parameter, the returned URL is valid for twelve hours.

     

    .. note::

       

      The URL that you get from a call to CreateApplicationPresignedUrl must be used within 3 minutes to be valid. If you first try to use the URL after the 3-minute limit expires, the service returns an HTTP 403 Forbidden error.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/CreateApplicationPresignedUrl>`_    


    **Request Syntax** 
    ::

      response = client.create_application_presigned_url(
          ApplicationName='string',
          UrlType='FLINK_DASHBOARD_URL'|'ZEPPELIN_UI_URL',
          SessionExpirationDurationInSeconds=123
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application.

      

    
    :type UrlType: string
    :param UrlType: **[REQUIRED]** 

      The type of the extension for which to create and return a URL. Currently, the only valid extension URL type is ``FLINK_DASHBOARD_URL`` . 

      

    
    :type SessionExpirationDurationInSeconds: integer
    :param SessionExpirationDurationInSeconds: 

      The duration in seconds for which the returned URL will be valid.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AuthorizedUrl': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AuthorizedUrl** *(string) --* 

          The URL of the extension.

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    

  .. py:method:: create_application_snapshot(**kwargs)

    

    Creates a snapshot of the application's state data.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/CreateApplicationSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.create_application_snapshot(
          ApplicationName='string',
          SnapshotName='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application

      

    
    :type SnapshotName: string
    :param SnapshotName: **[REQUIRED]** 

      An identifier for the application snapshot.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.LimitExceededException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    

  .. py:method:: delete_application(**kwargs)

    

    Deletes the specified application. Kinesis Data Analytics halts application execution and deletes the application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplication>`_    


    **Request Syntax** 
    ::

      response = client.delete_application(
          ApplicationName='string',
          CreateTimestamp=datetime(2015, 1, 1)
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application to delete.

      

    
    :type CreateTimestamp: datetime
    :param CreateTimestamp: **[REQUIRED]** 

      Use the ``DescribeApplication`` operation to get this value.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    

  .. py:method:: delete_application_cloud_watch_logging_option(**kwargs)

    

    Deletes an Amazon CloudWatch log stream from an Kinesis Data Analytics application. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationCloudWatchLoggingOption>`_    


    **Request Syntax** 
    ::

      response = client.delete_application_cloud_watch_logging_option(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          CloudWatchLoggingOptionId='string',
          ConditionalToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The application name.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: 

      The version ID of the application. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You can retrieve the application version ID using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    :type CloudWatchLoggingOptionId: string
    :param CloudWatchLoggingOptionId: **[REQUIRED]** 

      The ``CloudWatchLoggingOptionId`` of the Amazon CloudWatch logging option to delete. You can get the ``CloudWatchLoggingOptionId`` by using the  DescribeApplication operation. 

      

    
    :type ConditionalToken: string
    :param ConditionalToken: 

      A value you use to implement strong concurrency for application updates. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You get the application's current ``ConditionalToken`` using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123,
            'CloudWatchLoggingOptionDescriptions': [
                {
                    'CloudWatchLoggingOptionId': 'string',
                    'LogStreamARN': 'string',
                    'RoleARN': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The application's Amazon Resource Name (ARN).

          
        

        - **ApplicationVersionId** *(integer) --* 

          The version ID of the application. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you change the CloudWatch logging options.

          
        

        - **CloudWatchLoggingOptionDescriptions** *(list) --* 

          The descriptions of the remaining CloudWatch logging options for the application.

          
          

          - *(dict) --* 

            Describes the Amazon CloudWatch logging option.

            
            

            - **CloudWatchLoggingOptionId** *(string) --* 

              The ID of the CloudWatch logging option description.

              
            

            - **LogStreamARN** *(string) --* 

              The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

              
            

            - **RoleARN** *(string) --* 

              The IAM ARN of the role to use to send application messages. 

               

              .. note::

                 

                Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                 

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    

  .. py:method:: delete_application_input_processing_configuration(**kwargs)

    

    Deletes an  InputProcessingConfiguration from an input.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationInputProcessingConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.delete_application_input_processing_configuration(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          InputId='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The application version. You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned. 

      

    
    :type InputId: string
    :param InputId: **[REQUIRED]** 

      The ID of the input configuration from which to delete the input processing configuration. You can get a list of the input IDs for an application by using the  DescribeApplication operation.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The Amazon Resource Name (ARN) of the application.

          
        

        - **ApplicationVersionId** *(integer) --* 

          The current application version ID.

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: delete_application_output(**kwargs)

    

    Deletes the output destination configuration from your SQL-based Kinesis Data Analytics application's configuration. Kinesis Data Analytics will no longer write data from the corresponding in-application stream to the external output destination.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationOutput>`_    


    **Request Syntax** 
    ::

      response = client.delete_application_output(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          OutputId='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The application name.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The application version. You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned. 

      

    
    :type OutputId: string
    :param OutputId: **[REQUIRED]** 

      The ID of the configuration to delete. Each output configuration that is added to the application (either when the application is created or later) using the  AddApplicationOutput operation has a unique ID. You need to provide the ID to uniquely identify the output configuration that you want to delete from the application configuration. You can use the  DescribeApplication operation to get the specific ``OutputId`` . 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The application Amazon Resource Name (ARN).

          
        

        - **ApplicationVersionId** *(integer) --* 

          The current application version ID.

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: delete_application_reference_data_source(**kwargs)

    

    Deletes a reference data source configuration from the specified SQL-based Kinesis Data Analytics application's configuration.

     

    If the application is running, Kinesis Data Analytics immediately removes the in-application table that you created using the  AddApplicationReferenceDataSource operation. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationReferenceDataSource>`_    


    **Request Syntax** 
    ::

      response = client.delete_application_reference_data_source(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          ReferenceId='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The current application version. You can use the  DescribeApplication operation to get the current application version. If the version specified is not the current version, the ``ConcurrentModificationException`` is returned.

      

    
    :type ReferenceId: string
    :param ReferenceId: **[REQUIRED]** 

      The ID of the reference data source. When you add a reference data source to your application using the  AddApplicationReferenceDataSource , Kinesis Data Analytics assigns an ID. You can use the  DescribeApplication operation to get the reference ID. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The application Amazon Resource Name (ARN).

          
        

        - **ApplicationVersionId** *(integer) --* 

          The updated version ID of the application.

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: delete_application_snapshot(**kwargs)

    

    Deletes a snapshot of application state.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.delete_application_snapshot(
          ApplicationName='string',
          SnapshotName='string',
          SnapshotCreationTimestamp=datetime(2015, 1, 1)
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type SnapshotName: string
    :param SnapshotName: **[REQUIRED]** 

      The identifier for the snapshot delete.

      

    
    :type SnapshotCreationTimestamp: datetime
    :param SnapshotCreationTimestamp: **[REQUIRED]** 

      The creation timestamp of the application snapshot to delete. You can retrieve this value using or .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: delete_application_vpc_configuration(**kwargs)

    

    Removes a VPC configuration from a Kinesis Data Analytics application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DeleteApplicationVpcConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.delete_application_vpc_configuration(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          VpcConfigurationId='string',
          ConditionalToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: 

      The current application version ID. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You can retrieve the application version ID using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    :type VpcConfigurationId: string
    :param VpcConfigurationId: **[REQUIRED]** 

      The ID of the VPC configuration to delete.

      

    
    :type ConditionalToken: string
    :param ConditionalToken: 

      A value you use to implement strong concurrency for application updates. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You get the application's current ``ConditionalToken`` using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationVersionId': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The ARN of the Kinesis Data Analytics application.

          
        

        - **ApplicationVersionId** *(integer) --* 

          The updated version ID of the application.

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    

  .. py:method:: describe_application(**kwargs)

    

    Returns information about a specific Kinesis Data Analytics application.

     

    If you want to retrieve a list of all applications in your account, use the  ListApplications operation.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DescribeApplication>`_    


    **Request Syntax** 
    ::

      response = client.describe_application(
          ApplicationName='string',
          IncludeAdditionalDetails=True|False
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application.

      

    
    :type IncludeAdditionalDetails: boolean
    :param IncludeAdditionalDetails: 

      Displays verbose information about a Kinesis Data Analytics application, including the application's job plan.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationDetail': {
                'ApplicationARN': 'string',
                'ApplicationDescription': 'string',
                'ApplicationName': 'string',
                'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                'ServiceExecutionRole': 'string',
                'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                'ApplicationVersionId': 123,
                'CreateTimestamp': datetime(2015, 1, 1),
                'LastUpdateTimestamp': datetime(2015, 1, 1),
                'ApplicationConfigurationDescription': {
                    'SqlApplicationConfigurationDescription': {
                        'InputDescriptions': [
                            {
                                'InputId': 'string',
                                'NamePrefix': 'string',
                                'InAppStreamNames': [
                                    'string',
                                ],
                                'InputProcessingConfigurationDescription': {
                                    'InputLambdaProcessorDescription': {
                                        'ResourceARN': 'string',
                                        'RoleARN': 'string'
                                    }
                                },
                                'KinesisStreamsInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'InputSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                },
                                'InputParallelism': {
                                    'Count': 123
                                },
                                'InputStartingPositionConfiguration': {
                                    'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                                }
                            },
                        ],
                        'OutputDescriptions': [
                            {
                                'OutputId': 'string',
                                'Name': 'string',
                                'KinesisStreamsOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'LambdaOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'DestinationSchema': {
                                    'RecordFormatType': 'JSON'|'CSV'
                                }
                            },
                        ],
                        'ReferenceDataSourceDescriptions': [
                            {
                                'ReferenceId': 'string',
                                'TableName': 'string',
                                'S3ReferenceDataSourceDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ReferenceRoleARN': 'string'
                                },
                                'ReferenceSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                }
                            },
                        ]
                    },
                    'ApplicationCodeConfigurationDescription': {
                        'CodeContentType': 'PLAINTEXT'|'ZIPFILE',
                        'CodeContentDescription': {
                            'TextContent': 'string',
                            'CodeMD5': 'string',
                            'CodeSize': 123,
                            'S3ApplicationCodeLocationDescription': {
                                'BucketARN': 'string',
                                'FileKey': 'string',
                                'ObjectVersion': 'string'
                            }
                        }
                    },
                    'RunConfigurationDescription': {
                        'ApplicationRestoreConfigurationDescription': {
                            'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                            'SnapshotName': 'string'
                        },
                        'FlinkRunConfigurationDescription': {
                            'AllowNonRestoredState': True|False
                        }
                    },
                    'FlinkApplicationConfigurationDescription': {
                        'CheckpointConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'CheckpointingEnabled': True|False,
                            'CheckpointInterval': 123,
                            'MinPauseBetweenCheckpoints': 123
                        },
                        'MonitoringConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'MetricsLevel': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'ParallelismConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'Parallelism': 123,
                            'ParallelismPerKPU': 123,
                            'CurrentParallelism': 123,
                            'AutoScalingEnabled': True|False
                        },
                        'JobPlanDescription': 'string'
                    },
                    'EnvironmentPropertyDescriptions': {
                        'PropertyGroupDescriptions': [
                            {
                                'PropertyGroupId': 'string',
                                'PropertyMap': {
                                    'string': 'string'
                                }
                            },
                        ]
                    },
                    'ApplicationSnapshotConfigurationDescription': {
                        'SnapshotsEnabled': True|False
                    },
                    'VpcConfigurationDescriptions': [
                        {
                            'VpcConfigurationId': 'string',
                            'VpcId': 'string',
                            'SubnetIds': [
                                'string',
                            ],
                            'SecurityGroupIds': [
                                'string',
                            ]
                        },
                    ],
                    'ZeppelinApplicationConfigurationDescription': {
                        'MonitoringConfigurationDescription': {
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'CatalogConfigurationDescription': {
                            'GlueDataCatalogConfigurationDescription': {
                                'DatabaseARN': 'string'
                            }
                        },
                        'DeployAsApplicationConfigurationDescription': {
                            'S3ContentLocationDescription': {
                                'BucketARN': 'string',
                                'BasePath': 'string'
                            }
                        },
                        'CustomArtifactsConfigurationDescription': [
                            {
                                'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                                'S3ContentLocationDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ObjectVersion': 'string'
                                },
                                'MavenReferenceDescription': {
                                    'GroupId': 'string',
                                    'ArtifactId': 'string',
                                    'Version': 'string'
                                }
                            },
                        ]
                    }
                },
                'CloudWatchLoggingOptionDescriptions': [
                    {
                        'CloudWatchLoggingOptionId': 'string',
                        'LogStreamARN': 'string',
                        'RoleARN': 'string'
                    },
                ],
                'ApplicationMaintenanceConfigurationDescription': {
                    'ApplicationMaintenanceWindowStartTime': 'string',
                    'ApplicationMaintenanceWindowEndTime': 'string'
                },
                'ApplicationVersionUpdatedFrom': 123,
                'ApplicationVersionRolledBackFrom': 123,
                'ConditionalToken': 'string',
                'ApplicationVersionRolledBackTo': 123,
                'ApplicationMode': 'STREAMING'|'INTERACTIVE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationDetail** *(dict) --* 

          Provides a description of the application, such as the application's Amazon Resource Name (ARN), status, and latest version.

          
          

          - **ApplicationARN** *(string) --* 

            The ARN of the application.

            
          

          - **ApplicationDescription** *(string) --* 

            The description of the application.

            
          

          - **ApplicationName** *(string) --* 

            The name of the application.

            
          

          - **RuntimeEnvironment** *(string) --* 

            The runtime environment for the application (``SQL-1_0`` , ``FLINK-1_6`` , ``FLINK-1_8`` , or ``FLINK-1_11`` ).

            
          

          - **ServiceExecutionRole** *(string) --* 

            Specifies the IAM role that the application uses to access external resources.

            
          

          - **ApplicationStatus** *(string) --* 

            The status of the application.

            
          

          - **ApplicationVersionId** *(integer) --* 

            Provides the current application version. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update the application.

            
          

          - **CreateTimestamp** *(datetime) --* 

            The current timestamp when the application was created.

            
          

          - **LastUpdateTimestamp** *(datetime) --* 

            The current timestamp when the application was last updated.

            
          

          - **ApplicationConfigurationDescription** *(dict) --* 

            Describes details about the application code and starting parameters for a Kinesis Data Analytics application.

            
            

            - **SqlApplicationConfigurationDescription** *(dict) --* 

              The details about inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.

              
              

              - **InputDescriptions** *(list) --* 

                The array of  InputDescription objects describing the input streams used by the application.

                
                

                - *(dict) --* 

                  Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 

                  
                  

                  - **InputId** *(string) --* 

                    The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application. 

                    
                  

                  - **NamePrefix** *(string) --* 

                    The in-application name prefix.

                    
                  

                  - **InAppStreamNames** *(list) --* 

                    Returns the in-application stream names that are mapped to the stream source. 

                    
                    

                    - *(string) --* 
                
                  

                  - **InputProcessingConfigurationDescription** *(dict) --* 

                    The description of the preprocessor that executes on records in this input before the application's code is run. 

                    
                    

                    - **InputLambdaProcessorDescription** *(dict) --* 

                      Provides configuration information about the associated  InputLambdaProcessorDescription  

                      
                      

                      - **ResourceARN** *(string) --* 

                        The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

                         

                        .. note::

                           

                          To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                           

                        
                      

                      - **RoleARN** *(string) --* 

                        The ARN of the IAM role that is used to access the AWS Lambda function.

                         

                        .. note::

                           

                          Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                           

                        
                  
                
                  

                  - **KinesisStreamsInputDescription** *(dict) --* 

                    If a Kinesis data stream is configured as a streaming source, provides the Kinesis data stream's Amazon Resource Name (ARN). 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseInputDescription** *(dict) --* 

                    If a Kinesis Data Firehose delivery stream is configured as a streaming source, provides the delivery stream's ARN. 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics assumes to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **InputSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created. 

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
                  

                  - **InputParallelism** *(dict) --* 

                    Describes the configured parallelism (number of in-application streams mapped to the streaming source). 

                    
                    

                    - **Count** *(integer) --* 

                      The number of in-application streams to create.

                      
                
                  

                  - **InputStartingPositionConfiguration** *(dict) --* 

                    The point at which the application is configured to read from the input stream.

                    
                    

                    - **InputStartingPosition** *(string) --* 

                      The starting position on the stream.

                       

                       
                      * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
                       
                      * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
                       
                      * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
                       

                      
                
              
            
              

              - **OutputDescriptions** *(list) --* 

                The array of  OutputDescription objects describing the destination streams used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

                  
                  

                  - **OutputId** *(string) --* 

                    A unique identifier for the output configuration.

                    
                  

                  - **Name** *(string) --* 

                    The name of the in-application stream that is configured as output.

                    
                  

                  - **KinesisStreamsOutputDescription** *(dict) --* 

                    Describes the Kinesis data stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseOutputDescription** *(dict) --* 

                    Describes the Kinesis Data Firehose delivery stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **LambdaOutputDescription** *(dict) --* 

                    Describes the Lambda function that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the destination Lambda function.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to write to the destination function.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **DestinationSchema** *(dict) --* 

                    The data format used for writing data to the destination.

                    
                    

                    - **RecordFormatType** *(string) --* 

                      Specifies the format of the records on the output stream.

                      
                
              
            
              

              - **ReferenceDataSourceDescriptions** *(list) --* 

                The array of  ReferenceDataSourceDescription objects describing the reference data sources used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.

                  
                  

                  - **ReferenceId** *(string) --* 

                    The ID of the reference data source. This is the ID that Kinesis Data Analytics assigns when you add the reference data source to your application using the  CreateApplication or  UpdateApplication operation.

                    
                  

                  - **TableName** *(string) --* 

                    The in-application table name created by the specific reference data source configuration.

                    
                  

                  - **S3ReferenceDataSourceDescription** *(dict) --* 

                    Provides the Amazon S3 bucket name, the object key name that contains the reference data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the S3 bucket.

                      
                    

                    - **FileKey** *(string) --* 

                      Amazon S3 object key name.

                      
                    

                    - **ReferenceRoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table. 

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **ReferenceSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
              
            
          
            

            - **ApplicationCodeConfigurationDescription** *(dict) --* 

              The details about the application code for a Flink-based Kinesis Data Analytics application.

              
              

              - **CodeContentType** *(string) --* 

                Specifies whether the code content is in text or zip format.

                
              

              - **CodeContentDescription** *(dict) --* 

                Describes details about the location and format of the application code.

                
                

                - **TextContent** *(string) --* 

                  The text-format code

                  
                

                - **CodeMD5** *(string) --* 

                  The checksum that can be used to validate zip-format code.

                  
                

                - **CodeSize** *(integer) --* 

                  The size in bytes of the application code. Can be used to validate zip-format code.

                  
                

                - **S3ApplicationCodeLocationDescription** *(dict) --* 

                  The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                    
                  

                  - **FileKey** *(string) --* 

                    The file key for the object containing the application code.

                    
                  

                  - **ObjectVersion** *(string) --* 

                    The version of the object containing the application code.

                    
              
            
          
            

            - **RunConfigurationDescription** *(dict) --* 

              The details about the starting properties for a Kinesis Data Analytics application.

              
              

              - **ApplicationRestoreConfigurationDescription** *(dict) --* 

                Describes the restore behavior of a restarting application.

                
                

                - **ApplicationRestoreType** *(string) --* 

                  Specifies how the application should be restored.

                  
                

                - **SnapshotName** *(string) --* 

                  The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

                  
            
              

              - **FlinkRunConfigurationDescription** *(dict) --* 

                Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

                
                

                - **AllowNonRestoredState** *(boolean) --* 

                  When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

                   

                  .. note::

                     

                    This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

                     

                  
            
          
            

            - **FlinkApplicationConfigurationDescription** *(dict) --* 

              The details about a Flink-based Kinesis Data Analytics application.

              
              

              - **CheckpointConfigurationDescription** *(dict) --* 

                Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default checkpointing behavior in Kinesis Data Analytics. 

                   

                  .. note::

                     

                    If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

                     

                     
                    * **CheckpointingEnabled:** true 
                     
                    * **CheckpointInterval:** 60000 
                     
                    * **MinPauseBetweenCheckpoints:** 5000 
                     

                     

                  
                

                - **CheckpointingEnabled** *(boolean) --* 

                  Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

                     

                  
                

                - **CheckpointInterval** *(integer) --* 

                  Describes the interval in milliseconds between checkpoint operations. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

                     

                  
                

                - **MinPauseBetweenCheckpoints** *(integer) --* 

                  Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

                     

                  
            
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                Describes configuration parameters for Amazon CloudWatch logging for an application.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether to use the default CloudWatch logging configuration for an application.

                  
                

                - **MetricsLevel** *(string) --* 

                  Describes the granularity of the CloudWatch Logs for an application.

                  
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **ParallelismConfigurationDescription** *(dict) --* 

                Describes parameters for how an application executes multiple tasks simultaneously.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. 

                  
                

                - **Parallelism** *(integer) --* 

                  Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, then Kinesis Data Analytics can increase the ``CurrentParallelism`` value in response to application load. The service can increase ``CurrentParallelism`` up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **ParallelismPerKPU** *(integer) --* 

                  Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.

                  
                

                - **CurrentParallelism** *(integer) --* 

                  Describes the current number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, Kinesis Data Analytics can increase this value in response to application load. The service can increase this value up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **AutoScalingEnabled** *(boolean) --* 

                  Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.

                  
            
              

              - **JobPlanDescription** *(string) --* 

                The job plan for an application. For more information about the job plan, see `Jobs and Scheduling <https://ci.apache.org/projects/flink/flink-docs-release-1.8/internals/job_scheduling.html>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ . To retrieve the job plan for the application, use the  DescribeApplicationRequest$IncludeAdditionalDetails parameter of the  DescribeApplication operation.

                
          
            

            - **EnvironmentPropertyDescriptions** *(dict) --* 

              Describes execution properties for a Flink-based Kinesis Data Analytics application.

              
              

              - **PropertyGroupDescriptions** *(list) --* 

                Describes the execution property groups.

                
                

                - *(dict) --* 

                  Property key-value pairs passed into an application.

                  
                  

                  - **PropertyGroupId** *(string) --* 

                    Describes the key of an application execution property key-value pair.

                    
                  

                  - **PropertyMap** *(dict) --* 

                    Describes the value of an application execution property key-value pair.

                    
                    

                    - *(string) --* 
                      

                      - *(string) --* 
                
              
              
            
          
            

            - **ApplicationSnapshotConfigurationDescription** *(dict) --* 

              Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

              
              

              - **SnapshotsEnabled** *(boolean) --* 

                Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

                
          
            

            - **VpcConfigurationDescriptions** *(list) --* 

              The array of descriptions of VPC configurations available to the application.

              
              

              - *(dict) --* 

                Describes the parameters of a VPC used by the application.

                
                

                - **VpcConfigurationId** *(string) --* 

                  The ID of the VPC configuration.

                  
                

                - **VpcId** *(string) --* 

                  The ID of the associated VPC.

                  
                

                - **SubnetIds** *(list) --* 

                  The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
                

                - **SecurityGroupIds** *(list) --* 

                  The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ZeppelinApplicationConfigurationDescription** *(dict) --* 

              The configuration parameters for a Kinesis Data Analytics Studio notebook.

              
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                The monitoring configuration of a Kinesis Data Analytics Studio notebook.

                
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **CatalogConfigurationDescription** *(dict) --* 

                The AWS Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook.

                
                

                - **GlueDataCatalogConfigurationDescription** *(dict) --* 

                  The configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.

                  
                  

                  - **DatabaseARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the database.

                    
              
            
              

              - **DeployAsApplicationConfigurationDescription** *(dict) --* 

                The parameters required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..

                
                

                - **S3ContentLocationDescription** *(dict) --* 

                  The location that holds the data required to specify an Amazon Data Analytics application.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the S3 bucket.

                    
                  

                  - **BasePath** *(string) --* 

                    The base path for the S3 bucket.

                    
              
            
              

              - **CustomArtifactsConfigurationDescription** *(list) --* 

                Custom artifacts are dependency JARs and user-defined functions (UDF).

                
                

                - *(dict) --* 

                  Specifies a dependency JAR or a JAR of user-defined functions.

                  
                  

                  - **ArtifactType** *(string) --* 

                     ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

                    
                  

                  - **S3ContentLocationDescription** *(dict) --* 

                    For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                      
                    

                    - **FileKey** *(string) --* 

                      The file key for the object containing the application code.

                      
                    

                    - **ObjectVersion** *(string) --* 

                      The version of the object containing the application code.

                      
                
                  

                  - **MavenReferenceDescription** *(dict) --* 

                    The parameters that are required to specify a Maven dependency.

                    
                    

                    - **GroupId** *(string) --* 

                      The group ID of the Maven reference.

                      
                    

                    - **ArtifactId** *(string) --* 

                      The artifact ID of the Maven reference.

                      
                    

                    - **Version** *(string) --* 

                      The version of the Maven reference.

                      
                
              
            
          
        
          

          - **CloudWatchLoggingOptionDescriptions** *(list) --* 

            Describes the application Amazon CloudWatch logging options.

            
            

            - *(dict) --* 

              Describes the Amazon CloudWatch logging option.

              
              

              - **CloudWatchLoggingOptionId** *(string) --* 

                The ID of the CloudWatch logging option description.

                
              

              - **LogStreamARN** *(string) --* 

                The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

                
              

              - **RoleARN** *(string) --* 

                The IAM ARN of the role to use to send application messages. 

                 

                .. note::

                   

                  Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
        
          

          - **ApplicationMaintenanceConfigurationDescription** *(dict) --* 

            The details of the maintenance configuration for the application.

            
            

            - **ApplicationMaintenanceWindowStartTime** *(string) --* 

              The start time for the maintenance window.

              
            

            - **ApplicationMaintenanceWindowEndTime** *(string) --* 

              The end time for the maintenance window.

              
        
          

          - **ApplicationVersionUpdatedFrom** *(integer) --* 

            The previous application version before the latest application update.  RollbackApplication reverts the application to this version.

            
          

          - **ApplicationVersionRolledBackFrom** *(integer) --* 

            If you reverted the application using  RollbackApplication , the application version when ``RollbackApplication`` was called.

            
          

          - **ConditionalToken** *(string) --* 

            A value you use to implement strong concurrency for application updates.

            
          

          - **ApplicationVersionRolledBackTo** *(integer) --* 

            The version to which you want to roll back the application.

            
          

          - **ApplicationMode** *(string) --* 

            To create a Kinesis Data Analytics Studio notebook, you must set the mode to ``INTERACTIVE`` . However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: describe_application_snapshot(**kwargs)

    

    Returns information about a snapshot of application state data.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DescribeApplicationSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.describe_application_snapshot(
          ApplicationName='string',
          SnapshotName='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type SnapshotName: string
    :param SnapshotName: **[REQUIRED]** 

      The identifier of an application snapshot. You can retrieve this value using .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SnapshotDetails': {
                'SnapshotName': 'string',
                'SnapshotStatus': 'CREATING'|'READY'|'DELETING'|'FAILED',
                'ApplicationVersionId': 123,
                'SnapshotCreationTimestamp': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SnapshotDetails** *(dict) --* 

          An object containing information about the application snapshot.

          
          

          - **SnapshotName** *(string) --* 

            The identifier for the application snapshot.

            
          

          - **SnapshotStatus** *(string) --* 

            The status of the application snapshot.

            
          

          - **ApplicationVersionId** *(integer) --* 

            The current application version ID when the snapshot was created.

            
          

          - **SnapshotCreationTimestamp** *(datetime) --* 

            The timestamp of the application snapshot.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    

  .. py:method:: describe_application_version(**kwargs)

    

    Provides a detailed description of a specified version of the application. To see a list of all the versions of an application, invoke the  ListApplicationVersions operation.

     

    .. note::

       

      This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DescribeApplicationVersion>`_    


    **Request Syntax** 
    ::

      response = client.describe_application_version(
          ApplicationName='string',
          ApplicationVersionId=123
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application for which you want to get the version description.

      

    
    :type ApplicationVersionId: integer
    :param ApplicationVersionId: **[REQUIRED]** 

      The ID of the application version for which you want to get the description.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationVersionDetail': {
                'ApplicationARN': 'string',
                'ApplicationDescription': 'string',
                'ApplicationName': 'string',
                'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                'ServiceExecutionRole': 'string',
                'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                'ApplicationVersionId': 123,
                'CreateTimestamp': datetime(2015, 1, 1),
                'LastUpdateTimestamp': datetime(2015, 1, 1),
                'ApplicationConfigurationDescription': {
                    'SqlApplicationConfigurationDescription': {
                        'InputDescriptions': [
                            {
                                'InputId': 'string',
                                'NamePrefix': 'string',
                                'InAppStreamNames': [
                                    'string',
                                ],
                                'InputProcessingConfigurationDescription': {
                                    'InputLambdaProcessorDescription': {
                                        'ResourceARN': 'string',
                                        'RoleARN': 'string'
                                    }
                                },
                                'KinesisStreamsInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'InputSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                },
                                'InputParallelism': {
                                    'Count': 123
                                },
                                'InputStartingPositionConfiguration': {
                                    'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                                }
                            },
                        ],
                        'OutputDescriptions': [
                            {
                                'OutputId': 'string',
                                'Name': 'string',
                                'KinesisStreamsOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'LambdaOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'DestinationSchema': {
                                    'RecordFormatType': 'JSON'|'CSV'
                                }
                            },
                        ],
                        'ReferenceDataSourceDescriptions': [
                            {
                                'ReferenceId': 'string',
                                'TableName': 'string',
                                'S3ReferenceDataSourceDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ReferenceRoleARN': 'string'
                                },
                                'ReferenceSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                }
                            },
                        ]
                    },
                    'ApplicationCodeConfigurationDescription': {
                        'CodeContentType': 'PLAINTEXT'|'ZIPFILE',
                        'CodeContentDescription': {
                            'TextContent': 'string',
                            'CodeMD5': 'string',
                            'CodeSize': 123,
                            'S3ApplicationCodeLocationDescription': {
                                'BucketARN': 'string',
                                'FileKey': 'string',
                                'ObjectVersion': 'string'
                            }
                        }
                    },
                    'RunConfigurationDescription': {
                        'ApplicationRestoreConfigurationDescription': {
                            'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                            'SnapshotName': 'string'
                        },
                        'FlinkRunConfigurationDescription': {
                            'AllowNonRestoredState': True|False
                        }
                    },
                    'FlinkApplicationConfigurationDescription': {
                        'CheckpointConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'CheckpointingEnabled': True|False,
                            'CheckpointInterval': 123,
                            'MinPauseBetweenCheckpoints': 123
                        },
                        'MonitoringConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'MetricsLevel': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'ParallelismConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'Parallelism': 123,
                            'ParallelismPerKPU': 123,
                            'CurrentParallelism': 123,
                            'AutoScalingEnabled': True|False
                        },
                        'JobPlanDescription': 'string'
                    },
                    'EnvironmentPropertyDescriptions': {
                        'PropertyGroupDescriptions': [
                            {
                                'PropertyGroupId': 'string',
                                'PropertyMap': {
                                    'string': 'string'
                                }
                            },
                        ]
                    },
                    'ApplicationSnapshotConfigurationDescription': {
                        'SnapshotsEnabled': True|False
                    },
                    'VpcConfigurationDescriptions': [
                        {
                            'VpcConfigurationId': 'string',
                            'VpcId': 'string',
                            'SubnetIds': [
                                'string',
                            ],
                            'SecurityGroupIds': [
                                'string',
                            ]
                        },
                    ],
                    'ZeppelinApplicationConfigurationDescription': {
                        'MonitoringConfigurationDescription': {
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'CatalogConfigurationDescription': {
                            'GlueDataCatalogConfigurationDescription': {
                                'DatabaseARN': 'string'
                            }
                        },
                        'DeployAsApplicationConfigurationDescription': {
                            'S3ContentLocationDescription': {
                                'BucketARN': 'string',
                                'BasePath': 'string'
                            }
                        },
                        'CustomArtifactsConfigurationDescription': [
                            {
                                'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                                'S3ContentLocationDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ObjectVersion': 'string'
                                },
                                'MavenReferenceDescription': {
                                    'GroupId': 'string',
                                    'ArtifactId': 'string',
                                    'Version': 'string'
                                }
                            },
                        ]
                    }
                },
                'CloudWatchLoggingOptionDescriptions': [
                    {
                        'CloudWatchLoggingOptionId': 'string',
                        'LogStreamARN': 'string',
                        'RoleARN': 'string'
                    },
                ],
                'ApplicationMaintenanceConfigurationDescription': {
                    'ApplicationMaintenanceWindowStartTime': 'string',
                    'ApplicationMaintenanceWindowEndTime': 'string'
                },
                'ApplicationVersionUpdatedFrom': 123,
                'ApplicationVersionRolledBackFrom': 123,
                'ConditionalToken': 'string',
                'ApplicationVersionRolledBackTo': 123,
                'ApplicationMode': 'STREAMING'|'INTERACTIVE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationVersionDetail** *(dict) --* 

          Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.

          
          

          - **ApplicationARN** *(string) --* 

            The ARN of the application.

            
          

          - **ApplicationDescription** *(string) --* 

            The description of the application.

            
          

          - **ApplicationName** *(string) --* 

            The name of the application.

            
          

          - **RuntimeEnvironment** *(string) --* 

            The runtime environment for the application (``SQL-1_0`` , ``FLINK-1_6`` , ``FLINK-1_8`` , or ``FLINK-1_11`` ).

            
          

          - **ServiceExecutionRole** *(string) --* 

            Specifies the IAM role that the application uses to access external resources.

            
          

          - **ApplicationStatus** *(string) --* 

            The status of the application.

            
          

          - **ApplicationVersionId** *(integer) --* 

            Provides the current application version. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update the application.

            
          

          - **CreateTimestamp** *(datetime) --* 

            The current timestamp when the application was created.

            
          

          - **LastUpdateTimestamp** *(datetime) --* 

            The current timestamp when the application was last updated.

            
          

          - **ApplicationConfigurationDescription** *(dict) --* 

            Describes details about the application code and starting parameters for a Kinesis Data Analytics application.

            
            

            - **SqlApplicationConfigurationDescription** *(dict) --* 

              The details about inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.

              
              

              - **InputDescriptions** *(list) --* 

                The array of  InputDescription objects describing the input streams used by the application.

                
                

                - *(dict) --* 

                  Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 

                  
                  

                  - **InputId** *(string) --* 

                    The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application. 

                    
                  

                  - **NamePrefix** *(string) --* 

                    The in-application name prefix.

                    
                  

                  - **InAppStreamNames** *(list) --* 

                    Returns the in-application stream names that are mapped to the stream source. 

                    
                    

                    - *(string) --* 
                
                  

                  - **InputProcessingConfigurationDescription** *(dict) --* 

                    The description of the preprocessor that executes on records in this input before the application's code is run. 

                    
                    

                    - **InputLambdaProcessorDescription** *(dict) --* 

                      Provides configuration information about the associated  InputLambdaProcessorDescription  

                      
                      

                      - **ResourceARN** *(string) --* 

                        The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

                         

                        .. note::

                           

                          To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                           

                        
                      

                      - **RoleARN** *(string) --* 

                        The ARN of the IAM role that is used to access the AWS Lambda function.

                         

                        .. note::

                           

                          Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                           

                        
                  
                
                  

                  - **KinesisStreamsInputDescription** *(dict) --* 

                    If a Kinesis data stream is configured as a streaming source, provides the Kinesis data stream's Amazon Resource Name (ARN). 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseInputDescription** *(dict) --* 

                    If a Kinesis Data Firehose delivery stream is configured as a streaming source, provides the delivery stream's ARN. 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics assumes to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **InputSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created. 

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
                  

                  - **InputParallelism** *(dict) --* 

                    Describes the configured parallelism (number of in-application streams mapped to the streaming source). 

                    
                    

                    - **Count** *(integer) --* 

                      The number of in-application streams to create.

                      
                
                  

                  - **InputStartingPositionConfiguration** *(dict) --* 

                    The point at which the application is configured to read from the input stream.

                    
                    

                    - **InputStartingPosition** *(string) --* 

                      The starting position on the stream.

                       

                       
                      * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
                       
                      * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
                       
                      * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
                       

                      
                
              
            
              

              - **OutputDescriptions** *(list) --* 

                The array of  OutputDescription objects describing the destination streams used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

                  
                  

                  - **OutputId** *(string) --* 

                    A unique identifier for the output configuration.

                    
                  

                  - **Name** *(string) --* 

                    The name of the in-application stream that is configured as output.

                    
                  

                  - **KinesisStreamsOutputDescription** *(dict) --* 

                    Describes the Kinesis data stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseOutputDescription** *(dict) --* 

                    Describes the Kinesis Data Firehose delivery stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **LambdaOutputDescription** *(dict) --* 

                    Describes the Lambda function that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the destination Lambda function.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to write to the destination function.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **DestinationSchema** *(dict) --* 

                    The data format used for writing data to the destination.

                    
                    

                    - **RecordFormatType** *(string) --* 

                      Specifies the format of the records on the output stream.

                      
                
              
            
              

              - **ReferenceDataSourceDescriptions** *(list) --* 

                The array of  ReferenceDataSourceDescription objects describing the reference data sources used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.

                  
                  

                  - **ReferenceId** *(string) --* 

                    The ID of the reference data source. This is the ID that Kinesis Data Analytics assigns when you add the reference data source to your application using the  CreateApplication or  UpdateApplication operation.

                    
                  

                  - **TableName** *(string) --* 

                    The in-application table name created by the specific reference data source configuration.

                    
                  

                  - **S3ReferenceDataSourceDescription** *(dict) --* 

                    Provides the Amazon S3 bucket name, the object key name that contains the reference data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the S3 bucket.

                      
                    

                    - **FileKey** *(string) --* 

                      Amazon S3 object key name.

                      
                    

                    - **ReferenceRoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table. 

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **ReferenceSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
              
            
          
            

            - **ApplicationCodeConfigurationDescription** *(dict) --* 

              The details about the application code for a Flink-based Kinesis Data Analytics application.

              
              

              - **CodeContentType** *(string) --* 

                Specifies whether the code content is in text or zip format.

                
              

              - **CodeContentDescription** *(dict) --* 

                Describes details about the location and format of the application code.

                
                

                - **TextContent** *(string) --* 

                  The text-format code

                  
                

                - **CodeMD5** *(string) --* 

                  The checksum that can be used to validate zip-format code.

                  
                

                - **CodeSize** *(integer) --* 

                  The size in bytes of the application code. Can be used to validate zip-format code.

                  
                

                - **S3ApplicationCodeLocationDescription** *(dict) --* 

                  The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                    
                  

                  - **FileKey** *(string) --* 

                    The file key for the object containing the application code.

                    
                  

                  - **ObjectVersion** *(string) --* 

                    The version of the object containing the application code.

                    
              
            
          
            

            - **RunConfigurationDescription** *(dict) --* 

              The details about the starting properties for a Kinesis Data Analytics application.

              
              

              - **ApplicationRestoreConfigurationDescription** *(dict) --* 

                Describes the restore behavior of a restarting application.

                
                

                - **ApplicationRestoreType** *(string) --* 

                  Specifies how the application should be restored.

                  
                

                - **SnapshotName** *(string) --* 

                  The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

                  
            
              

              - **FlinkRunConfigurationDescription** *(dict) --* 

                Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

                
                

                - **AllowNonRestoredState** *(boolean) --* 

                  When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

                   

                  .. note::

                     

                    This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

                     

                  
            
          
            

            - **FlinkApplicationConfigurationDescription** *(dict) --* 

              The details about a Flink-based Kinesis Data Analytics application.

              
              

              - **CheckpointConfigurationDescription** *(dict) --* 

                Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default checkpointing behavior in Kinesis Data Analytics. 

                   

                  .. note::

                     

                    If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

                     

                     
                    * **CheckpointingEnabled:** true 
                     
                    * **CheckpointInterval:** 60000 
                     
                    * **MinPauseBetweenCheckpoints:** 5000 
                     

                     

                  
                

                - **CheckpointingEnabled** *(boolean) --* 

                  Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

                     

                  
                

                - **CheckpointInterval** *(integer) --* 

                  Describes the interval in milliseconds between checkpoint operations. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

                     

                  
                

                - **MinPauseBetweenCheckpoints** *(integer) --* 

                  Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

                     

                  
            
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                Describes configuration parameters for Amazon CloudWatch logging for an application.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether to use the default CloudWatch logging configuration for an application.

                  
                

                - **MetricsLevel** *(string) --* 

                  Describes the granularity of the CloudWatch Logs for an application.

                  
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **ParallelismConfigurationDescription** *(dict) --* 

                Describes parameters for how an application executes multiple tasks simultaneously.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. 

                  
                

                - **Parallelism** *(integer) --* 

                  Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, then Kinesis Data Analytics can increase the ``CurrentParallelism`` value in response to application load. The service can increase ``CurrentParallelism`` up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **ParallelismPerKPU** *(integer) --* 

                  Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.

                  
                

                - **CurrentParallelism** *(integer) --* 

                  Describes the current number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, Kinesis Data Analytics can increase this value in response to application load. The service can increase this value up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **AutoScalingEnabled** *(boolean) --* 

                  Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.

                  
            
              

              - **JobPlanDescription** *(string) --* 

                The job plan for an application. For more information about the job plan, see `Jobs and Scheduling <https://ci.apache.org/projects/flink/flink-docs-release-1.8/internals/job_scheduling.html>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ . To retrieve the job plan for the application, use the  DescribeApplicationRequest$IncludeAdditionalDetails parameter of the  DescribeApplication operation.

                
          
            

            - **EnvironmentPropertyDescriptions** *(dict) --* 

              Describes execution properties for a Flink-based Kinesis Data Analytics application.

              
              

              - **PropertyGroupDescriptions** *(list) --* 

                Describes the execution property groups.

                
                

                - *(dict) --* 

                  Property key-value pairs passed into an application.

                  
                  

                  - **PropertyGroupId** *(string) --* 

                    Describes the key of an application execution property key-value pair.

                    
                  

                  - **PropertyMap** *(dict) --* 

                    Describes the value of an application execution property key-value pair.

                    
                    

                    - *(string) --* 
                      

                      - *(string) --* 
                
              
              
            
          
            

            - **ApplicationSnapshotConfigurationDescription** *(dict) --* 

              Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

              
              

              - **SnapshotsEnabled** *(boolean) --* 

                Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

                
          
            

            - **VpcConfigurationDescriptions** *(list) --* 

              The array of descriptions of VPC configurations available to the application.

              
              

              - *(dict) --* 

                Describes the parameters of a VPC used by the application.

                
                

                - **VpcConfigurationId** *(string) --* 

                  The ID of the VPC configuration.

                  
                

                - **VpcId** *(string) --* 

                  The ID of the associated VPC.

                  
                

                - **SubnetIds** *(list) --* 

                  The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
                

                - **SecurityGroupIds** *(list) --* 

                  The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ZeppelinApplicationConfigurationDescription** *(dict) --* 

              The configuration parameters for a Kinesis Data Analytics Studio notebook.

              
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                The monitoring configuration of a Kinesis Data Analytics Studio notebook.

                
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **CatalogConfigurationDescription** *(dict) --* 

                The AWS Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook.

                
                

                - **GlueDataCatalogConfigurationDescription** *(dict) --* 

                  The configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.

                  
                  

                  - **DatabaseARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the database.

                    
              
            
              

              - **DeployAsApplicationConfigurationDescription** *(dict) --* 

                The parameters required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..

                
                

                - **S3ContentLocationDescription** *(dict) --* 

                  The location that holds the data required to specify an Amazon Data Analytics application.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the S3 bucket.

                    
                  

                  - **BasePath** *(string) --* 

                    The base path for the S3 bucket.

                    
              
            
              

              - **CustomArtifactsConfigurationDescription** *(list) --* 

                Custom artifacts are dependency JARs and user-defined functions (UDF).

                
                

                - *(dict) --* 

                  Specifies a dependency JAR or a JAR of user-defined functions.

                  
                  

                  - **ArtifactType** *(string) --* 

                     ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

                    
                  

                  - **S3ContentLocationDescription** *(dict) --* 

                    For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                      
                    

                    - **FileKey** *(string) --* 

                      The file key for the object containing the application code.

                      
                    

                    - **ObjectVersion** *(string) --* 

                      The version of the object containing the application code.

                      
                
                  

                  - **MavenReferenceDescription** *(dict) --* 

                    The parameters that are required to specify a Maven dependency.

                    
                    

                    - **GroupId** *(string) --* 

                      The group ID of the Maven reference.

                      
                    

                    - **ArtifactId** *(string) --* 

                      The artifact ID of the Maven reference.

                      
                    

                    - **Version** *(string) --* 

                      The version of the Maven reference.

                      
                
              
            
          
        
          

          - **CloudWatchLoggingOptionDescriptions** *(list) --* 

            Describes the application Amazon CloudWatch logging options.

            
            

            - *(dict) --* 

              Describes the Amazon CloudWatch logging option.

              
              

              - **CloudWatchLoggingOptionId** *(string) --* 

                The ID of the CloudWatch logging option description.

                
              

              - **LogStreamARN** *(string) --* 

                The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

                
              

              - **RoleARN** *(string) --* 

                The IAM ARN of the role to use to send application messages. 

                 

                .. note::

                   

                  Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
        
          

          - **ApplicationMaintenanceConfigurationDescription** *(dict) --* 

            The details of the maintenance configuration for the application.

            
            

            - **ApplicationMaintenanceWindowStartTime** *(string) --* 

              The start time for the maintenance window.

              
            

            - **ApplicationMaintenanceWindowEndTime** *(string) --* 

              The end time for the maintenance window.

              
        
          

          - **ApplicationVersionUpdatedFrom** *(integer) --* 

            The previous application version before the latest application update.  RollbackApplication reverts the application to this version.

            
          

          - **ApplicationVersionRolledBackFrom** *(integer) --* 

            If you reverted the application using  RollbackApplication , the application version when ``RollbackApplication`` was called.

            
          

          - **ConditionalToken** *(string) --* 

            A value you use to implement strong concurrency for application updates.

            
          

          - **ApplicationVersionRolledBackTo** *(integer) --* 

            The version to which you want to roll back the application.

            
          

          - **ApplicationMode** *(string) --* 

            To create a Kinesis Data Analytics Studio notebook, you must set the mode to ``INTERACTIVE`` . However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    

  .. py:method:: discover_input_schema(**kwargs)

    

    Infers a schema for a SQL-based Kinesis Data Analytics application by evaluating sample records on the specified streaming source (Kinesis data stream or Kinesis Data Firehose delivery stream) or Amazon S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.

     

    You can use the inferred schema when configuring a streaming source for your application. When you create an application using the Kinesis Data Analytics console, the console uses this operation to infer a schema and show it in the console user interface. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/DiscoverInputSchema>`_    


    **Request Syntax** 
    ::

      response = client.discover_input_schema(
          ResourceARN='string',
          ServiceExecutionRole='string',
          InputStartingPositionConfiguration={
              'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
          },
          S3Configuration={
              'BucketARN': 'string',
              'FileKey': 'string'
          },
          InputProcessingConfiguration={
              'InputLambdaProcessor': {
                  'ResourceARN': 'string'
              }
          }
      )
    :type ResourceARN: string
    :param ResourceARN: 

      The Amazon Resource Name (ARN) of the streaming source.

      

    
    :type ServiceExecutionRole: string
    :param ServiceExecutionRole: **[REQUIRED]** 

      The ARN of the role that is used to access the streaming source.

      

    
    :type InputStartingPositionConfiguration: dict
    :param InputStartingPositionConfiguration: 

      The point at which you want Kinesis Data Analytics to start reading records from the specified streaming source discovery purposes.

      

    
      - **InputStartingPosition** *(string) --* 

        The starting position on the stream.

         

         
        * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
         
        * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
         
        * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
         

        

      
    
    :type S3Configuration: dict
    :param S3Configuration: 

      Specify this parameter to discover a schema from data in an Amazon S3 object.

      

    
      - **BucketARN** *(string) --* **[REQUIRED]** 

        The ARN of the S3 bucket that contains the data.

        

      
      - **FileKey** *(string) --* **[REQUIRED]** 

        The name of the object that contains the data.

        

      
    
    :type InputProcessingConfiguration: dict
    :param InputProcessingConfiguration: 

      The  InputProcessingConfiguration to use to preprocess the records before discovering the schema of the records.

      

    
      - **InputLambdaProcessor** *(dict) --* **[REQUIRED]** 

        The  InputLambdaProcessor that is used to preprocess the records in the stream before being processed by your application code.

        

      
        - **ResourceARN** *(string) --* **[REQUIRED]** 

          The ARN of the AWS Lambda function that operates on records in the stream.

           

          .. note::

             

            To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

             

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'InputSchema': {
                'RecordFormat': {
                    'RecordFormatType': 'JSON'|'CSV',
                    'MappingParameters': {
                        'JSONMappingParameters': {
                            'RecordRowPath': 'string'
                        },
                        'CSVMappingParameters': {
                            'RecordRowDelimiter': 'string',
                            'RecordColumnDelimiter': 'string'
                        }
                    }
                },
                'RecordEncoding': 'string',
                'RecordColumns': [
                    {
                        'Name': 'string',
                        'Mapping': 'string',
                        'SqlType': 'string'
                    },
                ]
            },
            'ParsedInputRecords': [
                [
                    'string',
                ],
            ],
            'ProcessedInputRecords': [
                'string',
            ],
            'RawInputRecords': [
                'string',
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **InputSchema** *(dict) --* 

          The schema inferred from the streaming source. It identifies the format of the data in the streaming source and how each data element maps to corresponding columns in the in-application stream that you can create.

          
          

          - **RecordFormat** *(dict) --* 

            Specifies the format of the records on the streaming source.

            
            

            - **RecordFormatType** *(string) --* 

              The type of record format.

              
            

            - **MappingParameters** *(dict) --* 

              When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

              
              

              - **JSONMappingParameters** *(dict) --* 

                Provides additional mapping information when JSON is the record format on the streaming source.

                
                

                - **RecordRowPath** *(string) --* 

                  The path to the top-level parent that contains the records.

                  
            
              

              - **CSVMappingParameters** *(dict) --* 

                Provides additional mapping information when the record format uses delimiters (for example, CSV).

                
                

                - **RecordRowDelimiter** *(string) --* 

                  The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                  
                

                - **RecordColumnDelimiter** *(string) --* 

                  The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                  
            
          
        
          

          - **RecordEncoding** *(string) --* 

            Specifies the encoding of the records in the streaming source. For example, UTF-8.

            
          

          - **RecordColumns** *(list) --* 

            A list of ``RecordColumn`` objects. 

            
            

            - *(dict) --* 

              For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

               

              Also used to describe the format of the reference data source.

              
              

              - **Name** *(string) --* 

                The name of the column that is created in the in-application input stream or reference table.

                
              

              - **Mapping** *(string) --* 

                A reference to the data element in the streaming input or the reference data source.

                
              

              - **SqlType** *(string) --* 

                The type of column created in the in-application input stream or reference table.

                
          
        
      
        

        - **ParsedInputRecords** *(list) --* 

          An array of elements, where each element corresponds to a row in a stream record (a stream record can have more than one row).

          
          

          - *(list) --* 
            

            - *(string) --* 
        
      
        

        - **ProcessedInputRecords** *(list) --* 

          The stream data that was modified by the processor specified in the ``InputProcessingConfiguration`` parameter.

          
          

          - *(string) --* 
      
        

        - **RawInputRecords** *(list) --* 

          The raw stream data that was sampled to infer the schema.

          
          

          - *(string) --* 
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnableToDetectSchemaException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceProvisionedThroughputExceededException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_application_snapshots(**kwargs)

    

    Lists information about the current application snapshots.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/ListApplicationSnapshots>`_    


    **Request Syntax** 
    ::

      response = client.list_application_snapshots(
          ApplicationName='string',
          Limit=123,
          NextToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type Limit: integer
    :param Limit: 

      The maximum number of application snapshots to list.

      

    
    :type NextToken: string
    :param NextToken: 

      Use this parameter if you receive a ``NextToken`` response in a previous request that indicates that there is more output available. Set it to the value of the previous call's ``NextToken`` response to indicate where the output should continue from. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SnapshotSummaries': [
                {
                    'SnapshotName': 'string',
                    'SnapshotStatus': 'CREATING'|'READY'|'DELETING'|'FAILED',
                    'ApplicationVersionId': 123,
                    'SnapshotCreationTimestamp': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SnapshotSummaries** *(list) --* 

          A collection of objects containing information about the application snapshots.

          
          

          - *(dict) --* 

            Provides details about a snapshot of application state.

            
            

            - **SnapshotName** *(string) --* 

              The identifier for the application snapshot.

              
            

            - **SnapshotStatus** *(string) --* 

              The status of the application snapshot.

              
            

            - **ApplicationVersionId** *(integer) --* 

              The current application version ID when the snapshot was created.

              
            

            - **SnapshotCreationTimestamp** *(datetime) --* 

              The timestamp of the application snapshot.

              
        
      
        

        - **NextToken** *(string) --* 

          The token for the next set of results, or ``null`` if there are no additional results.

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    

  .. py:method:: list_application_versions(**kwargs)

    

    Lists all the versions for the specified application, including versions that were rolled back. The response also includes a summary of the configuration associated with each version.

     

    To get the complete description of a specific application version, invoke the  DescribeApplicationVersion operation.

     

    .. note::

       

      This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/ListApplicationVersions>`_    


    **Request Syntax** 
    ::

      response = client.list_application_versions(
          ApplicationName='string',
          Limit=123,
          NextToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application for which you want to list all versions.

      

    
    :type Limit: integer
    :param Limit: 

      The maximum number of versions to list in this invocation of the operation.

      

    
    :type NextToken: string
    :param NextToken: 

      If a previous invocation of this operation returned a pagination token, pass it into this value to retrieve the next set of results. For more information about pagination, see `Using the AWS Command Line Interface's Pagination Options <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationVersionSummaries': [
                {
                    'ApplicationVersionId': 123,
                    'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationVersionSummaries** *(list) --* 

          A list of the application versions and the associated configuration summaries. The list includes application versions that were rolled back.

           

          To get the complete description of a specific application version, invoke the  DescribeApplicationVersion operation.

          
          

          - *(dict) --* 

            The summary of the application version.

            
            

            - **ApplicationVersionId** *(integer) --* 

              The ID of the application version. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update the application.

              
            

            - **ApplicationStatus** *(string) --* 

              The status of the application.

              
        
      
        

        - **NextToken** *(string) --* 

          The pagination token for the next set of results, or ``null`` if there are no additional results. To retrieve the next set of items, pass this token into a subsequent invocation of this operation. For more information about pagination, see `Using the AWS Command Line Interface's Pagination Options <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ .

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    

  .. py:method:: list_applications(**kwargs)

    

    Returns a list of Kinesis Data Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. 

     

    If you want detailed information about a specific application, use  DescribeApplication .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/ListApplications>`_    


    **Request Syntax** 
    ::

      response = client.list_applications(
          Limit=123,
          NextToken='string'
      )
    :type Limit: integer
    :param Limit: 

      The maximum number of applications to list.

      

    
    :type NextToken: string
    :param NextToken: 

      If a previous command returned a pagination token, pass it into this value to retrieve the next set of results. For more information about pagination, see `Using the AWS Command Line Interface's Pagination Options <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationSummaries': [
                {
                    'ApplicationName': 'string',
                    'ApplicationARN': 'string',
                    'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                    'ApplicationVersionId': 123,
                    'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                    'ApplicationMode': 'STREAMING'|'INTERACTIVE'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationSummaries** *(list) --* 

          A list of ``ApplicationSummary`` objects.

          
          

          - *(dict) --* 

            Provides application summary information, including the application Amazon Resource Name (ARN), name, and status.

            
            

            - **ApplicationName** *(string) --* 

              The name of the application.

              
            

            - **ApplicationARN** *(string) --* 

              The ARN of the application.

              
            

            - **ApplicationStatus** *(string) --* 

              The status of the application.

              
            

            - **ApplicationVersionId** *(integer) --* 

              Provides the current application version.

              
            

            - **RuntimeEnvironment** *(string) --* 

              The runtime environment for the application.

              
            

            - **ApplicationMode** *(string) --* 

              For a Kinesis Data Analytics for Apache Flink application, the mode is ``STREAMING`` . For a Kinesis Data Analytics Studio notebook, it is ``INTERACTIVE`` .

              
        
      
        

        - **NextToken** *(string) --* 

          The pagination token for the next set of results, or ``null`` if there are no additional results. Pass this token into a subsequent command to retrieve the next set of items For more information about pagination, see `Using the AWS Command Line Interface's Pagination Options <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ .

          
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: list_tags_for_resource(**kwargs)

    

    Retrieves the list of key-value tags assigned to the application. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          ResourceARN='string'
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The ARN of the application for which to retrieve tags.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Tags** *(list) --* 

          The key-value tags assigned to the application.

          
          

          - *(dict) --* 

            A key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

            
            

            - **Key** *(string) --* 

              The key of the key-value tag.

              
            

            - **Value** *(string) --* 

              The value of the key-value tag. The value is optional.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    

  .. py:method:: rollback_application(**kwargs)

    

    Reverts the application to the previous running version. You can roll back an application if you suspect it is stuck in a transient status. 

     

    You can roll back an application only if it is in the ``UPDATING`` or ``AUTOSCALING`` status.

     

    When you rollback an application, it loads state data from the last successful snapshot. If the application has no snapshots, Kinesis Data Analytics rejects the rollback request.

     

    This action is not supported for Kinesis Data Analytics for SQL applications.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/RollbackApplication>`_    


    **Request Syntax** 
    ::

      response = client.rollback_application(
          ApplicationName='string',
          CurrentApplicationVersionId=123
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: **[REQUIRED]** 

      The current application version ID. You can retrieve the application version ID using  DescribeApplication .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationDetail': {
                'ApplicationARN': 'string',
                'ApplicationDescription': 'string',
                'ApplicationName': 'string',
                'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                'ServiceExecutionRole': 'string',
                'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                'ApplicationVersionId': 123,
                'CreateTimestamp': datetime(2015, 1, 1),
                'LastUpdateTimestamp': datetime(2015, 1, 1),
                'ApplicationConfigurationDescription': {
                    'SqlApplicationConfigurationDescription': {
                        'InputDescriptions': [
                            {
                                'InputId': 'string',
                                'NamePrefix': 'string',
                                'InAppStreamNames': [
                                    'string',
                                ],
                                'InputProcessingConfigurationDescription': {
                                    'InputLambdaProcessorDescription': {
                                        'ResourceARN': 'string',
                                        'RoleARN': 'string'
                                    }
                                },
                                'KinesisStreamsInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'InputSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                },
                                'InputParallelism': {
                                    'Count': 123
                                },
                                'InputStartingPositionConfiguration': {
                                    'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                                }
                            },
                        ],
                        'OutputDescriptions': [
                            {
                                'OutputId': 'string',
                                'Name': 'string',
                                'KinesisStreamsOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'LambdaOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'DestinationSchema': {
                                    'RecordFormatType': 'JSON'|'CSV'
                                }
                            },
                        ],
                        'ReferenceDataSourceDescriptions': [
                            {
                                'ReferenceId': 'string',
                                'TableName': 'string',
                                'S3ReferenceDataSourceDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ReferenceRoleARN': 'string'
                                },
                                'ReferenceSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                }
                            },
                        ]
                    },
                    'ApplicationCodeConfigurationDescription': {
                        'CodeContentType': 'PLAINTEXT'|'ZIPFILE',
                        'CodeContentDescription': {
                            'TextContent': 'string',
                            'CodeMD5': 'string',
                            'CodeSize': 123,
                            'S3ApplicationCodeLocationDescription': {
                                'BucketARN': 'string',
                                'FileKey': 'string',
                                'ObjectVersion': 'string'
                            }
                        }
                    },
                    'RunConfigurationDescription': {
                        'ApplicationRestoreConfigurationDescription': {
                            'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                            'SnapshotName': 'string'
                        },
                        'FlinkRunConfigurationDescription': {
                            'AllowNonRestoredState': True|False
                        }
                    },
                    'FlinkApplicationConfigurationDescription': {
                        'CheckpointConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'CheckpointingEnabled': True|False,
                            'CheckpointInterval': 123,
                            'MinPauseBetweenCheckpoints': 123
                        },
                        'MonitoringConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'MetricsLevel': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'ParallelismConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'Parallelism': 123,
                            'ParallelismPerKPU': 123,
                            'CurrentParallelism': 123,
                            'AutoScalingEnabled': True|False
                        },
                        'JobPlanDescription': 'string'
                    },
                    'EnvironmentPropertyDescriptions': {
                        'PropertyGroupDescriptions': [
                            {
                                'PropertyGroupId': 'string',
                                'PropertyMap': {
                                    'string': 'string'
                                }
                            },
                        ]
                    },
                    'ApplicationSnapshotConfigurationDescription': {
                        'SnapshotsEnabled': True|False
                    },
                    'VpcConfigurationDescriptions': [
                        {
                            'VpcConfigurationId': 'string',
                            'VpcId': 'string',
                            'SubnetIds': [
                                'string',
                            ],
                            'SecurityGroupIds': [
                                'string',
                            ]
                        },
                    ],
                    'ZeppelinApplicationConfigurationDescription': {
                        'MonitoringConfigurationDescription': {
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'CatalogConfigurationDescription': {
                            'GlueDataCatalogConfigurationDescription': {
                                'DatabaseARN': 'string'
                            }
                        },
                        'DeployAsApplicationConfigurationDescription': {
                            'S3ContentLocationDescription': {
                                'BucketARN': 'string',
                                'BasePath': 'string'
                            }
                        },
                        'CustomArtifactsConfigurationDescription': [
                            {
                                'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                                'S3ContentLocationDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ObjectVersion': 'string'
                                },
                                'MavenReferenceDescription': {
                                    'GroupId': 'string',
                                    'ArtifactId': 'string',
                                    'Version': 'string'
                                }
                            },
                        ]
                    }
                },
                'CloudWatchLoggingOptionDescriptions': [
                    {
                        'CloudWatchLoggingOptionId': 'string',
                        'LogStreamARN': 'string',
                        'RoleARN': 'string'
                    },
                ],
                'ApplicationMaintenanceConfigurationDescription': {
                    'ApplicationMaintenanceWindowStartTime': 'string',
                    'ApplicationMaintenanceWindowEndTime': 'string'
                },
                'ApplicationVersionUpdatedFrom': 123,
                'ApplicationVersionRolledBackFrom': 123,
                'ConditionalToken': 'string',
                'ApplicationVersionRolledBackTo': 123,
                'ApplicationMode': 'STREAMING'|'INTERACTIVE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationDetail** *(dict) --* 

          Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.

          
          

          - **ApplicationARN** *(string) --* 

            The ARN of the application.

            
          

          - **ApplicationDescription** *(string) --* 

            The description of the application.

            
          

          - **ApplicationName** *(string) --* 

            The name of the application.

            
          

          - **RuntimeEnvironment** *(string) --* 

            The runtime environment for the application (``SQL-1_0`` , ``FLINK-1_6`` , ``FLINK-1_8`` , or ``FLINK-1_11`` ).

            
          

          - **ServiceExecutionRole** *(string) --* 

            Specifies the IAM role that the application uses to access external resources.

            
          

          - **ApplicationStatus** *(string) --* 

            The status of the application.

            
          

          - **ApplicationVersionId** *(integer) --* 

            Provides the current application version. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update the application.

            
          

          - **CreateTimestamp** *(datetime) --* 

            The current timestamp when the application was created.

            
          

          - **LastUpdateTimestamp** *(datetime) --* 

            The current timestamp when the application was last updated.

            
          

          - **ApplicationConfigurationDescription** *(dict) --* 

            Describes details about the application code and starting parameters for a Kinesis Data Analytics application.

            
            

            - **SqlApplicationConfigurationDescription** *(dict) --* 

              The details about inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.

              
              

              - **InputDescriptions** *(list) --* 

                The array of  InputDescription objects describing the input streams used by the application.

                
                

                - *(dict) --* 

                  Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 

                  
                  

                  - **InputId** *(string) --* 

                    The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application. 

                    
                  

                  - **NamePrefix** *(string) --* 

                    The in-application name prefix.

                    
                  

                  - **InAppStreamNames** *(list) --* 

                    Returns the in-application stream names that are mapped to the stream source. 

                    
                    

                    - *(string) --* 
                
                  

                  - **InputProcessingConfigurationDescription** *(dict) --* 

                    The description of the preprocessor that executes on records in this input before the application's code is run. 

                    
                    

                    - **InputLambdaProcessorDescription** *(dict) --* 

                      Provides configuration information about the associated  InputLambdaProcessorDescription  

                      
                      

                      - **ResourceARN** *(string) --* 

                        The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

                         

                        .. note::

                           

                          To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                           

                        
                      

                      - **RoleARN** *(string) --* 

                        The ARN of the IAM role that is used to access the AWS Lambda function.

                         

                        .. note::

                           

                          Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                           

                        
                  
                
                  

                  - **KinesisStreamsInputDescription** *(dict) --* 

                    If a Kinesis data stream is configured as a streaming source, provides the Kinesis data stream's Amazon Resource Name (ARN). 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseInputDescription** *(dict) --* 

                    If a Kinesis Data Firehose delivery stream is configured as a streaming source, provides the delivery stream's ARN. 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics assumes to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **InputSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created. 

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
                  

                  - **InputParallelism** *(dict) --* 

                    Describes the configured parallelism (number of in-application streams mapped to the streaming source). 

                    
                    

                    - **Count** *(integer) --* 

                      The number of in-application streams to create.

                      
                
                  

                  - **InputStartingPositionConfiguration** *(dict) --* 

                    The point at which the application is configured to read from the input stream.

                    
                    

                    - **InputStartingPosition** *(string) --* 

                      The starting position on the stream.

                       

                       
                      * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
                       
                      * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
                       
                      * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
                       

                      
                
              
            
              

              - **OutputDescriptions** *(list) --* 

                The array of  OutputDescription objects describing the destination streams used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

                  
                  

                  - **OutputId** *(string) --* 

                    A unique identifier for the output configuration.

                    
                  

                  - **Name** *(string) --* 

                    The name of the in-application stream that is configured as output.

                    
                  

                  - **KinesisStreamsOutputDescription** *(dict) --* 

                    Describes the Kinesis data stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseOutputDescription** *(dict) --* 

                    Describes the Kinesis Data Firehose delivery stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **LambdaOutputDescription** *(dict) --* 

                    Describes the Lambda function that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the destination Lambda function.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to write to the destination function.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **DestinationSchema** *(dict) --* 

                    The data format used for writing data to the destination.

                    
                    

                    - **RecordFormatType** *(string) --* 

                      Specifies the format of the records on the output stream.

                      
                
              
            
              

              - **ReferenceDataSourceDescriptions** *(list) --* 

                The array of  ReferenceDataSourceDescription objects describing the reference data sources used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.

                  
                  

                  - **ReferenceId** *(string) --* 

                    The ID of the reference data source. This is the ID that Kinesis Data Analytics assigns when you add the reference data source to your application using the  CreateApplication or  UpdateApplication operation.

                    
                  

                  - **TableName** *(string) --* 

                    The in-application table name created by the specific reference data source configuration.

                    
                  

                  - **S3ReferenceDataSourceDescription** *(dict) --* 

                    Provides the Amazon S3 bucket name, the object key name that contains the reference data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the S3 bucket.

                      
                    

                    - **FileKey** *(string) --* 

                      Amazon S3 object key name.

                      
                    

                    - **ReferenceRoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table. 

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **ReferenceSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
              
            
          
            

            - **ApplicationCodeConfigurationDescription** *(dict) --* 

              The details about the application code for a Flink-based Kinesis Data Analytics application.

              
              

              - **CodeContentType** *(string) --* 

                Specifies whether the code content is in text or zip format.

                
              

              - **CodeContentDescription** *(dict) --* 

                Describes details about the location and format of the application code.

                
                

                - **TextContent** *(string) --* 

                  The text-format code

                  
                

                - **CodeMD5** *(string) --* 

                  The checksum that can be used to validate zip-format code.

                  
                

                - **CodeSize** *(integer) --* 

                  The size in bytes of the application code. Can be used to validate zip-format code.

                  
                

                - **S3ApplicationCodeLocationDescription** *(dict) --* 

                  The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                    
                  

                  - **FileKey** *(string) --* 

                    The file key for the object containing the application code.

                    
                  

                  - **ObjectVersion** *(string) --* 

                    The version of the object containing the application code.

                    
              
            
          
            

            - **RunConfigurationDescription** *(dict) --* 

              The details about the starting properties for a Kinesis Data Analytics application.

              
              

              - **ApplicationRestoreConfigurationDescription** *(dict) --* 

                Describes the restore behavior of a restarting application.

                
                

                - **ApplicationRestoreType** *(string) --* 

                  Specifies how the application should be restored.

                  
                

                - **SnapshotName** *(string) --* 

                  The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

                  
            
              

              - **FlinkRunConfigurationDescription** *(dict) --* 

                Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

                
                

                - **AllowNonRestoredState** *(boolean) --* 

                  When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

                   

                  .. note::

                     

                    This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

                     

                  
            
          
            

            - **FlinkApplicationConfigurationDescription** *(dict) --* 

              The details about a Flink-based Kinesis Data Analytics application.

              
              

              - **CheckpointConfigurationDescription** *(dict) --* 

                Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default checkpointing behavior in Kinesis Data Analytics. 

                   

                  .. note::

                     

                    If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

                     

                     
                    * **CheckpointingEnabled:** true 
                     
                    * **CheckpointInterval:** 60000 
                     
                    * **MinPauseBetweenCheckpoints:** 5000 
                     

                     

                  
                

                - **CheckpointingEnabled** *(boolean) --* 

                  Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

                     

                  
                

                - **CheckpointInterval** *(integer) --* 

                  Describes the interval in milliseconds between checkpoint operations. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

                     

                  
                

                - **MinPauseBetweenCheckpoints** *(integer) --* 

                  Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

                     

                  
            
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                Describes configuration parameters for Amazon CloudWatch logging for an application.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether to use the default CloudWatch logging configuration for an application.

                  
                

                - **MetricsLevel** *(string) --* 

                  Describes the granularity of the CloudWatch Logs for an application.

                  
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **ParallelismConfigurationDescription** *(dict) --* 

                Describes parameters for how an application executes multiple tasks simultaneously.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. 

                  
                

                - **Parallelism** *(integer) --* 

                  Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, then Kinesis Data Analytics can increase the ``CurrentParallelism`` value in response to application load. The service can increase ``CurrentParallelism`` up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **ParallelismPerKPU** *(integer) --* 

                  Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.

                  
                

                - **CurrentParallelism** *(integer) --* 

                  Describes the current number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, Kinesis Data Analytics can increase this value in response to application load. The service can increase this value up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **AutoScalingEnabled** *(boolean) --* 

                  Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.

                  
            
              

              - **JobPlanDescription** *(string) --* 

                The job plan for an application. For more information about the job plan, see `Jobs and Scheduling <https://ci.apache.org/projects/flink/flink-docs-release-1.8/internals/job_scheduling.html>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ . To retrieve the job plan for the application, use the  DescribeApplicationRequest$IncludeAdditionalDetails parameter of the  DescribeApplication operation.

                
          
            

            - **EnvironmentPropertyDescriptions** *(dict) --* 

              Describes execution properties for a Flink-based Kinesis Data Analytics application.

              
              

              - **PropertyGroupDescriptions** *(list) --* 

                Describes the execution property groups.

                
                

                - *(dict) --* 

                  Property key-value pairs passed into an application.

                  
                  

                  - **PropertyGroupId** *(string) --* 

                    Describes the key of an application execution property key-value pair.

                    
                  

                  - **PropertyMap** *(dict) --* 

                    Describes the value of an application execution property key-value pair.

                    
                    

                    - *(string) --* 
                      

                      - *(string) --* 
                
              
              
            
          
            

            - **ApplicationSnapshotConfigurationDescription** *(dict) --* 

              Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

              
              

              - **SnapshotsEnabled** *(boolean) --* 

                Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

                
          
            

            - **VpcConfigurationDescriptions** *(list) --* 

              The array of descriptions of VPC configurations available to the application.

              
              

              - *(dict) --* 

                Describes the parameters of a VPC used by the application.

                
                

                - **VpcConfigurationId** *(string) --* 

                  The ID of the VPC configuration.

                  
                

                - **VpcId** *(string) --* 

                  The ID of the associated VPC.

                  
                

                - **SubnetIds** *(list) --* 

                  The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
                

                - **SecurityGroupIds** *(list) --* 

                  The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ZeppelinApplicationConfigurationDescription** *(dict) --* 

              The configuration parameters for a Kinesis Data Analytics Studio notebook.

              
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                The monitoring configuration of a Kinesis Data Analytics Studio notebook.

                
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **CatalogConfigurationDescription** *(dict) --* 

                The AWS Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook.

                
                

                - **GlueDataCatalogConfigurationDescription** *(dict) --* 

                  The configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.

                  
                  

                  - **DatabaseARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the database.

                    
              
            
              

              - **DeployAsApplicationConfigurationDescription** *(dict) --* 

                The parameters required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..

                
                

                - **S3ContentLocationDescription** *(dict) --* 

                  The location that holds the data required to specify an Amazon Data Analytics application.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the S3 bucket.

                    
                  

                  - **BasePath** *(string) --* 

                    The base path for the S3 bucket.

                    
              
            
              

              - **CustomArtifactsConfigurationDescription** *(list) --* 

                Custom artifacts are dependency JARs and user-defined functions (UDF).

                
                

                - *(dict) --* 

                  Specifies a dependency JAR or a JAR of user-defined functions.

                  
                  

                  - **ArtifactType** *(string) --* 

                     ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

                    
                  

                  - **S3ContentLocationDescription** *(dict) --* 

                    For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                      
                    

                    - **FileKey** *(string) --* 

                      The file key for the object containing the application code.

                      
                    

                    - **ObjectVersion** *(string) --* 

                      The version of the object containing the application code.

                      
                
                  

                  - **MavenReferenceDescription** *(dict) --* 

                    The parameters that are required to specify a Maven dependency.

                    
                    

                    - **GroupId** *(string) --* 

                      The group ID of the Maven reference.

                      
                    

                    - **ArtifactId** *(string) --* 

                      The artifact ID of the Maven reference.

                      
                    

                    - **Version** *(string) --* 

                      The version of the Maven reference.

                      
                
              
            
          
        
          

          - **CloudWatchLoggingOptionDescriptions** *(list) --* 

            Describes the application Amazon CloudWatch logging options.

            
            

            - *(dict) --* 

              Describes the Amazon CloudWatch logging option.

              
              

              - **CloudWatchLoggingOptionId** *(string) --* 

                The ID of the CloudWatch logging option description.

                
              

              - **LogStreamARN** *(string) --* 

                The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

                
              

              - **RoleARN** *(string) --* 

                The IAM ARN of the role to use to send application messages. 

                 

                .. note::

                   

                  Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
        
          

          - **ApplicationMaintenanceConfigurationDescription** *(dict) --* 

            The details of the maintenance configuration for the application.

            
            

            - **ApplicationMaintenanceWindowStartTime** *(string) --* 

              The start time for the maintenance window.

              
            

            - **ApplicationMaintenanceWindowEndTime** *(string) --* 

              The end time for the maintenance window.

              
        
          

          - **ApplicationVersionUpdatedFrom** *(integer) --* 

            The previous application version before the latest application update.  RollbackApplication reverts the application to this version.

            
          

          - **ApplicationVersionRolledBackFrom** *(integer) --* 

            If you reverted the application using  RollbackApplication , the application version when ``RollbackApplication`` was called.

            
          

          - **ConditionalToken** *(string) --* 

            A value you use to implement strong concurrency for application updates.

            
          

          - **ApplicationVersionRolledBackTo** *(integer) --* 

            The version to which you want to roll back the application.

            
          

          - **ApplicationMode** *(string) --* 

            To create a Kinesis Data Analytics Studio notebook, you must set the mode to ``INTERACTIVE`` . However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    

  .. py:method:: start_application(**kwargs)

    

    Starts the specified Kinesis Data Analytics application. After creating an application, you must exclusively call this operation to start your application.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/StartApplication>`_    


    **Request Syntax** 
    ::

      response = client.start_application(
          ApplicationName='string',
          RunConfiguration={
              'FlinkRunConfiguration': {
                  'AllowNonRestoredState': True|False
              },
              'SqlRunConfigurations': [
                  {
                      'InputId': 'string',
                      'InputStartingPositionConfiguration': {
                          'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                      }
                  },
              ],
              'ApplicationRestoreConfiguration': {
                  'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                  'SnapshotName': 'string'
              }
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application.

      

    
    :type RunConfiguration: dict
    :param RunConfiguration: 

      Identifies the run configuration (start parameters) of a Kinesis Data Analytics application.

      

    
      - **FlinkRunConfiguration** *(dict) --* 

        Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

        

      
        - **AllowNonRestoredState** *(boolean) --* 

          When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

           

          .. note::

             

            This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

             

          

        
      
      - **SqlRunConfigurations** *(list) --* 

        Describes the starting parameters for a SQL-based Kinesis Data Analytics application application.

        

      
        - *(dict) --* 

          Describes the starting parameters for a SQL-based Kinesis Data Analytics application.

          

        
          - **InputId** *(string) --* **[REQUIRED]** 

            The input source ID. You can get this ID by calling the  DescribeApplication operation. 

            

          
          - **InputStartingPositionConfiguration** *(dict) --* **[REQUIRED]** 

            The point at which you want the application to start processing records from the streaming source. 

            

          
            - **InputStartingPosition** *(string) --* 

              The starting position on the stream.

               

               
              * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
               
              * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
               
              * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
               

              

            
          
        
    
      - **ApplicationRestoreConfiguration** *(dict) --* 

        Describes the restore behavior of a restarting application.

        

      
        - **ApplicationRestoreType** *(string) --* **[REQUIRED]** 

          Specifies how the application should be restored.

          

        
        - **SnapshotName** *(string) --* 

          The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

          

        
      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    

  .. py:method:: stop_application(**kwargs)

    

    Stops the application from processing data. You can stop an application only if it is in the running status, unless you set the ``Force`` parameter to ``true`` .

     

    You can use the  DescribeApplication operation to find the application status. 

     

    Kinesis Data Analytics takes a snapshot when the application is stopped, unless ``Force`` is set to ``true`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/StopApplication>`_    


    **Request Syntax** 
    ::

      response = client.stop_application(
          ApplicationName='string',
          Force=True|False
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the running application to stop.

      

    
    :type Force: boolean
    :param Force: 

      Set to ``true`` to force the application to stop. If you set ``Force`` to ``true`` , Kinesis Data Analytics stops the application without taking a snapshot. 

       

      .. note::

         

        Force-stopping your application may lead to data loss or duplication. To prevent data loss or duplicate processing of data during application restarts, we recommend you to take frequent snapshots of your application.

         

       

      You can only force stop a Flink-based Kinesis Data Analytics application. You can't force stop a SQL-based Kinesis Data Analytics application.

       

      The application must be in the ``STARTING`` , ``UPDATING`` , ``STOPPING`` , ``AUTOSCALING`` , or ``RUNNING`` status. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Adds one or more key-value tags to a Kinesis Data Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          ResourceARN='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The ARN of the application to assign the tags.

      

    
    :type Tags: list
    :param Tags: **[REQUIRED]** 

      The key-value tags to assign to the application.

      

    
      - *(dict) --* 

        A key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key of the key-value tag.

          

        
        - **Value** *(string) --* 

          The value of the key-value tag. The value is optional.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.TooManyTagsException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Removes one or more tags from a Kinesis Data Analytics application. For more information, see `Using Tagging <https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          ResourceARN='string',
          TagKeys=[
              'string',
          ]
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The ARN of the Kinesis Data Analytics application from which to remove the tags.

      

    
    :type TagKeys: list
    :param TagKeys: **[REQUIRED]** 

      A list of keys of tags to remove from the specified application.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.TooManyTagsException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    

  .. py:method:: update_application(**kwargs)

    

    Updates an existing Kinesis Data Analytics application. Using this operation, you can update application code, input configuration, and output configuration. 

     

    Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update your application. 

     

    .. note::

       

      You cannot update the ``RuntimeEnvironment`` of an existing application. If you need to update an application's ``RuntimeEnvironment`` , you must delete the application and create it again.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/UpdateApplication>`_    


    **Request Syntax** 
    ::

      response = client.update_application(
          ApplicationName='string',
          CurrentApplicationVersionId=123,
          ApplicationConfigurationUpdate={
              'SqlApplicationConfigurationUpdate': {
                  'InputUpdates': [
                      {
                          'InputId': 'string',
                          'NamePrefixUpdate': 'string',
                          'InputProcessingConfigurationUpdate': {
                              'InputLambdaProcessorUpdate': {
                                  'ResourceARNUpdate': 'string'
                              }
                          },
                          'KinesisStreamsInputUpdate': {
                              'ResourceARNUpdate': 'string'
                          },
                          'KinesisFirehoseInputUpdate': {
                              'ResourceARNUpdate': 'string'
                          },
                          'InputSchemaUpdate': {
                              'RecordFormatUpdate': {
                                  'RecordFormatType': 'JSON'|'CSV',
                                  'MappingParameters': {
                                      'JSONMappingParameters': {
                                          'RecordRowPath': 'string'
                                      },
                                      'CSVMappingParameters': {
                                          'RecordRowDelimiter': 'string',
                                          'RecordColumnDelimiter': 'string'
                                      }
                                  }
                              },
                              'RecordEncodingUpdate': 'string',
                              'RecordColumnUpdates': [
                                  {
                                      'Name': 'string',
                                      'Mapping': 'string',
                                      'SqlType': 'string'
                                  },
                              ]
                          },
                          'InputParallelismUpdate': {
                              'CountUpdate': 123
                          }
                      },
                  ],
                  'OutputUpdates': [
                      {
                          'OutputId': 'string',
                          'NameUpdate': 'string',
                          'KinesisStreamsOutputUpdate': {
                              'ResourceARNUpdate': 'string'
                          },
                          'KinesisFirehoseOutputUpdate': {
                              'ResourceARNUpdate': 'string'
                          },
                          'LambdaOutputUpdate': {
                              'ResourceARNUpdate': 'string'
                          },
                          'DestinationSchemaUpdate': {
                              'RecordFormatType': 'JSON'|'CSV'
                          }
                      },
                  ],
                  'ReferenceDataSourceUpdates': [
                      {
                          'ReferenceId': 'string',
                          'TableNameUpdate': 'string',
                          'S3ReferenceDataSourceUpdate': {
                              'BucketARNUpdate': 'string',
                              'FileKeyUpdate': 'string'
                          },
                          'ReferenceSchemaUpdate': {
                              'RecordFormat': {
                                  'RecordFormatType': 'JSON'|'CSV',
                                  'MappingParameters': {
                                      'JSONMappingParameters': {
                                          'RecordRowPath': 'string'
                                      },
                                      'CSVMappingParameters': {
                                          'RecordRowDelimiter': 'string',
                                          'RecordColumnDelimiter': 'string'
                                      }
                                  }
                              },
                              'RecordEncoding': 'string',
                              'RecordColumns': [
                                  {
                                      'Name': 'string',
                                      'Mapping': 'string',
                                      'SqlType': 'string'
                                  },
                              ]
                          }
                      },
                  ]
              },
              'ApplicationCodeConfigurationUpdate': {
                  'CodeContentTypeUpdate': 'PLAINTEXT'|'ZIPFILE',
                  'CodeContentUpdate': {
                      'TextContentUpdate': 'string',
                      'ZipFileContentUpdate': b'bytes',
                      'S3ContentLocationUpdate': {
                          'BucketARNUpdate': 'string',
                          'FileKeyUpdate': 'string',
                          'ObjectVersionUpdate': 'string'
                      }
                  }
              },
              'FlinkApplicationConfigurationUpdate': {
                  'CheckpointConfigurationUpdate': {
                      'ConfigurationTypeUpdate': 'DEFAULT'|'CUSTOM',
                      'CheckpointingEnabledUpdate': True|False,
                      'CheckpointIntervalUpdate': 123,
                      'MinPauseBetweenCheckpointsUpdate': 123
                  },
                  'MonitoringConfigurationUpdate': {
                      'ConfigurationTypeUpdate': 'DEFAULT'|'CUSTOM',
                      'MetricsLevelUpdate': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                      'LogLevelUpdate': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                  },
                  'ParallelismConfigurationUpdate': {
                      'ConfigurationTypeUpdate': 'DEFAULT'|'CUSTOM',
                      'ParallelismUpdate': 123,
                      'ParallelismPerKPUUpdate': 123,
                      'AutoScalingEnabledUpdate': True|False
                  }
              },
              'EnvironmentPropertyUpdates': {
                  'PropertyGroups': [
                      {
                          'PropertyGroupId': 'string',
                          'PropertyMap': {
                              'string': 'string'
                          }
                      },
                  ]
              },
              'ApplicationSnapshotConfigurationUpdate': {
                  'SnapshotsEnabledUpdate': True|False
              },
              'VpcConfigurationUpdates': [
                  {
                      'VpcConfigurationId': 'string',
                      'SubnetIdUpdates': [
                          'string',
                      ],
                      'SecurityGroupIdUpdates': [
                          'string',
                      ]
                  },
              ],
              'ZeppelinApplicationConfigurationUpdate': {
                  'MonitoringConfigurationUpdate': {
                      'LogLevelUpdate': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                  },
                  'CatalogConfigurationUpdate': {
                      'GlueDataCatalogConfigurationUpdate': {
                          'DatabaseARNUpdate': 'string'
                      }
                  },
                  'DeployAsApplicationConfigurationUpdate': {
                      'S3ContentLocationUpdate': {
                          'BucketARNUpdate': 'string',
                          'BasePathUpdate': 'string'
                      }
                  },
                  'CustomArtifactsConfigurationUpdate': [
                      {
                          'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                          'S3ContentLocation': {
                              'BucketARN': 'string',
                              'FileKey': 'string',
                              'ObjectVersion': 'string'
                          },
                          'MavenReference': {
                              'GroupId': 'string',
                              'ArtifactId': 'string',
                              'Version': 'string'
                          }
                      },
                  ]
              }
          },
          ServiceExecutionRoleUpdate='string',
          RunConfigurationUpdate={
              'FlinkRunConfiguration': {
                  'AllowNonRestoredState': True|False
              },
              'ApplicationRestoreConfiguration': {
                  'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                  'SnapshotName': 'string'
              }
          },
          CloudWatchLoggingOptionUpdates=[
              {
                  'CloudWatchLoggingOptionId': 'string',
                  'LogStreamARNUpdate': 'string'
              },
          ],
          ConditionalToken='string'
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application to update.

      

    
    :type CurrentApplicationVersionId: integer
    :param CurrentApplicationVersionId: 

      The current application version ID. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` .You can retrieve the application version ID using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    :type ApplicationConfigurationUpdate: dict
    :param ApplicationConfigurationUpdate: 

      Describes application configuration updates.

      

    
      - **SqlApplicationConfigurationUpdate** *(dict) --* 

        Describes updates to a SQL-based Kinesis Data Analytics application's configuration.

        

      
        - **InputUpdates** *(list) --* 

          The array of  InputUpdate objects describing the new input streams used by the application.

          

        
          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes updates to a specific input configuration (identified by the ``InputId`` of an application). 

            

          
            - **InputId** *(string) --* **[REQUIRED]** 

              The input ID of the application input to be updated.

              

            
            - **NamePrefixUpdate** *(string) --* 

              The name prefix for in-application streams that Kinesis Data Analytics creates for the specific streaming source.

              

            
            - **InputProcessingConfigurationUpdate** *(dict) --* 

              Describes updates to an  InputProcessingConfiguration .

              

            
              - **InputLambdaProcessorUpdate** *(dict) --* **[REQUIRED]** 

                Provides update information for an  InputLambdaProcessor .

                

              
                - **ResourceARNUpdate** *(string) --* **[REQUIRED]** 

                  The Amazon Resource Name (ARN) of the new AWS Lambda function that is used to preprocess the records in the stream.

                   

                  .. note::

                     

                    To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                     

                  

                
              
            
            - **KinesisStreamsInputUpdate** *(dict) --* 

              If a Kinesis data stream is the streaming source to be updated, provides an updated stream Amazon Resource Name (ARN).

              

            
              - **ResourceARNUpdate** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the input Kinesis data stream to read.

                

              
            
            - **KinesisFirehoseInputUpdate** *(dict) --* 

              If a Kinesis Data Firehose delivery stream is the streaming source to be updated, provides an updated stream ARN.

              

            
              - **ResourceARNUpdate** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the input delivery stream to read.

                

              
            
            - **InputSchemaUpdate** *(dict) --* 

              Describes the data format on the streaming source, and how record elements on the streaming source map to columns of the in-application stream that is created.

              

            
              - **RecordFormatUpdate** *(dict) --* 

                Specifies the format of the records on the streaming source.

                

              
                - **RecordFormatType** *(string) --* **[REQUIRED]** 

                  The type of record format.

                  

                
                - **MappingParameters** *(dict) --* 

                  When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                  

                
                  - **JSONMappingParameters** *(dict) --* 

                    Provides additional mapping information when JSON is the record format on the streaming source.

                    

                  
                    - **RecordRowPath** *(string) --* **[REQUIRED]** 

                      The path to the top-level parent that contains the records.

                      

                    
                  
                  - **CSVMappingParameters** *(dict) --* 

                    Provides additional mapping information when the record format uses delimiters (for example, CSV).

                    

                  
                    - **RecordRowDelimiter** *(string) --* **[REQUIRED]** 

                      The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                      

                    
                    - **RecordColumnDelimiter** *(string) --* **[REQUIRED]** 

                      The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                      

                    
                  
                
              
              - **RecordEncodingUpdate** *(string) --* 

                Specifies the encoding of the records in the streaming source; for example, UTF-8.

                

              
              - **RecordColumnUpdates** *(list) --* 

                A list of ``RecordColumn`` objects. Each object describes the mapping of the streaming source element to the corresponding column in the in-application stream.

                

              
                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                   

                  Also used to describe the format of the reference data source.

                  

                
                  - **Name** *(string) --* **[REQUIRED]** 

                    The name of the column that is created in the in-application input stream or reference table.

                    

                  
                  - **Mapping** *(string) --* 

                    A reference to the data element in the streaming input or the reference data source.

                    

                  
                  - **SqlType** *(string) --* **[REQUIRED]** 

                    The type of column created in the in-application input stream or reference table.

                    

                  
                
            
            
            - **InputParallelismUpdate** *(dict) --* 

              Describes the parallelism updates (the number of in-application streams Kinesis Data Analytics creates for the specific streaming source).

              

            
              - **CountUpdate** *(integer) --* **[REQUIRED]** 

                The number of in-application streams to create for the specified streaming source.

                

              
            
          
      
        - **OutputUpdates** *(list) --* 

          The array of  OutputUpdate objects describing the new destination streams used by the application.

          

        
          - *(dict) --* 

            For a SQL-based Kinesis Data Analytics application, describes updates to the output configuration identified by the ``OutputId`` . 

            

          
            - **OutputId** *(string) --* **[REQUIRED]** 

              Identifies the specific output configuration that you want to update.

              

            
            - **NameUpdate** *(string) --* 

              If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.

              

            
            - **KinesisStreamsOutputUpdate** *(dict) --* 

              Describes a Kinesis data stream as the destination for the output.

              

            
              - **ResourceARNUpdate** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the Kinesis data stream where you want to write the output.

                

              
            
            - **KinesisFirehoseOutputUpdate** *(dict) --* 

              Describes a Kinesis Data Firehose delivery stream as the destination for the output.

              

            
              - **ResourceARNUpdate** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the delivery stream to write to. 

                

              
            
            - **LambdaOutputUpdate** *(dict) --* 

              Describes an AWS Lambda function as the destination for the output.

              

            
              - **ResourceARNUpdate** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) of the destination AWS Lambda function.

                 

                .. note::

                   

                  To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                   

                

              
            
            - **DestinationSchemaUpdate** *(dict) --* 

              Describes the data format when records are written to the destination. 

              

            
              - **RecordFormatType** *(string) --* **[REQUIRED]** 

                Specifies the format of the records on the output stream.

                

              
            
          
      
        - **ReferenceDataSourceUpdates** *(list) --* 

          The array of  ReferenceDataSourceUpdate objects describing the new reference data sources used by the application.

          

        
          - *(dict) --* 

            When you update a reference data source configuration for a SQL-based Kinesis Data Analytics application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.

            

          
            - **ReferenceId** *(string) --* **[REQUIRED]** 

              The ID of the reference data source that is being updated. You can use the  DescribeApplication operation to get this value.

              

            
            - **TableNameUpdate** *(string) --* 

              The in-application table name that is created by this update.

              

            
            - **S3ReferenceDataSourceUpdate** *(dict) --* 

              Describes the S3 bucket name, object key name, and IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf and populate the in-application reference table.

              

            
              - **BucketARNUpdate** *(string) --* 

                The Amazon Resource Name (ARN) of the S3 bucket.

                

              
              - **FileKeyUpdate** *(string) --* 

                The object key name.

                

              
            
            - **ReferenceSchemaUpdate** *(dict) --* 

              Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 

              

            
              - **RecordFormat** *(dict) --* **[REQUIRED]** 

                Specifies the format of the records on the streaming source.

                

              
                - **RecordFormatType** *(string) --* **[REQUIRED]** 

                  The type of record format.

                  

                
                - **MappingParameters** *(dict) --* 

                  When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                  

                
                  - **JSONMappingParameters** *(dict) --* 

                    Provides additional mapping information when JSON is the record format on the streaming source.

                    

                  
                    - **RecordRowPath** *(string) --* **[REQUIRED]** 

                      The path to the top-level parent that contains the records.

                      

                    
                  
                  - **CSVMappingParameters** *(dict) --* 

                    Provides additional mapping information when the record format uses delimiters (for example, CSV).

                    

                  
                    - **RecordRowDelimiter** *(string) --* **[REQUIRED]** 

                      The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                      

                    
                    - **RecordColumnDelimiter** *(string) --* **[REQUIRED]** 

                      The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                      

                    
                  
                
              
              - **RecordEncoding** *(string) --* 

                Specifies the encoding of the records in the streaming source. For example, UTF-8.

                

              
              - **RecordColumns** *(list) --* **[REQUIRED]** 

                A list of ``RecordColumn`` objects. 

                

              
                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                   

                  Also used to describe the format of the reference data source.

                  

                
                  - **Name** *(string) --* **[REQUIRED]** 

                    The name of the column that is created in the in-application input stream or reference table.

                    

                  
                  - **Mapping** *(string) --* 

                    A reference to the data element in the streaming input or the reference data source.

                    

                  
                  - **SqlType** *(string) --* **[REQUIRED]** 

                    The type of column created in the in-application input stream or reference table.

                    

                  
                
            
            
          
      
      
      - **ApplicationCodeConfigurationUpdate** *(dict) --* 

        Describes updates to an application's code configuration.

        

      
        - **CodeContentTypeUpdate** *(string) --* 

          Describes updates to the code content type.

          

        
        - **CodeContentUpdate** *(dict) --* 

          Describes updates to the code content of an application.

          

        
          - **TextContentUpdate** *(string) --* 

            Describes an update to the text code for an application.

            

          
          - **ZipFileContentUpdate** *(bytes) --* 

            Describes an update to the zipped code for an application.

            

          
          - **S3ContentLocationUpdate** *(dict) --* 

            Describes an update to the location of code for an application.

            

          
            - **BucketARNUpdate** *(string) --* 

              The new Amazon Resource Name (ARN) for the S3 bucket containing the application code.

              

            
            - **FileKeyUpdate** *(string) --* 

              The new file key for the object containing the application code.

              

            
            - **ObjectVersionUpdate** *(string) --* 

              The new version of the object containing the application code.

              

            
          
        
      
      - **FlinkApplicationConfigurationUpdate** *(dict) --* 

        Describes updates to a Flink-based Kinesis Data Analytics application's configuration.

        

      
        - **CheckpointConfigurationUpdate** *(dict) --* 

          Describes updates to an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance.

          

        
          - **ConfigurationTypeUpdate** *(string) --* 

            Describes updates to whether the application uses the default checkpointing behavior of Kinesis Data Analytics. You must set this property to ``CUSTOM`` in order to set the ``CheckpointingEnabled`` , ``CheckpointInterval`` , or ``MinPauseBetweenCheckpoints`` parameters. 

             

            .. note::

               

              If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

               

               
              * **CheckpointingEnabled:** true 
               
              * **CheckpointInterval:** 60000 
               
              * **MinPauseBetweenCheckpoints:** 5000 
               

               

            

          
          - **CheckpointingEnabledUpdate** *(boolean) --* 

            Describes updates to whether checkpointing is enabled for an application.

             

            .. note::

               

              If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

               

            

          
          - **CheckpointIntervalUpdate** *(integer) --* 

            Describes updates to the interval in milliseconds between checkpoint operations.

             

            .. note::

               

              If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

               

            

          
          - **MinPauseBetweenCheckpointsUpdate** *(integer) --* 

            Describes updates to the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.

             

            .. note::

               

              If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

               

            

          
        
        - **MonitoringConfigurationUpdate** *(dict) --* 

          Describes updates to the configuration parameters for Amazon CloudWatch logging for an application.

          

        
          - **ConfigurationTypeUpdate** *(string) --* 

            Describes updates to whether to use the default CloudWatch logging configuration for an application. You must set this property to ``CUSTOM`` in order to set the ``LogLevel`` or ``MetricsLevel`` parameters.

            

          
          - **MetricsLevelUpdate** *(string) --* 

            Describes updates to the granularity of the CloudWatch Logs for an application. The ``Parallelism`` level is not recommended for applications with a Parallelism over 64 due to excessive costs.

            

          
          - **LogLevelUpdate** *(string) --* 

            Describes updates to the verbosity of the CloudWatch Logs for an application.

            

          
        
        - **ParallelismConfigurationUpdate** *(dict) --* 

          Describes updates to the parameters for how an application executes multiple tasks simultaneously.

          

        
          - **ConfigurationTypeUpdate** *(string) --* 

            Describes updates to whether the application uses the default parallelism for the Kinesis Data Analytics service, or if a custom parallelism is used. You must set this property to ``CUSTOM`` in order to change your application's ``AutoScalingEnabled`` , ``Parallelism`` , or ``ParallelismPerKPU`` properties.

            

          
          - **ParallelismUpdate** *(integer) --* 

            Describes updates to the initial number of parallel tasks an application can perform. If ``AutoScalingEnabled`` is set to True, then Kinesis Data Analytics can increase the ``CurrentParallelism`` value in response to application load. The service can increase ``CurrentParallelism`` up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service will reduce ``CurrentParallelism`` down to the ``Parallelism`` setting.

            

          
          - **ParallelismPerKPUUpdate** *(integer) --* 

            Describes updates to the number of parallel tasks an application can perform per Kinesis Processing Unit (KPU) used by the application.

            

          
          - **AutoScalingEnabledUpdate** *(boolean) --* 

            Describes updates to whether the Kinesis Data Analytics service can increase the parallelism of a Flink-based Kinesis Data Analytics application in response to increased throughput.

            

          
        
      
      - **EnvironmentPropertyUpdates** *(dict) --* 

        Describes updates to the environment properties for a Flink-based Kinesis Data Analytics application.

        

      
        - **PropertyGroups** *(list) --* **[REQUIRED]** 

          Describes updates to the execution property groups.

          

        
          - *(dict) --* 

            Property key-value pairs passed into an application.

            

          
            - **PropertyGroupId** *(string) --* **[REQUIRED]** 

              Describes the key of an application execution property key-value pair.

              

            
            - **PropertyMap** *(dict) --* **[REQUIRED]** 

              Describes the value of an application execution property key-value pair.

              

            
              - *(string) --* 

              
                - *(string) --* 

                
          
        
          
      
      
      - **ApplicationSnapshotConfigurationUpdate** *(dict) --* 

        Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

        

      
        - **SnapshotsEnabledUpdate** *(boolean) --* **[REQUIRED]** 

          Describes updates to whether snapshots are enabled for an application.

          

        
      
      - **VpcConfigurationUpdates** *(list) --* 

        Updates to the array of descriptions of VPC configurations available to the application.

        

      
        - *(dict) --* 

          Describes updates to the VPC configuration used by the application.

          

        
          - **VpcConfigurationId** *(string) --* **[REQUIRED]** 

            Describes an update to the ID of the VPC configuration.

            

          
          - **SubnetIdUpdates** *(list) --* 

            Describes updates to the array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIdUpdates** *(list) --* 

            Describes updates to the array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

            

          
            - *(string) --* 

            
        
        
    
      - **ZeppelinApplicationConfigurationUpdate** *(dict) --* 

        Updates to the configuration of a Kinesis Data Analytics Studio notebook.

        

      
        - **MonitoringConfigurationUpdate** *(dict) --* 

          Updates to the monitoring configuration of a Kinesis Data Analytics Studio notebook.

          

        
          - **LogLevelUpdate** *(string) --* **[REQUIRED]** 

            Updates to the logging level for Apache Zeppelin within a Kinesis Data Analytics Studio notebook.

            

          
        
        - **CatalogConfigurationUpdate** *(dict) --* 

          Updates to the configuration of the AWS Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook.

          

        
          - **GlueDataCatalogConfigurationUpdate** *(dict) --* **[REQUIRED]** 

            Updates to the configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.

            

          
            - **DatabaseARNUpdate** *(string) --* 

              The updated Amazon Resource Name (ARN) of the database.

              

            
          
        
        - **DeployAsApplicationConfigurationUpdate** *(dict) --* 

          Updates to the configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state..

          

        
          - **S3ContentLocationUpdate** *(dict) --* **[REQUIRED]** 

            Updates to the location that holds the data required to specify an Amazon Data Analytics application.

            

          
            - **BucketARNUpdate** *(string) --* **[REQUIRED]** 

              The updated Amazon Resource Name (ARN) of the S3 bucket.

              

            
            - **BasePathUpdate** *(string) --* 

              The updated S3 bucket path.

              

            
          
        
        - **CustomArtifactsConfigurationUpdate** *(list) --* 

          Updates to the customer artifacts. Custom artifacts are dependency JAR files and user-defined functions (UDF).

          

        
          - *(dict) --* 

            Specifies dependency JARs, as well as JAR files that contain user-defined functions (UDF).

            

          
            - **ArtifactType** *(string) --* **[REQUIRED]** 

               ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

              

            
            - **S3ContentLocation** *(dict) --* 

              For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

              

            
              - **BucketARN** *(string) --* **[REQUIRED]** 

                The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                

              
              - **FileKey** *(string) --* **[REQUIRED]** 

                The file key for the object containing the application code.

                

              
              - **ObjectVersion** *(string) --* 

                The version of the object containing the application code.

                

              
            
            - **MavenReference** *(dict) --* 

              The parameters required to fully specify a Maven reference.

              

            
              - **GroupId** *(string) --* **[REQUIRED]** 

                The group ID of the Maven reference.

                

              
              - **ArtifactId** *(string) --* **[REQUIRED]** 

                The artifact ID of the Maven reference.

                

              
              - **Version** *(string) --* **[REQUIRED]** 

                The version of the Maven reference.

                

              
            
          
      
      
    
    :type ServiceExecutionRoleUpdate: string
    :param ServiceExecutionRoleUpdate: 

      Describes updates to the service execution role.

      

    
    :type RunConfigurationUpdate: dict
    :param RunConfigurationUpdate: 

      Describes updates to the application's starting parameters.

      

    
      - **FlinkRunConfiguration** *(dict) --* 

        Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

        

      
        - **AllowNonRestoredState** *(boolean) --* 

          When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

           

          .. note::

             

            This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

             

          

        
      
      - **ApplicationRestoreConfiguration** *(dict) --* 

        Describes updates to the restore behavior of a restarting application.

        

      
        - **ApplicationRestoreType** *(string) --* **[REQUIRED]** 

          Specifies how the application should be restored.

          

        
        - **SnapshotName** *(string) --* 

          The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

          

        
      
    
    :type CloudWatchLoggingOptionUpdates: list
    :param CloudWatchLoggingOptionUpdates: 

      Describes application Amazon CloudWatch logging option updates. You can only update existing CloudWatch logging options with this action. To add a new CloudWatch logging option, use  AddApplicationCloudWatchLoggingOption .

      

    
      - *(dict) --* 

        Describes the Amazon CloudWatch logging option updates.

        

      
        - **CloudWatchLoggingOptionId** *(string) --* **[REQUIRED]** 

          The ID of the CloudWatch logging option to update

          

        
        - **LogStreamARNUpdate** *(string) --* 

          The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

          

        
      
  
    :type ConditionalToken: string
    :param ConditionalToken: 

      A value you use to implement strong concurrency for application updates. You must provide the ``CurrentApplicationVersionId`` or the ``ConditionalToken`` . You get the application's current ``ConditionalToken`` using  DescribeApplication . For better concurrency support, use the ``ConditionalToken`` parameter instead of ``CurrentApplicationVersionId`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationDetail': {
                'ApplicationARN': 'string',
                'ApplicationDescription': 'string',
                'ApplicationName': 'string',
                'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                'ServiceExecutionRole': 'string',
                'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                'ApplicationVersionId': 123,
                'CreateTimestamp': datetime(2015, 1, 1),
                'LastUpdateTimestamp': datetime(2015, 1, 1),
                'ApplicationConfigurationDescription': {
                    'SqlApplicationConfigurationDescription': {
                        'InputDescriptions': [
                            {
                                'InputId': 'string',
                                'NamePrefix': 'string',
                                'InAppStreamNames': [
                                    'string',
                                ],
                                'InputProcessingConfigurationDescription': {
                                    'InputLambdaProcessorDescription': {
                                        'ResourceARN': 'string',
                                        'RoleARN': 'string'
                                    }
                                },
                                'KinesisStreamsInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseInputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'InputSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                },
                                'InputParallelism': {
                                    'Count': 123
                                },
                                'InputStartingPositionConfiguration': {
                                    'InputStartingPosition': 'NOW'|'TRIM_HORIZON'|'LAST_STOPPED_POINT'
                                }
                            },
                        ],
                        'OutputDescriptions': [
                            {
                                'OutputId': 'string',
                                'Name': 'string',
                                'KinesisStreamsOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'KinesisFirehoseOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'LambdaOutputDescription': {
                                    'ResourceARN': 'string',
                                    'RoleARN': 'string'
                                },
                                'DestinationSchema': {
                                    'RecordFormatType': 'JSON'|'CSV'
                                }
                            },
                        ],
                        'ReferenceDataSourceDescriptions': [
                            {
                                'ReferenceId': 'string',
                                'TableName': 'string',
                                'S3ReferenceDataSourceDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ReferenceRoleARN': 'string'
                                },
                                'ReferenceSchema': {
                                    'RecordFormat': {
                                        'RecordFormatType': 'JSON'|'CSV',
                                        'MappingParameters': {
                                            'JSONMappingParameters': {
                                                'RecordRowPath': 'string'
                                            },
                                            'CSVMappingParameters': {
                                                'RecordRowDelimiter': 'string',
                                                'RecordColumnDelimiter': 'string'
                                            }
                                        }
                                    },
                                    'RecordEncoding': 'string',
                                    'RecordColumns': [
                                        {
                                            'Name': 'string',
                                            'Mapping': 'string',
                                            'SqlType': 'string'
                                        },
                                    ]
                                }
                            },
                        ]
                    },
                    'ApplicationCodeConfigurationDescription': {
                        'CodeContentType': 'PLAINTEXT'|'ZIPFILE',
                        'CodeContentDescription': {
                            'TextContent': 'string',
                            'CodeMD5': 'string',
                            'CodeSize': 123,
                            'S3ApplicationCodeLocationDescription': {
                                'BucketARN': 'string',
                                'FileKey': 'string',
                                'ObjectVersion': 'string'
                            }
                        }
                    },
                    'RunConfigurationDescription': {
                        'ApplicationRestoreConfigurationDescription': {
                            'ApplicationRestoreType': 'SKIP_RESTORE_FROM_SNAPSHOT'|'RESTORE_FROM_LATEST_SNAPSHOT'|'RESTORE_FROM_CUSTOM_SNAPSHOT',
                            'SnapshotName': 'string'
                        },
                        'FlinkRunConfigurationDescription': {
                            'AllowNonRestoredState': True|False
                        }
                    },
                    'FlinkApplicationConfigurationDescription': {
                        'CheckpointConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'CheckpointingEnabled': True|False,
                            'CheckpointInterval': 123,
                            'MinPauseBetweenCheckpoints': 123
                        },
                        'MonitoringConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'MetricsLevel': 'APPLICATION'|'TASK'|'OPERATOR'|'PARALLELISM',
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'ParallelismConfigurationDescription': {
                            'ConfigurationType': 'DEFAULT'|'CUSTOM',
                            'Parallelism': 123,
                            'ParallelismPerKPU': 123,
                            'CurrentParallelism': 123,
                            'AutoScalingEnabled': True|False
                        },
                        'JobPlanDescription': 'string'
                    },
                    'EnvironmentPropertyDescriptions': {
                        'PropertyGroupDescriptions': [
                            {
                                'PropertyGroupId': 'string',
                                'PropertyMap': {
                                    'string': 'string'
                                }
                            },
                        ]
                    },
                    'ApplicationSnapshotConfigurationDescription': {
                        'SnapshotsEnabled': True|False
                    },
                    'VpcConfigurationDescriptions': [
                        {
                            'VpcConfigurationId': 'string',
                            'VpcId': 'string',
                            'SubnetIds': [
                                'string',
                            ],
                            'SecurityGroupIds': [
                                'string',
                            ]
                        },
                    ],
                    'ZeppelinApplicationConfigurationDescription': {
                        'MonitoringConfigurationDescription': {
                            'LogLevel': 'INFO'|'WARN'|'ERROR'|'DEBUG'
                        },
                        'CatalogConfigurationDescription': {
                            'GlueDataCatalogConfigurationDescription': {
                                'DatabaseARN': 'string'
                            }
                        },
                        'DeployAsApplicationConfigurationDescription': {
                            'S3ContentLocationDescription': {
                                'BucketARN': 'string',
                                'BasePath': 'string'
                            }
                        },
                        'CustomArtifactsConfigurationDescription': [
                            {
                                'ArtifactType': 'UDF'|'DEPENDENCY_JAR',
                                'S3ContentLocationDescription': {
                                    'BucketARN': 'string',
                                    'FileKey': 'string',
                                    'ObjectVersion': 'string'
                                },
                                'MavenReferenceDescription': {
                                    'GroupId': 'string',
                                    'ArtifactId': 'string',
                                    'Version': 'string'
                                }
                            },
                        ]
                    }
                },
                'CloudWatchLoggingOptionDescriptions': [
                    {
                        'CloudWatchLoggingOptionId': 'string',
                        'LogStreamARN': 'string',
                        'RoleARN': 'string'
                    },
                ],
                'ApplicationMaintenanceConfigurationDescription': {
                    'ApplicationMaintenanceWindowStartTime': 'string',
                    'ApplicationMaintenanceWindowEndTime': 'string'
                },
                'ApplicationVersionUpdatedFrom': 123,
                'ApplicationVersionRolledBackFrom': 123,
                'ConditionalToken': 'string',
                'ApplicationVersionRolledBackTo': 123,
                'ApplicationMode': 'STREAMING'|'INTERACTIVE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationDetail** *(dict) --* 

          Describes application updates.

          
          

          - **ApplicationARN** *(string) --* 

            The ARN of the application.

            
          

          - **ApplicationDescription** *(string) --* 

            The description of the application.

            
          

          - **ApplicationName** *(string) --* 

            The name of the application.

            
          

          - **RuntimeEnvironment** *(string) --* 

            The runtime environment for the application (``SQL-1_0`` , ``FLINK-1_6`` , ``FLINK-1_8`` , or ``FLINK-1_11`` ).

            
          

          - **ServiceExecutionRole** *(string) --* 

            Specifies the IAM role that the application uses to access external resources.

            
          

          - **ApplicationStatus** *(string) --* 

            The status of the application.

            
          

          - **ApplicationVersionId** *(integer) --* 

            Provides the current application version. Kinesis Data Analytics updates the ``ApplicationVersionId`` each time you update the application.

            
          

          - **CreateTimestamp** *(datetime) --* 

            The current timestamp when the application was created.

            
          

          - **LastUpdateTimestamp** *(datetime) --* 

            The current timestamp when the application was last updated.

            
          

          - **ApplicationConfigurationDescription** *(dict) --* 

            Describes details about the application code and starting parameters for a Kinesis Data Analytics application.

            
            

            - **SqlApplicationConfigurationDescription** *(dict) --* 

              The details about inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.

              
              

              - **InputDescriptions** *(list) --* 

                The array of  InputDescription objects describing the input streams used by the application.

                
                

                - *(dict) --* 

                  Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 

                  
                  

                  - **InputId** *(string) --* 

                    The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application. 

                    
                  

                  - **NamePrefix** *(string) --* 

                    The in-application name prefix.

                    
                  

                  - **InAppStreamNames** *(list) --* 

                    Returns the in-application stream names that are mapped to the stream source. 

                    
                    

                    - *(string) --* 
                
                  

                  - **InputProcessingConfigurationDescription** *(dict) --* 

                    The description of the preprocessor that executes on records in this input before the application's code is run. 

                    
                    

                    - **InputLambdaProcessorDescription** *(dict) --* 

                      Provides configuration information about the associated  InputLambdaProcessorDescription  

                      
                      

                      - **ResourceARN** *(string) --* 

                        The ARN of the AWS Lambda function that is used to preprocess the records in the stream.

                         

                        .. note::

                           

                          To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see `Example ARNs\: AWS Lambda <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda>`__  

                           

                        
                      

                      - **RoleARN** *(string) --* 

                        The ARN of the IAM role that is used to access the AWS Lambda function.

                         

                        .. note::

                           

                          Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                           

                        
                  
                
                  

                  - **KinesisStreamsInputDescription** *(dict) --* 

                    If a Kinesis data stream is configured as a streaming source, provides the Kinesis data stream's Amazon Resource Name (ARN). 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseInputDescription** *(dict) --* 

                    If a Kinesis Data Firehose delivery stream is configured as a streaming source, provides the delivery stream's ARN. 

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics assumes to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **InputSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created. 

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
                  

                  - **InputParallelism** *(dict) --* 

                    Describes the configured parallelism (number of in-application streams mapped to the streaming source). 

                    
                    

                    - **Count** *(integer) --* 

                      The number of in-application streams to create.

                      
                
                  

                  - **InputStartingPositionConfiguration** *(dict) --* 

                    The point at which the application is configured to read from the input stream.

                    
                    

                    - **InputStartingPosition** *(string) --* 

                      The starting position on the stream.

                       

                       
                      * ``NOW`` - Start reading just after the most recent record in the stream, and start at the request timestamp that the customer issued. 
                       
                      * ``TRIM_HORIZON`` - Start reading at the last untrimmed record in the stream, which is the oldest record available in the stream. This option is not available for an Amazon Kinesis Data Firehose delivery stream. 
                       
                      * ``LAST_STOPPED_POINT`` - Resume reading from where the application last stopped reading. 
                       

                      
                
              
            
              

              - **OutputDescriptions** *(list) --* 

                The array of  OutputDescription objects describing the destination streams used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 

                  
                  

                  - **OutputId** *(string) --* 

                    A unique identifier for the output configuration.

                    
                  

                  - **Name** *(string) --* 

                    The name of the in-application stream that is configured as output.

                    
                  

                  - **KinesisStreamsOutputDescription** *(dict) --* 

                    Describes the Kinesis data stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the Kinesis data stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **KinesisFirehoseOutputDescription** *(dict) --* 

                    Describes the Kinesis Data Firehose delivery stream that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the delivery stream.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to access the stream.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **LambdaOutputDescription** *(dict) --* 

                    Describes the Lambda function that is configured as the destination where output is written.

                    
                    

                    - **ResourceARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the destination Lambda function.

                      
                    

                    - **RoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to write to the destination function.

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **DestinationSchema** *(dict) --* 

                    The data format used for writing data to the destination.

                    
                    

                    - **RecordFormatType** *(string) --* 

                      Specifies the format of the records on the output stream.

                      
                
              
            
              

              - **ReferenceDataSourceDescriptions** *(list) --* 

                The array of  ReferenceDataSourceDescription objects describing the reference data sources used by the application.

                
                

                - *(dict) --* 

                  For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.

                  
                  

                  - **ReferenceId** *(string) --* 

                    The ID of the reference data source. This is the ID that Kinesis Data Analytics assigns when you add the reference data source to your application using the  CreateApplication or  UpdateApplication operation.

                    
                  

                  - **TableName** *(string) --* 

                    The in-application table name created by the specific reference data source configuration.

                    
                  

                  - **S3ReferenceDataSourceDescription** *(dict) --* 

                    Provides the Amazon S3 bucket name, the object key name that contains the reference data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) of the S3 bucket.

                      
                    

                    - **FileKey** *(string) --* 

                      Amazon S3 object key name.

                      
                    

                    - **ReferenceRoleARN** *(string) --* 

                      The ARN of the IAM role that Kinesis Data Analytics can assume to read the Amazon S3 object on your behalf to populate the in-application reference table. 

                       

                      .. note::

                         

                        Provided for backward compatibility. Applications that are created with the current API version have an application-level service execution role rather than a resource-level role.

                         

                      
                
                  

                  - **ReferenceSchema** *(dict) --* 

                    Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.

                    
                    

                    - **RecordFormat** *(dict) --* 

                      Specifies the format of the records on the streaming source.

                      
                      

                      - **RecordFormatType** *(string) --* 

                        The type of record format.

                        
                      

                      - **MappingParameters** *(dict) --* 

                        When you configure application input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.

                        
                        

                        - **JSONMappingParameters** *(dict) --* 

                          Provides additional mapping information when JSON is the record format on the streaming source.

                          
                          

                          - **RecordRowPath** *(string) --* 

                            The path to the top-level parent that contains the records.

                            
                      
                        

                        - **CSVMappingParameters** *(dict) --* 

                          Provides additional mapping information when the record format uses delimiters (for example, CSV).

                          
                          

                          - **RecordRowDelimiter** *(string) --* 

                            The row delimiter. For example, in a CSV format, *'\n'* is the typical row delimiter.

                            
                          

                          - **RecordColumnDelimiter** *(string) --* 

                            The column delimiter. For example, in a CSV format, a comma (",") is the typical column delimiter.

                            
                      
                    
                  
                    

                    - **RecordEncoding** *(string) --* 

                      Specifies the encoding of the records in the streaming source. For example, UTF-8.

                      
                    

                    - **RecordColumns** *(list) --* 

                      A list of ``RecordColumn`` objects. 

                      
                      

                      - *(dict) --* 

                        For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.

                         

                        Also used to describe the format of the reference data source.

                        
                        

                        - **Name** *(string) --* 

                          The name of the column that is created in the in-application input stream or reference table.

                          
                        

                        - **Mapping** *(string) --* 

                          A reference to the data element in the streaming input or the reference data source.

                          
                        

                        - **SqlType** *(string) --* 

                          The type of column created in the in-application input stream or reference table.

                          
                    
                  
                
              
            
          
            

            - **ApplicationCodeConfigurationDescription** *(dict) --* 

              The details about the application code for a Flink-based Kinesis Data Analytics application.

              
              

              - **CodeContentType** *(string) --* 

                Specifies whether the code content is in text or zip format.

                
              

              - **CodeContentDescription** *(dict) --* 

                Describes details about the location and format of the application code.

                
                

                - **TextContent** *(string) --* 

                  The text-format code

                  
                

                - **CodeMD5** *(string) --* 

                  The checksum that can be used to validate zip-format code.

                  
                

                - **CodeSize** *(integer) --* 

                  The size in bytes of the application code. Can be used to validate zip-format code.

                  
                

                - **S3ApplicationCodeLocationDescription** *(dict) --* 

                  The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                    
                  

                  - **FileKey** *(string) --* 

                    The file key for the object containing the application code.

                    
                  

                  - **ObjectVersion** *(string) --* 

                    The version of the object containing the application code.

                    
              
            
          
            

            - **RunConfigurationDescription** *(dict) --* 

              The details about the starting properties for a Kinesis Data Analytics application.

              
              

              - **ApplicationRestoreConfigurationDescription** *(dict) --* 

                Describes the restore behavior of a restarting application.

                
                

                - **ApplicationRestoreType** *(string) --* 

                  Specifies how the application should be restored.

                  
                

                - **SnapshotName** *(string) --* 

                  The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if ``RESTORE_FROM_CUSTOM_SNAPSHOT`` is specified for the ``ApplicationRestoreType`` .

                  
            
              

              - **FlinkRunConfigurationDescription** *(dict) --* 

                Describes the starting parameters for a Flink-based Kinesis Data Analytics application.

                
                

                - **AllowNonRestoredState** *(boolean) --* 

                  When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. This will happen if the program is updated between snapshots to remove stateful parameters, and state data in the snapshot no longer corresponds to valid application data. For more information, see `Allowing Non-Restored State <https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/savepoints.html#allowing-non-restored-state>`__ in the `Apache Flink documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ .

                   

                  .. note::

                     

                    This value defaults to ``false`` . If you update your application without specifying this parameter, ``AllowNonRestoredState`` will be set to ``false`` , even if it was previously set to ``true`` .

                     

                  
            
          
            

            - **FlinkApplicationConfigurationDescription** *(dict) --* 

              The details about a Flink-based Kinesis Data Analytics application.

              
              

              - **CheckpointConfigurationDescription** *(dict) --* 

                Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default checkpointing behavior in Kinesis Data Analytics. 

                   

                  .. note::

                     

                    If this value is set to ``DEFAULT`` , the application will use the following values, even if they are set to other values using APIs or application code:

                     

                     
                    * **CheckpointingEnabled:** true 
                     
                    * **CheckpointInterval:** 60000 
                     
                    * **MinPauseBetweenCheckpoints:** 5000 
                     

                     

                  
                

                - **CheckpointingEnabled** *(boolean) --* 

                  Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointingEnabled`` value of ``true`` , even if this value is set to another value using this API or in application code.

                     

                  
                

                - **CheckpointInterval** *(integer) --* 

                  Describes the interval in milliseconds between checkpoint operations. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``CheckpointInterval`` value of 60000, even if this value is set to another value using this API or in application code.

                     

                  
                

                - **MinPauseBetweenCheckpoints** *(integer) --* 

                  Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start. 

                   

                  .. note::

                     

                    If ``CheckpointConfiguration.ConfigurationType`` is ``DEFAULT`` , the application will use a ``MinPauseBetweenCheckpoints`` value of 5000, even if this value is set using this API or in application code.

                     

                  
            
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                Describes configuration parameters for Amazon CloudWatch logging for an application.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether to use the default CloudWatch logging configuration for an application.

                  
                

                - **MetricsLevel** *(string) --* 

                  Describes the granularity of the CloudWatch Logs for an application.

                  
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **ParallelismConfigurationDescription** *(dict) --* 

                Describes parameters for how an application executes multiple tasks simultaneously.

                
                

                - **ConfigurationType** *(string) --* 

                  Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. 

                  
                

                - **Parallelism** *(integer) --* 

                  Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, then Kinesis Data Analytics can increase the ``CurrentParallelism`` value in response to application load. The service can increase ``CurrentParallelism`` up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **ParallelismPerKPU** *(integer) --* 

                  Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.

                  
                

                - **CurrentParallelism** *(integer) --* 

                  Describes the current number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If ``AutoScalingEnabled`` is set to True, Kinesis Data Analytics can increase this value in response to application load. The service can increase this value up to the maximum parallelism, which is ``ParalellismPerKPU`` times the maximum KPUs for the application. The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service can reduce the ``CurrentParallelism`` value down to the ``Parallelism`` setting.

                  
                

                - **AutoScalingEnabled** *(boolean) --* 

                  Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.

                  
            
              

              - **JobPlanDescription** *(string) --* 

                The job plan for an application. For more information about the job plan, see `Jobs and Scheduling <https://ci.apache.org/projects/flink/flink-docs-release-1.8/internals/job_scheduling.html>`__ in the `Apache Flink Documentation <https://ci.apache.org/projects/flink/flink-docs-release-1.8/>`__ . To retrieve the job plan for the application, use the  DescribeApplicationRequest$IncludeAdditionalDetails parameter of the  DescribeApplication operation.

                
          
            

            - **EnvironmentPropertyDescriptions** *(dict) --* 

              Describes execution properties for a Flink-based Kinesis Data Analytics application.

              
              

              - **PropertyGroupDescriptions** *(list) --* 

                Describes the execution property groups.

                
                

                - *(dict) --* 

                  Property key-value pairs passed into an application.

                  
                  

                  - **PropertyGroupId** *(string) --* 

                    Describes the key of an application execution property key-value pair.

                    
                  

                  - **PropertyMap** *(dict) --* 

                    Describes the value of an application execution property key-value pair.

                    
                    

                    - *(string) --* 
                      

                      - *(string) --* 
                
              
              
            
          
            

            - **ApplicationSnapshotConfigurationDescription** *(dict) --* 

              Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

              
              

              - **SnapshotsEnabled** *(boolean) --* 

                Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.

                
          
            

            - **VpcConfigurationDescriptions** *(list) --* 

              The array of descriptions of VPC configurations available to the application.

              
              

              - *(dict) --* 

                Describes the parameters of a VPC used by the application.

                
                

                - **VpcConfigurationId** *(string) --* 

                  The ID of the VPC configuration.

                  
                

                - **VpcId** *(string) --* 

                  The ID of the associated VPC.

                  
                

                - **SubnetIds** *(list) --* 

                  The array of `Subnet <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
                

                - **SecurityGroupIds** *(list) --* 

                  The array of `SecurityGroup <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html>`__ IDs used by the VPC configuration.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **ZeppelinApplicationConfigurationDescription** *(dict) --* 

              The configuration parameters for a Kinesis Data Analytics Studio notebook.

              
              

              - **MonitoringConfigurationDescription** *(dict) --* 

                The monitoring configuration of a Kinesis Data Analytics Studio notebook.

                
                

                - **LogLevel** *(string) --* 

                  Describes the verbosity of the CloudWatch Logs for an application.

                  
            
              

              - **CatalogConfigurationDescription** *(dict) --* 

                The AWS Glue Data Catalog that is associated with the Kinesis Data Analytics Studio notebook.

                
                

                - **GlueDataCatalogConfigurationDescription** *(dict) --* 

                  The configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.

                  
                  

                  - **DatabaseARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the database.

                    
              
            
              

              - **DeployAsApplicationConfigurationDescription** *(dict) --* 

                The parameters required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..

                
                

                - **S3ContentLocationDescription** *(dict) --* 

                  The location that holds the data required to specify an Amazon Data Analytics application.

                  
                  

                  - **BucketARN** *(string) --* 

                    The Amazon Resource Name (ARN) of the S3 bucket.

                    
                  

                  - **BasePath** *(string) --* 

                    The base path for the S3 bucket.

                    
              
            
              

              - **CustomArtifactsConfigurationDescription** *(list) --* 

                Custom artifacts are dependency JARs and user-defined functions (UDF).

                
                

                - *(dict) --* 

                  Specifies a dependency JAR or a JAR of user-defined functions.

                  
                  

                  - **ArtifactType** *(string) --* 

                     ``UDF`` stands for user-defined functions. This type of artifact must be in an S3 bucket. A ``DEPENDENCY_JAR`` can be in either Maven or an S3 bucket.

                    
                  

                  - **S3ContentLocationDescription** *(dict) --* 

                    For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 

                    
                    

                    - **BucketARN** *(string) --* 

                      The Amazon Resource Name (ARN) for the S3 bucket containing the application code.

                      
                    

                    - **FileKey** *(string) --* 

                      The file key for the object containing the application code.

                      
                    

                    - **ObjectVersion** *(string) --* 

                      The version of the object containing the application code.

                      
                
                  

                  - **MavenReferenceDescription** *(dict) --* 

                    The parameters that are required to specify a Maven dependency.

                    
                    

                    - **GroupId** *(string) --* 

                      The group ID of the Maven reference.

                      
                    

                    - **ArtifactId** *(string) --* 

                      The artifact ID of the Maven reference.

                      
                    

                    - **Version** *(string) --* 

                      The version of the Maven reference.

                      
                
              
            
          
        
          

          - **CloudWatchLoggingOptionDescriptions** *(list) --* 

            Describes the application Amazon CloudWatch logging options.

            
            

            - *(dict) --* 

              Describes the Amazon CloudWatch logging option.

              
              

              - **CloudWatchLoggingOptionId** *(string) --* 

                The ID of the CloudWatch logging option description.

                
              

              - **LogStreamARN** *(string) --* 

                The Amazon Resource Name (ARN) of the CloudWatch log to receive application messages.

                
              

              - **RoleARN** *(string) --* 

                The IAM ARN of the role to use to send application messages. 

                 

                .. note::

                   

                  Provided for backward compatibility. Applications created with the current API version have an application-level service execution role rather than a resource-level role.

                   

                
          
        
          

          - **ApplicationMaintenanceConfigurationDescription** *(dict) --* 

            The details of the maintenance configuration for the application.

            
            

            - **ApplicationMaintenanceWindowStartTime** *(string) --* 

              The start time for the maintenance window.

              
            

            - **ApplicationMaintenanceWindowEndTime** *(string) --* 

              The end time for the maintenance window.

              
        
          

          - **ApplicationVersionUpdatedFrom** *(integer) --* 

            The previous application version before the latest application update.  RollbackApplication reverts the application to this version.

            
          

          - **ApplicationVersionRolledBackFrom** *(integer) --* 

            If you reverted the application using  RollbackApplication , the application version when ``RollbackApplication`` was called.

            
          

          - **ConditionalToken** *(string) --* 

            A value you use to implement strong concurrency for application updates.

            
          

          - **ApplicationVersionRolledBackTo** *(integer) --* 

            The version to which you want to roll back the application.

            
          

          - **ApplicationMode** *(string) --* 

            To create a Kinesis Data Analytics Studio notebook, you must set the mode to ``INTERACTIVE`` . However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.CodeValidationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidApplicationConfigurationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.LimitExceededException`

    

  .. py:method:: update_application_maintenance_configuration(**kwargs)

    

    Updates the maintenance configuration of the Kinesis Data Analytics application. 

     

    You can invoke this operation on an application that is in one of the two following states: ``READY`` or ``RUNNING`` . If you invoke it when the application is in a state other than these two states, it throws a ``ResourceInUseException`` . The service makes use of the updated configuration the next time it schedules maintenance for the application. If you invoke this operation after the service schedules maintenance, the service will apply the configuration update the next time it schedules maintenance for the application. This means that you might not see the maintenance configuration update applied to the maintenance process that follows a successful invocation of this operation, but to the following maintenance process instead.

     

    To see the current maintenance configuration of your application, invoke the  DescribeApplication operation.

     

    For information about application maintenance, see `Kinesis Data Analytics for Apache Flink Maintenance <https://docs.aws.amazon.com/kinesisanalytics/latest/java/maintenance.html>`__ .

     

    .. note::

       

      This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/UpdateApplicationMaintenanceConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.update_application_maintenance_configuration(
          ApplicationName='string',
          ApplicationMaintenanceConfigurationUpdate={
              'ApplicationMaintenanceWindowStartTimeUpdate': 'string'
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of the application for which you want to update the maintenance configuration.

      

    
    :type ApplicationMaintenanceConfigurationUpdate: dict
    :param ApplicationMaintenanceConfigurationUpdate: **[REQUIRED]** 

      Describes the application maintenance configuration update.

      

    
      - **ApplicationMaintenanceWindowStartTimeUpdate** *(string) --* **[REQUIRED]** 

        The updated start time for the maintenance window.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationARN': 'string',
            'ApplicationMaintenanceConfigurationDescription': {
                'ApplicationMaintenanceWindowStartTime': 'string',
                'ApplicationMaintenanceWindowEndTime': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationARN** *(string) --* 

          The Amazon Resource Name (ARN) of the application.

          
        

        - **ApplicationMaintenanceConfigurationDescription** *(dict) --* 

          The application maintenance configuration description after the update.

          
          

          - **ApplicationMaintenanceWindowStartTime** *(string) --* 

            The start time for the maintenance window.

            
          

          - **ApplicationMaintenanceWindowEndTime** *(string) --* 

            The end time for the maintenance window.

            
      
    
    **Exceptions** 
    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.InvalidArgumentException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.ConcurrentModificationException`

    
    *     :py:class:`KinesisAnalyticsV2.Client.exceptions.UnsupportedOperationException`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`KinesisAnalyticsV2.Paginator.ListApplicationSnapshots`


* :py:class:`KinesisAnalyticsV2.Paginator.ListApplications`



.. py:class:: KinesisAnalyticsV2.Paginator.ListApplicationSnapshots

  ::

    
    paginator = client.get_paginator('list_application_snapshots')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`KinesisAnalyticsV2.Client.list_application_snapshots`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/ListApplicationSnapshots>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          ApplicationName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type ApplicationName: string
    :param ApplicationName: **[REQUIRED]** 

      The name of an existing application.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SnapshotSummaries': [
                {
                    'SnapshotName': 'string',
                    'SnapshotStatus': 'CREATING'|'READY'|'DELETING'|'FAILED',
                    'ApplicationVersionId': 123,
                    'SnapshotCreationTimestamp': datetime(2015, 1, 1)
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SnapshotSummaries** *(list) --* 

          A collection of objects containing information about the application snapshots.

          
          

          - *(dict) --* 

            Provides details about a snapshot of application state.

            
            

            - **SnapshotName** *(string) --* 

              The identifier for the application snapshot.

              
            

            - **SnapshotStatus** *(string) --* 

              The status of the application snapshot.

              
            

            - **ApplicationVersionId** *(integer) --* 

              The current application version ID when the snapshot was created.

              
            

            - **SnapshotCreationTimestamp** *(datetime) --* 

              The timestamp of the application snapshot.

              
        
      
    

.. py:class:: KinesisAnalyticsV2.Paginator.ListApplications

  ::

    
    paginator = client.get_paginator('list_applications')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`KinesisAnalyticsV2.Client.list_applications`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kinesisanalyticsv2-2018-05-23/ListApplications>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ApplicationSummaries': [
                {
                    'ApplicationName': 'string',
                    'ApplicationARN': 'string',
                    'ApplicationStatus': 'DELETING'|'STARTING'|'STOPPING'|'READY'|'RUNNING'|'UPDATING'|'AUTOSCALING'|'FORCE_STOPPING'|'MAINTENANCE'|'ROLLING_BACK'|'ROLLED_BACK',
                    'ApplicationVersionId': 123,
                    'RuntimeEnvironment': 'SQL-1_0'|'FLINK-1_6'|'FLINK-1_8'|'FLINK-1_11'|'ZEPPELIN-FLINK-1_0',
                    'ApplicationMode': 'STREAMING'|'INTERACTIVE'
                },
            ],
            
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ApplicationSummaries** *(list) --* 

          A list of ``ApplicationSummary`` objects.

          
          

          - *(dict) --* 

            Provides application summary information, including the application Amazon Resource Name (ARN), name, and status.

            
            

            - **ApplicationName** *(string) --* 

              The name of the application.

              
            

            - **ApplicationARN** *(string) --* 

              The ARN of the application.

              
            

            - **ApplicationStatus** *(string) --* 

              The status of the application.

              
            

            - **ApplicationVersionId** *(integer) --* 

              Provides the current application version.

              
            

            - **RuntimeEnvironment** *(string) --* 

              The runtime environment for the application.

              
            

            - **ApplicationMode** *(string) --* 

              For a Kinesis Data Analytics for Apache Flink application, the mode is ``STREAMING`` . For a Kinesis Data Analytics Studio notebook, it is ``INTERACTIVE`` .

              
        
      
    