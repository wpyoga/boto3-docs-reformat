

******
kendra
******

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: kendra.Client

  A low-level client representing AWSKendraFrontendService
  

  Amazon Kendra is a service for indexing large document sets.

  ::

    
    import boto3
    
    client = boto3.client('kendra')

  
  These are the available methods:
  
  *   :py:meth:`~kendra.Client.batch_delete_document`

  
  *   :py:meth:`~kendra.Client.batch_get_document_status`

  
  *   :py:meth:`~kendra.Client.batch_put_document`

  
  *   :py:meth:`~kendra.Client.can_paginate`

  
  *   :py:meth:`~kendra.Client.clear_query_suggestions`

  
  *   :py:meth:`~kendra.Client.create_data_source`

  
  *   :py:meth:`~kendra.Client.create_faq`

  
  *   :py:meth:`~kendra.Client.create_index`

  
  *   :py:meth:`~kendra.Client.create_query_suggestions_block_list`

  
  *   :py:meth:`~kendra.Client.create_thesaurus`

  
  *   :py:meth:`~kendra.Client.delete_data_source`

  
  *   :py:meth:`~kendra.Client.delete_faq`

  
  *   :py:meth:`~kendra.Client.delete_index`

  
  *   :py:meth:`~kendra.Client.delete_principal_mapping`

  
  *   :py:meth:`~kendra.Client.delete_query_suggestions_block_list`

  
  *   :py:meth:`~kendra.Client.delete_thesaurus`

  
  *   :py:meth:`~kendra.Client.describe_data_source`

  
  *   :py:meth:`~kendra.Client.describe_faq`

  
  *   :py:meth:`~kendra.Client.describe_index`

  
  *   :py:meth:`~kendra.Client.describe_principal_mapping`

  
  *   :py:meth:`~kendra.Client.describe_query_suggestions_block_list`

  
  *   :py:meth:`~kendra.Client.describe_query_suggestions_config`

  
  *   :py:meth:`~kendra.Client.describe_thesaurus`

  
  *   :py:meth:`~kendra.Client.generate_presigned_url`

  
  *   :py:meth:`~kendra.Client.get_paginator`

  
  *   :py:meth:`~kendra.Client.get_query_suggestions`

  
  *   :py:meth:`~kendra.Client.get_waiter`

  
  *   :py:meth:`~kendra.Client.list_data_source_sync_jobs`

  
  *   :py:meth:`~kendra.Client.list_data_sources`

  
  *   :py:meth:`~kendra.Client.list_faqs`

  
  *   :py:meth:`~kendra.Client.list_groups_older_than_ordering_id`

  
  *   :py:meth:`~kendra.Client.list_indices`

  
  *   :py:meth:`~kendra.Client.list_query_suggestions_block_lists`

  
  *   :py:meth:`~kendra.Client.list_tags_for_resource`

  
  *   :py:meth:`~kendra.Client.list_thesauri`

  
  *   :py:meth:`~kendra.Client.put_principal_mapping`

  
  *   :py:meth:`~kendra.Client.query`

  
  *   :py:meth:`~kendra.Client.start_data_source_sync_job`

  
  *   :py:meth:`~kendra.Client.stop_data_source_sync_job`

  
  *   :py:meth:`~kendra.Client.submit_feedback`

  
  *   :py:meth:`~kendra.Client.tag_resource`

  
  *   :py:meth:`~kendra.Client.untag_resource`

  
  *   :py:meth:`~kendra.Client.update_data_source`

  
  *   :py:meth:`~kendra.Client.update_index`

  
  *   :py:meth:`~kendra.Client.update_query_suggestions_block_list`

  
  *   :py:meth:`~kendra.Client.update_query_suggestions_config`

  
  *   :py:meth:`~kendra.Client.update_thesaurus`

  

  .. py:method:: batch_delete_document(**kwargs)

    

    Removes one or more documents from an index. The documents must have been added with the ``BatchPutDocument`` operation.

     

    The documents are deleted asynchronously. You can see the progress of the deletion by using Amazon Web Services CloudWatch. Any error messages related to the processing of the batch are sent to you CloudWatch log.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/BatchDeleteDocument>`_    


    **Request Syntax** 
    ::

      response = client.batch_delete_document(
          IndexId='string',
          DocumentIdList=[
              'string',
          ],
          DataSourceSyncJobMetricTarget={
              'DataSourceId': 'string',
              'DataSourceSyncJobId': 'string'
          }
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the documents to delete.

      

    
    :type DocumentIdList: list
    :param DocumentIdList: **[REQUIRED]** 

      One or more identifiers for documents to delete from the index.

      

    
      - *(string) --* 

      
  
    :type DataSourceSyncJobMetricTarget: dict
    :param DataSourceSyncJobMetricTarget: 

      Maps a particular data source sync job to a particular data source.

      

    
      - **DataSourceId** *(string) --* **[REQUIRED]** 

        The ID of the data source that is running the sync job.

        

      
      - **DataSourceSyncJobId** *(string) --* 

        The ID of the sync job that is running on the data source.

         

        If the ID of a sync job is not provided and there is a sync job running, then the ID of this sync job is used and metrics are generated for this sync job.

         

        If the ID of a sync job is not provided and there is no sync job running, then no metrics are generated and documents are indexed/deleted at the index level without sync job metrics included.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'FailedDocuments': [
                {
                    'Id': 'string',
                    'ErrorCode': 'InternalError'|'InvalidRequest',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **FailedDocuments** *(list) --* 

          A list of documents that could not be removed from the index. Each entry contains an error message that indicates why the document couldn't be removed from the index.

          
          

          - *(dict) --* 

            Provides information about documents that could not be removed from an index by the ``BatchDeleteDocument`` operation.

            
            

            - **Id** *(string) --* 

              The identifier of the document that couldn't be removed from the index.

              
            

            - **ErrorCode** *(string) --* 

              The error code for why the document couldn't be removed from the index.

              
            

            - **ErrorMessage** *(string) --* 

              An explanation for why the document couldn't be removed from the index.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: batch_get_document_status(**kwargs)

    

    Returns the indexing status for one or more documents submitted with the `BatchPutDocument <https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html>`__ operation.

     

    When you use the ``BatchPutDocument`` operation, documents are indexed asynchronously. You can use the ``BatchGetDocumentStatus`` operation to get the current status of a list of documents so that you can determine if they have been successfully indexed.

     

    You can also use the ``BatchGetDocumentStatus`` operation to check the status of the `BatchDeleteDocument <https://docs.aws.amazon.com/kendra/latest/dg/API_BatchDeleteDocument.html>`__ operation. When a document is deleted from the index, Amazon Kendra returns ``NOT_FOUND`` as the status.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/BatchGetDocumentStatus>`_    


    **Request Syntax** 
    ::

      response = client.batch_get_document_status(
          IndexId='string',
          DocumentInfoList=[
              {
                  'DocumentId': 'string',
                  'Attributes': [
                      {
                          'Key': 'string',
                          'Value': {
                              'StringValue': 'string',
                              'StringListValue': [
                                  'string',
                              ],
                              'LongValue': 123,
                              'DateValue': datetime(2015, 1, 1)
                          }
                      },
                  ]
              },
          ]
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index to add documents to. The index ID is returned by the `CreateIndex <https://docs.aws.amazon.com/kendra/latest/dg/API_CreateIndex.html>`__ operation.

      

    
    :type DocumentInfoList: list
    :param DocumentInfoList: **[REQUIRED]** 

      A list of ``DocumentInfo`` objects that identify the documents for which to get the status. You identify the documents by their document ID and optional attributes.

      

    
      - *(dict) --* 

        Identifies a document for which to retrieve status information

        

      
        - **DocumentId** *(string) --* **[REQUIRED]** 

          The unique identifier of the document.

          

        
        - **Attributes** *(list) --* 

          Attributes that identify a specific version of a document to check.

           

          The only valid attributes are:

           

           
          * version 
           
          * datasourceId 
           
          * jobExecutionId 
           

           

          The attributes follow these rules:

           

           
          * ``dataSourceId`` and ``jobExecutionId`` must be used together. 
           
          * ``version`` is ignored if ``dataSourceId`` and ``jobExecutionId`` are not provided. 
           
          * If ``dataSourceId`` and ``jobExecutionId`` are provided, but ``version`` is not, the version defaults to "0". 
           

          

        
          - *(dict) --* 

            A custom attribute value assigned to a document. 

            

          
            - **Key** *(string) --* **[REQUIRED]** 

              The identifier for the attribute.

              

            
            - **Value** *(dict) --* **[REQUIRED]** 

              The value of the attribute.

              

            
              - **StringValue** *(string) --* 

                A string, such as "department".

                

              
              - **StringListValue** *(list) --* 

                A list of strings. 

                

              
                - *(string) --* 

                
            
              - **LongValue** *(integer) --* 

                A long integer value.

                

              
              - **DateValue** *(datetime) --* 

                A date expressed as an ISO 8601 string.

                 

                It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

                

              
            
          
      
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Errors': [
                {
                    'DocumentId': 'string',
                    'ErrorCode': 'InternalError'|'InvalidRequest',
                    'ErrorMessage': 'string'
                },
            ],
            'DocumentStatusList': [
                {
                    'DocumentId': 'string',
                    'DocumentStatus': 'NOT_FOUND'|'PROCESSING'|'INDEXED'|'UPDATED'|'FAILED'|'UPDATE_FAILED',
                    'FailureCode': 'string',
                    'FailureReason': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Errors** *(list) --* 

          A list of documents that Amazon Kendra couldn't get the status for. The list includes the ID of the document and the reason that the status couldn't be found.

          
          

          - *(dict) --* 

            Provides a response when the status of a document could not be retrieved.

            
            

            - **DocumentId** *(string) --* 

              The unique identifier of the document whose status could not be retrieved.

              
            

            - **ErrorCode** *(string) --* 

              Indicates the source of the error.

              
            

            - **ErrorMessage** *(string) --* 

              States that the API could not get the status of a document. This could be because the request is not valid or there is a system error.

              
        
      
        

        - **DocumentStatusList** *(list) --* 

          The status of documents. The status indicates if the document is waiting to be indexed, is in the process of indexing, has completed indexing, or failed indexing. If a document failed indexing, the status provides the reason why.

          
          

          - *(dict) --* 

            Provides information about the status of documents submitted for indexing.

            
            

            - **DocumentId** *(string) --* 

              The unique identifier of the document.

              
            

            - **DocumentStatus** *(string) --* 

              The current status of a document.

               

              If the document was submitted for deletion, the status is ``NOT_FOUND`` after the document is deleted.

              
            

            - **FailureCode** *(string) --* 

              Indicates the source of the error.

              
            

            - **FailureReason** *(string) --* 

              Provides detailed information about why the document couldn't be indexed. Use this information to correct the error before you resubmit the document for indexing.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: batch_put_document(**kwargs)

    

    Adds one or more documents to an index.

     

    The ``BatchPutDocument`` operation enables you to ingest inline documents or a set of documents stored in an Amazon S3 bucket. Use this operation to ingest your text and unstructured text into an index, add custom attributes to the documents, and to attach an access control list to the documents added to the index.

     

    The documents are indexed asynchronously. You can see the progress of the batch using Amazon Web Services CloudWatch. Any error messages related to processing the batch are sent to your Amazon Web Services CloudWatch log.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/BatchPutDocument>`_    


    **Request Syntax** 
    ::

      response = client.batch_put_document(
          IndexId='string',
          RoleArn='string',
          Documents=[
              {
                  'Id': 'string',
                  'Title': 'string',
                  'Blob': b'bytes',
                  'S3Path': {
                      'Bucket': 'string',
                      'Key': 'string'
                  },
                  'Attributes': [
                      {
                          'Key': 'string',
                          'Value': {
                              'StringValue': 'string',
                              'StringListValue': [
                                  'string',
                              ],
                              'LongValue': 123,
                              'DateValue': datetime(2015, 1, 1)
                          }
                      },
                  ],
                  'AccessControlList': [
                      {
                          'Name': 'string',
                          'Type': 'USER'|'GROUP',
                          'Access': 'ALLOW'|'DENY',
                          'DataSourceId': 'string'
                      },
                  ],
                  'HierarchicalAccessControlList': [
                      {
                          'PrincipalList': [
                              {
                                  'Name': 'string',
                                  'Type': 'USER'|'GROUP',
                                  'Access': 'ALLOW'|'DENY',
                                  'DataSourceId': 'string'
                              },
                          ]
                      },
                  ],
                  'ContentType': 'PDF'|'HTML'|'MS_WORD'|'PLAIN_TEXT'|'PPT'
              },
          ]
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index to add the documents to. You need to create the index first using the ``CreateIndex`` operation.

      

    
    :type RoleArn: string
    :param RoleArn: 

      The Amazon Resource Name (ARN) of a role that is allowed to run the ``BatchPutDocument`` operation. For more information, see `IAM Roles for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html>`__ .

      

    
    :type Documents: list
    :param Documents: **[REQUIRED]** 

      One or more documents to add to the index.

       

      Documents can include custom attributes. For example, 'DataSourceId' and 'DataSourceSyncJobId' are custom attributes that provide information on the synchronization of documents running on a data source. Note, 'DataSourceSyncJobId' could be an optional custom attribute as Amazon Kendra will use the ID of a running sync job.

       

      Documents have the following file size limits.

       

       
      * 5 MB total size for inline documents 
       
      * 50 MB total size for files from an S3 bucket 
       
      * 5 MB extracted text for any file 
       

       

      For more information about file size and transaction per second quotas, see `Quotas <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

      

    
      - *(dict) --* 

        A document in an index.

        

      
        - **Id** *(string) --* **[REQUIRED]** 

          A unique identifier of the document in the index.

          

        
        - **Title** *(string) --* 

          The title of the document.

          

        
        - **Blob** *(bytes) --* 

          The contents of the document. 

           

          Documents passed to the ``Blob`` parameter must be base64 encoded. Your code might not need to encode the document file bytes if you're using an Amazon Web Services SDK to call Amazon Kendra operations. If you are calling the Amazon Kendra endpoint directly using REST, you must base64 encode the contents before sending.

          

        
        - **S3Path** *(dict) --* 

          Information required to find a specific file in an Amazon S3 bucket.

          

        
          - **Bucket** *(string) --* **[REQUIRED]** 

            The name of the S3 bucket that contains the file.

            

          
          - **Key** *(string) --* **[REQUIRED]** 

            The name of the file.

            

          
        
        - **Attributes** *(list) --* 

          Custom attributes to apply to the document. Use the custom attributes to provide additional information for searching, to provide facets for refining searches, and to provide additional information in the query response.

          

        
          - *(dict) --* 

            A custom attribute value assigned to a document. 

            

          
            - **Key** *(string) --* **[REQUIRED]** 

              The identifier for the attribute.

              

            
            - **Value** *(dict) --* **[REQUIRED]** 

              The value of the attribute.

              

            
              - **StringValue** *(string) --* 

                A string, such as "department".

                

              
              - **StringListValue** *(list) --* 

                A list of strings. 

                

              
                - *(string) --* 

                
            
              - **LongValue** *(integer) --* 

                A long integer value.

                

              
              - **DateValue** *(datetime) --* 

                A date expressed as an ISO 8601 string.

                 

                It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

                

              
            
          
      
        - **AccessControlList** *(list) --* 

          Information on user and group access rights, which is used for user context filtering.

          

        
          - *(dict) --* 

            Provides user and group information for document access filtering.

            

          
            - **Name** *(string) --* **[REQUIRED]** 

              The name of the user or group.

              

            
            - **Type** *(string) --* **[REQUIRED]** 

              The type of principal.

              

            
            - **Access** *(string) --* **[REQUIRED]** 

              Whether to allow or deny access to the principal.

              

            
            - **DataSourceId** *(string) --* 

              The identifier of the data source the principal should access documents from.

              

            
          
      
        - **HierarchicalAccessControlList** *(list) --* 

          The list of `principal <https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html>`__ lists that define the hierarchy for which documents users should have access to.

          

        
          - *(dict) --* 

            Information to define the hierarchy for which documents users should have access to. 

            

          
            - **PrincipalList** *(list) --* **[REQUIRED]** 

              A list of `principal <https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html>`__ lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.

              

            
              - *(dict) --* 

                Provides user and group information for document access filtering.

                

              
                - **Name** *(string) --* **[REQUIRED]** 

                  The name of the user or group.

                  

                
                - **Type** *(string) --* **[REQUIRED]** 

                  The type of principal.

                  

                
                - **Access** *(string) --* **[REQUIRED]** 

                  Whether to allow or deny access to the principal.

                  

                
                - **DataSourceId** *(string) --* 

                  The identifier of the data source the principal should access documents from.

                  

                
              
          
          
      
        - **ContentType** *(string) --* 

          The file type of the document in the ``Blob`` field.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'FailedDocuments': [
                {
                    'Id': 'string',
                    'ErrorCode': 'InternalError'|'InvalidRequest',
                    'ErrorMessage': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **FailedDocuments** *(list) --* 

          A list of documents that were not added to the index because the document failed a validation check. Each document contains an error message that indicates why the document couldn't be added to the index.

           

          If there was an error adding a document to an index the error is reported in your Amazon Web Services CloudWatch log. For more information, see `Monitoring Amazon Kendra with Amazon CloudWatch Logs <https://docs.aws.amazon.com/kendra/latest/dg/cloudwatch-logs.html>`__  

          
          

          - *(dict) --* 

            Provides information about a document that could not be indexed.

            
            

            - **Id** *(string) --* 

              The unique identifier of the document.

              
            

            - **ErrorCode** *(string) --* 

              The type of error that caused the document to fail to be indexed.

              
            

            - **ErrorMessage** *(string) --* 

              A description of the reason why the document could not be indexed.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: clear_query_suggestions(**kwargs)

    

    Clears existing query suggestions from an index.

     

    This deletes existing suggestions only, not the queries in the query log. After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. If you do not see any new suggestions, then please allow Amazon Kendra to collect enough queries to learn new suggestions.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ClearQuerySuggestions>`_    


    **Request Syntax** 
    ::

      response = client.clear_query_suggestions(
          IndexId='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to clear query suggestions from.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: create_data_source(**kwargs)

    

    Creates a data source that you use to with an Amazon Kendra index. 

     

    You specify a name, data source connector type and description for your data source. You also specify configuration information such as document metadata (author, source URI, and so on) and user context information.

     

     ``CreateDataSource`` is a synchronous operation. The operation returns 200 if the data source was successfully created. Otherwise, an exception is raised.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/CreateDataSource>`_    


    **Request Syntax** 
    ::

      response = client.create_data_source(
          Name='string',
          IndexId='string',
          Type='S3'|'SHAREPOINT'|'DATABASE'|'SALESFORCE'|'ONEDRIVE'|'SERVICENOW'|'CUSTOM'|'CONFLUENCE'|'GOOGLEDRIVE'|'WEBCRAWLER'|'WORKDOCS',
          Configuration={
              'S3Configuration': {
                  'BucketName': 'string',
                  'InclusionPrefixes': [
                      'string',
                  ],
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'DocumentsMetadataConfiguration': {
                      'S3Prefix': 'string'
                  },
                  'AccessControlListConfiguration': {
                      'KeyPath': 'string'
                  }
              },
              'SharePointConfiguration': {
                  'SharePointVersion': 'SHAREPOINT_2013'|'SHAREPOINT_2016'|'SHAREPOINT_ONLINE',
                  'Urls': [
                      'string',
                  ],
                  'SecretArn': 'string',
                  'CrawlAttachments': True|False,
                  'UseChangeLog': True|False,
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'VpcConfiguration': {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ],
                  'DocumentTitleFieldName': 'string',
                  'DisableLocalGroups': True|False,
                  'SslCertificateS3Path': {
                      'Bucket': 'string',
                      'Key': 'string'
                  }
              },
              'DatabaseConfiguration': {
                  'DatabaseEngineType': 'RDS_AURORA_MYSQL'|'RDS_AURORA_POSTGRESQL'|'RDS_MYSQL'|'RDS_POSTGRESQL',
                  'ConnectionConfiguration': {
                      'DatabaseHost': 'string',
                      'DatabasePort': 123,
                      'DatabaseName': 'string',
                      'TableName': 'string',
                      'SecretArn': 'string'
                  },
                  'VpcConfiguration': {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
                  'ColumnConfiguration': {
                      'DocumentIdColumnName': 'string',
                      'DocumentDataColumnName': 'string',
                      'DocumentTitleColumnName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ],
                      'ChangeDetectingColumns': [
                          'string',
                      ]
                  },
                  'AclConfiguration': {
                      'AllowedGroupsColumnName': 'string'
                  },
                  'SqlConfiguration': {
                      'QueryIdentifiersEnclosingOption': 'DOUBLE_QUOTES'|'NONE'
                  }
              },
              'SalesforceConfiguration': {
                  'ServerUrl': 'string',
                  'SecretArn': 'string',
                  'StandardObjectConfigurations': [
                      {
                          'Name': 'ACCOUNT'|'CAMPAIGN'|'CASE'|'CONTACT'|'CONTRACT'|'DOCUMENT'|'GROUP'|'IDEA'|'LEAD'|'OPPORTUNITY'|'PARTNER'|'PRICEBOOK'|'PRODUCT'|'PROFILE'|'SOLUTION'|'TASK'|'USER',
                          'DocumentDataFieldName': 'string',
                          'DocumentTitleFieldName': 'string',
                          'FieldMappings': [
                              {
                                  'DataSourceFieldName': 'string',
                                  'DateFieldFormat': 'string',
                                  'IndexFieldName': 'string'
                              },
                          ]
                      },
                  ],
                  'KnowledgeArticleConfiguration': {
                      'IncludedStates': [
                          'DRAFT'|'PUBLISHED'|'ARCHIVED',
                      ],
                      'StandardKnowledgeArticleTypeConfiguration': {
                          'DocumentDataFieldName': 'string',
                          'DocumentTitleFieldName': 'string',
                          'FieldMappings': [
                              {
                                  'DataSourceFieldName': 'string',
                                  'DateFieldFormat': 'string',
                                  'IndexFieldName': 'string'
                              },
                          ]
                      },
                      'CustomKnowledgeArticleTypeConfigurations': [
                          {
                              'Name': 'string',
                              'DocumentDataFieldName': 'string',
                              'DocumentTitleFieldName': 'string',
                              'FieldMappings': [
                                  {
                                      'DataSourceFieldName': 'string',
                                      'DateFieldFormat': 'string',
                                      'IndexFieldName': 'string'
                                  },
                              ]
                          },
                      ]
                  },
                  'ChatterFeedConfiguration': {
                      'DocumentDataFieldName': 'string',
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ],
                      'IncludeFilterTypes': [
                          'ACTIVE_USER'|'STANDARD_USER',
                      ]
                  },
                  'CrawlAttachments': True|False,
                  'StandardObjectAttachmentConfiguration': {
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'IncludeAttachmentFilePatterns': [
                      'string',
                  ],
                  'ExcludeAttachmentFilePatterns': [
                      'string',
                  ]
              },
              'OneDriveConfiguration': {
                  'TenantDomain': 'string',
                  'SecretArn': 'string',
                  'OneDriveUsers': {
                      'OneDriveUserList': [
                          'string',
                      ],
                      'OneDriveUserS3Path': {
                          'Bucket': 'string',
                          'Key': 'string'
                      }
                  },
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ],
                  'DisableLocalGroups': True|False
              },
              'ServiceNowConfiguration': {
                  'HostUrl': 'string',
                  'SecretArn': 'string',
                  'ServiceNowBuildVersion': 'LONDON'|'OTHERS',
                  'KnowledgeArticleConfiguration': {
                      'CrawlAttachments': True|False,
                      'IncludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'ExcludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'DocumentDataFieldName': 'string',
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ],
                      'FilterQuery': 'string'
                  },
                  'ServiceCatalogConfiguration': {
                      'CrawlAttachments': True|False,
                      'IncludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'ExcludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'DocumentDataFieldName': 'string',
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'AuthenticationType': 'HTTP_BASIC'|'OAUTH2'
              },
              'ConfluenceConfiguration': {
                  'ServerUrl': 'string',
                  'SecretArn': 'string',
                  'Version': 'CLOUD'|'SERVER',
                  'SpaceConfiguration': {
                      'CrawlPersonalSpaces': True|False,
                      'CrawlArchivedSpaces': True|False,
                      'IncludeSpaces': [
                          'string',
                      ],
                      'ExcludeSpaces': [
                          'string',
                      ],
                      'SpaceFieldMappings': [
                          {
                              'DataSourceFieldName': 'DISPLAY_URL'|'ITEM_TYPE'|'SPACE_KEY'|'URL',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'PageConfiguration': {
                      'PageFieldMappings': [
                          {
                              'DataSourceFieldName': 'AUTHOR'|'CONTENT_STATUS'|'CREATED_DATE'|'DISPLAY_URL'|'ITEM_TYPE'|'LABELS'|'MODIFIED_DATE'|'PARENT_ID'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'BlogConfiguration': {
                      'BlogFieldMappings': [
                          {
                              'DataSourceFieldName': 'AUTHOR'|'DISPLAY_URL'|'ITEM_TYPE'|'LABELS'|'PUBLISH_DATE'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'AttachmentConfiguration': {
                      'CrawlAttachments': True|False,
                      'AttachmentFieldMappings': [
                          {
                              'DataSourceFieldName': 'AUTHOR'|'CONTENT_TYPE'|'CREATED_DATE'|'DISPLAY_URL'|'FILE_SIZE'|'ITEM_TYPE'|'PARENT_ID'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'VpcConfiguration': {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ]
              },
              'GoogleDriveConfiguration': {
                  'SecretArn': 'string',
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ],
                  'ExcludeMimeTypes': [
                      'string',
                  ],
                  'ExcludeUserAccounts': [
                      'string',
                  ],
                  'ExcludeSharedDrives': [
                      'string',
                  ]
              },
              'WebCrawlerConfiguration': {
                  'Urls': {
                      'SeedUrlConfiguration': {
                          'SeedUrls': [
                              'string',
                          ],
                          'WebCrawlerMode': 'HOST_ONLY'|'SUBDOMAINS'|'EVERYTHING'
                      },
                      'SiteMapsConfiguration': {
                          'SiteMaps': [
                              'string',
                          ]
                      }
                  },
                  'CrawlDepth': 123,
                  'MaxLinksPerPage': 123,
                  'MaxContentSizePerPageInMegaBytes': ...,
                  'MaxUrlsPerMinuteCrawlRate': 123,
                  'UrlInclusionPatterns': [
                      'string',
                  ],
                  'UrlExclusionPatterns': [
                      'string',
                  ],
                  'ProxyConfiguration': {
                      'Host': 'string',
                      'Port': 123,
                      'Credentials': 'string'
                  },
                  'AuthenticationConfiguration': {
                      'BasicAuthentication': [
                          {
                              'Host': 'string',
                              'Port': 123,
                              'Credentials': 'string'
                          },
                      ]
                  }
              },
              'WorkDocsConfiguration': {
                  'OrganizationId': 'string',
                  'CrawlComments': True|False,
                  'UseChangeLog': True|False,
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ]
              }
          },
          Description='string',
          Schedule='string',
          RoleArn='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          ClientToken='string'
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      A unique name for the data source. A data source name can't be changed without deleting and recreating the data source.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that should be associated with this data source.

      

    
    :type Type: string
    :param Type: **[REQUIRED]** 

      The type of repository that contains the data source.

      

    
    :type Configuration: dict
    :param Configuration: 

      The connector configuration information that is required to access the repository.

       

      You can't specify the ``Configuration`` parameter when the ``Type`` parameter is set to ``CUSTOM`` . If you do, you receive a ``ValidationException`` exception.

       

      The ``Configuration`` parameter is required for all other data sources.

      

    
      - **S3Configuration** *(dict) --* 

        Provides information to create a data source connector for a document repository in an Amazon S3 bucket.

        

      
        - **BucketName** *(string) --* **[REQUIRED]** 

          The name of the bucket that contains the documents.

          

        
        - **InclusionPrefixes** *(list) --* 

          A list of S3 prefixes for the documents that should be included in the index.

          

        
          - *(string) --* 

          
      
        - **InclusionPatterns** *(list) --* 

          A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed.

           

          Some `examples <https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters>`__ are:

           

           
          * **.txt* will include all text files in a directory (files with the extension .txt). 
           
          * ***/*.txt* will include all text files in a directory and its subdirectories. 
           
          * **tax** will include all files in a directory that contain 'tax' in the file name, such as 'tax', 'taxes', 'income_tax'. 
           

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed.

           

          Some `examples <https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters>`__ are:

           

           
          * **.png , *.jpg* will exclude all PNG and JPEG image files in a directory (files with the extensions .png and .jpg). 
           
          * **internal** will exclude all files in a directory that contain 'internal' in the file name, such as 'internal', 'internal_only', 'company_internal'. 
           
          * ***/*internal** will exclude all internal-related files in a directory and its subdirectories. 
           

          

        
          - *(string) --* 

          
      
        - **DocumentsMetadataConfiguration** *(dict) --* 

          Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.

          

        
          - **S3Prefix** *(string) --* 

            A prefix used to filter metadata configuration files in the Amazon Web Services S3 bucket. The S3 bucket might contain multiple metadata files. Use ``S3Prefix`` to include only the desired metadata files.

            

          
        
        - **AccessControlListConfiguration** *(dict) --* 

          Provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see `Access control for S3 data sources <https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html>`__ .

          

        
          - **KeyPath** *(string) --* 

            Path to the Amazon Web Services S3 bucket that contains the ACL files.

            

          
        
      
      - **SharePointConfiguration** *(dict) --* 

        Provides information necessary to create a data source connector for a Microsoft SharePoint site.

        

      
        - **SharePointVersion** *(string) --* **[REQUIRED]** 

          The version of Microsoft SharePoint that you are using as a data source.

          

        
        - **Urls** *(list) --* **[REQUIRED]** 

          The URLs of the Microsoft SharePoint site that contains the documents that should be indexed.

          

        
          - *(string) --* 

          
      
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. If you use SharePoint Server, you also need to provide the sever domain name as part of the credentials. For more information, see `Using a Microsoft SharePoint Data Source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-sharepoint.html>`__ . For more information about Secrets Manager, see `What Is Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ in the *Secrets Manager* user guide.

          

        
        - **CrawlAttachments** *(boolean) --* 

           ``TRUE`` to include attachments to documents stored in your Microsoft SharePoint site in the index; otherwise, ``FALSE`` .

          

        
        - **UseChangeLog** *(boolean) --* 

          Set to ``TRUE`` to use the Microsoft SharePoint change log to determine the documents that need to be updated in the index. Depending on the size of the SharePoint change log, it may take longer for Amazon Kendra to use the change log than it takes it to determine the changed documents using the Amazon Kendra document crawler.

          

        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.

           

          The regex is applied to the display URL of the SharePoint document.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

           

          The regex is applied to the display URL of the SharePoint document.

          

        
          - *(string) --* 

          
      
        - **VpcConfiguration** *(dict) --* 

          Provides information for connecting to an Amazon VPC.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

            

          
            - *(string) --* 

            
        
        
        - **FieldMappings** *(list) --* 

          A list of ``DataSourceToIndexFieldMapping`` objects that map Microsoft SharePoint attributes to custom fields in the Amazon Kendra index. You must first create the index fields using the ``UpdateIndex`` operation before you map SharePoint attributes. For more information, see `Mapping Data Source Fields <https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html>`__ .

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
        - **DocumentTitleFieldName** *(string) --* 

          The Microsoft SharePoint attribute field that contains the title of the document.

          

        
        - **DisableLocalGroups** *(boolean) --* 

          A Boolean value that specifies whether local groups are disabled (``True`` ) or enabled (``False`` ). 

          

        
        - **SslCertificateS3Path** *(dict) --* 

          Information required to find a specific file in an Amazon S3 bucket.

          

        
          - **Bucket** *(string) --* **[REQUIRED]** 

            The name of the S3 bucket that contains the file.

            

          
          - **Key** *(string) --* **[REQUIRED]** 

            The name of the file.

            

          
        
      
      - **DatabaseConfiguration** *(dict) --* 

        Provides information necessary to create a data source connector for a database.

        

      
        - **DatabaseEngineType** *(string) --* **[REQUIRED]** 

          The type of database engine that runs the database.

          

        
        - **ConnectionConfiguration** *(dict) --* **[REQUIRED]** 

          The information necessary to connect to a database.

          

        
          - **DatabaseHost** *(string) --* **[REQUIRED]** 

            The name of the host for the database. Can be either a string (host.subdomain.domain.tld) or an IPv4 or IPv6 address.

            

          
          - **DatabasePort** *(integer) --* **[REQUIRED]** 

            The port that the database uses for connections.

            

          
          - **DatabaseName** *(string) --* **[REQUIRED]** 

            The name of the database containing the document data.

            

          
          - **TableName** *(string) --* **[REQUIRED]** 

            The name of the table that contains the document data.

            

          
          - **SecretArn** *(string) --* **[REQUIRED]** 

            The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. For more information, see `Using a Database Data Source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-database.html>`__ . For more information about Secrets Manager, see `What Is Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ in the *Secrets Manager* user guide.

            

          
        
        - **VpcConfiguration** *(dict) --* 

          Provides information for connecting to an Amazon VPC.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

            

          
            - *(string) --* 

            
        
        
        - **ColumnConfiguration** *(dict) --* **[REQUIRED]** 

          Information about where the index should get the document information from the database.

          

        
          - **DocumentIdColumnName** *(string) --* **[REQUIRED]** 

            The column that provides the document's unique identifier.

            

          
          - **DocumentDataColumnName** *(string) --* **[REQUIRED]** 

            The column that contains the contents of the document.

            

          
          - **DocumentTitleColumnName** *(string) --* 

            The column that contains the title of the document.

            

          
          - **FieldMappings** *(list) --* 

            An array of objects that map database column names to the corresponding fields in an index. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
          - **ChangeDetectingColumns** *(list) --* **[REQUIRED]** 

            One to five columns that indicate when a document in the database has changed.

            

          
            - *(string) --* 

            
        
        
        - **AclConfiguration** *(dict) --* 

          Information about the database column that provides information for user context filtering.

          

        
          - **AllowedGroupsColumnName** *(string) --* **[REQUIRED]** 

            A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the ``UserContext`` field of the ``Query`` operation.

            

          
        
        - **SqlConfiguration** *(dict) --* 

          Provides information about how Amazon Kendra uses quote marks around SQL identifiers when querying a database data source.

          

        
          - **QueryIdentifiersEnclosingOption** *(string) --* 

            Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.

             

            By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.

             

            PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.

             

            For MySQL databases, you must enable the ``ansi_quotes`` option when you set this field to ``DOUBLE_QUOTES`` .

            

          
        
      
      - **SalesforceConfiguration** *(dict) --* 

        Provides configuration information for data sources that connect to a Salesforce site.

        

      
        - **ServerUrl** *(string) --* **[REQUIRED]** 

          The instance URL for the Salesforce site that you want to index.

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Salesforce instance. The secret must contain a JSON structure with the following keys:

           

           
          * authenticationUrl - The OAUTH endpoint that Amazon Kendra connects to get an OAUTH token.  
           
          * consumerKey - The application public key generated when you created your Salesforce application. 
           
          * consumerSecret - The application private key generated when you created your Salesforce application. 
           
          * password - The password associated with the user logging in to the Salesforce instance. 
           
          * securityToken - The token associated with the user account logging in to the Salesforce instance. 
           
          * username - The user name of the user logging in to the Salesforce instance. 
           

          

        
        - **StandardObjectConfigurations** *(list) --* 

          Specifies the Salesforce standard objects that Amazon Kendra indexes.

          

        
          - *(dict) --* 

            Specifies configuration information for indexing a single standard object.

            

          
            - **Name** *(string) --* **[REQUIRED]** 

              The name of the standard object.

              

            
            - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the standard object table that contains the document contents.

              

            
            - **DocumentTitleFieldName** *(string) --* 

              The name of the field in the standard object table that contains the document title.

              

            
            - **FieldMappings** *(list) --* 

              One or more objects that map fields in the standard object to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.

              

            
              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                

              
                - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                  The name of the column or attribute in the data source.

                  

                
                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  

                
                - **IndexFieldName** *(string) --* **[REQUIRED]** 

                  The name of the field in the index.

                  

                
              
          
          
      
        - **KnowledgeArticleConfiguration** *(dict) --* 

          Specifies configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both.

          

        
          - **IncludedStates** *(list) --* **[REQUIRED]** 

            Specifies the document states that should be included when Amazon Kendra indexes knowledge articles. You must specify at least one state.

            

          
            - *(string) --* 

            
        
          - **StandardKnowledgeArticleTypeConfiguration** *(dict) --* 

            Provides configuration information for standard Salesforce knowledge articles.

            

          
            - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

              The name of the field that contains the document data to index.

              

            
            - **DocumentTitleFieldName** *(string) --* 

              The name of the field that contains the document title.

              

            
            - **FieldMappings** *(list) --* 

              One or more objects that map fields in the knowledge article to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.

              

            
              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                

              
                - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                  The name of the column or attribute in the data source.

                  

                
                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  

                
                - **IndexFieldName** *(string) --* **[REQUIRED]** 

                  The name of the field in the index.

                  

                
              
          
          
          - **CustomKnowledgeArticleTypeConfigurations** *(list) --* 

            Provides configuration information for custom Salesforce knowledge articles.

            

          
            - *(dict) --* 

              Provides configuration information for indexing Salesforce custom articles.

              

            
              - **Name** *(string) --* **[REQUIRED]** 

                The name of the configuration.

                

              
              - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the custom knowledge article that contains the document data to index.

                

              
              - **DocumentTitleFieldName** *(string) --* 

                The name of the field in the custom knowledge article that contains the document title.

                

              
              - **FieldMappings** *(list) --* 

                One or more objects that map fields in the custom knowledge article to fields in the Amazon Kendra index.

                

              
                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  

                
                  - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                    The name of the column or attribute in the data source.

                    

                  
                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    

                  
                  - **IndexFieldName** *(string) --* **[REQUIRED]** 

                    The name of the field in the index.

                    

                  
                
            
            
        
        
        - **ChatterFeedConfiguration** *(dict) --* 

          Specifies configuration information for Salesforce chatter feeds.

          

        
          - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

            The name of the column in the Salesforce FeedItem table that contains the content to index. Typically this is the ``Body`` column.

            

          
          - **DocumentTitleFieldName** *(string) --* 

            The name of the column in the Salesforce FeedItem table that contains the title of the document. This is typically the ``Title`` column.

            

          
          - **FieldMappings** *(list) --* 

            Maps fields from a Salesforce chatter feed into Amazon Kendra index fields.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
          - **IncludeFilterTypes** *(list) --* 

            Filters the documents in the feed based on status of the user. When you specify ``ACTIVE_USERS`` only documents from users who have an active account are indexed. When you specify ``STANDARD_USER`` only documents for Salesforce standard users are documented. You can specify both.

            

          
            - *(string) --* 

            
        
        
        - **CrawlAttachments** *(boolean) --* 

          Indicates whether Amazon Kendra should index attachments to Salesforce objects.

          

        
        - **StandardObjectAttachmentConfiguration** *(dict) --* 

          Provides configuration information for processing attachments to Salesforce standard objects. 

          

        
          - **DocumentTitleFieldName** *(string) --* 

            The name of the field used for the document title.

            

          
          - **FieldMappings** *(list) --* 

            One or more objects that map fields in attachments to Amazon Kendra index fields.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
        
        - **IncludeAttachmentFilePatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.

           

          The regex is applied to the name of the attached file.

          

        
          - *(string) --* 

          
      
        - **ExcludeAttachmentFilePatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

           

          The regex is applied to the name of the attached file.

          

        
          - *(string) --* 

          
      
      
      - **OneDriveConfiguration** *(dict) --* 

        Provides configuration for data sources that connect to Microsoft OneDrive.

        

      
        - **TenantDomain** *(string) --* **[REQUIRED]** 

          The Azure Active Directory domain of the organization. 

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the user name and password to connect to OneDrive. The user namd should be the application ID for the OneDrive application, and the password is the application key for the OneDrive application.

          

        
        - **OneDriveUsers** *(dict) --* **[REQUIRED]** 

          A list of user accounts whose documents should be indexed.

          

        
          - **OneDriveUserList** *(list) --* 

            A list of users whose documents should be indexed. Specify the user names in email format, for example, ``username@tenantdomain`` . If you need to index the documents of more than 100 users, use the ``OneDriveUserS3Path`` field to specify the location of a file containing a list of users.

            

          
            - *(string) --* 

            
        
          - **OneDriveUserS3Path** *(dict) --* 

            The S3 bucket location of a file containing a list of users whose documents should be indexed.

            

          
            - **Bucket** *(string) --* **[REQUIRED]** 

              The name of the S3 bucket that contains the file.

              

            
            - **Key** *(string) --* **[REQUIRED]** 

              The name of the file.

              

            
          
        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the pattern are included in the index. Documents that don't match the pattern are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index. 

           

          The exclusion pattern is applied to the file name.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          List of regular expressions applied to documents. Items that match the exclusion pattern are not indexed. If you provide both an inclusion pattern and an exclusion pattern, any item that matches the exclusion pattern isn't indexed. 

           

          The exclusion pattern is applied to the file name.

          

        
          - *(string) --* 

          
      
        - **FieldMappings** *(list) --* 

          A list of ``DataSourceToIndexFieldMapping`` objects that map Microsoft OneDrive fields to custom fields in the Amazon Kendra index. You must first create the index fields before you map OneDrive fields.

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
        - **DisableLocalGroups** *(boolean) --* 

          A Boolean value that specifies whether local groups are disabled (``True`` ) or enabled (``False`` ). 

          

        
      
      - **ServiceNowConfiguration** *(dict) --* 

        Provides configuration for data sources that connect to ServiceNow instances.

        

      
        - **HostUrl** *(string) --* **[REQUIRED]** 

          The ServiceNow instance that the data source connects to. The host endpoint should look like the following: ``{instance}.service-now.com.``  

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of the Secrets Manager secret that contains the user name and password required to connect to the ServiceNow instance.

          

        
        - **ServiceNowBuildVersion** *(string) --* **[REQUIRED]** 

          The identifier of the release that the ServiceNow host is running. If the host is not running the ``LONDON`` release, use ``OTHERS`` .

          

        
        - **KnowledgeArticleConfiguration** *(dict) --* 

          Provides configuration information for crawling knowledge articles in the ServiceNow site.

          

        
          - **CrawlAttachments** *(boolean) --* 

            Indicates whether Amazon Kendra should index attachments to knowledge articles.

            

          
          - **IncludeAttachmentFilePatterns** *(list) --* 

            List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the ``PatternTargetField`` .

            

          
            - *(string) --* 

            
        
          - **ExcludeAttachmentFilePatterns** *(list) --* 

            List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the ``PatternTargetField``  

            

          
            - *(string) --* 

            
        
          - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

            The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.

            

          
          - **DocumentTitleFieldName** *(string) --* 

            The name of the ServiceNow field that is mapped to the index document title field.

            

          
          - **FieldMappings** *(list) --* 

            Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
          - **FilterQuery** *(string) --* 

            A query that selects the knowledge articles to index. The query can return articles from multiple knowledge bases, and the knowledge bases can be public or private.

             

            The query string must be one generated by the ServiceNow console. For more information, see `Specifying documents to index with a query <https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html>`__ . 

            

          
        
        - **ServiceCatalogConfiguration** *(dict) --* 

          Provides configuration information for crawling service catalogs in the ServiceNow site.

          

        
          - **CrawlAttachments** *(boolean) --* 

            Indicates whether Amazon Kendra should crawl attachments to the service catalog items. 

            

          
          - **IncludeAttachmentFilePatterns** *(list) --* 

            A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

             

            The regex is applied to the file name of the attachment.

            

          
            - *(string) --* 

            
        
          - **ExcludeAttachmentFilePatterns** *(list) --* 

            A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

             

            The regex is applied to the file name of the attachment.

            

          
            - *(string) --* 

            
        
          - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

            The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.

            

          
          - **DocumentTitleFieldName** *(string) --* 

            The name of the ServiceNow field that is mapped to the index document title field.

            

          
          - **FieldMappings** *(list) --* 

            Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
        
        - **AuthenticationType** *(string) --* 

          Determines the type of authentication used to connect to the ServiceNow instance. If you choose ``HTTP_BASIC`` , Amazon Kendra is authenticated using the user name and password provided in the AWS Secrets Manager secret in the ``SecretArn`` field. When you choose ``OAUTH2`` , Amazon Kendra is authenticated using the OAuth token and secret provided in the Secrets Manager secret, and the user name and password are used to determine which information Amazon Kendra has access to.

           

          When you use ``OAUTH2`` authentication, you must generate a token and a client secret using the ServiceNow console. For more information, see `Using a ServiceNow data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html>`__ .

          

        
      
      - **ConfluenceConfiguration** *(dict) --* 

        Provides configuration information for connecting to a Confluence data source.

        

      
        - **ServerUrl** *(string) --* **[REQUIRED]** 

          The URL of your Confluence instance. Use the full URL of the server. For example, ``https://server.example.com:port/`` . You can also use an IP address, for example, ``https://192.168.1.113/`` .

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Confluence server. The secret must contain a JSON structure with the following keys:

           

           
          * username - The user name or email address of a user with administrative privileges for the Confluence server. 
           
          * password - The password associated with the user logging in to the Confluence server. 
           

          

        
        - **Version** *(string) --* **[REQUIRED]** 

          Specifies the version of the Confluence installation that you are connecting to.

          

        
        - **SpaceConfiguration** *(dict) --* 

          Specifies configuration information for indexing Confluence spaces.

          

        
          - **CrawlPersonalSpaces** *(boolean) --* 

            Specifies whether Amazon Kendra should index personal spaces. Users can add restrictions to items in personal spaces. If personal spaces are indexed, queries without user context information may return restricted items from a personal space in their results. For more information, see `Filtering on user context <https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html>`__ .

            

          
          - **CrawlArchivedSpaces** *(boolean) --* 

            Specifies whether Amazon Kendra should index archived spaces.

            

          
          - **IncludeSpaces** *(list) --* 

            A list of space keys for Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are indexed. Spaces that aren't in the list aren't indexed. A space in the list must exist. Otherwise, Amazon Kendra logs an error when the data source is synchronized. If a space is in both the ``IncludeSpaces`` and the ``ExcludeSpaces`` list, the space is excluded.

            

          
            - *(string) --* 

            
        
          - **ExcludeSpaces** *(list) --* 

            A list of space keys of Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are not indexed. If a space is in both the ``ExcludeSpaces`` and the ``IncludeSpaces`` list, the space is excluded.

            

          
            - *(string) --* 

            
        
          - **SpaceFieldMappings** *(list) --* 

            Defines how space metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``SpaceFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **PageConfiguration** *(dict) --* 

          Specifies configuration information for indexing Confluence pages.

          

        
          - **PageFieldMappings** *(list) --* 

            Defines how page metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``PageFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **BlogConfiguration** *(dict) --* 

          Specifies configuration information for indexing Confluence blogs.

          

        
          - **BlogFieldMappings** *(list) --* 

            Defines how blog metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``BlogFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a blog field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **AttachmentConfiguration** *(dict) --* 

          Specifies configuration information for indexing attachments to Confluence blogs and pages.

          

        
          - **CrawlAttachments** *(boolean) --* 

            Indicates whether Amazon Kendra indexes attachments to the pages and blogs in the Confluence data source. 

            

          
          - **AttachmentFieldMappings** *(list) --* 

            Defines how attachment metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``AttachentFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                 

                You must first create the index field using the ``UpdateIndex`` operation. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **VpcConfiguration** *(dict) --* 

          Specifies the information for connecting to an Amazon VPC.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

            

          
            - *(string) --* 

            
        
        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to a URL on the Confluence server. An inclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the patterns are included in the index. Items that don't match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, the item isn't included in the index.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to a URL on the Confluence server. An exclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the pattern are excluded from the index. Items that don't match the pattern are included in the index. If a item matches both an exclusion pattern and an inclusion pattern, the item isn't included in the index.

          

        
          - *(string) --* 

          
      
      
      - **GoogleDriveConfiguration** *(dict) --* 

        Provides configuration for data sources that connect to Google Drive. 

        

      
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of a Secrets Managersecret that contains the credentials required to connect to Google Drive. For more information, see `Using a Google Workspace Drive data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html>`__ .

          

        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to path on Google Drive. Items that match the pattern are included in the index from both shared drives and users' My Drives. Items that don't match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, it is excluded from the index.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to the path on Google Drive. Items that match the pattern are excluded from the index from both shared drives and users' My Drives. Items that don't match the pattern are included in the index. If an item matches both an exclusion pattern and an inclusion pattern, it is excluded from the index.

          

        
          - *(string) --* 

          
      
        - **FieldMappings** *(list) --* 

          Defines mapping between a field in the Google Drive and a Amazon Kendra index field.

           

          If you are using the console, you can define index fields when creating the mapping. If you are using the API, you must first create the field using the ``UpdateIndex`` operation.

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
        - **ExcludeMimeTypes** *(list) --* 

          A list of MIME types to exclude from the index. All documents matching the specified MIME type are excluded. 

           

          For a list of MIME types, see `Using a Google Workspace Drive data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html>`__ .

          

        
          - *(string) --* 

          
      
        - **ExcludeUserAccounts** *(list) --* 

          A list of email addresses of the users. Documents owned by these users are excluded from the index. Documents shared with excluded users are indexed unless they are excluded in another way.

          

        
          - *(string) --* 

          
      
        - **ExcludeSharedDrives** *(list) --* 

          A list of identifiers or shared drives to exclude from the index. All files and folders stored on the shared drive are excluded.

          

        
          - *(string) --* 

          
      
      
      - **WebCrawlerConfiguration** *(dict) --* 

        Provides the configuration information required for Amazon Kendra web crawler.

        

      
        - **Urls** *(dict) --* **[REQUIRED]** 

          Specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl.

           

          You can include website subdomains. You can list up to 100 seed URLs and up to three sitemap URLs.

           

           *When selecting websites to index, you must adhere to the `Amazon Acceptable Use Policy <https://aws.amazon.com/aup/>`__ and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.*  

          

        
          - **SeedUrlConfiguration** *(dict) --* 

            Provides the configuration of the seed or starting point URLs of the websites you want to crawl.

             

            You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.

             

            You can list up to 100 seed URLs.

            

          
            - **SeedUrls** *(list) --* **[REQUIRED]** 

              The list of seed or starting point URLs of the websites you want to crawl.

               

              The list can include a maximum of 100 seed URLs.

              

            
              - *(string) --* 

              
          
            - **WebCrawlerMode** *(string) --* 

              You can choose one of the following modes:

               

               
              * ``HOST_ONLY`` – crawl only the website host names. For example, if the seed URL is "abc.example.com", then only URLs with host name "abc.example.com" are crawled. 
               
              * ``SUBDOMAINS`` – crawl the website host names with subdomains. For example, if the seed URL is "abc.example.com", then "a.abc.example.com" and "b.abc.example.com" are also crawled. 
               
              * ``EVERYTHING`` – crawl the website host names with subdomains and other domains that the webpages link to. 
               

               

              The default mode is set to ``HOST_ONLY`` .

              

            
          
          - **SiteMapsConfiguration** *(dict) --* 

            Provides the configuration of the sitemap URLs of the websites you want to crawl.

             

            Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.

            

          
            - **SiteMaps** *(list) --* **[REQUIRED]** 

              The list of sitemap URLs of the websites you want to crawl.

               

              The list can include a maximum of three sitemap URLs.

              

            
              - *(string) --* 

              
          
          
        
        - **CrawlDepth** *(integer) --* 

          Specifies the number of levels in a website that you want to crawl.

           

          The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1.

           

          The default crawl depth is set to 2.

          

        
        - **MaxLinksPerPage** *(integer) --* 

          The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage.

           

          As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance.

           

          The default maximum links per page is 100.

          

        
        - **MaxContentSizePerPageInMegaBytes** *(float) --* 

          The maximum size (in MB) of a webpage or attachment to crawl.

           

          Files larger than this size (in MB) are skipped/not crawled.

           

          The default maximum size of a webpage or attachment is set to 50 MB.

          

        
        - **MaxUrlsPerMinuteCrawlRate** *(integer) --* 

          The maximum number of URLs crawled per website host per minute.

           

          A minimum of one URL is required.

           

          The default maximum number of URLs crawled per website host per minute is 300.

          

        
        - **UrlInclusionPatterns** *(list) --* 

          The regular expression pattern to include certain URLs to crawl.

           

          If there is a regular expression pattern to exclude certain URLs that conflicts with the include pattern, the exclude pattern takes precedence.

          

        
          - *(string) --* 

          
      
        - **UrlExclusionPatterns** *(list) --* 

          The regular expression pattern to exclude certain URLs to crawl.

           

          If there is a regular expression pattern to include certain URLs that conflicts with the exclude pattern, the exclude pattern takes precedence.

          

        
          - *(string) --* 

          
      
        - **ProxyConfiguration** *(dict) --* 

          Provides configuration information required to connect to your internal websites via a web proxy.

           

          You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS.

           

          Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ .

          

        
          - **Host** *(string) --* **[REQUIRED]** 

            The name of the website host you want to connect to via a web proxy server.

             

            For example, the host name of https://a.example.com/page1.html is "a.example.com".

            

          
          - **Port** *(integer) --* **[REQUIRED]** 

            The port number of the website host you want to connect to via a web proxy server. 

             

            For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.

            

          
          - **Credentials** *(string) --* 

            Your secret ARN, which you can create in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__  

             

            The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.

            

          
        
        - **AuthenticationConfiguration** *(dict) --* 

          Provides configuration information required to connect to websites using authentication.

           

          You can connect to websites using basic authentication of user name and password.

           

          You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. You use a secret in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ to store your authentication credentials.

          

        
          - **BasicAuthentication** *(list) --* 

            The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials.

             

            The list includes the name and port number of the website host.

            

          
            - *(dict) --* 

              Provides the configuration information to connect to websites that require basic user authentication.

              

            
              - **Host** *(string) --* **[REQUIRED]** 

                The name of the website host you want to connect to using authentication credentials.

                 

                For example, the host name of https://a.example.com/page1.html is "a.example.com".

                

              
              - **Port** *(integer) --* **[REQUIRED]** 

                The port number of the website host you want to connect to using authentication credentials.

                 

                For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.

                

              
              - **Credentials** *(string) --* **[REQUIRED]** 

                Your secret ARN, which you can create in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__  

                 

                You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.

                

              
            
        
        
      
      - **WorkDocsConfiguration** *(dict) --* 

        Provides the configuration information to connect to WorkDocs as your data source.

        

      
        - **OrganizationId** *(string) --* **[REQUIRED]** 

          The identifier of the directory corresponding to your Amazon WorkDocs site repository.

           

          You can find the organization ID in the `AWS Directory Service <https://console.aws.amazon.com/directoryservicev2/>`__ by going to **Active Directory** , then **Directories** . Your Amazon WorkDocs site directory has an ID, which is the organization ID. You can also set up a new Amazon WorkDocs directory in the AWS Directory Service console and enable a Amazon WorkDocs site for the directory in the Amazon WorkDocs console.

          

        
        - **CrawlComments** *(boolean) --* 

           ``TRUE`` to include comments on documents in your index. Including comments in your index means each comment is a document that can be searched on.

           

          The default is set to ``FALSE`` .

          

        
        - **UseChangeLog** *(boolean) --* 

           ``TRUE`` to use the change logs to update documents in your index instead of scanning all documents.

           

          If you are syncing your Amazon WorkDocs data source with your index for the first time, all documents are scanned. After your first sync, you can use the change logs to update your documents in your index for future syncs.

           

          The default is set to ``FALSE`` .

          

        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns to include certain files in your Amazon WorkDocs site repository. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns to exclude certain files in your Amazon WorkDocs site repository. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.

          

        
          - *(string) --* 

          
      
        - **FieldMappings** *(list) --* 

          A list of ``DataSourceToIndexFieldMapping`` objects that map Amazon WorkDocs field names to custom index field names in Amazon Kendra. You must first create the custom index fields using the ``UpdateIndex`` operation before you map to Amazon WorkDocs fields. For more information, see `Mapping Data Source Fields <https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html>`__ . The Amazon WorkDocs data source field names need to exist in your Amazon WorkDocs custom metadata.

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
      
    
    :type Description: string
    :param Description: 

      A description for the data source.

      

    
    :type Schedule: string
    :param Schedule: 

      Sets the frequency that Amazon Kendra will check the documents in your repository and update the index. If you don't set a schedule Amazon Kendra will not periodically update the index. You can call the ``StartDataSourceSyncJob`` operation to update the index.

       

      You can't specify the ``Schedule`` parameter when the ``Type`` parameter is set to ``CUSTOM`` . If you do, you receive a ``ValidationException`` exception.

      

    
    :type RoleArn: string
    :param RoleArn: 

      The Amazon Resource Name (ARN) of a role with permission to access the data source. For more information, see `IAM Roles for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html>`__ .

       

      You can't specify the ``RoleArn`` parameter when the ``Type`` parameter is set to ``CUSTOM`` . If you do, you receive a ``ValidationException`` exception.

       

      The ``RoleArn`` parameter is required for all other data sources.

      

    
    :type Tags: list
    :param Tags: 

      A list of key-value pairs that identify the data source. You can use the tags to identify and organize your resources and to control access to resources.

      

    
      - *(dict) --* 

        A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value associated with the tag. The value may be an empty string but it can't be null.

          

        
      
  
    :type ClientToken: string
    :param ClientToken: 

      A token that you provide to identify the request to create a data source. Multiple calls to the ``CreateDataSource`` operation with the same client token will create only one data source.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          A unique identifier for the data source.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceAlreadyExistException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: create_faq(**kwargs)

    

    Creates an new set of frequently asked question (FAQ) questions and answers.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/CreateFaq>`_    


    **Request Syntax** 
    ::

      response = client.create_faq(
          IndexId='string',
          Name='string',
          Description='string',
          S3Path={
              'Bucket': 'string',
              'Key': 'string'
          },
          RoleArn='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          FileFormat='CSV'|'CSV_WITH_HEADER'|'JSON',
          ClientToken='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the FAQ.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name that should be associated with the FAQ.

      

    
    :type Description: string
    :param Description: 

      A description of the FAQ.

      

    
    :type S3Path: dict
    :param S3Path: **[REQUIRED]** 

      The S3 location of the FAQ input data.

      

    
      - **Bucket** *(string) --* **[REQUIRED]** 

        The name of the S3 bucket that contains the file.

        

      
      - **Key** *(string) --* **[REQUIRED]** 

        The name of the file.

        

      
    
    :type RoleArn: string
    :param RoleArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see `IAM Roles for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html>`__ .

      

    
    :type Tags: list
    :param Tags: 

      A list of key-value pairs that identify the FAQ. You can use the tags to identify and organize your resources and to control access to resources.

      

    
      - *(dict) --* 

        A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value associated with the tag. The value may be an empty string but it can't be null.

          

        
      
  
    :type FileFormat: string
    :param FileFormat: 

      The format of the input file. You can choose between a basic CSV format, a CSV format that includes customs attributes in a header, and a JSON format that includes custom attributes.

       

      The format must match the format of the file stored in the S3 bucket identified in the ``S3Path`` parameter.

       

      For more information, see `Adding questions and answers <https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html>`__ .

      

    
    :type ClientToken: string
    :param ClientToken: 

      A token that you provide to identify the request to create a FAQ. Multiple calls to the ``CreateFaqRequest`` operation with the same client token will create only one FAQ. 

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The unique identifier of the FAQ.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: create_index(**kwargs)

    

    Creates a new Amazon Kendra index. Index creation is an asynchronous operation. To determine if index creation has completed, check the ``Status`` field returned from a call to ``DescribeIndex`` . The ``Status`` field is set to ``ACTIVE`` when the index is ready to use.

     

    Once the index is active you can index your documents using the ``BatchPutDocument`` operation or using one of the supported data sources. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/CreateIndex>`_    


    **Request Syntax** 
    ::

      response = client.create_index(
          Name='string',
          Edition='DEVELOPER_EDITION'|'ENTERPRISE_EDITION',
          RoleArn='string',
          ServerSideEncryptionConfiguration={
              'KmsKeyId': 'string'
          },
          Description='string',
          ClientToken='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          UserTokenConfigurations=[
              {
                  'JwtTokenTypeConfiguration': {
                      'KeyLocation': 'URL'|'SECRET_MANAGER',
                      'URL': 'string',
                      'SecretManagerArn': 'string',
                      'UserNameAttributeField': 'string',
                      'GroupAttributeField': 'string',
                      'Issuer': 'string',
                      'ClaimRegex': 'string'
                  },
                  'JsonTokenTypeConfiguration': {
                      'UserNameAttributeField': 'string',
                      'GroupAttributeField': 'string'
                  }
              },
          ],
          UserContextPolicy='ATTRIBUTE_FILTER'|'USER_TOKEN'
      )
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name for the new index.

      

    
    :type Edition: string
    :param Edition: 

      The Amazon Kendra edition to use for the index. Choose ``DEVELOPER_EDITION`` for indexes intended for development, testing, or proof of concept. Use ``ENTERPRISE_EDITION`` for your production databases. Once you set the edition for an index, it can't be changed.

       

      The ``Edition`` parameter is optional. If you don't supply a value, the default is ``ENTERPRISE_EDITION`` .

       

      For more information on quota limits for enterprise and developer editions, see `Quotas <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

      

    
    :type RoleArn: string
    :param RoleArn: **[REQUIRED]** 

      An Identity and Access Management(IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role used when you use the ``BatchPutDocument`` operation to index documents from an Amazon S3 bucket.

      

    
    :type ServerSideEncryptionConfiguration: dict
    :param ServerSideEncryptionConfiguration: 

      The identifier of the KMScustomer managed key (CMK) to use to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.

      

    
      - **KmsKeyId** *(string) --* 

        The identifier of the KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.

        

      
    
    :type Description: string
    :param Description: 

      A description for the index.

      

    
    :type ClientToken: string
    :param ClientToken: 

      A token that you provide to identify the request to create an index. Multiple calls to the ``CreateIndex`` operation with the same client token will create only one index.

      This field is autopopulated if not provided.

    
    :type Tags: list
    :param Tags: 

      A list of key-value pairs that identify the index. You can use the tags to identify and organize your resources and to control access to resources.

      

    
      - *(dict) --* 

        A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value associated with the tag. The value may be an empty string but it can't be null.

          

        
      
  
    :type UserTokenConfigurations: list
    :param UserTokenConfigurations: 

      The user token configuration.

      

    
      - *(dict) --* 

        Provides configuration information for a token configuration.

        

      
        - **JwtTokenTypeConfiguration** *(dict) --* 

          Information about the JWT token type configuration.

          

        
          - **KeyLocation** *(string) --* **[REQUIRED]** 

            The location of the key.

            

          
          - **URL** *(string) --* 

            The signing key URL.

            

          
          - **SecretManagerArn** *(string) --* 

            The Amazon Resource Name (arn) of the secret.

            

          
          - **UserNameAttributeField** *(string) --* 

            The user name attribute field.

            

          
          - **GroupAttributeField** *(string) --* 

            The group attribute field.

            

          
          - **Issuer** *(string) --* 

            The issuer of the token.

            

          
          - **ClaimRegex** *(string) --* 

            The regular expression that identifies the claim.

            

          
        
        - **JsonTokenTypeConfiguration** *(dict) --* 

          Information about the JSON token type configuration.

          

        
          - **UserNameAttributeField** *(string) --* **[REQUIRED]** 

            The user name attribute field.

            

          
          - **GroupAttributeField** *(string) --* **[REQUIRED]** 

            The group attribute field.

            

          
        
      
  
    :type UserContextPolicy: string
    :param UserContextPolicy: 

      The user context policy.

        ATTRIBUTE_FILTER  

      All indexed content is searchable and displayable for all users. If there is an access control list, it is ignored. You can filter on user and group attributes. 

        USER_TOKEN  

      Enables SSO and token-based user access control. All documents with no access control and all documents accessible to the user will be searchable and displayable. 

        

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The unique identifier of the index. Use this identifier when you query an index, set up a data source, or index a document.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceAlreadyExistException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: create_query_suggestions_block_list(**kwargs)

    

    Creates a block list to exlcude certain queries from suggestions.

     

    Any query that contains words or phrases specified in the block list is blocked or filtered out from being shown as a suggestion.

     

    You need to provide the file location of your block list text file in your S3 bucket. In your text file, enter each block word or phrase on a separate line.

     

    For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/CreateQuerySuggestionsBlockList>`_    


    **Request Syntax** 
    ::

      response = client.create_query_suggestions_block_list(
          IndexId='string',
          Name='string',
          Description='string',
          SourceS3Path={
              'Bucket': 'string',
              'Key': 'string'
          },
          ClientToken='string',
          RoleArn='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to create a query suggestions block list for.

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      A user friendly name for the block list.

       

      For example, the block list named 'offensive-words' includes all offensive words that could appear in user queries and need to be blocked from suggestions.

      

    
    :type Description: string
    :param Description: 

      A user-friendly description for the block list.

       

      For example, the description "List of all offensive words that can appear in user queries and need to be blocked from suggestions."

      

    
    :type SourceS3Path: dict
    :param SourceS3Path: **[REQUIRED]** 

      The S3 path to your block list text file in your S3 bucket.

       

      Each block word or phrase should be on a separate line in a text file.

       

      For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

      

    
      - **Bucket** *(string) --* **[REQUIRED]** 

        The name of the S3 bucket that contains the file.

        

      
      - **Key** *(string) --* **[REQUIRED]** 

        The name of the file.

        

      
    
    :type ClientToken: string
    :param ClientToken: 

      A token that you provide to identify the request to create a query suggestions block list.

      This field is autopopulated if not provided.

    
    :type RoleArn: string
    :param RoleArn: **[REQUIRED]** 

      The IAM (Identity and Access Management) role used by Amazon Kendra to access the block list text file in your S3 bucket.

       

      You need permissions to the role ARN (Amazon Resource Name). The role needs S3 read permissions to your file in S3 and needs to give STS (Security Token Service) assume role permissions to Amazon Kendra.

      

    
    :type Tags: list
    :param Tags: 

      A tag that you can assign to a block list that categorizes the block list.

      

    
      - *(dict) --* 

        A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value associated with the tag. The value may be an empty string but it can't be null.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The unique identifier of the created block list.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: create_thesaurus(**kwargs)

    

    Creates a thesaurus for an index. The thesaurus contains a list of synonyms in Solr format.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/CreateThesaurus>`_    


    **Request Syntax** 
    ::

      response = client.create_thesaurus(
          IndexId='string',
          Name='string',
          Description='string',
          RoleArn='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          SourceS3Path={
              'Bucket': 'string',
              'Key': 'string'
          },
          ClientToken='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The unique identifier of the index for the new thesaurus. 

      

    
    :type Name: string
    :param Name: **[REQUIRED]** 

      The name for the new thesaurus.

      

    
    :type Description: string
    :param Description: 

      The description for the new thesaurus.

      

    
    :type RoleArn: string
    :param RoleArn: **[REQUIRED]** 

      An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access thesaurus file specified in ``SourceS3Path`` . 

      

    
    :type Tags: list
    :param Tags: 

      A list of key-value pairs that identify the thesaurus. You can use the tags to identify and organize your resources and to control access to resources. 

      

    
      - *(dict) --* 

        A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value associated with the tag. The value may be an empty string but it can't be null.

          

        
      
  
    :type SourceS3Path: dict
    :param SourceS3Path: **[REQUIRED]** 

      The thesaurus file Amazon S3 source path. 

      

    
      - **Bucket** *(string) --* **[REQUIRED]** 

        The name of the S3 bucket that contains the file.

        

      
      - **Key** *(string) --* **[REQUIRED]** 

        The name of the file.

        

      
    
    :type ClientToken: string
    :param ClientToken: 

      A token that you provide to identify the request to create a thesaurus. Multiple calls to the ``CreateThesaurus`` operation with the same client token will create only one index. 

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The unique identifier of the thesaurus. 

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: delete_data_source(**kwargs)

    

    Deletes an Amazon Kendra data source. An exception is not thrown if the data source is already being deleted. While the data source is being deleted, the ``Status`` field returned by a call to the ``DescribeDataSource`` operation is set to ``DELETING`` . For more information, see `Deleting Data Sources <https://docs.aws.amazon.com/kendra/latest/dg/delete-data-source.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DeleteDataSource>`_    


    **Request Syntax** 
    ::

      response = client.delete_data_source(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of the data source to delete.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The unique identifier of the index associated with the data source.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: delete_faq(**kwargs)

    

    Removes an FAQ from an index.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DeleteFaq>`_    


    **Request Syntax** 
    ::

      response = client.delete_faq(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the FAQ to remove.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The index to remove the FAQ from.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: delete_index(**kwargs)

    

    Deletes an existing Amazon Kendra index. An exception is not thrown if the index is already being deleted. While the index is being deleted, the ``Status`` field returned by a call to the ``DescribeIndex`` operation is set to ``DELETING`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DeleteIndex>`_    


    **Request Syntax** 
    ::

      response = client.delete_index(
          Id='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the index to delete.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: delete_principal_mapping(**kwargs)

    

    Deletes a group so that all users and sub groups that belong to the group can no longer access documents only available to that group.

     

    For example, after deleting the group "Summer Interns", all interns who belonged to that group no longer see intern-only documents in their search results.

     

    If you want to delete or replace users or sub groups of a group, you need to use the ``PutPrincipalMapping`` operation. For example, if a user in the group "Engineering" leaves the engineering team and another user takes their place, you provide an updated list of users or sub groups that belong to the "Engineering" group when calling ``PutPrincipalMapping`` . You can update your internal list of users or sub groups and input this list when calling ``PutPrincipalMapping`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DeletePrincipalMapping>`_    


    **Request Syntax** 
    ::

      response = client.delete_principal_mapping(
          IndexId='string',
          DataSourceId='string',
          GroupId='string',
          OrderingId=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to delete a group from.

      

    
    :type DataSourceId: string
    :param DataSourceId: 

      The identifier of the data source you want to delete a group from.

       

      This is useful if a group is tied to multiple data sources and you want to delete a group from accessing documents in a certain data source. For example, the groups "Research", "Engineering", and "Sales and Marketing" are all tied to the company's documents stored in the data sources Confluence and Salesforce. You want to delete "Research" and "Engineering" groups from Salesforce, so that these groups cannot access customer-related documents stored in Salesforce. Only "Sales and Marketing" should access documents in the Salesforce data source.

      

    
    :type GroupId: string
    :param GroupId: **[REQUIRED]** 

      The identifier of the group you want to delete.

      

    
    :type OrderingId: integer
    :param OrderingId: 

      The timestamp identifier you specify to ensure Amazon Kendra does not override the latest ``DELETE`` action with previous actions. The highest number ID, which is the ordering ID, is the latest action you want to process and apply on top of other actions with lower number IDs. This prevents previous actions with lower number IDs from possibly overriding the latest action.

       

      The ordering ID can be the UNIX time of the last update you made to a group members list. You would then provide this list when calling ``PutPrincipalMapping`` . This ensures your ``DELETE`` action for that updated group with the latest members list doesn't get overwritten by earlier ``DELETE`` actions for the same group which are yet to be processed.

       

      The default ordering ID is the current UNIX time in milliseconds that the action was received by Amazon Kendra. 

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: delete_query_suggestions_block_list(**kwargs)

    

    Deletes a block list used for query suggestions for an index.

     

    A deleted block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to add back the queries that were previously blocked.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DeleteQuerySuggestionsBlockList>`_    


    **Request Syntax** 
    ::

      response = client.delete_query_suggestions_block_list(
          IndexId='string',
          Id='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the you want to delete a block list from.

      

    
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of the block list that needs to be deleted.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: delete_thesaurus(**kwargs)

    

    Deletes an existing Amazon Kendra thesaurus. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DeleteThesaurus>`_    


    **Request Syntax** 
    ::

      response = client.delete_thesaurus(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the thesaurus to delete.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index associated with the thesaurus to delete.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_data_source(**kwargs)

    

    Gets information about a Amazon Kendra data source.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribeDataSource>`_    


    **Request Syntax** 
    ::

      response = client.describe_data_source(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of the data source to describe.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the data source.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string',
            'IndexId': 'string',
            'Name': 'string',
            'Type': 'S3'|'SHAREPOINT'|'DATABASE'|'SALESFORCE'|'ONEDRIVE'|'SERVICENOW'|'CUSTOM'|'CONFLUENCE'|'GOOGLEDRIVE'|'WEBCRAWLER'|'WORKDOCS',
            'Configuration': {
                'S3Configuration': {
                    'BucketName': 'string',
                    'InclusionPrefixes': [
                        'string',
                    ],
                    'InclusionPatterns': [
                        'string',
                    ],
                    'ExclusionPatterns': [
                        'string',
                    ],
                    'DocumentsMetadataConfiguration': {
                        'S3Prefix': 'string'
                    },
                    'AccessControlListConfiguration': {
                        'KeyPath': 'string'
                    }
                },
                'SharePointConfiguration': {
                    'SharePointVersion': 'SHAREPOINT_2013'|'SHAREPOINT_2016'|'SHAREPOINT_ONLINE',
                    'Urls': [
                        'string',
                    ],
                    'SecretArn': 'string',
                    'CrawlAttachments': True|False,
                    'UseChangeLog': True|False,
                    'InclusionPatterns': [
                        'string',
                    ],
                    'ExclusionPatterns': [
                        'string',
                    ],
                    'VpcConfiguration': {
                        'SubnetIds': [
                            'string',
                        ],
                        'SecurityGroupIds': [
                            'string',
                        ]
                    },
                    'FieldMappings': [
                        {
                            'DataSourceFieldName': 'string',
                            'DateFieldFormat': 'string',
                            'IndexFieldName': 'string'
                        },
                    ],
                    'DocumentTitleFieldName': 'string',
                    'DisableLocalGroups': True|False,
                    'SslCertificateS3Path': {
                        'Bucket': 'string',
                        'Key': 'string'
                    }
                },
                'DatabaseConfiguration': {
                    'DatabaseEngineType': 'RDS_AURORA_MYSQL'|'RDS_AURORA_POSTGRESQL'|'RDS_MYSQL'|'RDS_POSTGRESQL',
                    'ConnectionConfiguration': {
                        'DatabaseHost': 'string',
                        'DatabasePort': 123,
                        'DatabaseName': 'string',
                        'TableName': 'string',
                        'SecretArn': 'string'
                    },
                    'VpcConfiguration': {
                        'SubnetIds': [
                            'string',
                        ],
                        'SecurityGroupIds': [
                            'string',
                        ]
                    },
                    'ColumnConfiguration': {
                        'DocumentIdColumnName': 'string',
                        'DocumentDataColumnName': 'string',
                        'DocumentTitleColumnName': 'string',
                        'FieldMappings': [
                            {
                                'DataSourceFieldName': 'string',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ],
                        'ChangeDetectingColumns': [
                            'string',
                        ]
                    },
                    'AclConfiguration': {
                        'AllowedGroupsColumnName': 'string'
                    },
                    'SqlConfiguration': {
                        'QueryIdentifiersEnclosingOption': 'DOUBLE_QUOTES'|'NONE'
                    }
                },
                'SalesforceConfiguration': {
                    'ServerUrl': 'string',
                    'SecretArn': 'string',
                    'StandardObjectConfigurations': [
                        {
                            'Name': 'ACCOUNT'|'CAMPAIGN'|'CASE'|'CONTACT'|'CONTRACT'|'DOCUMENT'|'GROUP'|'IDEA'|'LEAD'|'OPPORTUNITY'|'PARTNER'|'PRICEBOOK'|'PRODUCT'|'PROFILE'|'SOLUTION'|'TASK'|'USER',
                            'DocumentDataFieldName': 'string',
                            'DocumentTitleFieldName': 'string',
                            'FieldMappings': [
                                {
                                    'DataSourceFieldName': 'string',
                                    'DateFieldFormat': 'string',
                                    'IndexFieldName': 'string'
                                },
                            ]
                        },
                    ],
                    'KnowledgeArticleConfiguration': {
                        'IncludedStates': [
                            'DRAFT'|'PUBLISHED'|'ARCHIVED',
                        ],
                        'StandardKnowledgeArticleTypeConfiguration': {
                            'DocumentDataFieldName': 'string',
                            'DocumentTitleFieldName': 'string',
                            'FieldMappings': [
                                {
                                    'DataSourceFieldName': 'string',
                                    'DateFieldFormat': 'string',
                                    'IndexFieldName': 'string'
                                },
                            ]
                        },
                        'CustomKnowledgeArticleTypeConfigurations': [
                            {
                                'Name': 'string',
                                'DocumentDataFieldName': 'string',
                                'DocumentTitleFieldName': 'string',
                                'FieldMappings': [
                                    {
                                        'DataSourceFieldName': 'string',
                                        'DateFieldFormat': 'string',
                                        'IndexFieldName': 'string'
                                    },
                                ]
                            },
                        ]
                    },
                    'ChatterFeedConfiguration': {
                        'DocumentDataFieldName': 'string',
                        'DocumentTitleFieldName': 'string',
                        'FieldMappings': [
                            {
                                'DataSourceFieldName': 'string',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ],
                        'IncludeFilterTypes': [
                            'ACTIVE_USER'|'STANDARD_USER',
                        ]
                    },
                    'CrawlAttachments': True|False,
                    'StandardObjectAttachmentConfiguration': {
                        'DocumentTitleFieldName': 'string',
                        'FieldMappings': [
                            {
                                'DataSourceFieldName': 'string',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ]
                    },
                    'IncludeAttachmentFilePatterns': [
                        'string',
                    ],
                    'ExcludeAttachmentFilePatterns': [
                        'string',
                    ]
                },
                'OneDriveConfiguration': {
                    'TenantDomain': 'string',
                    'SecretArn': 'string',
                    'OneDriveUsers': {
                        'OneDriveUserList': [
                            'string',
                        ],
                        'OneDriveUserS3Path': {
                            'Bucket': 'string',
                            'Key': 'string'
                        }
                    },
                    'InclusionPatterns': [
                        'string',
                    ],
                    'ExclusionPatterns': [
                        'string',
                    ],
                    'FieldMappings': [
                        {
                            'DataSourceFieldName': 'string',
                            'DateFieldFormat': 'string',
                            'IndexFieldName': 'string'
                        },
                    ],
                    'DisableLocalGroups': True|False
                },
                'ServiceNowConfiguration': {
                    'HostUrl': 'string',
                    'SecretArn': 'string',
                    'ServiceNowBuildVersion': 'LONDON'|'OTHERS',
                    'KnowledgeArticleConfiguration': {
                        'CrawlAttachments': True|False,
                        'IncludeAttachmentFilePatterns': [
                            'string',
                        ],
                        'ExcludeAttachmentFilePatterns': [
                            'string',
                        ],
                        'DocumentDataFieldName': 'string',
                        'DocumentTitleFieldName': 'string',
                        'FieldMappings': [
                            {
                                'DataSourceFieldName': 'string',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ],
                        'FilterQuery': 'string'
                    },
                    'ServiceCatalogConfiguration': {
                        'CrawlAttachments': True|False,
                        'IncludeAttachmentFilePatterns': [
                            'string',
                        ],
                        'ExcludeAttachmentFilePatterns': [
                            'string',
                        ],
                        'DocumentDataFieldName': 'string',
                        'DocumentTitleFieldName': 'string',
                        'FieldMappings': [
                            {
                                'DataSourceFieldName': 'string',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ]
                    },
                    'AuthenticationType': 'HTTP_BASIC'|'OAUTH2'
                },
                'ConfluenceConfiguration': {
                    'ServerUrl': 'string',
                    'SecretArn': 'string',
                    'Version': 'CLOUD'|'SERVER',
                    'SpaceConfiguration': {
                        'CrawlPersonalSpaces': True|False,
                        'CrawlArchivedSpaces': True|False,
                        'IncludeSpaces': [
                            'string',
                        ],
                        'ExcludeSpaces': [
                            'string',
                        ],
                        'SpaceFieldMappings': [
                            {
                                'DataSourceFieldName': 'DISPLAY_URL'|'ITEM_TYPE'|'SPACE_KEY'|'URL',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ]
                    },
                    'PageConfiguration': {
                        'PageFieldMappings': [
                            {
                                'DataSourceFieldName': 'AUTHOR'|'CONTENT_STATUS'|'CREATED_DATE'|'DISPLAY_URL'|'ITEM_TYPE'|'LABELS'|'MODIFIED_DATE'|'PARENT_ID'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ]
                    },
                    'BlogConfiguration': {
                        'BlogFieldMappings': [
                            {
                                'DataSourceFieldName': 'AUTHOR'|'DISPLAY_URL'|'ITEM_TYPE'|'LABELS'|'PUBLISH_DATE'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ]
                    },
                    'AttachmentConfiguration': {
                        'CrawlAttachments': True|False,
                        'AttachmentFieldMappings': [
                            {
                                'DataSourceFieldName': 'AUTHOR'|'CONTENT_TYPE'|'CREATED_DATE'|'DISPLAY_URL'|'FILE_SIZE'|'ITEM_TYPE'|'PARENT_ID'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                                'DateFieldFormat': 'string',
                                'IndexFieldName': 'string'
                            },
                        ]
                    },
                    'VpcConfiguration': {
                        'SubnetIds': [
                            'string',
                        ],
                        'SecurityGroupIds': [
                            'string',
                        ]
                    },
                    'InclusionPatterns': [
                        'string',
                    ],
                    'ExclusionPatterns': [
                        'string',
                    ]
                },
                'GoogleDriveConfiguration': {
                    'SecretArn': 'string',
                    'InclusionPatterns': [
                        'string',
                    ],
                    'ExclusionPatterns': [
                        'string',
                    ],
                    'FieldMappings': [
                        {
                            'DataSourceFieldName': 'string',
                            'DateFieldFormat': 'string',
                            'IndexFieldName': 'string'
                        },
                    ],
                    'ExcludeMimeTypes': [
                        'string',
                    ],
                    'ExcludeUserAccounts': [
                        'string',
                    ],
                    'ExcludeSharedDrives': [
                        'string',
                    ]
                },
                'WebCrawlerConfiguration': {
                    'Urls': {
                        'SeedUrlConfiguration': {
                            'SeedUrls': [
                                'string',
                            ],
                            'WebCrawlerMode': 'HOST_ONLY'|'SUBDOMAINS'|'EVERYTHING'
                        },
                        'SiteMapsConfiguration': {
                            'SiteMaps': [
                                'string',
                            ]
                        }
                    },
                    'CrawlDepth': 123,
                    'MaxLinksPerPage': 123,
                    'MaxContentSizePerPageInMegaBytes': ...,
                    'MaxUrlsPerMinuteCrawlRate': 123,
                    'UrlInclusionPatterns': [
                        'string',
                    ],
                    'UrlExclusionPatterns': [
                        'string',
                    ],
                    'ProxyConfiguration': {
                        'Host': 'string',
                        'Port': 123,
                        'Credentials': 'string'
                    },
                    'AuthenticationConfiguration': {
                        'BasicAuthentication': [
                            {
                                'Host': 'string',
                                'Port': 123,
                                'Credentials': 'string'
                            },
                        ]
                    }
                },
                'WorkDocsConfiguration': {
                    'OrganizationId': 'string',
                    'CrawlComments': True|False,
                    'UseChangeLog': True|False,
                    'InclusionPatterns': [
                        'string',
                    ],
                    'ExclusionPatterns': [
                        'string',
                    ],
                    'FieldMappings': [
                        {
                            'DataSourceFieldName': 'string',
                            'DateFieldFormat': 'string',
                            'IndexFieldName': 'string'
                        },
                    ]
                }
            },
            'CreatedAt': datetime(2015, 1, 1),
            'UpdatedAt': datetime(2015, 1, 1),
            'Description': 'string',
            'Status': 'CREATING'|'DELETING'|'FAILED'|'UPDATING'|'ACTIVE',
            'Schedule': 'string',
            'RoleArn': 'string',
            'ErrorMessage': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The identifier of the data source.

          
        

        - **IndexId** *(string) --* 

          The identifier of the index that contains the data source.

          
        

        - **Name** *(string) --* 

          The name that you gave the data source when it was created.

          
        

        - **Type** *(string) --* 

          The type of the data source.

          
        

        - **Configuration** *(dict) --* 

          Information that describes where the data source is located and how the data source is configured. The specific information in the description depends on the data source provider.

          
          

          - **S3Configuration** *(dict) --* 

            Provides information to create a data source connector for a document repository in an Amazon S3 bucket.

            
            

            - **BucketName** *(string) --* 

              The name of the bucket that contains the documents.

              
            

            - **InclusionPrefixes** *(list) --* 

              A list of S3 prefixes for the documents that should be included in the index.

              
              

              - *(string) --* 
          
            

            - **InclusionPatterns** *(list) --* 

              A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed.

               

              Some `examples <https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters>`__ are:

               

               
              * **.txt* will include all text files in a directory (files with the extension .txt). 
               
              * ***/*.txt* will include all text files in a directory and its subdirectories. 
               
              * **tax** will include all files in a directory that contain 'tax' in the file name, such as 'tax', 'taxes', 'income_tax'. 
               

              
              

              - *(string) --* 
          
            

            - **ExclusionPatterns** *(list) --* 

              A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed.

               

              Some `examples <https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters>`__ are:

               

               
              * **.png , *.jpg* will exclude all PNG and JPEG image files in a directory (files with the extensions .png and .jpg). 
               
              * **internal** will exclude all files in a directory that contain 'internal' in the file name, such as 'internal', 'internal_only', 'company_internal'. 
               
              * ***/*internal** will exclude all internal-related files in a directory and its subdirectories. 
               

              
              

              - *(string) --* 
          
            

            - **DocumentsMetadataConfiguration** *(dict) --* 

              Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.

              
              

              - **S3Prefix** *(string) --* 

                A prefix used to filter metadata configuration files in the Amazon Web Services S3 bucket. The S3 bucket might contain multiple metadata files. Use ``S3Prefix`` to include only the desired metadata files.

                
          
            

            - **AccessControlListConfiguration** *(dict) --* 

              Provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see `Access control for S3 data sources <https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html>`__ .

              
              

              - **KeyPath** *(string) --* 

                Path to the Amazon Web Services S3 bucket that contains the ACL files.

                
          
        
          

          - **SharePointConfiguration** *(dict) --* 

            Provides information necessary to create a data source connector for a Microsoft SharePoint site.

            
            

            - **SharePointVersion** *(string) --* 

              The version of Microsoft SharePoint that you are using as a data source.

              
            

            - **Urls** *(list) --* 

              The URLs of the Microsoft SharePoint site that contains the documents that should be indexed.

              
              

              - *(string) --* 
          
            

            - **SecretArn** *(string) --* 

              The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. If you use SharePoint Server, you also need to provide the sever domain name as part of the credentials. For more information, see `Using a Microsoft SharePoint Data Source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-sharepoint.html>`__ . For more information about Secrets Manager, see `What Is Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ in the *Secrets Manager* user guide.

              
            

            - **CrawlAttachments** *(boolean) --* 

               ``TRUE`` to include attachments to documents stored in your Microsoft SharePoint site in the index; otherwise, ``FALSE`` .

              
            

            - **UseChangeLog** *(boolean) --* 

              Set to ``TRUE`` to use the Microsoft SharePoint change log to determine the documents that need to be updated in the index. Depending on the size of the SharePoint change log, it may take longer for Amazon Kendra to use the change log than it takes it to determine the changed documents using the Amazon Kendra document crawler.

              
            

            - **InclusionPatterns** *(list) --* 

              A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.

               

              The regex is applied to the display URL of the SharePoint document.

              
              

              - *(string) --* 
          
            

            - **ExclusionPatterns** *(list) --* 

              A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

               

              The regex is applied to the display URL of the SharePoint document.

              
              

              - *(string) --* 
          
            

            - **VpcConfiguration** *(dict) --* 

              Provides information for connecting to an Amazon VPC.

              
              

              - **SubnetIds** *(list) --* 

                A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

                
                

                - *(string) --* 
            
              

              - **SecurityGroupIds** *(list) --* 

                A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

                
                

                - *(string) --* 
            
          
            

            - **FieldMappings** *(list) --* 

              A list of ``DataSourceToIndexFieldMapping`` objects that map Microsoft SharePoint attributes to custom fields in the Amazon Kendra index. You must first create the index fields using the ``UpdateIndex`` operation before you map SharePoint attributes. For more information, see `Mapping Data Source Fields <https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html>`__ .

              
              

              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                
                

                - **DataSourceFieldName** *(string) --* 

                  The name of the column or attribute in the data source.

                  
                

                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  
                

                - **IndexFieldName** *(string) --* 

                  The name of the field in the index.

                  
            
          
            

            - **DocumentTitleFieldName** *(string) --* 

              The Microsoft SharePoint attribute field that contains the title of the document.

              
            

            - **DisableLocalGroups** *(boolean) --* 

              A Boolean value that specifies whether local groups are disabled (``True`` ) or enabled (``False`` ). 

              
            

            - **SslCertificateS3Path** *(dict) --* 

              Information required to find a specific file in an Amazon S3 bucket.

              
              

              - **Bucket** *(string) --* 

                The name of the S3 bucket that contains the file.

                
              

              - **Key** *(string) --* 

                The name of the file.

                
          
        
          

          - **DatabaseConfiguration** *(dict) --* 

            Provides information necessary to create a data source connector for a database.

            
            

            - **DatabaseEngineType** *(string) --* 

              The type of database engine that runs the database.

              
            

            - **ConnectionConfiguration** *(dict) --* 

              The information necessary to connect to a database.

              
              

              - **DatabaseHost** *(string) --* 

                The name of the host for the database. Can be either a string (host.subdomain.domain.tld) or an IPv4 or IPv6 address.

                
              

              - **DatabasePort** *(integer) --* 

                The port that the database uses for connections.

                
              

              - **DatabaseName** *(string) --* 

                The name of the database containing the document data.

                
              

              - **TableName** *(string) --* 

                The name of the table that contains the document data.

                
              

              - **SecretArn** *(string) --* 

                The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. For more information, see `Using a Database Data Source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-database.html>`__ . For more information about Secrets Manager, see `What Is Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ in the *Secrets Manager* user guide.

                
          
            

            - **VpcConfiguration** *(dict) --* 

              Provides information for connecting to an Amazon VPC.

              
              

              - **SubnetIds** *(list) --* 

                A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

                
                

                - *(string) --* 
            
              

              - **SecurityGroupIds** *(list) --* 

                A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

                
                

                - *(string) --* 
            
          
            

            - **ColumnConfiguration** *(dict) --* 

              Information about where the index should get the document information from the database.

              
              

              - **DocumentIdColumnName** *(string) --* 

                The column that provides the document's unique identifier.

                
              

              - **DocumentDataColumnName** *(string) --* 

                The column that contains the contents of the document.

                
              

              - **DocumentTitleColumnName** *(string) --* 

                The column that contains the title of the document.

                
              

              - **FieldMappings** *(list) --* 

                An array of objects that map database column names to the corresponding fields in an index. You must first create the fields in the index using the ``UpdateIndex`` operation.

                
                

                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the column or attribute in the data source.

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the field in the index.

                    
              
            
              

              - **ChangeDetectingColumns** *(list) --* 

                One to five columns that indicate when a document in the database has changed.

                
                

                - *(string) --* 
            
          
            

            - **AclConfiguration** *(dict) --* 

              Information about the database column that provides information for user context filtering.

              
              

              - **AllowedGroupsColumnName** *(string) --* 

                A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the ``UserContext`` field of the ``Query`` operation.

                
          
            

            - **SqlConfiguration** *(dict) --* 

              Provides information about how Amazon Kendra uses quote marks around SQL identifiers when querying a database data source.

              
              

              - **QueryIdentifiersEnclosingOption** *(string) --* 

                Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.

                 

                By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.

                 

                PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.

                 

                For MySQL databases, you must enable the ``ansi_quotes`` option when you set this field to ``DOUBLE_QUOTES`` .

                
          
        
          

          - **SalesforceConfiguration** *(dict) --* 

            Provides configuration information for data sources that connect to a Salesforce site.

            
            

            - **ServerUrl** *(string) --* 

              The instance URL for the Salesforce site that you want to index.

              
            

            - **SecretArn** *(string) --* 

              The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Salesforce instance. The secret must contain a JSON structure with the following keys:

               

               
              * authenticationUrl - The OAUTH endpoint that Amazon Kendra connects to get an OAUTH token.  
               
              * consumerKey - The application public key generated when you created your Salesforce application. 
               
              * consumerSecret - The application private key generated when you created your Salesforce application. 
               
              * password - The password associated with the user logging in to the Salesforce instance. 
               
              * securityToken - The token associated with the user account logging in to the Salesforce instance. 
               
              * username - The user name of the user logging in to the Salesforce instance. 
               

              
            

            - **StandardObjectConfigurations** *(list) --* 

              Specifies the Salesforce standard objects that Amazon Kendra indexes.

              
              

              - *(dict) --* 

                Specifies configuration information for indexing a single standard object.

                
                

                - **Name** *(string) --* 

                  The name of the standard object.

                  
                

                - **DocumentDataFieldName** *(string) --* 

                  The name of the field in the standard object table that contains the document contents.

                  
                

                - **DocumentTitleFieldName** *(string) --* 

                  The name of the field in the standard object table that contains the document title.

                  
                

                - **FieldMappings** *(list) --* 

                  One or more objects that map fields in the standard object to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.

                  
                  

                  - *(dict) --* 

                    Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                    
                    

                    - **DataSourceFieldName** *(string) --* 

                      The name of the column or attribute in the data source.

                      
                    

                    - **DateFieldFormat** *(string) --* 

                      The type of data stored in the column or attribute.

                      
                    

                    - **IndexFieldName** *(string) --* 

                      The name of the field in the index.

                      
                
              
            
          
            

            - **KnowledgeArticleConfiguration** *(dict) --* 

              Specifies configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both.

              
              

              - **IncludedStates** *(list) --* 

                Specifies the document states that should be included when Amazon Kendra indexes knowledge articles. You must specify at least one state.

                
                

                - *(string) --* 
            
              

              - **StandardKnowledgeArticleTypeConfiguration** *(dict) --* 

                Provides configuration information for standard Salesforce knowledge articles.

                
                

                - **DocumentDataFieldName** *(string) --* 

                  The name of the field that contains the document data to index.

                  
                

                - **DocumentTitleFieldName** *(string) --* 

                  The name of the field that contains the document title.

                  
                

                - **FieldMappings** *(list) --* 

                  One or more objects that map fields in the knowledge article to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.

                  
                  

                  - *(dict) --* 

                    Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                    
                    

                    - **DataSourceFieldName** *(string) --* 

                      The name of the column or attribute in the data source.

                      
                    

                    - **DateFieldFormat** *(string) --* 

                      The type of data stored in the column or attribute.

                      
                    

                    - **IndexFieldName** *(string) --* 

                      The name of the field in the index.

                      
                
              
            
              

              - **CustomKnowledgeArticleTypeConfigurations** *(list) --* 

                Provides configuration information for custom Salesforce knowledge articles.

                
                

                - *(dict) --* 

                  Provides configuration information for indexing Salesforce custom articles.

                  
                  

                  - **Name** *(string) --* 

                    The name of the configuration.

                    
                  

                  - **DocumentDataFieldName** *(string) --* 

                    The name of the field in the custom knowledge article that contains the document data to index.

                    
                  

                  - **DocumentTitleFieldName** *(string) --* 

                    The name of the field in the custom knowledge article that contains the document title.

                    
                  

                  - **FieldMappings** *(list) --* 

                    One or more objects that map fields in the custom knowledge article to fields in the Amazon Kendra index.

                    
                    

                    - *(dict) --* 

                      Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                      
                      

                      - **DataSourceFieldName** *(string) --* 

                        The name of the column or attribute in the data source.

                        
                      

                      - **DateFieldFormat** *(string) --* 

                        The type of data stored in the column or attribute.

                        
                      

                      - **IndexFieldName** *(string) --* 

                        The name of the field in the index.

                        
                  
                
              
            
          
            

            - **ChatterFeedConfiguration** *(dict) --* 

              Specifies configuration information for Salesforce chatter feeds.

              
              

              - **DocumentDataFieldName** *(string) --* 

                The name of the column in the Salesforce FeedItem table that contains the content to index. Typically this is the ``Body`` column.

                
              

              - **DocumentTitleFieldName** *(string) --* 

                The name of the column in the Salesforce FeedItem table that contains the title of the document. This is typically the ``Title`` column.

                
              

              - **FieldMappings** *(list) --* 

                Maps fields from a Salesforce chatter feed into Amazon Kendra index fields.

                
                

                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the column or attribute in the data source.

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the field in the index.

                    
              
            
              

              - **IncludeFilterTypes** *(list) --* 

                Filters the documents in the feed based on status of the user. When you specify ``ACTIVE_USERS`` only documents from users who have an active account are indexed. When you specify ``STANDARD_USER`` only documents for Salesforce standard users are documented. You can specify both.

                
                

                - *(string) --* 
            
          
            

            - **CrawlAttachments** *(boolean) --* 

              Indicates whether Amazon Kendra should index attachments to Salesforce objects.

              
            

            - **StandardObjectAttachmentConfiguration** *(dict) --* 

              Provides configuration information for processing attachments to Salesforce standard objects. 

              
              

              - **DocumentTitleFieldName** *(string) --* 

                The name of the field used for the document title.

                
              

              - **FieldMappings** *(list) --* 

                One or more objects that map fields in attachments to Amazon Kendra index fields.

                
                

                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the column or attribute in the data source.

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the field in the index.

                    
              
            
          
            

            - **IncludeAttachmentFilePatterns** *(list) --* 

              A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.

               

              The regex is applied to the name of the attached file.

              
              

              - *(string) --* 
          
            

            - **ExcludeAttachmentFilePatterns** *(list) --* 

              A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

               

              The regex is applied to the name of the attached file.

              
              

              - *(string) --* 
          
        
          

          - **OneDriveConfiguration** *(dict) --* 

            Provides configuration for data sources that connect to Microsoft OneDrive.

            
            

            - **TenantDomain** *(string) --* 

              The Azure Active Directory domain of the organization. 

              
            

            - **SecretArn** *(string) --* 

              The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the user name and password to connect to OneDrive. The user namd should be the application ID for the OneDrive application, and the password is the application key for the OneDrive application.

              
            

            - **OneDriveUsers** *(dict) --* 

              A list of user accounts whose documents should be indexed.

              
              

              - **OneDriveUserList** *(list) --* 

                A list of users whose documents should be indexed. Specify the user names in email format, for example, ``username@tenantdomain`` . If you need to index the documents of more than 100 users, use the ``OneDriveUserS3Path`` field to specify the location of a file containing a list of users.

                
                

                - *(string) --* 
            
              

              - **OneDriveUserS3Path** *(dict) --* 

                The S3 bucket location of a file containing a list of users whose documents should be indexed.

                
                

                - **Bucket** *(string) --* 

                  The name of the S3 bucket that contains the file.

                  
                

                - **Key** *(string) --* 

                  The name of the file.

                  
            
          
            

            - **InclusionPatterns** *(list) --* 

              A list of regular expression patterns. Documents that match the pattern are included in the index. Documents that don't match the pattern are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index. 

               

              The exclusion pattern is applied to the file name.

              
              

              - *(string) --* 
          
            

            - **ExclusionPatterns** *(list) --* 

              List of regular expressions applied to documents. Items that match the exclusion pattern are not indexed. If you provide both an inclusion pattern and an exclusion pattern, any item that matches the exclusion pattern isn't indexed. 

               

              The exclusion pattern is applied to the file name.

              
              

              - *(string) --* 
          
            

            - **FieldMappings** *(list) --* 

              A list of ``DataSourceToIndexFieldMapping`` objects that map Microsoft OneDrive fields to custom fields in the Amazon Kendra index. You must first create the index fields before you map OneDrive fields.

              
              

              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                
                

                - **DataSourceFieldName** *(string) --* 

                  The name of the column or attribute in the data source.

                  
                

                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  
                

                - **IndexFieldName** *(string) --* 

                  The name of the field in the index.

                  
            
          
            

            - **DisableLocalGroups** *(boolean) --* 

              A Boolean value that specifies whether local groups are disabled (``True`` ) or enabled (``False`` ). 

              
        
          

          - **ServiceNowConfiguration** *(dict) --* 

            Provides configuration for data sources that connect to ServiceNow instances.

            
            

            - **HostUrl** *(string) --* 

              The ServiceNow instance that the data source connects to. The host endpoint should look like the following: ``{instance}.service-now.com.``  

              
            

            - **SecretArn** *(string) --* 

              The Amazon Resource Name (ARN) of the Secrets Manager secret that contains the user name and password required to connect to the ServiceNow instance.

              
            

            - **ServiceNowBuildVersion** *(string) --* 

              The identifier of the release that the ServiceNow host is running. If the host is not running the ``LONDON`` release, use ``OTHERS`` .

              
            

            - **KnowledgeArticleConfiguration** *(dict) --* 

              Provides configuration information for crawling knowledge articles in the ServiceNow site.

              
              

              - **CrawlAttachments** *(boolean) --* 

                Indicates whether Amazon Kendra should index attachments to knowledge articles.

                
              

              - **IncludeAttachmentFilePatterns** *(list) --* 

                List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the ``PatternTargetField`` .

                
                

                - *(string) --* 
            
              

              - **ExcludeAttachmentFilePatterns** *(list) --* 

                List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the ``PatternTargetField``  

                
                

                - *(string) --* 
            
              

              - **DocumentDataFieldName** *(string) --* 

                The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.

                
              

              - **DocumentTitleFieldName** *(string) --* 

                The name of the ServiceNow field that is mapped to the index document title field.

                
              

              - **FieldMappings** *(list) --* 

                Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.

                
                

                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the column or attribute in the data source.

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the field in the index.

                    
              
            
              

              - **FilterQuery** *(string) --* 

                A query that selects the knowledge articles to index. The query can return articles from multiple knowledge bases, and the knowledge bases can be public or private.

                 

                The query string must be one generated by the ServiceNow console. For more information, see `Specifying documents to index with a query <https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html>`__ . 

                
          
            

            - **ServiceCatalogConfiguration** *(dict) --* 

              Provides configuration information for crawling service catalogs in the ServiceNow site.

              
              

              - **CrawlAttachments** *(boolean) --* 

                Indicates whether Amazon Kendra should crawl attachments to the service catalog items. 

                
              

              - **IncludeAttachmentFilePatterns** *(list) --* 

                A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

                 

                The regex is applied to the file name of the attachment.

                
                

                - *(string) --* 
            
              

              - **ExcludeAttachmentFilePatterns** *(list) --* 

                A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

                 

                The regex is applied to the file name of the attachment.

                
                

                - *(string) --* 
            
              

              - **DocumentDataFieldName** *(string) --* 

                The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.

                
              

              - **DocumentTitleFieldName** *(string) --* 

                The name of the ServiceNow field that is mapped to the index document title field.

                
              

              - **FieldMappings** *(list) --* 

                Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.

                
                

                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the column or attribute in the data source.

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the field in the index.

                    
              
            
          
            

            - **AuthenticationType** *(string) --* 

              Determines the type of authentication used to connect to the ServiceNow instance. If you choose ``HTTP_BASIC`` , Amazon Kendra is authenticated using the user name and password provided in the AWS Secrets Manager secret in the ``SecretArn`` field. When you choose ``OAUTH2`` , Amazon Kendra is authenticated using the OAuth token and secret provided in the Secrets Manager secret, and the user name and password are used to determine which information Amazon Kendra has access to.

               

              When you use ``OAUTH2`` authentication, you must generate a token and a client secret using the ServiceNow console. For more information, see `Using a ServiceNow data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html>`__ .

              
        
          

          - **ConfluenceConfiguration** *(dict) --* 

            Provides configuration information for connecting to a Confluence data source.

            
            

            - **ServerUrl** *(string) --* 

              The URL of your Confluence instance. Use the full URL of the server. For example, ``https://server.example.com:port/`` . You can also use an IP address, for example, ``https://192.168.1.113/`` .

              
            

            - **SecretArn** *(string) --* 

              The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Confluence server. The secret must contain a JSON structure with the following keys:

               

               
              * username - The user name or email address of a user with administrative privileges for the Confluence server. 
               
              * password - The password associated with the user logging in to the Confluence server. 
               

              
            

            - **Version** *(string) --* 

              Specifies the version of the Confluence installation that you are connecting to.

              
            

            - **SpaceConfiguration** *(dict) --* 

              Specifies configuration information for indexing Confluence spaces.

              
              

              - **CrawlPersonalSpaces** *(boolean) --* 

                Specifies whether Amazon Kendra should index personal spaces. Users can add restrictions to items in personal spaces. If personal spaces are indexed, queries without user context information may return restricted items from a personal space in their results. For more information, see `Filtering on user context <https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html>`__ .

                
              

              - **CrawlArchivedSpaces** *(boolean) --* 

                Specifies whether Amazon Kendra should index archived spaces.

                
              

              - **IncludeSpaces** *(list) --* 

                A list of space keys for Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are indexed. Spaces that aren't in the list aren't indexed. A space in the list must exist. Otherwise, Amazon Kendra logs an error when the data source is synchronized. If a space is in both the ``IncludeSpaces`` and the ``ExcludeSpaces`` list, the space is excluded.

                
                

                - *(string) --* 
            
              

              - **ExcludeSpaces** *(list) --* 

                A list of space keys of Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are not indexed. If a space is in both the ``ExcludeSpaces`` and the ``IncludeSpaces`` list, the space is excluded.

                
                

                - *(string) --* 
            
              

              - **SpaceFieldMappings** *(list) --* 

                Defines how space metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

                 

                If you specify the ``SpaceFieldMappings`` parameter, you must specify at least one field mapping.

                
                

                - *(dict) --* 

                  Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

                   

                  You must first create the index field using the ``UpdateIndex`` operation. 

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the field in the data source. 

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                    
              
            
          
            

            - **PageConfiguration** *(dict) --* 

              Specifies configuration information for indexing Confluence pages.

              
              

              - **PageFieldMappings** *(list) --* 

                Defines how page metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

                 

                If you specify the ``PageFieldMappings`` parameter, you must specify at least one field mapping.

                
                

                - *(dict) --* 

                  Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

                   

                  You must first create the index field using the ``UpdateIndex`` operation. 

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the field in the data source. 

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                    
              
            
          
            

            - **BlogConfiguration** *(dict) --* 

              Specifies configuration information for indexing Confluence blogs.

              
              

              - **BlogFieldMappings** *(list) --* 

                Defines how blog metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

                 

                If you specify the ``BlogFieldMappings`` parameter, you must specify at least one field mapping.

                
                

                - *(dict) --* 

                  Defines the mapping between a blog field in the Confluence data source to a Amazon Kendra index field.

                   

                  You must first create the index field using the ``UpdateIndex`` operation. 

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the field in the data source. 

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                    
              
            
          
            

            - **AttachmentConfiguration** *(dict) --* 

              Specifies configuration information for indexing attachments to Confluence blogs and pages.

              
              

              - **CrawlAttachments** *(boolean) --* 

                Indicates whether Amazon Kendra indexes attachments to the pages and blogs in the Confluence data source. 

                
              

              - **AttachmentFieldMappings** *(list) --* 

                Defines how attachment metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

                 

                If you specify the ``AttachentFieldMappings`` parameter, you must specify at least one field mapping.

                
                

                - *(dict) --* 

                  Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

                   

                  You must first create the index field using the ``UpdateIndex`` operation. 

                  
                  

                  - **DataSourceFieldName** *(string) --* 

                    The name of the field in the data source. 

                     

                    You must first create the index field using the ``UpdateIndex`` operation. 

                    
                  

                  - **DateFieldFormat** *(string) --* 

                    The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                    
                  

                  - **IndexFieldName** *(string) --* 

                    The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                    
              
            
          
            

            - **VpcConfiguration** *(dict) --* 

              Specifies the information for connecting to an Amazon VPC.

              
              

              - **SubnetIds** *(list) --* 

                A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

                
                

                - *(string) --* 
            
              

              - **SecurityGroupIds** *(list) --* 

                A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

                
                

                - *(string) --* 
            
          
            

            - **InclusionPatterns** *(list) --* 

              A list of regular expression patterns that apply to a URL on the Confluence server. An inclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the patterns are included in the index. Items that don't match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, the item isn't included in the index.

              
              

              - *(string) --* 
          
            

            - **ExclusionPatterns** *(list) --* 

              A list of regular expression patterns that apply to a URL on the Confluence server. An exclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the pattern are excluded from the index. Items that don't match the pattern are included in the index. If a item matches both an exclusion pattern and an inclusion pattern, the item isn't included in the index.

              
              

              - *(string) --* 
          
        
          

          - **GoogleDriveConfiguration** *(dict) --* 

            Provides configuration for data sources that connect to Google Drive. 

            
            

            - **SecretArn** *(string) --* 

              The Amazon Resource Name (ARN) of a Secrets Managersecret that contains the credentials required to connect to Google Drive. For more information, see `Using a Google Workspace Drive data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html>`__ .

              
            

            - **InclusionPatterns** *(list) --* 

              A list of regular expression patterns that apply to path on Google Drive. Items that match the pattern are included in the index from both shared drives and users' My Drives. Items that don't match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, it is excluded from the index.

              
              

              - *(string) --* 
          
            

            - **ExclusionPatterns** *(list) --* 

              A list of regular expression patterns that apply to the path on Google Drive. Items that match the pattern are excluded from the index from both shared drives and users' My Drives. Items that don't match the pattern are included in the index. If an item matches both an exclusion pattern and an inclusion pattern, it is excluded from the index.

              
              

              - *(string) --* 
          
            

            - **FieldMappings** *(list) --* 

              Defines mapping between a field in the Google Drive and a Amazon Kendra index field.

               

              If you are using the console, you can define index fields when creating the mapping. If you are using the API, you must first create the field using the ``UpdateIndex`` operation.

              
              

              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                
                

                - **DataSourceFieldName** *(string) --* 

                  The name of the column or attribute in the data source.

                  
                

                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  
                

                - **IndexFieldName** *(string) --* 

                  The name of the field in the index.

                  
            
          
            

            - **ExcludeMimeTypes** *(list) --* 

              A list of MIME types to exclude from the index. All documents matching the specified MIME type are excluded. 

               

              For a list of MIME types, see `Using a Google Workspace Drive data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html>`__ .

              
              

              - *(string) --* 
          
            

            - **ExcludeUserAccounts** *(list) --* 

              A list of email addresses of the users. Documents owned by these users are excluded from the index. Documents shared with excluded users are indexed unless they are excluded in another way.

              
              

              - *(string) --* 
          
            

            - **ExcludeSharedDrives** *(list) --* 

              A list of identifiers or shared drives to exclude from the index. All files and folders stored on the shared drive are excluded.

              
              

              - *(string) --* 
          
        
          

          - **WebCrawlerConfiguration** *(dict) --* 

            Provides the configuration information required for Amazon Kendra web crawler.

            
            

            - **Urls** *(dict) --* 

              Specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl.

               

              You can include website subdomains. You can list up to 100 seed URLs and up to three sitemap URLs.

               

               *When selecting websites to index, you must adhere to the `Amazon Acceptable Use Policy <https://aws.amazon.com/aup/>`__ and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.*  

              
              

              - **SeedUrlConfiguration** *(dict) --* 

                Provides the configuration of the seed or starting point URLs of the websites you want to crawl.

                 

                You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.

                 

                You can list up to 100 seed URLs.

                
                

                - **SeedUrls** *(list) --* 

                  The list of seed or starting point URLs of the websites you want to crawl.

                   

                  The list can include a maximum of 100 seed URLs.

                  
                  

                  - *(string) --* 
              
                

                - **WebCrawlerMode** *(string) --* 

                  You can choose one of the following modes:

                   

                   
                  * ``HOST_ONLY`` – crawl only the website host names. For example, if the seed URL is "abc.example.com", then only URLs with host name "abc.example.com" are crawled. 
                   
                  * ``SUBDOMAINS`` – crawl the website host names with subdomains. For example, if the seed URL is "abc.example.com", then "a.abc.example.com" and "b.abc.example.com" are also crawled. 
                   
                  * ``EVERYTHING`` – crawl the website host names with subdomains and other domains that the webpages link to. 
                   

                   

                  The default mode is set to ``HOST_ONLY`` .

                  
            
              

              - **SiteMapsConfiguration** *(dict) --* 

                Provides the configuration of the sitemap URLs of the websites you want to crawl.

                 

                Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.

                
                

                - **SiteMaps** *(list) --* 

                  The list of sitemap URLs of the websites you want to crawl.

                   

                  The list can include a maximum of three sitemap URLs.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **CrawlDepth** *(integer) --* 

              Specifies the number of levels in a website that you want to crawl.

               

              The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1.

               

              The default crawl depth is set to 2.

              
            

            - **MaxLinksPerPage** *(integer) --* 

              The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage.

               

              As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance.

               

              The default maximum links per page is 100.

              
            

            - **MaxContentSizePerPageInMegaBytes** *(float) --* 

              The maximum size (in MB) of a webpage or attachment to crawl.

               

              Files larger than this size (in MB) are skipped/not crawled.

               

              The default maximum size of a webpage or attachment is set to 50 MB.

              
            

            - **MaxUrlsPerMinuteCrawlRate** *(integer) --* 

              The maximum number of URLs crawled per website host per minute.

               

              A minimum of one URL is required.

               

              The default maximum number of URLs crawled per website host per minute is 300.

              
            

            - **UrlInclusionPatterns** *(list) --* 

              The regular expression pattern to include certain URLs to crawl.

               

              If there is a regular expression pattern to exclude certain URLs that conflicts with the include pattern, the exclude pattern takes precedence.

              
              

              - *(string) --* 
          
            

            - **UrlExclusionPatterns** *(list) --* 

              The regular expression pattern to exclude certain URLs to crawl.

               

              If there is a regular expression pattern to include certain URLs that conflicts with the exclude pattern, the exclude pattern takes precedence.

              
              

              - *(string) --* 
          
            

            - **ProxyConfiguration** *(dict) --* 

              Provides configuration information required to connect to your internal websites via a web proxy.

               

              You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS.

               

              Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ .

              
              

              - **Host** *(string) --* 

                The name of the website host you want to connect to via a web proxy server.

                 

                For example, the host name of https://a.example.com/page1.html is "a.example.com".

                
              

              - **Port** *(integer) --* 

                The port number of the website host you want to connect to via a web proxy server. 

                 

                For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.

                
              

              - **Credentials** *(string) --* 

                Your secret ARN, which you can create in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__  

                 

                The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.

                
          
            

            - **AuthenticationConfiguration** *(dict) --* 

              Provides configuration information required to connect to websites using authentication.

               

              You can connect to websites using basic authentication of user name and password.

               

              You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. You use a secret in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ to store your authentication credentials.

              
              

              - **BasicAuthentication** *(list) --* 

                The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials.

                 

                The list includes the name and port number of the website host.

                
                

                - *(dict) --* 

                  Provides the configuration information to connect to websites that require basic user authentication.

                  
                  

                  - **Host** *(string) --* 

                    The name of the website host you want to connect to using authentication credentials.

                     

                    For example, the host name of https://a.example.com/page1.html is "a.example.com".

                    
                  

                  - **Port** *(integer) --* 

                    The port number of the website host you want to connect to using authentication credentials.

                     

                    For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.

                    
                  

                  - **Credentials** *(string) --* 

                    Your secret ARN, which you can create in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__  

                     

                    You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.

                    
              
            
          
        
          

          - **WorkDocsConfiguration** *(dict) --* 

            Provides the configuration information to connect to WorkDocs as your data source.

            
            

            - **OrganizationId** *(string) --* 

              The identifier of the directory corresponding to your Amazon WorkDocs site repository.

               

              You can find the organization ID in the `AWS Directory Service <https://console.aws.amazon.com/directoryservicev2/>`__ by going to **Active Directory** , then **Directories** . Your Amazon WorkDocs site directory has an ID, which is the organization ID. You can also set up a new Amazon WorkDocs directory in the AWS Directory Service console and enable a Amazon WorkDocs site for the directory in the Amazon WorkDocs console.

              
            

            - **CrawlComments** *(boolean) --* 

               ``TRUE`` to include comments on documents in your index. Including comments in your index means each comment is a document that can be searched on.

               

              The default is set to ``FALSE`` .

              
            

            - **UseChangeLog** *(boolean) --* 

               ``TRUE`` to use the change logs to update documents in your index instead of scanning all documents.

               

              If you are syncing your Amazon WorkDocs data source with your index for the first time, all documents are scanned. After your first sync, you can use the change logs to update your documents in your index for future syncs.

               

              The default is set to ``FALSE`` .

              
            

            - **InclusionPatterns** *(list) --* 

              A list of regular expression patterns to include certain files in your Amazon WorkDocs site repository. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.

              
              

              - *(string) --* 
          
            

            - **ExclusionPatterns** *(list) --* 

              A list of regular expression patterns to exclude certain files in your Amazon WorkDocs site repository. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.

              
              

              - *(string) --* 
          
            

            - **FieldMappings** *(list) --* 

              A list of ``DataSourceToIndexFieldMapping`` objects that map Amazon WorkDocs field names to custom index field names in Amazon Kendra. You must first create the custom index fields using the ``UpdateIndex`` operation before you map to Amazon WorkDocs fields. For more information, see `Mapping Data Source Fields <https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html>`__ . The Amazon WorkDocs data source field names need to exist in your Amazon WorkDocs custom metadata.

              
              

              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                
                

                - **DataSourceFieldName** *(string) --* 

                  The name of the column or attribute in the data source.

                  
                

                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  
                

                - **IndexFieldName** *(string) --* 

                  The name of the field in the index.

                  
            
          
        
      
        

        - **CreatedAt** *(datetime) --* 

          The Unix timestamp of when the data source was created.

          
        

        - **UpdatedAt** *(datetime) --* 

          The Unix timestamp of when the data source was last updated.

          
        

        - **Description** *(string) --* 

          The description of the data source.

          
        

        - **Status** *(string) --* 

          The current status of the data source. When the status is ``ACTIVE`` the data source is ready to use. When the status is ``FAILED`` , the ``ErrorMessage`` field contains the reason that the data source failed.

          
        

        - **Schedule** *(string) --* 

          The schedule that Amazon Kendra will update the data source.

          
        

        - **RoleArn** *(string) --* 

          The Amazon Resource Name (ARN) of the role that enables the data source to access its resources.

          
        

        - **ErrorMessage** *(string) --* 

          When the ``Status`` field value is ``FAILED`` , the ``ErrorMessage`` field contains a description of the error that caused the data source to fail.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_faq(**kwargs)

    

    Gets information about an FAQ list.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribeFaq>`_    


    **Request Syntax** 
    ::

      response = client.describe_faq(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of the FAQ.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the FAQ.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string',
            'IndexId': 'string',
            'Name': 'string',
            'Description': 'string',
            'CreatedAt': datetime(2015, 1, 1),
            'UpdatedAt': datetime(2015, 1, 1),
            'S3Path': {
                'Bucket': 'string',
                'Key': 'string'
            },
            'Status': 'CREATING'|'UPDATING'|'ACTIVE'|'DELETING'|'FAILED',
            'RoleArn': 'string',
            'ErrorMessage': 'string',
            'FileFormat': 'CSV'|'CSV_WITH_HEADER'|'JSON'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The identifier of the FAQ.

          
        

        - **IndexId** *(string) --* 

          The identifier of the index that contains the FAQ.

          
        

        - **Name** *(string) --* 

          The name that you gave the FAQ when it was created.

          
        

        - **Description** *(string) --* 

          The description of the FAQ that you provided when it was created.

          
        

        - **CreatedAt** *(datetime) --* 

          The date and time that the FAQ was created.

          
        

        - **UpdatedAt** *(datetime) --* 

          The date and time that the FAQ was last updated.

          
        

        - **S3Path** *(dict) --* 

          Information required to find a specific file in an Amazon S3 bucket.

          
          

          - **Bucket** *(string) --* 

            The name of the S3 bucket that contains the file.

            
          

          - **Key** *(string) --* 

            The name of the file.

            
      
        

        - **Status** *(string) --* 

          The status of the FAQ. It is ready to use when the status is ``ACTIVE`` .

          
        

        - **RoleArn** *(string) --* 

          The Amazon Resource Name (ARN) of the role that provides access to the S3 bucket containing the input files for the FAQ.

          
        

        - **ErrorMessage** *(string) --* 

          If the ``Status`` field is ``FAILED`` , the ``ErrorMessage`` field contains the reason why the FAQ failed.

          
        

        - **FileFormat** *(string) --* 

          The file format used by the input files for the FAQ.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_index(**kwargs)

    

    Describes an existing Amazon Kendra index

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribeIndex>`_    


    **Request Syntax** 
    ::

      response = client.describe_index(
          Id='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The name of the index to describe.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Name': 'string',
            'Id': 'string',
            'Edition': 'DEVELOPER_EDITION'|'ENTERPRISE_EDITION',
            'RoleArn': 'string',
            'ServerSideEncryptionConfiguration': {
                'KmsKeyId': 'string'
            },
            'Status': 'CREATING'|'ACTIVE'|'DELETING'|'FAILED'|'UPDATING'|'SYSTEM_UPDATING',
            'Description': 'string',
            'CreatedAt': datetime(2015, 1, 1),
            'UpdatedAt': datetime(2015, 1, 1),
            'DocumentMetadataConfigurations': [
                {
                    'Name': 'string',
                    'Type': 'STRING_VALUE'|'STRING_LIST_VALUE'|'LONG_VALUE'|'DATE_VALUE',
                    'Relevance': {
                        'Freshness': True|False,
                        'Importance': 123,
                        'Duration': 'string',
                        'RankOrder': 'ASCENDING'|'DESCENDING',
                        'ValueImportanceMap': {
                            'string': 123
                        }
                    },
                    'Search': {
                        'Facetable': True|False,
                        'Searchable': True|False,
                        'Displayable': True|False,
                        'Sortable': True|False
                    }
                },
            ],
            'IndexStatistics': {
                'FaqStatistics': {
                    'IndexedQuestionAnswersCount': 123
                },
                'TextDocumentStatistics': {
                    'IndexedTextDocumentsCount': 123,
                    'IndexedTextBytes': 123
                }
            },
            'ErrorMessage': 'string',
            'CapacityUnits': {
                'StorageCapacityUnits': 123,
                'QueryCapacityUnits': 123
            },
            'UserTokenConfigurations': [
                {
                    'JwtTokenTypeConfiguration': {
                        'KeyLocation': 'URL'|'SECRET_MANAGER',
                        'URL': 'string',
                        'SecretManagerArn': 'string',
                        'UserNameAttributeField': 'string',
                        'GroupAttributeField': 'string',
                        'Issuer': 'string',
                        'ClaimRegex': 'string'
                    },
                    'JsonTokenTypeConfiguration': {
                        'UserNameAttributeField': 'string',
                        'GroupAttributeField': 'string'
                    }
                },
            ],
            'UserContextPolicy': 'ATTRIBUTE_FILTER'|'USER_TOKEN'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Name** *(string) --* 

          The name of the index.

          
        

        - **Id** *(string) --* 

          The name of the index.

          
        

        - **Edition** *(string) --* 

          The Amazon Kendra edition used for the index. You decide the edition when you create the index.

          
        

        - **RoleArn** *(string) --* 

          The Amazon Resource Name (ARN) of the IAM role that gives Amazon Kendra permission to write to your Amazon Cloudwatch logs.

          
        

        - **ServerSideEncryptionConfiguration** *(dict) --* 

          The identifier of the KMScustomer master key (CMK) used to encrypt your data. Amazon Kendra doesn't support asymmetric CMKs.

          
          

          - **KmsKeyId** *(string) --* 

            The identifier of the KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.

            
      
        

        - **Status** *(string) --* 

          The current status of the index. When the value is ``ACTIVE`` , the index is ready for use. If the ``Status`` field value is ``FAILED`` , the ``ErrorMessage`` field contains a message that explains why.

          
        

        - **Description** *(string) --* 

          The description of the index.

          
        

        - **CreatedAt** *(datetime) --* 

          The Unix datetime that the index was created.

          
        

        - **UpdatedAt** *(datetime) --* 

          The Unix datetime that the index was last updated.

          
        

        - **DocumentMetadataConfigurations** *(list) --* 

          Configuration settings for any metadata applied to the documents in the index.

          
          

          - *(dict) --* 

            Specifies the properties of a custom index field.

            
            

            - **Name** *(string) --* 

              The name of the index field.

              
            

            - **Type** *(string) --* 

              The data type of the index field. 

              
            

            - **Relevance** *(dict) --* 

              Provides manual tuning parameters to determine how the field affects the search results.

              
              

              - **Freshness** *(boolean) --* 

                Indicates that this field determines how "fresh" a document is. For example, if document 1 was created on November 5, and document 2 was created on October 31, document 1 is "fresher" than document 2. You can only set the ``Freshness`` field on one ``DATE`` type field. Only applies to ``DATE`` fields.

                
              

              - **Importance** *(integer) --* 

                The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers.

                
              

              - **Duration** *(string) --* 

                Specifies the time period that the boost applies to. For example, to make the boost apply to documents with the field value within the last month, you would use "2628000s". Once the field value is beyond the specified range, the effect of the boost drops off. The higher the importance, the faster the effect drops off. If you don't specify a value, the default is 3 months. The value of the field is a numeric string followed by the character "s", for example "86400s" for one day, or "604800s" for one week. 

                 

                Only applies to ``DATE`` fields.

                
              

              - **RankOrder** *(string) --* 

                Determines how values should be interpreted.

                 

                When the ``RankOrder`` field is ``ASCENDING`` , higher numbers are better. For example, a document with a rating score of 10 is higher ranking than a document with a rating score of 1.

                 

                When the ``RankOrder`` field is ``DESCENDING`` , lower numbers are better. For example, in a task tracking application, a priority 1 task is more important than a priority 5 task.

                 

                Only applies to ``LONG`` and ``DOUBLE`` fields.

                
              

              - **ValueImportanceMap** *(dict) --* 

                A list of values that should be given a different boost when they appear in the result list. For example, if you are boosting a field called "department," query terms that match the department field are boosted in the result. However, you can add entries from the department field to boost documents with those values higher. 

                 

                For example, you can add entries to the map with names of departments. If you add "HR",5 and "Legal",3 those departments are given special attention when they appear in the metadata of a document. When those terms appear they are given the specified importance instead of the regular importance for the boost.

                
                

                - *(string) --* 
                  

                  - *(integer) --* 
            
          
          
            

            - **Search** *(dict) --* 

              Provides information about how the field is used during a search.

              
              

              - **Facetable** *(boolean) --* 

                Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is ``false`` .

                
              

              - **Searchable** *(boolean) --* 

                Determines whether the field is used in the search. If the ``Searchable`` field is ``true`` , you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is ``true`` for string fields and ``false`` for number and date fields.

                
              

              - **Displayable** *(boolean) --* 

                Determines whether the field is returned in the query response. The default is ``true`` .

                
              

              - **Sortable** *(boolean) --* 

                Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have ``Sortable`` set to ``true`` , Amazon Kendra returns an exception. The default is ``false`` .

                
          
        
      
        

        - **IndexStatistics** *(dict) --* 

          Provides information about the number of FAQ questions and answers and the number of text documents indexed.

          
          

          - **FaqStatistics** *(dict) --* 

            The number of question and answer topics in the index.

            
            

            - **IndexedQuestionAnswersCount** *(integer) --* 

              The total number of FAQ questions and answers contained in the index.

              
        
          

          - **TextDocumentStatistics** *(dict) --* 

            The number of text documents indexed.

            
            

            - **IndexedTextDocumentsCount** *(integer) --* 

              The number of text documents indexed.

              
            

            - **IndexedTextBytes** *(integer) --* 

              The total size, in bytes, of the indexed documents.

              
        
      
        

        - **ErrorMessage** *(string) --* 

          When th e``Status`` field value is ``FAILED`` , the ``ErrorMessage`` field contains a message that explains why.

          
        

        - **CapacityUnits** *(dict) --* 

          For Enterprise edition indexes, you can choose to use additional capacity to meet the needs of your application. This contains the capacity units used for the index. A 0 for the query capacity or the storage capacity indicates that the index is using the default capacity for the index.

          
          

          - **StorageCapacityUnits** *(integer) --* 

            The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first.

            
          

          - **QueryCapacityUnits** *(integer) --* 

            The amount of extra query capacity for an index and `GetQuerySuggestions <https://docs.aws.amazon.com/kendra/latest/dg/API_GetQuerySuggestions.html>`__ capacity.

             

            A single extra capacity unit for an index provides 0.1 queries per second or approximately 8,000 queries per day.

             

             ``GetQuerySuggestions`` capacity is five times the provisioned query capacity for an index, or the base capacity of 2.5 calls per second, whichever is higher. For example, the base capacity for an index is 0.1 queries per second, and ``GetQuerySuggestions`` capacity has a base of 2.5 calls per second. If you add another 0.1 queries per second to total 0.2 queries per second for an index, the ``GetQuerySuggestions`` capacity is 2.5 calls per second (higher than five times 0.2 queries per second).

            
      
        

        - **UserTokenConfigurations** *(list) --* 

          The user token configuration for the Amazon Kendra index.

          
          

          - *(dict) --* 

            Provides configuration information for a token configuration.

            
            

            - **JwtTokenTypeConfiguration** *(dict) --* 

              Information about the JWT token type configuration.

              
              

              - **KeyLocation** *(string) --* 

                The location of the key.

                
              

              - **URL** *(string) --* 

                The signing key URL.

                
              

              - **SecretManagerArn** *(string) --* 

                The Amazon Resource Name (arn) of the secret.

                
              

              - **UserNameAttributeField** *(string) --* 

                The user name attribute field.

                
              

              - **GroupAttributeField** *(string) --* 

                The group attribute field.

                
              

              - **Issuer** *(string) --* 

                The issuer of the token.

                
              

              - **ClaimRegex** *(string) --* 

                The regular expression that identifies the claim.

                
          
            

            - **JsonTokenTypeConfiguration** *(dict) --* 

              Information about the JSON token type configuration.

              
              

              - **UserNameAttributeField** *(string) --* 

                The user name attribute field.

                
              

              - **GroupAttributeField** *(string) --* 

                The group attribute field.

                
          
        
      
        

        - **UserContextPolicy** *(string) --* 

          The user context policy for the Amazon Kendra index.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_principal_mapping(**kwargs)

    

    Describes the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups. This includes information on the status of actions currently processing or yet to be processed, when actions were last updated, when actions were received by Amazon Kendra, the latest action that should process and apply after other actions, and useful error messages if an action could not be processed.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribePrincipalMapping>`_    


    **Request Syntax** 
    ::

      response = client.describe_principal_mapping(
          IndexId='string',
          DataSourceId='string',
          GroupId='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index required to check the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

      

    
    :type DataSourceId: string
    :param DataSourceId: 

      The identifier of the data source to check the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

      

    
    :type GroupId: string
    :param GroupId: **[REQUIRED]** 

      The identifier of the group required to check the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'IndexId': 'string',
            'DataSourceId': 'string',
            'GroupId': 'string',
            'GroupOrderingIdSummaries': [
                {
                    'Status': 'FAILED'|'SUCCEEDED'|'PROCESSING'|'DELETING'|'DELETED',
                    'LastUpdatedAt': datetime(2015, 1, 1),
                    'ReceivedAt': datetime(2015, 1, 1),
                    'OrderingId': 123,
                    'FailureReason': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **IndexId** *(string) --* 

          Shows the identifier of the index to see information on the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

          
        

        - **DataSourceId** *(string) --* 

          Shows the identifier of the data source to see information on the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

          
        

        - **GroupId** *(string) --* 

          Shows the identifier of the group to see information on the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

          
        

        - **GroupOrderingIdSummaries** *(list) --* 

          Shows the following information on the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups:

           

           
          * Status – the status can be either ``PROCESSING`` , ``SUCCEEDED`` , ``DELETING`` , ``DELETED`` , or ``FAILED`` . 
           
          * Last updated – the last date-time an action was updated. 
           
          * Received – the last date-time an action was received or submitted. 
           
          * Ordering ID – the latest action that should process and apply after other actions. 
           
          * Failure reason – the reason an action could not be processed. 
           

          
          

          - *(dict) --* 

            Information on the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups.

            
            

            - **Status** *(string) --* 

              The current processing status of actions for mapping users to their groups. The status can be either ``PROCESSING`` , ``SUCCEEDED`` , ``DELETING`` , ``DELETED`` , or ``FAILED`` .

              
            

            - **LastUpdatedAt** *(datetime) --* 

              The last date-time an action was updated. An action can be a ``PUT`` or ``DELETE`` action for mapping users to their groups.

              
            

            - **ReceivedAt** *(datetime) --* 

              The date-time an action was received by Amazon Kendra. An action can be a ``PUT`` or ``DELETE`` action for mapping users to their groups.

              
            

            - **OrderingId** *(integer) --* 

              The order in which actions should complete processing. An action can be a ``PUT`` or ``DELETE`` action for mapping users to their groups.

              
            

            - **FailureReason** *(string) --* 

              The reason an action could not be processed. An action can be a ``PUT`` or ``DELETE`` action for mapping users to their groups.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_query_suggestions_block_list(**kwargs)

    

    Describes a block list used for query suggestions for an index.

     

    This is used to check the current settings that are applied to a block list.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribeQuerySuggestionsBlockList>`_    


    **Request Syntax** 
    ::

      response = client.describe_query_suggestions_block_list(
          IndexId='string',
          Id='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index for the block list.

      

    
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of the block list.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'IndexId': 'string',
            'Id': 'string',
            'Name': 'string',
            'Description': 'string',
            'Status': 'ACTIVE'|'CREATING'|'DELETING'|'UPDATING'|'ACTIVE_BUT_UPDATE_FAILED'|'FAILED',
            'ErrorMessage': 'string',
            'CreatedAt': datetime(2015, 1, 1),
            'UpdatedAt': datetime(2015, 1, 1),
            'SourceS3Path': {
                'Bucket': 'string',
                'Key': 'string'
            },
            'ItemCount': 123,
            'FileSizeBytes': 123,
            'RoleArn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **IndexId** *(string) --* 

          Shows the identifier of the index for the block list.

          
        

        - **Id** *(string) --* 

          Shows the unique identifier of the block list.

          
        

        - **Name** *(string) --* 

          Shows the name of the block list.

          
        

        - **Description** *(string) --* 

          Shows the description for the block list.

          
        

        - **Status** *(string) --* 

          Shows whether the current status of the block list is ``ACTIVE`` or ``INACTIVE`` .

          
        

        - **ErrorMessage** *(string) --* 

          Shows the error message with details when there are issues in processing the block list.

          
        

        - **CreatedAt** *(datetime) --* 

          Shows the date-time a block list for query suggestions was last created.

          
        

        - **UpdatedAt** *(datetime) --* 

          Shows the date-time a block list for query suggestions was last updated.

          
        

        - **SourceS3Path** *(dict) --* 

          Shows the current S3 path to your block list text file in your S3 bucket.

           

          Each block word or phrase should be on a separate line in a text file.

           

          For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

          
          

          - **Bucket** *(string) --* 

            The name of the S3 bucket that contains the file.

            
          

          - **Key** *(string) --* 

            The name of the file.

            
      
        

        - **ItemCount** *(integer) --* 

          Shows the current number of valid, non-empty words or phrases in the block list text file.

          
        

        - **FileSizeBytes** *(integer) --* 

          Shows the current size of the block list text file in S3.

          
        

        - **RoleArn** *(string) --* 

          Shows the current IAM (Identity and Access Management) role used by Amazon Kendra to access the block list text file in S3.

           

          The role needs S3 read permissions to your file in S3 and needs to give STS (Security Token Service) assume role permissions to Amazon Kendra.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_query_suggestions_config(**kwargs)

    

    Describes the settings of query suggestions for an index.

     

    This is used to check the current settings applied to query suggestions.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribeQuerySuggestionsConfig>`_    


    **Request Syntax** 
    ::

      response = client.describe_query_suggestions_config(
          IndexId='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to describe query suggestions settings for.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Mode': 'ENABLED'|'LEARN_ONLY',
            'Status': 'ACTIVE'|'UPDATING',
            'QueryLogLookBackWindowInDays': 123,
            'IncludeQueriesWithoutUserInformation': True|False,
            'MinimumNumberOfQueryingUsers': 123,
            'MinimumQueryCount': 123,
            'LastSuggestionsBuildTime': datetime(2015, 1, 1),
            'LastClearTime': datetime(2015, 1, 1),
            'TotalSuggestionsCount': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Mode** *(string) --* 

          Shows whether query suggestions are currently in ``ENABLED`` mode or ``LEARN_ONLY`` mode.

           

          By default, Amazon Kendra enables query suggestions.``LEARN_ONLY`` turns off query suggestions for your users. You can change the mode using the `UpdateQuerySuggestionsConfig <https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateQuerySuggestionsConfig.html>`__ operation.

          
        

        - **Status** *(string) --* 

          Shows whether the status of query suggestions settings is currently Active or Updating.

           

          Active means the current settings apply and Updating means your changed settings are in the process of applying.

          
        

        - **QueryLogLookBackWindowInDays** *(integer) --* 

          Shows how recent your queries are in your query log time window (in days).

          
        

        - **IncludeQueriesWithoutUserInformation** *(boolean) --* 

          Shows whether Amazon Kendra uses all queries or only uses queries that include user information to generate query suggestions.

          
        

        - **MinimumNumberOfQueryingUsers** *(integer) --* 

          Shows the minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.

          
        

        - **MinimumQueryCount** *(integer) --* 

          Shows the minimum number of times a query must be searched in order for the query to be eligible to suggest to your users.

          
        

        - **LastSuggestionsBuildTime** *(datetime) --* 

          Shows the date-time query suggestions for an index was last updated.

          
        

        - **LastClearTime** *(datetime) --* 

          Shows the date-time query suggestions for an index was last cleared.

           

          After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. Amazon Kendra only considers re-occurences of a query from the time you cleared suggestions. 

          
        

        - **TotalSuggestionsCount** *(integer) --* 

          Shows the current total count of query suggestions for an index.

           

          This count can change when you update your query suggestions settings, if you filter out certain queries from suggestions using a block list, and as the query log accumulates more queries for Amazon Kendra to learn from.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: describe_thesaurus(**kwargs)

    

    Describes an existing Amazon Kendra thesaurus.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/DescribeThesaurus>`_    


    **Request Syntax** 
    ::

      response = client.describe_thesaurus(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the thesaurus to describe.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index associated with the thesaurus to describe.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Id': 'string',
            'IndexId': 'string',
            'Name': 'string',
            'Description': 'string',
            'Status': 'CREATING'|'ACTIVE'|'DELETING'|'UPDATING'|'ACTIVE_BUT_UPDATE_FAILED'|'FAILED',
            'ErrorMessage': 'string',
            'CreatedAt': datetime(2015, 1, 1),
            'UpdatedAt': datetime(2015, 1, 1),
            'RoleArn': 'string',
            'SourceS3Path': {
                'Bucket': 'string',
                'Key': 'string'
            },
            'FileSizeBytes': 123,
            'TermCount': 123,
            'SynonymRuleCount': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Id** *(string) --* 

          The identifier of the thesaurus.

          
        

        - **IndexId** *(string) --* 

          The identifier of the index associated with the thesaurus to describe.

          
        

        - **Name** *(string) --* 

          The thesaurus name.

          
        

        - **Description** *(string) --* 

          The thesaurus description.

          
        

        - **Status** *(string) --* 

          The current status of the thesaurus. When the value is ``ACTIVE`` , queries are able to use the thesaurus. If the ``Status`` field value is ``FAILED`` , the ``ErrorMessage`` field provides more information. 

           

          If the status is ``ACTIVE_BUT_UPDATE_FAILED`` , it means that Amazon Kendra could not ingest the new thesaurus file. The old thesaurus file is still active. 

          
        

        - **ErrorMessage** *(string) --* 

          When the ``Status`` field value is ``FAILED`` , the ``ErrorMessage`` field provides more information. 

          
        

        - **CreatedAt** *(datetime) --* 

          The Unix datetime that the thesaurus was created.

          
        

        - **UpdatedAt** *(datetime) --* 

          The Unix datetime that the thesaurus was last updated.

          
        

        - **RoleArn** *(string) --* 

          An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access thesaurus file specified in ``SourceS3Path`` . 

          
        

        - **SourceS3Path** *(dict) --* 

          Information required to find a specific file in an Amazon S3 bucket.

          
          

          - **Bucket** *(string) --* 

            The name of the S3 bucket that contains the file.

            
          

          - **Key** *(string) --* 

            The name of the file.

            
      
        

        - **FileSizeBytes** *(integer) --* 

          The size of the thesaurus file in bytes.

          
        

        - **TermCount** *(integer) --* 

          The number of unique terms in the thesaurus file. For example, the synonyms ``a,b,c`` and ``a=>d`` , the term count would be 4. 

          
        

        - **SynonymRuleCount** *(integer) --* 

          The number of synonym rules in the thesaurus file.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_query_suggestions(**kwargs)

    

    Fetches the queries that are suggested to your users.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/GetQuerySuggestions>`_    


    **Request Syntax** 
    ::

      response = client.get_query_suggestions(
          IndexId='string',
          QueryText='string',
          MaxSuggestionsCount=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to get query suggestions from.

      

    
    :type QueryText: string
    :param QueryText: **[REQUIRED]** 

      The text of a user's query to generate query suggestions.

       

      A query is suggested if the query prefix matches what a user starts to type as their query.

       

      Amazon Kendra does not show any suggestions if a user types fewer than two characters or more than 60 characters. A query must also have at least one search result and contain at least one word of more than four characters.

      

    
    :type MaxSuggestionsCount: integer
    :param MaxSuggestionsCount: 

      The maximum number of query suggestions you want to show to your users.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'QuerySuggestionsId': 'string',
            'Suggestions': [
                {
                    'Id': 'string',
                    'Value': {
                        'Text': {
                            'Text': 'string',
                            'Highlights': [
                                {
                                    'BeginOffset': 123,
                                    'EndOffset': 123
                                },
                            ]
                        }
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **QuerySuggestionsId** *(string) --* 

          The unique identifier for a list of query suggestions for an index.

          
        

        - **Suggestions** *(list) --* 

          A list of query suggestions for an index.

          
          

          - *(dict) --* 

            A single query suggestion.

            
            

            - **Id** *(string) --* 

              The unique UUID (universally unique identifier) of a single query suggestion.

              
            

            - **Value** *(dict) --* 

              The value for the unique UUID (universally unique identifier) of a single query suggestion.

               

              The value is the text string of a suggestion.

              
              

              - **Text** *(dict) --* 

                The ``SuggestionTextWithHighlights`` structure that contains the query suggestion text and highlights.

                
                

                - **Text** *(string) --* 

                  The query suggestion text to display to the user.

                  
                

                - **Highlights** *(list) --* 

                  The beginning and end of the query suggestion text that should be highlighted.

                  
                  

                  - *(dict) --* 

                    The text highlights for a single query suggestion.

                    
                    

                    - **BeginOffset** *(integer) --* 

                      The zero-based location in the response string where the highlight starts.

                      
                    

                    - **EndOffset** *(integer) --* 

                      The zero-based location in the response string where the highlight ends.

                      
                
              
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_data_source_sync_jobs(**kwargs)

    

    Gets statistics about synchronizing Amazon Kendra with a data source.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListDataSourceSyncJobs>`_    


    **Request Syntax** 
    ::

      response = client.list_data_source_sync_jobs(
          Id='string',
          IndexId='string',
          NextToken='string',
          MaxResults=123,
          StartTimeFilter={
              'StartTime': datetime(2015, 1, 1),
              'EndTime': datetime(2015, 1, 1)
          },
          StatusFilter='FAILED'|'SUCCEEDED'|'SYNCING'|'INCOMPLETE'|'STOPPING'|'ABORTED'|'SYNCING_INDEXING'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the data source.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the data source.

      

    
    :type NextToken: string
    :param NextToken: 

      If the result of the previous request to ``GetDataSourceSyncJobHistory`` was truncated, include the ``NextToken`` to fetch the next set of jobs.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of synchronization jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.

      

    
    :type StartTimeFilter: dict
    :param StartTimeFilter: 

      When specified, the synchronization jobs returned in the list are limited to jobs between the specified dates. 

      

    
      - **StartTime** *(datetime) --* 

        The UNIX datetime of the beginning of the time range.

        

      
      - **EndTime** *(datetime) --* 

        The UNIX datetime of the end of the time range.

        

      
    
    :type StatusFilter: string
    :param StatusFilter: 

      When specified, only returns synchronization jobs with the ``Status`` field equal to the specified status.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'History': [
                {
                    'ExecutionId': 'string',
                    'StartTime': datetime(2015, 1, 1),
                    'EndTime': datetime(2015, 1, 1),
                    'Status': 'FAILED'|'SUCCEEDED'|'SYNCING'|'INCOMPLETE'|'STOPPING'|'ABORTED'|'SYNCING_INDEXING',
                    'ErrorMessage': 'string',
                    'ErrorCode': 'InternalError'|'InvalidRequest',
                    'DataSourceErrorCode': 'string',
                    'Metrics': {
                        'DocumentsAdded': 'string',
                        'DocumentsModified': 'string',
                        'DocumentsDeleted': 'string',
                        'DocumentsFailed': 'string',
                        'DocumentsScanned': 'string'
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **History** *(list) --* 

          A history of synchronization jobs for the data source.

          
          

          - *(dict) --* 

            Provides information about a synchronization job.

            
            

            - **ExecutionId** *(string) --* 

              A unique identifier for the synchronization job.

              
            

            - **StartTime** *(datetime) --* 

              The UNIX datetime that the synchronization job was started.

              
            

            - **EndTime** *(datetime) --* 

              The UNIX datetime that the synchronization job was completed.

              
            

            - **Status** *(string) --* 

              The execution status of the synchronization job. When the ``Status`` field is set to ``SUCCEEDED`` , the synchronization job is done. If the status code is set to ``FAILED`` , the ``ErrorCode`` and ``ErrorMessage`` fields give you the reason for the failure.

              
            

            - **ErrorMessage** *(string) --* 

              If the ``Status`` field is set to ``ERROR`` , the ``ErrorMessage`` field contains a description of the error that caused the synchronization to fail.

              
            

            - **ErrorCode** *(string) --* 

              If the ``Status`` field is set to ``FAILED`` , the ``ErrorCode`` field contains a the reason that the synchronization failed.

              
            

            - **DataSourceErrorCode** *(string) --* 

              If the reason that the synchronization failed is due to an error with the underlying data source, this field contains a code that identifies the error.

              
            

            - **Metrics** *(dict) --* 

              Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.

              
              

              - **DocumentsAdded** *(string) --* 

                The number of documents added from the data source up to now in the data source sync.

                
              

              - **DocumentsModified** *(string) --* 

                The number of documents modified in the data source up to now in the data source sync run.

                
              

              - **DocumentsDeleted** *(string) --* 

                The number of documents deleted from the data source up to now in the data source sync run.

                
              

              - **DocumentsFailed** *(string) --* 

                The number of documents that failed to sync from the data source up to now in the data source sync run.

                
              

              - **DocumentsScanned** *(string) --* 

                The current number of documents crawled by the current sync job in the data source.

                
          
        
      
        

        - **NextToken** *(string) --* 

          The ``GetDataSourceSyncJobHistory`` operation returns a page of vocabularies at a time. The maximum size of the page is set by the ``MaxResults`` parameter. If there are more jobs in the list than the page size, Amazon Kendra returns the NextPage token. Include the token in the next request to the ``GetDataSourceSyncJobHistory`` operation to return in the next page of jobs.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_data_sources(**kwargs)

    

    Lists the data sources that you have created.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListDataSources>`_    


    **Request Syntax** 
    ::

      response = client.list_data_sources(
          IndexId='string',
          NextToken='string',
          MaxResults=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the data source.

      

    
    :type NextToken: string
    :param NextToken: 

      If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of data sources (``DataSourceSummaryItems`` ). 

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of data sources to return.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SummaryItems': [
                {
                    'Name': 'string',
                    'Id': 'string',
                    'Type': 'S3'|'SHAREPOINT'|'DATABASE'|'SALESFORCE'|'ONEDRIVE'|'SERVICENOW'|'CUSTOM'|'CONFLUENCE'|'GOOGLEDRIVE'|'WEBCRAWLER'|'WORKDOCS',
                    'CreatedAt': datetime(2015, 1, 1),
                    'UpdatedAt': datetime(2015, 1, 1),
                    'Status': 'CREATING'|'DELETING'|'FAILED'|'UPDATING'|'ACTIVE'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SummaryItems** *(list) --* 

          An array of summary information for one or more data sources.

          
          

          - *(dict) --* 

            Summary information for a Amazon Kendra data source. Returned in a call to the ``DescribeDataSource`` operation.

            
            

            - **Name** *(string) --* 

              The name of the data source.

              
            

            - **Id** *(string) --* 

              The unique identifier for the data source.

              
            

            - **Type** *(string) --* 

              The type of the data source.

              
            

            - **CreatedAt** *(datetime) --* 

              The UNIX datetime that the data source was created.

              
            

            - **UpdatedAt** *(datetime) --* 

              The UNIX datetime that the data source was lasted updated. 

              
            

            - **Status** *(string) --* 

              The status of the data source. When the status is ``ACTIVE`` the data source is ready to use.

              
        
      
        

        - **NextToken** *(string) --* 

          If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of data sources. 

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_faqs(**kwargs)

    

    Gets a list of FAQ lists associated with an index.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListFaqs>`_    


    **Request Syntax** 
    ::

      response = client.list_faqs(
          IndexId='string',
          NextToken='string',
          MaxResults=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The index that contains the FAQ lists.

      

    
    :type NextToken: string
    :param NextToken: 

      If the result of the previous request to ``ListFaqs`` was truncated, include the ``NextToken`` to fetch the next set of FAQs.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of FAQs to return in the response. If there are fewer results in the list, this response contains only the actual results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'FaqSummaryItems': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Status': 'CREATING'|'UPDATING'|'ACTIVE'|'DELETING'|'FAILED',
                    'CreatedAt': datetime(2015, 1, 1),
                    'UpdatedAt': datetime(2015, 1, 1),
                    'FileFormat': 'CSV'|'CSV_WITH_HEADER'|'JSON'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The ``ListFaqs`` operation returns a page of FAQs at a time. The maximum size of the page is set by the ``MaxResults`` parameter. If there are more jobs in the list than the page size, Amazon Kendra returns the ``NextPage`` token. Include the token in the next request to the ``ListFaqs`` operation to return the next page of FAQs.

          
        

        - **FaqSummaryItems** *(list) --* 

          information about the FAQs associated with the specified index.

          
          

          - *(dict) --* 

            Provides information about a frequently asked questions and answer contained in an index.

            
            

            - **Id** *(string) --* 

              The unique identifier of the FAQ.

              
            

            - **Name** *(string) --* 

              The name that you assigned the FAQ when you created or updated the FAQ.

              
            

            - **Status** *(string) --* 

              The current status of the FAQ. When the status is ``ACTIVE`` the FAQ is ready for use.

              
            

            - **CreatedAt** *(datetime) --* 

              The UNIX datetime that the FAQ was added to the index.

              
            

            - **UpdatedAt** *(datetime) --* 

              The UNIX datetime that the FAQ was last updated.

              
            

            - **FileFormat** *(string) --* 

              The file type used to create the FAQ. 

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_groups_older_than_ordering_id(**kwargs)

    

    Provides a list of groups that are mapped to users before a given ordering or timestamp identifier.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListGroupsOlderThanOrderingId>`_    


    **Request Syntax** 
    ::

      response = client.list_groups_older_than_ordering_id(
          IndexId='string',
          DataSourceId='string',
          OrderingId=123,
          NextToken='string',
          MaxResults=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index for getting a list of groups mapped to users before a given ordering or timestamp identifier.

      

    
    :type DataSourceId: string
    :param DataSourceId: 

      The identifier of the data source for getting a list of groups mapped to users before a given ordering timestamp identifier.

      

    
    :type OrderingId: integer
    :param OrderingId: **[REQUIRED]** 

      The timestamp identifier used for the latest ``PUT`` or ``DELETE`` action for mapping users to their groups.

      

    
    :type NextToken: string
    :param NextToken: 

      The next items in the list of groups that go beyond the maximum. 

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum results shown for a list of groups that are mapped to users before a given ordering or timestamp identifier. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GroupsSummaries': [
                {
                    'GroupId': 'string',
                    'OrderingId': 123
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GroupsSummaries** *(list) --* 

          Summary information for list of groups that are mapped to users before a given ordering or timestamp identifier. 

          
          

          - *(dict) --* 

            Group summary information. 

            
            

            - **GroupId** *(string) --* 

              The identifier of the group you want group summary information on. 

              
            

            - **OrderingId** *(integer) --* 

              The timestamp identifier used for the latest ``PUT`` or ``DELETE`` action. 

              
        
      
        

        - **NextToken** *(string) --* 

          The next items in the list of groups that go beyond the maximum. 

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_indices(**kwargs)

    

    Lists the Amazon Kendra indexes that you have created.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListIndices>`_    


    **Request Syntax** 
    ::

      response = client.list_indices(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of indexes (``DataSourceSummaryItems`` ). 

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of data sources to return.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'IndexConfigurationSummaryItems': [
                {
                    'Name': 'string',
                    'Id': 'string',
                    'Edition': 'DEVELOPER_EDITION'|'ENTERPRISE_EDITION',
                    'CreatedAt': datetime(2015, 1, 1),
                    'UpdatedAt': datetime(2015, 1, 1),
                    'Status': 'CREATING'|'ACTIVE'|'DELETING'|'FAILED'|'UPDATING'|'SYSTEM_UPDATING'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **IndexConfigurationSummaryItems** *(list) --* 

          An array of summary information for one or more indexes.

          
          

          - *(dict) --* 

            A summary of information about an index.

            
            

            - **Name** *(string) --* 

              The name of the index.

              
            

            - **Id** *(string) --* 

              A unique identifier for the index. Use this to identify the index when you are using operations such as ``Query`` , ``DescribeIndex`` , ``UpdateIndex`` , and ``DeleteIndex`` .

              
            

            - **Edition** *(string) --* 

              Indicates whether the index is a enterprise edition index or a developer edition index. 

              
            

            - **CreatedAt** *(datetime) --* 

              The Unix timestamp when the index was created.

              
            

            - **UpdatedAt** *(datetime) --* 

              The Unix timestamp when the index was last updated by the ``UpdateIndex`` operation.

              
            

            - **Status** *(string) --* 

              The current status of the index. When the status is ``ACTIVE`` , the index is ready to search.

              
        
      
        

        - **NextToken** *(string) --* 

          If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of indexes.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_query_suggestions_block_lists(**kwargs)

    

    Lists the block lists used for query suggestions for an index.

     

    For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListQuerySuggestionsBlockLists>`_    


    **Request Syntax** 
    ::

      response = client.list_query_suggestions_block_lists(
          IndexId='string',
          NextToken='string',
          MaxResults=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index for a list of all block lists that exist for that index.

       

      For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

      

    
    :type NextToken: string
    :param NextToken: 

      If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of block lists (``BlockListSummaryItems`` ).

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of block lists to return.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BlockListSummaryItems': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Status': 'ACTIVE'|'CREATING'|'DELETING'|'UPDATING'|'ACTIVE_BUT_UPDATE_FAILED'|'FAILED',
                    'CreatedAt': datetime(2015, 1, 1),
                    'UpdatedAt': datetime(2015, 1, 1),
                    'ItemCount': 123
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BlockListSummaryItems** *(list) --* 

          Summary items for a block list.

           

          This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.

           

          For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

          
          

          - *(dict) --* 

            Summary information on a query suggestions block list.

             

            This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.

             

            For information on the current quota limits for block lists, see `Quotas for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/quotas.html>`__ .

            
            

            - **Id** *(string) --* 

              The identifier of a block list.

              
            

            - **Name** *(string) --* 

              The name of the block list.

              
            

            - **Status** *(string) --* 

              The status of the block list.

              
            

            - **CreatedAt** *(datetime) --* 

              The date-time summary information for a query suggestions block list was last created.

              
            

            - **UpdatedAt** *(datetime) --* 

              The date-time the block list was last updated.

              
            

            - **ItemCount** *(integer) --* 

              The number of items in the block list file.

              
        
      
        

        - **NextToken** *(string) --* 

          If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_tags_for_resource(**kwargs)

    

    Gets a list of tags associated with a specified resource. Indexes, FAQs, and data sources can have tags associated with them.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          ResourceARN='string'
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the index, FAQ, or data source to get a list of tags for.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Tags': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Tags** *(list) --* 

          A list of tags associated with the index, FAQ, or data source.

          
          

          - *(dict) --* 

            A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

            
            

            - **Key** *(string) --* 

              The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

              
            

            - **Value** *(string) --* 

              The value associated with the tag. The value may be an empty string but it can't be null.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceUnavailableException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: list_thesauri(**kwargs)

    

    Lists the Amazon Kendra thesauri associated with an index.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/ListThesauri>`_    


    **Request Syntax** 
    ::

      response = client.list_thesauri(
          IndexId='string',
          NextToken='string',
          MaxResults=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index associated with the thesaurus to list.

      

    
    :type NextToken: string
    :param NextToken: 

      If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of thesauri (``ThesaurusSummaryItems`` ). 

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of thesauri to return.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'ThesaurusSummaryItems': [
                {
                    'Id': 'string',
                    'Name': 'string',
                    'Status': 'CREATING'|'ACTIVE'|'DELETING'|'UPDATING'|'ACTIVE_BUT_UPDATE_FAILED'|'FAILED',
                    'CreatedAt': datetime(2015, 1, 1),
                    'UpdatedAt': datetime(2015, 1, 1)
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of thesauri. 

          
        

        - **ThesaurusSummaryItems** *(list) --* 

          An array of summary information for one or more thesauruses.

          
          

          - *(dict) --* 

            An array of summary information for one or more thesauruses.

            
            

            - **Id** *(string) --* 

              The identifier of the thesaurus.

              
            

            - **Name** *(string) --* 

              The name of the thesaurus.

              
            

            - **Status** *(string) --* 

              The status of the thesaurus.

              
            

            - **CreatedAt** *(datetime) --* 

              The Unix datetime that the thesaurus was created.

              
            

            - **UpdatedAt** *(datetime) --* 

              The Unix datetime that the thesaurus was last updated.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: put_principal_mapping(**kwargs)

    

    Maps users to their groups. You can also map sub groups to groups. For example, the group "Company Intellectual Property Teams" includes sub groups "Research" and "Engineering". These sub groups include their own list of users or people who work in these teams. Only users who work in research and engineering, and therefore belong in the intellectual property group, can see top-secret company documents in their search results. 

     

    You map users to their groups when you want to filter search results for different users based on their group’s access to documents. For more information on filtering search results for different users, see `Filtering on user context <https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html>`__ .

     

    If more than five ``PUT`` actions for a group are currently processing, a validation exception is thrown.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/PutPrincipalMapping>`_    


    **Request Syntax** 
    ::

      response = client.put_principal_mapping(
          IndexId='string',
          DataSourceId='string',
          GroupId='string',
          GroupMembers={
              'MemberGroups': [
                  {
                      'GroupId': 'string',
                      'DataSourceId': 'string'
                  },
              ],
              'MemberUsers': [
                  {
                      'UserId': 'string'
                  },
              ],
              'S3PathforGroupMembers': {
                  'Bucket': 'string',
                  'Key': 'string'
              }
          },
          OrderingId=123,
          RoleArn='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to map users to their groups.

      

    
    :type DataSourceId: string
    :param DataSourceId: 

      The identifier of the data source you want to map users to their groups.

       

      This is useful if a group is tied to multiple data sources, but you only want the group to access documents of a certain data source. For example, the groups "Research", "Engineering", and "Sales and Marketing" are all tied to the company's documents stored in the data sources Confluence and Salesforce. However, "Sales and Marketing" team only needs access to customer-related documents stored in Salesforce.

      

    
    :type GroupId: string
    :param GroupId: **[REQUIRED]** 

      The identifier of the group you want to map its users to.

      

    
    :type GroupMembers: dict
    :param GroupMembers: **[REQUIRED]** 

      The list that contains your users or sub groups that belong the same group.

       

      For example, the group "Company" includes the user "CEO" and the sub groups "Research", "Engineering", and "Sales and Marketing".

       

      If you have more than 1000 users and/or sub groups for a single group, you need to provide the path to the S3 file that lists your users and sub groups for a group. Your sub groups can contain more than 1000 users, but the list of sub groups that belong to a group (and/or users) must be no more than 1000.

      

    
      - **MemberGroups** *(list) --* 

        A list of sub groups that belong to a group. For example, the sub groups "Research", "Engineering", and "Sales and Marketing" all belong to the group "Company".

        

      
        - *(dict) --* 

          The sub groups that belong to a group.

          

        
          - **GroupId** *(string) --* **[REQUIRED]** 

            The identifier of the sub group you want to map to a group.

            

          
          - **DataSourceId** *(string) --* 

            The identifier of the data source for the sub group you want to map to a group.

            

          
        
    
      - **MemberUsers** *(list) --* 

        A list of users that belong to a group. For example, a list of interns all belong to the "Interns" group.

        

      
        - *(dict) --* 

          The users that belong to a group.

          

        
          - **UserId** *(string) --* **[REQUIRED]** 

            The identifier of the user you want to map to a group.

            

          
        
    
      - **S3PathforGroupMembers** *(dict) --* 

        If you have more than 1000 users and/or sub groups for a single group, you need to provide the path to the S3 file that lists your users and sub groups for a group. Your sub groups can contain more than 1000 users, but the list of sub groups that belong to a group (and/or users) must be no more than 1000.

        

      
        - **Bucket** *(string) --* **[REQUIRED]** 

          The name of the S3 bucket that contains the file.

          

        
        - **Key** *(string) --* **[REQUIRED]** 

          The name of the file.

          

        
      
    
    :type OrderingId: integer
    :param OrderingId: 

      The timestamp identifier you specify to ensure Amazon Kendra does not override the latest ``PUT`` action with previous actions. The highest number ID, which is the ordering ID, is the latest action you want to process and apply on top of other actions with lower number IDs. This prevents previous actions with lower number IDs from possibly overriding the latest action.

       

      The ordering ID can be the UNIX time of the last update you made to a group members list. You would then provide this list when calling ``PutPrincipalMapping`` . This ensures your ``PUT`` action for that updated group with the latest members list doesn't get overwritten by earlier ``PUT`` actions for the same group which are yet to be processed.

       

      The default ordering ID is the current UNIX time in milliseconds that the action was received by Amazon Kendra.

      

    
    :type RoleArn: string
    :param RoleArn: 

      The Amazon Resource Name (ARN) of a role that has access to the S3 file that contains your list of users or sub groups that belong to a group.

       

      For more information, see `IAM roles for Amazon Kendra <https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html#iam-roles-ds>`__ .

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: query(**kwargs)

    

    Searches an active index. Use this API to search your documents using query. The ``Query`` operation enables to do faceted search and to filter results based on document attributes.

     

    It also enables you to provide user context that Amazon Kendra uses to enforce document access control in the search results. 

     

    Amazon Kendra searches your index for text content and question and answer (FAQ) content. By default the response contains three types of results.

     

     
    * Relevant passages 
     
    * Matching FAQs 
     
    * Relevant documents 
     

     

    You can specify that the query return only one type of result using the ``QueryResultTypeConfig`` parameter.

     

    Each query returns the 100 most relevant results. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/Query>`_    


    **Request Syntax** 
    ::

      response = client.query(
          IndexId='string',
          QueryText='string',
          AttributeFilter={
              'AndAllFilters': [
                  {'... recursive ...'},
              ],
              'OrAllFilters': [
                  {'... recursive ...'},
              ],
              'NotFilter': {'... recursive ...'},
              'EqualsTo': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              },
              'ContainsAll': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              },
              'ContainsAny': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              },
              'GreaterThan': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              },
              'GreaterThanOrEquals': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              },
              'LessThan': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              },
              'LessThanOrEquals': {
                  'Key': 'string',
                  'Value': {
                      'StringValue': 'string',
                      'StringListValue': [
                          'string',
                      ],
                      'LongValue': 123,
                      'DateValue': datetime(2015, 1, 1)
                  }
              }
          },
          Facets=[
              {
                  'DocumentAttributeKey': 'string'
              },
          ],
          RequestedDocumentAttributes=[
              'string',
          ],
          QueryResultTypeFilter='DOCUMENT'|'QUESTION_ANSWER'|'ANSWER',
          DocumentRelevanceOverrideConfigurations=[
              {
                  'Name': 'string',
                  'Relevance': {
                      'Freshness': True|False,
                      'Importance': 123,
                      'Duration': 'string',
                      'RankOrder': 'ASCENDING'|'DESCENDING',
                      'ValueImportanceMap': {
                          'string': 123
                      }
                  }
              },
          ],
          PageNumber=123,
          PageSize=123,
          SortingConfiguration={
              'DocumentAttributeKey': 'string',
              'SortOrder': 'DESC'|'ASC'
          },
          UserContext={
              'Token': 'string',
              'UserId': 'string',
              'Groups': [
                  'string',
              ],
              'DataSourceGroups': [
                  {
                      'GroupId': 'string',
                      'DataSourceId': 'string'
                  },
              ]
          },
          VisitorId='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The unique identifier of the index to search. The identifier is returned in the response from the ``CreateIndex`` operation.

      

    
    :type QueryText: string
    :param QueryText: **[REQUIRED]** 

      The text to search for.

      

    
    :type AttributeFilter: dict
    :param AttributeFilter: 

      Enables filtered searches based on document attributes. You can only provide one attribute filter; however, the ``AndAllFilters`` , ``NotFilter`` , and ``OrAllFilters`` parameters contain a list of other filters.

       

      The ``AttributeFilter`` parameter enables you to create a set of filtering rules that a document must satisfy to be included in the query results.

      

    
      - **AndAllFilters** *(list) --* 

        Performs a logical ``AND`` operation on all supplied filters.

        

      
        - *(dict) --* 

          Provides filtering the query results based on document attributes.

           

          When you use the ``AndAllFilters`` or ``OrAllFilters`` , filters you can use 2 layers under the first attribute filter. For example, you can use:

           

           ``<AndAllFilters>``  

           

           
          * ``<OrAllFilters>``   
           
          * ``<EqualTo>``   
           

           

          If you use more than 2 layers, you receive a ``ValidationException`` exception with the message "``AttributeFilter`` cannot have a depth of more than 2."

           

          If you use more than 10 attribute filters, you receive a ``ValidationException`` exception with the message "``AttributeFilter`` cannot have a length of more than 10".

          

        
    
      - **OrAllFilters** *(list) --* 

        Performs a logical ``OR`` operation on all supplied filters.

        

      
        - *(dict) --* 

          Provides filtering the query results based on document attributes.

           

          When you use the ``AndAllFilters`` or ``OrAllFilters`` , filters you can use 2 layers under the first attribute filter. For example, you can use:

           

           ``<AndAllFilters>``  

           

           
          * ``<OrAllFilters>``   
           
          * ``<EqualTo>``   
           

           

          If you use more than 2 layers, you receive a ``ValidationException`` exception with the message "``AttributeFilter`` cannot have a depth of more than 2."

           

          If you use more than 10 attribute filters, you receive a ``ValidationException`` exception with the message "``AttributeFilter`` cannot have a length of more than 10".

          

        
    
      - **NotFilter** *(dict) --* 

        Performs a logical ``NOT`` operation on all supplied filters.

        

      
      - **EqualsTo** *(dict) --* 

        Performs an equals operation on two document attributes.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
      - **ContainsAll** *(dict) --* 

        Returns true when a document contains all of the specified document attributes. This filter is only applicable to ``StringListValue`` metadata.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
      - **ContainsAny** *(dict) --* 

        Returns true when a document contains any of the specified document attributes. This filter is only applicable to ``StringListValue`` metadata.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
      - **GreaterThan** *(dict) --* 

        Performs a greater than operation on two document attributes. Use with a document attribute of type ``Integer`` or ``Long`` .

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
      - **GreaterThanOrEquals** *(dict) --* 

        Performs a greater or equals than operation on two document attributes. Use with a document attribute of type ``Integer`` or ``Long`` .

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
      - **LessThan** *(dict) --* 

        Performs a less than operation on two document attributes. Use with a document attribute of type ``Integer`` or ``Long`` .

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
      - **LessThanOrEquals** *(dict) --* 

        Performs a less than or equals operation on two document attributes. Use with a document attribute of type ``Integer`` or ``Long`` .

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The identifier for the attribute.

          

        
        - **Value** *(dict) --* **[REQUIRED]** 

          The value of the attribute.

          

        
          - **StringValue** *(string) --* 

            A string, such as "department".

            

          
          - **StringListValue** *(list) --* 

            A list of strings. 

            

          
            - *(string) --* 

            
        
          - **LongValue** *(integer) --* 

            A long integer value.

            

          
          - **DateValue** *(datetime) --* 

            A date expressed as an ISO 8601 string.

             

            It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

            

          
        
      
    
    :type Facets: list
    :param Facets: 

      An array of documents attributes. Amazon Kendra returns a count for each attribute key specified. You can use this information to help narrow the search for your user.

      

    
      - *(dict) --* 

        Information about a document attribute

        

      
        - **DocumentAttributeKey** *(string) --* 

          The unique key for the document attribute.

          

        
      
  
    :type RequestedDocumentAttributes: list
    :param RequestedDocumentAttributes: 

      An array of document attributes to include in the response. No other document attributes are included in the response. By default all document attributes are included in the response. 

      

    
      - *(string) --* 

      
  
    :type QueryResultTypeFilter: string
    :param QueryResultTypeFilter: 

      Sets the type of query. Only results for the specified query type are returned.

      

    
    :type DocumentRelevanceOverrideConfigurations: list
    :param DocumentRelevanceOverrideConfigurations: 

      Overrides relevance tuning configurations of fields or attributes set at the index level.

       

      If you use this API to override the relevance tuning configured at the index level, but there is no relevance tuning configured at the index level, then Amazon Kendra does not apply any relevance tuning.

       

      If there is relevance tuning configured at the index level, but you do not use this API to override any relevance tuning in the index, then Amazon Kendra uses the relevance tuning that is configured at the index level.

       

      If there is relevance tuning configured for fields at the index level, but you use this API to override only some of these fields, then for the fields you did not override, the importance is set to 1.

      

    
      - *(dict) --* 

        Overrides the document relevance properties of a custom index field.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the tuning configuration to override document relevance at the index level.

          

        
        - **Relevance** *(dict) --* **[REQUIRED]** 

          Provides information for manually tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.

          

        
          - **Freshness** *(boolean) --* 

            Indicates that this field determines how "fresh" a document is. For example, if document 1 was created on November 5, and document 2 was created on October 31, document 1 is "fresher" than document 2. You can only set the ``Freshness`` field on one ``DATE`` type field. Only applies to ``DATE`` fields.

            

          
          - **Importance** *(integer) --* 

            The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers.

            

          
          - **Duration** *(string) --* 

            Specifies the time period that the boost applies to. For example, to make the boost apply to documents with the field value within the last month, you would use "2628000s". Once the field value is beyond the specified range, the effect of the boost drops off. The higher the importance, the faster the effect drops off. If you don't specify a value, the default is 3 months. The value of the field is a numeric string followed by the character "s", for example "86400s" for one day, or "604800s" for one week. 

             

            Only applies to ``DATE`` fields.

            

          
          - **RankOrder** *(string) --* 

            Determines how values should be interpreted.

             

            When the ``RankOrder`` field is ``ASCENDING`` , higher numbers are better. For example, a document with a rating score of 10 is higher ranking than a document with a rating score of 1.

             

            When the ``RankOrder`` field is ``DESCENDING`` , lower numbers are better. For example, in a task tracking application, a priority 1 task is more important than a priority 5 task.

             

            Only applies to ``LONG`` and ``DOUBLE`` fields.

            

          
          - **ValueImportanceMap** *(dict) --* 

            A list of values that should be given a different boost when they appear in the result list. For example, if you are boosting a field called "department," query terms that match the department field are boosted in the result. However, you can add entries from the department field to boost documents with those values higher. 

             

            For example, you can add entries to the map with names of departments. If you add "HR",5 and "Legal",3 those departments are given special attention when they appear in the metadata of a document. When those terms appear they are given the specified importance instead of the regular importance for the boost.

            

          
            - *(string) --* 

            
              - *(integer) --* 

              
        
      
        
      
  
    :type PageNumber: integer
    :param PageNumber: 

      Query results are returned in pages the size of the ``PageSize`` parameter. By default, Amazon Kendra returns the first page of results. Use this parameter to get result pages after the first one.

      

    
    :type PageSize: integer
    :param PageSize: 

      Sets the number of results that are returned in each page of results. The default page size is 10. The maximum number of results returned is 100. If you ask for more than 100 results, only 100 are returned.

      

    
    :type SortingConfiguration: dict
    :param SortingConfiguration: 

      Provides information that determines how the results of the query are sorted. You can set the field that Amazon Kendra should sort the results on, and specify whether the results should be sorted in ascending or descending order. In the case of ties in sorting the results, the results are sorted by relevance.

       

      If you don't provide sorting configuration, the results are sorted by the relevance that Amazon Kendra determines for the result.

      

    
      - **DocumentAttributeKey** *(string) --* **[REQUIRED]** 

        The name of the document attribute used to sort the response. You can use any field that has the ``Sortable`` flag set to true.

         

        You can also sort by any of the following built-in attributes:

         

         
        * _category 
         
        * _created_at 
         
        * _last_updated_at 
         
        * _version 
         
        * _view_count 
         

        

      
      - **SortOrder** *(string) --* **[REQUIRED]** 

        The order that the results should be returned in. In case of ties, the relevance assigned to the result by Amazon Kendra is used as the tie-breaker.

        

      
    
    :type UserContext: dict
    :param UserContext: 

      The user context token.

      

    
      - **Token** *(string) --* 

        The user context token for filtering search results for a user. It must be a JWT or a JSON token.

        

      
      - **UserId** *(string) --* 

        The identifier of the user you want to filter search results based on their access to documents.

        

      
      - **Groups** *(list) --* 

        The list of groups you want to filter search results based on the groups' access to documents.

        

      
        - *(string) --* 

        
    
      - **DataSourceGroups** *(list) --* 

        The list of data source groups you want to filter search results based on groups' access to documents in that data source.

        

      
        - *(dict) --* 

          Data source information for user context filtering. 

          

        
          - **GroupId** *(string) --* **[REQUIRED]** 

            The identifier of the group you want to add to your list of groups. This is for filtering search results based on the groups' access to documents.

            

          
          - **DataSourceId** *(string) --* **[REQUIRED]** 

            The identifier of the data source group you want to add to your list of data source groups. This is for filtering search results based on the groups' access to documents in that data source.

            

          
        
    
    
    :type VisitorId: string
    :param VisitorId: 

      Provides an identifier for a specific user. The ``VisitorId`` should be a unique identifier, such as a GUID. Don't use personally identifiable information, such as the user's email address, as the ``VisitorId`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'QueryId': 'string',
            'ResultItems': [
                {
                    'Id': 'string',
                    'Type': 'DOCUMENT'|'QUESTION_ANSWER'|'ANSWER',
                    'AdditionalAttributes': [
                        {
                            'Key': 'string',
                            'ValueType': 'TEXT_WITH_HIGHLIGHTS_VALUE',
                            'Value': {
                                'TextWithHighlightsValue': {
                                    'Text': 'string',
                                    'Highlights': [
                                        {
                                            'BeginOffset': 123,
                                            'EndOffset': 123,
                                            'TopAnswer': True|False,
                                            'Type': 'STANDARD'|'THESAURUS_SYNONYM'
                                        },
                                    ]
                                }
                            }
                        },
                    ],
                    'DocumentId': 'string',
                    'DocumentTitle': {
                        'Text': 'string',
                        'Highlights': [
                            {
                                'BeginOffset': 123,
                                'EndOffset': 123,
                                'TopAnswer': True|False,
                                'Type': 'STANDARD'|'THESAURUS_SYNONYM'
                            },
                        ]
                    },
                    'DocumentExcerpt': {
                        'Text': 'string',
                        'Highlights': [
                            {
                                'BeginOffset': 123,
                                'EndOffset': 123,
                                'TopAnswer': True|False,
                                'Type': 'STANDARD'|'THESAURUS_SYNONYM'
                            },
                        ]
                    },
                    'DocumentURI': 'string',
                    'DocumentAttributes': [
                        {
                            'Key': 'string',
                            'Value': {
                                'StringValue': 'string',
                                'StringListValue': [
                                    'string',
                                ],
                                'LongValue': 123,
                                'DateValue': datetime(2015, 1, 1)
                            }
                        },
                    ],
                    'ScoreAttributes': {
                        'ScoreConfidence': 'VERY_HIGH'|'HIGH'|'MEDIUM'|'LOW'
                    },
                    'FeedbackToken': 'string'
                },
            ],
            'FacetResults': [
                {
                    'DocumentAttributeKey': 'string',
                    'DocumentAttributeValueType': 'STRING_VALUE'|'STRING_LIST_VALUE'|'LONG_VALUE'|'DATE_VALUE',
                    'DocumentAttributeValueCountPairs': [
                        {
                            'DocumentAttributeValue': {
                                'StringValue': 'string',
                                'StringListValue': [
                                    'string',
                                ],
                                'LongValue': 123,
                                'DateValue': datetime(2015, 1, 1)
                            },
                            'Count': 123
                        },
                    ]
                },
            ],
            'TotalNumberOfResults': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **QueryId** *(string) --* 

          The unique identifier for the search. You use ``QueryId`` to identify the search when using the feedback API.

          
        

        - **ResultItems** *(list) --* 

          The results of the search.

          
          

          - *(dict) --* 

            A single query result.

             

            A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.

            
            

            - **Id** *(string) --* 

              The unique identifier for the query result.

              
            

            - **Type** *(string) --* 

              The type of document. 

              
            

            - **AdditionalAttributes** *(list) --* 

              One or more additional attributes associated with the query result.

              
              

              - *(dict) --* 

                An attribute returned from an index query.

                
                

                - **Key** *(string) --* 

                  The key that identifies the attribute.

                  
                

                - **ValueType** *(string) --* 

                  The data type of the ``Value`` property.

                  
                

                - **Value** *(dict) --* 

                  An object that contains the attribute value.

                  
                  

                  - **TextWithHighlightsValue** *(dict) --* 

                    The text associated with the attribute and information about the highlight to apply to the text.

                    
                    

                    - **Text** *(string) --* 

                      The text to display to the user.

                      
                    

                    - **Highlights** *(list) --* 

                      The beginning and end of the text that should be highlighted.

                      
                      

                      - *(dict) --* 

                        Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.

                        
                        

                        - **BeginOffset** *(integer) --* 

                          The zero-based location in the response string where the highlight starts.

                          
                        

                        - **EndOffset** *(integer) --* 

                          The zero-based location in the response string where the highlight ends.

                          
                        

                        - **TopAnswer** *(boolean) --* 

                          Indicates whether the response is the best response. True if this is the best response; otherwise, false.

                          
                        

                        - **Type** *(string) --* 

                          The highlight type. 

                          
                    
                  
                
              
            
          
            

            - **DocumentId** *(string) --* 

              The unique identifier for the document.

              
            

            - **DocumentTitle** *(dict) --* 

              The title of the document. Contains the text of the title and information for highlighting the relevant terms in the title.

              
              

              - **Text** *(string) --* 

                The text to display to the user.

                
              

              - **Highlights** *(list) --* 

                The beginning and end of the text that should be highlighted.

                
                

                - *(dict) --* 

                  Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.

                  
                  

                  - **BeginOffset** *(integer) --* 

                    The zero-based location in the response string where the highlight starts.

                    
                  

                  - **EndOffset** *(integer) --* 

                    The zero-based location in the response string where the highlight ends.

                    
                  

                  - **TopAnswer** *(boolean) --* 

                    Indicates whether the response is the best response. True if this is the best response; otherwise, false.

                    
                  

                  - **Type** *(string) --* 

                    The highlight type. 

                    
              
            
          
            

            - **DocumentExcerpt** *(dict) --* 

              An extract of the text in the document. Contains information about highlighting the relevant terms in the excerpt.

              
              

              - **Text** *(string) --* 

                The text to display to the user.

                
              

              - **Highlights** *(list) --* 

                The beginning and end of the text that should be highlighted.

                
                

                - *(dict) --* 

                  Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.

                  
                  

                  - **BeginOffset** *(integer) --* 

                    The zero-based location in the response string where the highlight starts.

                    
                  

                  - **EndOffset** *(integer) --* 

                    The zero-based location in the response string where the highlight ends.

                    
                  

                  - **TopAnswer** *(boolean) --* 

                    Indicates whether the response is the best response. True if this is the best response; otherwise, false.

                    
                  

                  - **Type** *(string) --* 

                    The highlight type. 

                    
              
            
          
            

            - **DocumentURI** *(string) --* 

              The URI of the original location of the document.

              
            

            - **DocumentAttributes** *(list) --* 

              An array of document attributes for the document that the query result maps to. For example, the document author (Author) or the source URI (SourceUri) of the document.

              
              

              - *(dict) --* 

                A custom attribute value assigned to a document. 

                
                

                - **Key** *(string) --* 

                  The identifier for the attribute.

                  
                

                - **Value** *(dict) --* 

                  The value of the attribute.

                  
                  

                  - **StringValue** *(string) --* 

                    A string, such as "department".

                    
                  

                  - **StringListValue** *(list) --* 

                    A list of strings. 

                    
                    

                    - *(string) --* 
                
                  

                  - **LongValue** *(integer) --* 

                    A long integer value.

                    
                  

                  - **DateValue** *(datetime) --* 

                    A date expressed as an ISO 8601 string.

                     

                    It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

                    
              
            
          
            

            - **ScoreAttributes** *(dict) --* 

              Indicates the confidence that Amazon Kendra has that a result matches the query that you provided. Each result is placed into a bin that indicates the confidence, ``VERY_HIGH`` , ``HIGH`` , ``MEDIUM`` and ``LOW`` . You can use the score to determine if a response meets the confidence needed for your application.

               

              The field is only set to ``LOW`` when the ``Type`` field is set to ``DOCUMENT`` and Amazon Kendra is not confident that the result matches the query.

              
              

              - **ScoreConfidence** *(string) --* 

                A relative ranking for how well the response matches the query.

                
          
            

            - **FeedbackToken** *(string) --* 

              A token that identifies a particular result from a particular query. Use this token to provide click-through feedback for the result. For more information, see `Submitting feedback <https://docs.aws.amazon.com/kendra/latest/dg/submitting-feedback.html>`__ .

              
        
      
        

        - **FacetResults** *(list) --* 

          Contains the facet results. A ``FacetResult`` contains the counts for each attribute key that was specified in the ``Facets`` input parameter.

          
          

          - *(dict) --* 

            The facet values for the documents in the response.

            
            

            - **DocumentAttributeKey** *(string) --* 

              The key for the facet values. This is the same as the ``DocumentAttributeKey`` provided in the query.

              
            

            - **DocumentAttributeValueType** *(string) --* 

              The data type of the facet value. This is the same as the type defined for the index field when it was created.

              
            

            - **DocumentAttributeValueCountPairs** *(list) --* 

              An array of key/value pairs, where the key is the value of the attribute and the count is the number of documents that share the key value.

              
              

              - *(dict) --* 

                Provides the count of documents that match a particular attribute when doing a faceted search.

                
                

                - **DocumentAttributeValue** *(dict) --* 

                  The value of the attribute. For example, "HR."

                  
                  

                  - **StringValue** *(string) --* 

                    A string, such as "department".

                    
                  

                  - **StringListValue** *(list) --* 

                    A list of strings. 

                    
                    

                    - *(string) --* 
                
                  

                  - **LongValue** *(integer) --* 

                    A long integer value.

                    
                  

                  - **DateValue** *(datetime) --* 

                    A date expressed as an ISO 8601 string.

                     

                    It is important for the time zone to be included in the ISO 8601 date-time format. For example, 20120325T123010+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.

                    
              
                

                - **Count** *(integer) --* 

                  The number of documents in the response that have the attribute value for the key.

                  
            
          
        
      
        

        - **TotalNumberOfResults** *(integer) --* 

          The total number of items found by the search; however, you can only retrieve up to 100 items. For example, if the search found 192 items, you can only retrieve the first 100 of the items.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: start_data_source_sync_job(**kwargs)

    

    Starts a synchronization job for a data source. If a synchronization job is already in progress, Amazon Kendra returns a ``ResourceInUseException`` exception.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/StartDataSourceSyncJob>`_    


    **Request Syntax** 
    ::

      response = client.start_data_source_sync_job(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the data source to synchronize.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the data source.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ExecutionId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ExecutionId** *(string) --* 

          Identifies a particular synchronization job.

          
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: stop_data_source_sync_job(**kwargs)

    

    Stops a running synchronization job. You can't stop a scheduled synchronization job.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/StopDataSourceSyncJob>`_    


    **Request Syntax** 
    ::

      response = client.stop_data_source_sync_job(
          Id='string',
          IndexId='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the data source for which to stop the synchronization jobs.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the data source.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: submit_feedback(**kwargs)

    

    Enables you to provide feedback to Amazon Kendra to improve the performance of your index. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/SubmitFeedback>`_    


    **Request Syntax** 
    ::

      response = client.submit_feedback(
          IndexId='string',
          QueryId='string',
          ClickFeedbackItems=[
              {
                  'ResultId': 'string',
                  'ClickTime': datetime(2015, 1, 1)
              },
          ],
          RelevanceFeedbackItems=[
              {
                  'ResultId': 'string',
                  'RelevanceValue': 'RELEVANT'|'NOT_RELEVANT'
              },
          ]
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that was queried.

      

    
    :type QueryId: string
    :param QueryId: **[REQUIRED]** 

      The identifier of the specific query for which you are submitting feedback. The query ID is returned in the response to the ``Query`` operation.

      

    
    :type ClickFeedbackItems: list
    :param ClickFeedbackItems: 

      Tells Amazon Kendra that a particular search result link was chosen by the user. 

      

    
      - *(dict) --* 

        Gathers information about when a particular result was clicked by a user. Your application uses the ``SubmitFeedback`` operation to provide click information.

        

      
        - **ResultId** *(string) --* **[REQUIRED]** 

          The unique identifier of the search result that was clicked.

          

        
        - **ClickTime** *(datetime) --* **[REQUIRED]** 

          The Unix timestamp of the date and time that the result was clicked.

          

        
      
  
    :type RelevanceFeedbackItems: list
    :param RelevanceFeedbackItems: 

      Provides Amazon Kendra with relevant or not relevant feedback for whether a particular item was relevant to the search.

      

    
      - *(dict) --* 

        Provides feedback on how relevant a document is to a search. Your application uses the ``SubmitFeedback`` operation to provide relevance information.

        

      
        - **ResultId** *(string) --* **[REQUIRED]** 

          The unique identifier of the search result that the user provided relevance feedback for.

          

        
        - **RelevanceValue** *(string) --* **[REQUIRED]** 

          Whether to document was relevant or not relevant to the search.

          

        
      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceUnavailableException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Adds the specified tag to the specified index, FAQ, or data source resource. If the tag already exists, the existing value is replaced with the new value.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          ResourceARN='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the index, FAQ, or data source to tag.

      

    
    :type Tags: list
    :param Tags: **[REQUIRED]** 

      A list of tag keys to add to the index, FAQ, or data source. If a tag already exists, the existing value is replaced with the new value.

      

    
      - *(dict) --* 

        A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.

        

      
        - **Key** *(string) --* **[REQUIRED]** 

          The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.

          

        
        - **Value** *(string) --* **[REQUIRED]** 

          The value associated with the tag. The value may be an empty string but it can't be null.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceUnavailableException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Removes a tag from an index, FAQ, or a data source.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          ResourceARN='string',
          TagKeys=[
              'string',
          ]
      )
    :type ResourceARN: string
    :param ResourceARN: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the index, FAQ, or data source to remove the tag from.

      

    
    :type TagKeys: list
    :param TagKeys: **[REQUIRED]** 

      A list of tag keys to remove from the index, FAQ, or data source. If a tag key does not exist on the resource, it is ignored.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceUnavailableException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: update_data_source(**kwargs)

    

    Updates an existing Amazon Kendra data source.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/UpdateDataSource>`_    


    **Request Syntax** 
    ::

      response = client.update_data_source(
          Id='string',
          Name='string',
          IndexId='string',
          Configuration={
              'S3Configuration': {
                  'BucketName': 'string',
                  'InclusionPrefixes': [
                      'string',
                  ],
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'DocumentsMetadataConfiguration': {
                      'S3Prefix': 'string'
                  },
                  'AccessControlListConfiguration': {
                      'KeyPath': 'string'
                  }
              },
              'SharePointConfiguration': {
                  'SharePointVersion': 'SHAREPOINT_2013'|'SHAREPOINT_2016'|'SHAREPOINT_ONLINE',
                  'Urls': [
                      'string',
                  ],
                  'SecretArn': 'string',
                  'CrawlAttachments': True|False,
                  'UseChangeLog': True|False,
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'VpcConfiguration': {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ],
                  'DocumentTitleFieldName': 'string',
                  'DisableLocalGroups': True|False,
                  'SslCertificateS3Path': {
                      'Bucket': 'string',
                      'Key': 'string'
                  }
              },
              'DatabaseConfiguration': {
                  'DatabaseEngineType': 'RDS_AURORA_MYSQL'|'RDS_AURORA_POSTGRESQL'|'RDS_MYSQL'|'RDS_POSTGRESQL',
                  'ConnectionConfiguration': {
                      'DatabaseHost': 'string',
                      'DatabasePort': 123,
                      'DatabaseName': 'string',
                      'TableName': 'string',
                      'SecretArn': 'string'
                  },
                  'VpcConfiguration': {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
                  'ColumnConfiguration': {
                      'DocumentIdColumnName': 'string',
                      'DocumentDataColumnName': 'string',
                      'DocumentTitleColumnName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ],
                      'ChangeDetectingColumns': [
                          'string',
                      ]
                  },
                  'AclConfiguration': {
                      'AllowedGroupsColumnName': 'string'
                  },
                  'SqlConfiguration': {
                      'QueryIdentifiersEnclosingOption': 'DOUBLE_QUOTES'|'NONE'
                  }
              },
              'SalesforceConfiguration': {
                  'ServerUrl': 'string',
                  'SecretArn': 'string',
                  'StandardObjectConfigurations': [
                      {
                          'Name': 'ACCOUNT'|'CAMPAIGN'|'CASE'|'CONTACT'|'CONTRACT'|'DOCUMENT'|'GROUP'|'IDEA'|'LEAD'|'OPPORTUNITY'|'PARTNER'|'PRICEBOOK'|'PRODUCT'|'PROFILE'|'SOLUTION'|'TASK'|'USER',
                          'DocumentDataFieldName': 'string',
                          'DocumentTitleFieldName': 'string',
                          'FieldMappings': [
                              {
                                  'DataSourceFieldName': 'string',
                                  'DateFieldFormat': 'string',
                                  'IndexFieldName': 'string'
                              },
                          ]
                      },
                  ],
                  'KnowledgeArticleConfiguration': {
                      'IncludedStates': [
                          'DRAFT'|'PUBLISHED'|'ARCHIVED',
                      ],
                      'StandardKnowledgeArticleTypeConfiguration': {
                          'DocumentDataFieldName': 'string',
                          'DocumentTitleFieldName': 'string',
                          'FieldMappings': [
                              {
                                  'DataSourceFieldName': 'string',
                                  'DateFieldFormat': 'string',
                                  'IndexFieldName': 'string'
                              },
                          ]
                      },
                      'CustomKnowledgeArticleTypeConfigurations': [
                          {
                              'Name': 'string',
                              'DocumentDataFieldName': 'string',
                              'DocumentTitleFieldName': 'string',
                              'FieldMappings': [
                                  {
                                      'DataSourceFieldName': 'string',
                                      'DateFieldFormat': 'string',
                                      'IndexFieldName': 'string'
                                  },
                              ]
                          },
                      ]
                  },
                  'ChatterFeedConfiguration': {
                      'DocumentDataFieldName': 'string',
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ],
                      'IncludeFilterTypes': [
                          'ACTIVE_USER'|'STANDARD_USER',
                      ]
                  },
                  'CrawlAttachments': True|False,
                  'StandardObjectAttachmentConfiguration': {
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'IncludeAttachmentFilePatterns': [
                      'string',
                  ],
                  'ExcludeAttachmentFilePatterns': [
                      'string',
                  ]
              },
              'OneDriveConfiguration': {
                  'TenantDomain': 'string',
                  'SecretArn': 'string',
                  'OneDriveUsers': {
                      'OneDriveUserList': [
                          'string',
                      ],
                      'OneDriveUserS3Path': {
                          'Bucket': 'string',
                          'Key': 'string'
                      }
                  },
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ],
                  'DisableLocalGroups': True|False
              },
              'ServiceNowConfiguration': {
                  'HostUrl': 'string',
                  'SecretArn': 'string',
                  'ServiceNowBuildVersion': 'LONDON'|'OTHERS',
                  'KnowledgeArticleConfiguration': {
                      'CrawlAttachments': True|False,
                      'IncludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'ExcludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'DocumentDataFieldName': 'string',
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ],
                      'FilterQuery': 'string'
                  },
                  'ServiceCatalogConfiguration': {
                      'CrawlAttachments': True|False,
                      'IncludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'ExcludeAttachmentFilePatterns': [
                          'string',
                      ],
                      'DocumentDataFieldName': 'string',
                      'DocumentTitleFieldName': 'string',
                      'FieldMappings': [
                          {
                              'DataSourceFieldName': 'string',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'AuthenticationType': 'HTTP_BASIC'|'OAUTH2'
              },
              'ConfluenceConfiguration': {
                  'ServerUrl': 'string',
                  'SecretArn': 'string',
                  'Version': 'CLOUD'|'SERVER',
                  'SpaceConfiguration': {
                      'CrawlPersonalSpaces': True|False,
                      'CrawlArchivedSpaces': True|False,
                      'IncludeSpaces': [
                          'string',
                      ],
                      'ExcludeSpaces': [
                          'string',
                      ],
                      'SpaceFieldMappings': [
                          {
                              'DataSourceFieldName': 'DISPLAY_URL'|'ITEM_TYPE'|'SPACE_KEY'|'URL',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'PageConfiguration': {
                      'PageFieldMappings': [
                          {
                              'DataSourceFieldName': 'AUTHOR'|'CONTENT_STATUS'|'CREATED_DATE'|'DISPLAY_URL'|'ITEM_TYPE'|'LABELS'|'MODIFIED_DATE'|'PARENT_ID'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'BlogConfiguration': {
                      'BlogFieldMappings': [
                          {
                              'DataSourceFieldName': 'AUTHOR'|'DISPLAY_URL'|'ITEM_TYPE'|'LABELS'|'PUBLISH_DATE'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'AttachmentConfiguration': {
                      'CrawlAttachments': True|False,
                      'AttachmentFieldMappings': [
                          {
                              'DataSourceFieldName': 'AUTHOR'|'CONTENT_TYPE'|'CREATED_DATE'|'DISPLAY_URL'|'FILE_SIZE'|'ITEM_TYPE'|'PARENT_ID'|'SPACE_KEY'|'SPACE_NAME'|'URL'|'VERSION',
                              'DateFieldFormat': 'string',
                              'IndexFieldName': 'string'
                          },
                      ]
                  },
                  'VpcConfiguration': {
                      'SubnetIds': [
                          'string',
                      ],
                      'SecurityGroupIds': [
                          'string',
                      ]
                  },
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ]
              },
              'GoogleDriveConfiguration': {
                  'SecretArn': 'string',
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ],
                  'ExcludeMimeTypes': [
                      'string',
                  ],
                  'ExcludeUserAccounts': [
                      'string',
                  ],
                  'ExcludeSharedDrives': [
                      'string',
                  ]
              },
              'WebCrawlerConfiguration': {
                  'Urls': {
                      'SeedUrlConfiguration': {
                          'SeedUrls': [
                              'string',
                          ],
                          'WebCrawlerMode': 'HOST_ONLY'|'SUBDOMAINS'|'EVERYTHING'
                      },
                      'SiteMapsConfiguration': {
                          'SiteMaps': [
                              'string',
                          ]
                      }
                  },
                  'CrawlDepth': 123,
                  'MaxLinksPerPage': 123,
                  'MaxContentSizePerPageInMegaBytes': ...,
                  'MaxUrlsPerMinuteCrawlRate': 123,
                  'UrlInclusionPatterns': [
                      'string',
                  ],
                  'UrlExclusionPatterns': [
                      'string',
                  ],
                  'ProxyConfiguration': {
                      'Host': 'string',
                      'Port': 123,
                      'Credentials': 'string'
                  },
                  'AuthenticationConfiguration': {
                      'BasicAuthentication': [
                          {
                              'Host': 'string',
                              'Port': 123,
                              'Credentials': 'string'
                          },
                      ]
                  }
              },
              'WorkDocsConfiguration': {
                  'OrganizationId': 'string',
                  'CrawlComments': True|False,
                  'UseChangeLog': True|False,
                  'InclusionPatterns': [
                      'string',
                  ],
                  'ExclusionPatterns': [
                      'string',
                  ],
                  'FieldMappings': [
                      {
                          'DataSourceFieldName': 'string',
                          'DateFieldFormat': 'string',
                          'IndexFieldName': 'string'
                      },
                  ]
              }
          },
          Description='string',
          Schedule='string',
          RoleArn='string'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of the data source to update.

      

    
    :type Name: string
    :param Name: 

      The name of the data source to update. The name of the data source can't be updated. To rename a data source you must delete the data source and re-create it.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index that contains the data source to update.

      

    
    :type Configuration: dict
    :param Configuration: 

      Configuration information for a Amazon Kendra data source.

      

    
      - **S3Configuration** *(dict) --* 

        Provides information to create a data source connector for a document repository in an Amazon S3 bucket.

        

      
        - **BucketName** *(string) --* **[REQUIRED]** 

          The name of the bucket that contains the documents.

          

        
        - **InclusionPrefixes** *(list) --* 

          A list of S3 prefixes for the documents that should be included in the index.

          

        
          - *(string) --* 

          
      
        - **InclusionPatterns** *(list) --* 

          A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed.

           

          Some `examples <https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters>`__ are:

           

           
          * **.txt* will include all text files in a directory (files with the extension .txt). 
           
          * ***/*.txt* will include all text files in a directory and its subdirectories. 
           
          * **tax** will include all files in a directory that contain 'tax' in the file name, such as 'tax', 'taxes', 'income_tax'. 
           

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed.

           

          Some `examples <https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters>`__ are:

           

           
          * **.png , *.jpg* will exclude all PNG and JPEG image files in a directory (files with the extensions .png and .jpg). 
           
          * **internal** will exclude all files in a directory that contain 'internal' in the file name, such as 'internal', 'internal_only', 'company_internal'. 
           
          * ***/*internal** will exclude all internal-related files in a directory and its subdirectories. 
           

          

        
          - *(string) --* 

          
      
        - **DocumentsMetadataConfiguration** *(dict) --* 

          Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.

          

        
          - **S3Prefix** *(string) --* 

            A prefix used to filter metadata configuration files in the Amazon Web Services S3 bucket. The S3 bucket might contain multiple metadata files. Use ``S3Prefix`` to include only the desired metadata files.

            

          
        
        - **AccessControlListConfiguration** *(dict) --* 

          Provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see `Access control for S3 data sources <https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html>`__ .

          

        
          - **KeyPath** *(string) --* 

            Path to the Amazon Web Services S3 bucket that contains the ACL files.

            

          
        
      
      - **SharePointConfiguration** *(dict) --* 

        Provides information necessary to create a data source connector for a Microsoft SharePoint site.

        

      
        - **SharePointVersion** *(string) --* **[REQUIRED]** 

          The version of Microsoft SharePoint that you are using as a data source.

          

        
        - **Urls** *(list) --* **[REQUIRED]** 

          The URLs of the Microsoft SharePoint site that contains the documents that should be indexed.

          

        
          - *(string) --* 

          
      
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. If you use SharePoint Server, you also need to provide the sever domain name as part of the credentials. For more information, see `Using a Microsoft SharePoint Data Source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-sharepoint.html>`__ . For more information about Secrets Manager, see `What Is Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ in the *Secrets Manager* user guide.

          

        
        - **CrawlAttachments** *(boolean) --* 

           ``TRUE`` to include attachments to documents stored in your Microsoft SharePoint site in the index; otherwise, ``FALSE`` .

          

        
        - **UseChangeLog** *(boolean) --* 

          Set to ``TRUE`` to use the Microsoft SharePoint change log to determine the documents that need to be updated in the index. Depending on the size of the SharePoint change log, it may take longer for Amazon Kendra to use the change log than it takes it to determine the changed documents using the Amazon Kendra document crawler.

          

        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.

           

          The regex is applied to the display URL of the SharePoint document.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

           

          The regex is applied to the display URL of the SharePoint document.

          

        
          - *(string) --* 

          
      
        - **VpcConfiguration** *(dict) --* 

          Provides information for connecting to an Amazon VPC.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

            

          
            - *(string) --* 

            
        
        
        - **FieldMappings** *(list) --* 

          A list of ``DataSourceToIndexFieldMapping`` objects that map Microsoft SharePoint attributes to custom fields in the Amazon Kendra index. You must first create the index fields using the ``UpdateIndex`` operation before you map SharePoint attributes. For more information, see `Mapping Data Source Fields <https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html>`__ .

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
        - **DocumentTitleFieldName** *(string) --* 

          The Microsoft SharePoint attribute field that contains the title of the document.

          

        
        - **DisableLocalGroups** *(boolean) --* 

          A Boolean value that specifies whether local groups are disabled (``True`` ) or enabled (``False`` ). 

          

        
        - **SslCertificateS3Path** *(dict) --* 

          Information required to find a specific file in an Amazon S3 bucket.

          

        
          - **Bucket** *(string) --* **[REQUIRED]** 

            The name of the S3 bucket that contains the file.

            

          
          - **Key** *(string) --* **[REQUIRED]** 

            The name of the file.

            

          
        
      
      - **DatabaseConfiguration** *(dict) --* 

        Provides information necessary to create a data source connector for a database.

        

      
        - **DatabaseEngineType** *(string) --* **[REQUIRED]** 

          The type of database engine that runs the database.

          

        
        - **ConnectionConfiguration** *(dict) --* **[REQUIRED]** 

          The information necessary to connect to a database.

          

        
          - **DatabaseHost** *(string) --* **[REQUIRED]** 

            The name of the host for the database. Can be either a string (host.subdomain.domain.tld) or an IPv4 or IPv6 address.

            

          
          - **DatabasePort** *(integer) --* **[REQUIRED]** 

            The port that the database uses for connections.

            

          
          - **DatabaseName** *(string) --* **[REQUIRED]** 

            The name of the database containing the document data.

            

          
          - **TableName** *(string) --* **[REQUIRED]** 

            The name of the table that contains the document data.

            

          
          - **SecretArn** *(string) --* **[REQUIRED]** 

            The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. For more information, see `Using a Database Data Source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-database.html>`__ . For more information about Secrets Manager, see `What Is Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ in the *Secrets Manager* user guide.

            

          
        
        - **VpcConfiguration** *(dict) --* 

          Provides information for connecting to an Amazon VPC.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

            

          
            - *(string) --* 

            
        
        
        - **ColumnConfiguration** *(dict) --* **[REQUIRED]** 

          Information about where the index should get the document information from the database.

          

        
          - **DocumentIdColumnName** *(string) --* **[REQUIRED]** 

            The column that provides the document's unique identifier.

            

          
          - **DocumentDataColumnName** *(string) --* **[REQUIRED]** 

            The column that contains the contents of the document.

            

          
          - **DocumentTitleColumnName** *(string) --* 

            The column that contains the title of the document.

            

          
          - **FieldMappings** *(list) --* 

            An array of objects that map database column names to the corresponding fields in an index. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
          - **ChangeDetectingColumns** *(list) --* **[REQUIRED]** 

            One to five columns that indicate when a document in the database has changed.

            

          
            - *(string) --* 

            
        
        
        - **AclConfiguration** *(dict) --* 

          Information about the database column that provides information for user context filtering.

          

        
          - **AllowedGroupsColumnName** *(string) --* **[REQUIRED]** 

            A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the ``UserContext`` field of the ``Query`` operation.

            

          
        
        - **SqlConfiguration** *(dict) --* 

          Provides information about how Amazon Kendra uses quote marks around SQL identifiers when querying a database data source.

          

        
          - **QueryIdentifiersEnclosingOption** *(string) --* 

            Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.

             

            By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.

             

            PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.

             

            For MySQL databases, you must enable the ``ansi_quotes`` option when you set this field to ``DOUBLE_QUOTES`` .

            

          
        
      
      - **SalesforceConfiguration** *(dict) --* 

        Provides configuration information for data sources that connect to a Salesforce site.

        

      
        - **ServerUrl** *(string) --* **[REQUIRED]** 

          The instance URL for the Salesforce site that you want to index.

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Salesforce instance. The secret must contain a JSON structure with the following keys:

           

           
          * authenticationUrl - The OAUTH endpoint that Amazon Kendra connects to get an OAUTH token.  
           
          * consumerKey - The application public key generated when you created your Salesforce application. 
           
          * consumerSecret - The application private key generated when you created your Salesforce application. 
           
          * password - The password associated with the user logging in to the Salesforce instance. 
           
          * securityToken - The token associated with the user account logging in to the Salesforce instance. 
           
          * username - The user name of the user logging in to the Salesforce instance. 
           

          

        
        - **StandardObjectConfigurations** *(list) --* 

          Specifies the Salesforce standard objects that Amazon Kendra indexes.

          

        
          - *(dict) --* 

            Specifies configuration information for indexing a single standard object.

            

          
            - **Name** *(string) --* **[REQUIRED]** 

              The name of the standard object.

              

            
            - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the standard object table that contains the document contents.

              

            
            - **DocumentTitleFieldName** *(string) --* 

              The name of the field in the standard object table that contains the document title.

              

            
            - **FieldMappings** *(list) --* 

              One or more objects that map fields in the standard object to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.

              

            
              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                

              
                - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                  The name of the column or attribute in the data source.

                  

                
                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  

                
                - **IndexFieldName** *(string) --* **[REQUIRED]** 

                  The name of the field in the index.

                  

                
              
          
          
      
        - **KnowledgeArticleConfiguration** *(dict) --* 

          Specifies configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both.

          

        
          - **IncludedStates** *(list) --* **[REQUIRED]** 

            Specifies the document states that should be included when Amazon Kendra indexes knowledge articles. You must specify at least one state.

            

          
            - *(string) --* 

            
        
          - **StandardKnowledgeArticleTypeConfiguration** *(dict) --* 

            Provides configuration information for standard Salesforce knowledge articles.

            

          
            - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

              The name of the field that contains the document data to index.

              

            
            - **DocumentTitleFieldName** *(string) --* 

              The name of the field that contains the document title.

              

            
            - **FieldMappings** *(list) --* 

              One or more objects that map fields in the knowledge article to Amazon Kendra index fields. The index field must exist before you can map a Salesforce field to it.

              

            
              - *(dict) --* 

                Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                

              
                - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                  The name of the column or attribute in the data source.

                  

                
                - **DateFieldFormat** *(string) --* 

                  The type of data stored in the column or attribute.

                  

                
                - **IndexFieldName** *(string) --* **[REQUIRED]** 

                  The name of the field in the index.

                  

                
              
          
          
          - **CustomKnowledgeArticleTypeConfigurations** *(list) --* 

            Provides configuration information for custom Salesforce knowledge articles.

            

          
            - *(dict) --* 

              Provides configuration information for indexing Salesforce custom articles.

              

            
              - **Name** *(string) --* **[REQUIRED]** 

                The name of the configuration.

                

              
              - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the custom knowledge article that contains the document data to index.

                

              
              - **DocumentTitleFieldName** *(string) --* 

                The name of the field in the custom knowledge article that contains the document title.

                

              
              - **FieldMappings** *(list) --* 

                One or more objects that map fields in the custom knowledge article to fields in the Amazon Kendra index.

                

              
                - *(dict) --* 

                  Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

                  

                
                  - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                    The name of the column or attribute in the data source.

                    

                  
                  - **DateFieldFormat** *(string) --* 

                    The type of data stored in the column or attribute.

                    

                  
                  - **IndexFieldName** *(string) --* **[REQUIRED]** 

                    The name of the field in the index.

                    

                  
                
            
            
        
        
        - **ChatterFeedConfiguration** *(dict) --* 

          Specifies configuration information for Salesforce chatter feeds.

          

        
          - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

            The name of the column in the Salesforce FeedItem table that contains the content to index. Typically this is the ``Body`` column.

            

          
          - **DocumentTitleFieldName** *(string) --* 

            The name of the column in the Salesforce FeedItem table that contains the title of the document. This is typically the ``Title`` column.

            

          
          - **FieldMappings** *(list) --* 

            Maps fields from a Salesforce chatter feed into Amazon Kendra index fields.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
          - **IncludeFilterTypes** *(list) --* 

            Filters the documents in the feed based on status of the user. When you specify ``ACTIVE_USERS`` only documents from users who have an active account are indexed. When you specify ``STANDARD_USER`` only documents for Salesforce standard users are documented. You can specify both.

            

          
            - *(string) --* 

            
        
        
        - **CrawlAttachments** *(boolean) --* 

          Indicates whether Amazon Kendra should index attachments to Salesforce objects.

          

        
        - **StandardObjectAttachmentConfiguration** *(dict) --* 

          Provides configuration information for processing attachments to Salesforce standard objects. 

          

        
          - **DocumentTitleFieldName** *(string) --* 

            The name of the field used for the document title.

            

          
          - **FieldMappings** *(list) --* 

            One or more objects that map fields in attachments to Amazon Kendra index fields.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
        
        - **IncludeAttachmentFilePatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index.

           

          The regex is applied to the name of the attached file.

          

        
          - *(string) --* 

          
      
        - **ExcludeAttachmentFilePatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

           

          The regex is applied to the name of the attached file.

          

        
          - *(string) --* 

          
      
      
      - **OneDriveConfiguration** *(dict) --* 

        Provides configuration for data sources that connect to Microsoft OneDrive.

        

      
        - **TenantDomain** *(string) --* **[REQUIRED]** 

          The Azure Active Directory domain of the organization. 

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the user name and password to connect to OneDrive. The user namd should be the application ID for the OneDrive application, and the password is the application key for the OneDrive application.

          

        
        - **OneDriveUsers** *(dict) --* **[REQUIRED]** 

          A list of user accounts whose documents should be indexed.

          

        
          - **OneDriveUserList** *(list) --* 

            A list of users whose documents should be indexed. Specify the user names in email format, for example, ``username@tenantdomain`` . If you need to index the documents of more than 100 users, use the ``OneDriveUserS3Path`` field to specify the location of a file containing a list of users.

            

          
            - *(string) --* 

            
        
          - **OneDriveUserS3Path** *(dict) --* 

            The S3 bucket location of a file containing a list of users whose documents should be indexed.

            

          
            - **Bucket** *(string) --* **[REQUIRED]** 

              The name of the S3 bucket that contains the file.

              

            
            - **Key** *(string) --* **[REQUIRED]** 

              The name of the file.

              

            
          
        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns. Documents that match the pattern are included in the index. Documents that don't match the pattern are excluded from the index. If a document matches both an inclusion pattern and an exclusion pattern, the document is not included in the index. 

           

          The exclusion pattern is applied to the file name.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          List of regular expressions applied to documents. Items that match the exclusion pattern are not indexed. If you provide both an inclusion pattern and an exclusion pattern, any item that matches the exclusion pattern isn't indexed. 

           

          The exclusion pattern is applied to the file name.

          

        
          - *(string) --* 

          
      
        - **FieldMappings** *(list) --* 

          A list of ``DataSourceToIndexFieldMapping`` objects that map Microsoft OneDrive fields to custom fields in the Amazon Kendra index. You must first create the index fields before you map OneDrive fields.

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
        - **DisableLocalGroups** *(boolean) --* 

          A Boolean value that specifies whether local groups are disabled (``True`` ) or enabled (``False`` ). 

          

        
      
      - **ServiceNowConfiguration** *(dict) --* 

        Provides configuration for data sources that connect to ServiceNow instances.

        

      
        - **HostUrl** *(string) --* **[REQUIRED]** 

          The ServiceNow instance that the data source connects to. The host endpoint should look like the following: ``{instance}.service-now.com.``  

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of the Secrets Manager secret that contains the user name and password required to connect to the ServiceNow instance.

          

        
        - **ServiceNowBuildVersion** *(string) --* **[REQUIRED]** 

          The identifier of the release that the ServiceNow host is running. If the host is not running the ``LONDON`` release, use ``OTHERS`` .

          

        
        - **KnowledgeArticleConfiguration** *(dict) --* 

          Provides configuration information for crawling knowledge articles in the ServiceNow site.

          

        
          - **CrawlAttachments** *(boolean) --* 

            Indicates whether Amazon Kendra should index attachments to knowledge articles.

            

          
          - **IncludeAttachmentFilePatterns** *(list) --* 

            List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the ``PatternTargetField`` .

            

          
            - *(string) --* 

            
        
          - **ExcludeAttachmentFilePatterns** *(list) --* 

            List of regular expressions applied to knowledge articles. Items that don't match the inclusion pattern are not indexed. The regex is applied to the field specified in the ``PatternTargetField``  

            

          
            - *(string) --* 

            
        
          - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

            The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.

            

          
          - **DocumentTitleFieldName** *(string) --* 

            The name of the ServiceNow field that is mapped to the index document title field.

            

          
          - **FieldMappings** *(list) --* 

            Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
          - **FilterQuery** *(string) --* 

            A query that selects the knowledge articles to index. The query can return articles from multiple knowledge bases, and the knowledge bases can be public or private.

             

            The query string must be one generated by the ServiceNow console. For more information, see `Specifying documents to index with a query <https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html>`__ . 

            

          
        
        - **ServiceCatalogConfiguration** *(dict) --* 

          Provides configuration information for crawling service catalogs in the ServiceNow site.

          

        
          - **CrawlAttachments** *(boolean) --* 

            Indicates whether Amazon Kendra should crawl attachments to the service catalog items. 

            

          
          - **IncludeAttachmentFilePatterns** *(list) --* 

            A list of regular expression patterns. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

             

            The regex is applied to the file name of the attachment.

            

          
            - *(string) --* 

            
        
          - **ExcludeAttachmentFilePatterns** *(list) --* 

            A list of regular expression patterns. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an exclusion pattern and an inclusion pattern, the document is not included in the index.

             

            The regex is applied to the file name of the attachment.

            

          
            - *(string) --* 

            
        
          - **DocumentDataFieldName** *(string) --* **[REQUIRED]** 

            The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.

            

          
          - **DocumentTitleFieldName** *(string) --* 

            The name of the ServiceNow field that is mapped to the index document title field.

            

          
          - **FieldMappings** *(list) --* 

            Mapping between ServiceNow fields and Amazon Kendra index fields. You must create the index field before you map the field.

            

          
            - *(dict) --* 

              Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

              

            
              - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

                The name of the column or attribute in the data source.

                

              
              - **DateFieldFormat** *(string) --* 

                The type of data stored in the column or attribute.

                

              
              - **IndexFieldName** *(string) --* **[REQUIRED]** 

                The name of the field in the index.

                

              
            
        
        
        - **AuthenticationType** *(string) --* 

          Determines the type of authentication used to connect to the ServiceNow instance. If you choose ``HTTP_BASIC`` , Amazon Kendra is authenticated using the user name and password provided in the AWS Secrets Manager secret in the ``SecretArn`` field. When you choose ``OAUTH2`` , Amazon Kendra is authenticated using the OAuth token and secret provided in the Secrets Manager secret, and the user name and password are used to determine which information Amazon Kendra has access to.

           

          When you use ``OAUTH2`` authentication, you must generate a token and a client secret using the ServiceNow console. For more information, see `Using a ServiceNow data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html>`__ .

          

        
      
      - **ConfluenceConfiguration** *(dict) --* 

        Provides configuration information for connecting to a Confluence data source.

        

      
        - **ServerUrl** *(string) --* **[REQUIRED]** 

          The URL of your Confluence instance. Use the full URL of the server. For example, ``https://server.example.com:port/`` . You can also use an IP address, for example, ``https://192.168.1.113/`` .

          

        
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Confluence server. The secret must contain a JSON structure with the following keys:

           

           
          * username - The user name or email address of a user with administrative privileges for the Confluence server. 
           
          * password - The password associated with the user logging in to the Confluence server. 
           

          

        
        - **Version** *(string) --* **[REQUIRED]** 

          Specifies the version of the Confluence installation that you are connecting to.

          

        
        - **SpaceConfiguration** *(dict) --* 

          Specifies configuration information for indexing Confluence spaces.

          

        
          - **CrawlPersonalSpaces** *(boolean) --* 

            Specifies whether Amazon Kendra should index personal spaces. Users can add restrictions to items in personal spaces. If personal spaces are indexed, queries without user context information may return restricted items from a personal space in their results. For more information, see `Filtering on user context <https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html>`__ .

            

          
          - **CrawlArchivedSpaces** *(boolean) --* 

            Specifies whether Amazon Kendra should index archived spaces.

            

          
          - **IncludeSpaces** *(list) --* 

            A list of space keys for Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are indexed. Spaces that aren't in the list aren't indexed. A space in the list must exist. Otherwise, Amazon Kendra logs an error when the data source is synchronized. If a space is in both the ``IncludeSpaces`` and the ``ExcludeSpaces`` list, the space is excluded.

            

          
            - *(string) --* 

            
        
          - **ExcludeSpaces** *(list) --* 

            A list of space keys of Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are not indexed. If a space is in both the ``ExcludeSpaces`` and the ``IncludeSpaces`` list, the space is excluded.

            

          
            - *(string) --* 

            
        
          - **SpaceFieldMappings** *(list) --* 

            Defines how space metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``SpaceFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **PageConfiguration** *(dict) --* 

          Specifies configuration information for indexing Confluence pages.

          

        
          - **PageFieldMappings** *(list) --* 

            Defines how page metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``PageFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **BlogConfiguration** *(dict) --* 

          Specifies configuration information for indexing Confluence blogs.

          

        
          - **BlogFieldMappings** *(list) --* 

            Defines how blog metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``BlogFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a blog field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **AttachmentConfiguration** *(dict) --* 

          Specifies configuration information for indexing attachments to Confluence blogs and pages.

          

        
          - **CrawlAttachments** *(boolean) --* 

            Indicates whether Amazon Kendra indexes attachments to the pages and blogs in the Confluence data source. 

            

          
          - **AttachmentFieldMappings** *(list) --* 

            Defines how attachment metadata fields should be mapped to index fields. Before you can map a field, you must first create an index field with a matching type using the console or the ``UpdateIndex`` operation.

             

            If you specify the ``AttachentFieldMappings`` parameter, you must specify at least one field mapping.

            

          
            - *(dict) --* 

              Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.

               

              You must first create the index field using the ``UpdateIndex`` operation. 

              

            
              - **DataSourceFieldName** *(string) --* 

                The name of the field in the data source. 

                 

                You must first create the index field using the ``UpdateIndex`` operation. 

                

              
              - **DateFieldFormat** *(string) --* 

                The format for date fields in the data source. If the field specified in ``DataSourceFieldName`` is a date field you must specify the date format. If the field is not a date field, an exception is thrown.

                

              
              - **IndexFieldName** *(string) --* 

                The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.

                

              
            
        
        
        - **VpcConfiguration** *(dict) --* 

          Specifies the information for connecting to an Amazon VPC.

          

        
          - **SubnetIds** *(list) --* **[REQUIRED]** 

            A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.

            

          
            - *(string) --* 

            
        
          - **SecurityGroupIds** *(list) --* **[REQUIRED]** 

            A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.

            

          
            - *(string) --* 

            
        
        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to a URL on the Confluence server. An inclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the patterns are included in the index. Items that don't match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, the item isn't included in the index.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to a URL on the Confluence server. An exclusion pattern can apply to a blog post, a page, a space, or an attachment. Items that match the pattern are excluded from the index. Items that don't match the pattern are included in the index. If a item matches both an exclusion pattern and an inclusion pattern, the item isn't included in the index.

          

        
          - *(string) --* 

          
      
      
      - **GoogleDriveConfiguration** *(dict) --* 

        Provides configuration for data sources that connect to Google Drive. 

        

      
        - **SecretArn** *(string) --* **[REQUIRED]** 

          The Amazon Resource Name (ARN) of a Secrets Managersecret that contains the credentials required to connect to Google Drive. For more information, see `Using a Google Workspace Drive data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html>`__ .

          

        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to path on Google Drive. Items that match the pattern are included in the index from both shared drives and users' My Drives. Items that don't match the pattern are excluded from the index. If an item matches both an inclusion pattern and an exclusion pattern, it is excluded from the index.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns that apply to the path on Google Drive. Items that match the pattern are excluded from the index from both shared drives and users' My Drives. Items that don't match the pattern are included in the index. If an item matches both an exclusion pattern and an inclusion pattern, it is excluded from the index.

          

        
          - *(string) --* 

          
      
        - **FieldMappings** *(list) --* 

          Defines mapping between a field in the Google Drive and a Amazon Kendra index field.

           

          If you are using the console, you can define index fields when creating the mapping. If you are using the API, you must first create the field using the ``UpdateIndex`` operation.

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
        - **ExcludeMimeTypes** *(list) --* 

          A list of MIME types to exclude from the index. All documents matching the specified MIME type are excluded. 

           

          For a list of MIME types, see `Using a Google Workspace Drive data source <https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html>`__ .

          

        
          - *(string) --* 

          
      
        - **ExcludeUserAccounts** *(list) --* 

          A list of email addresses of the users. Documents owned by these users are excluded from the index. Documents shared with excluded users are indexed unless they are excluded in another way.

          

        
          - *(string) --* 

          
      
        - **ExcludeSharedDrives** *(list) --* 

          A list of identifiers or shared drives to exclude from the index. All files and folders stored on the shared drive are excluded.

          

        
          - *(string) --* 

          
      
      
      - **WebCrawlerConfiguration** *(dict) --* 

        Provides the configuration information required for Amazon Kendra web crawler.

        

      
        - **Urls** *(dict) --* **[REQUIRED]** 

          Specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl.

           

          You can include website subdomains. You can list up to 100 seed URLs and up to three sitemap URLs.

           

           *When selecting websites to index, you must adhere to the `Amazon Acceptable Use Policy <https://aws.amazon.com/aup/>`__ and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.*  

          

        
          - **SeedUrlConfiguration** *(dict) --* 

            Provides the configuration of the seed or starting point URLs of the websites you want to crawl.

             

            You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.

             

            You can list up to 100 seed URLs.

            

          
            - **SeedUrls** *(list) --* **[REQUIRED]** 

              The list of seed or starting point URLs of the websites you want to crawl.

               

              The list can include a maximum of 100 seed URLs.

              

            
              - *(string) --* 

              
          
            - **WebCrawlerMode** *(string) --* 

              You can choose one of the following modes:

               

               
              * ``HOST_ONLY`` – crawl only the website host names. For example, if the seed URL is "abc.example.com", then only URLs with host name "abc.example.com" are crawled. 
               
              * ``SUBDOMAINS`` – crawl the website host names with subdomains. For example, if the seed URL is "abc.example.com", then "a.abc.example.com" and "b.abc.example.com" are also crawled. 
               
              * ``EVERYTHING`` – crawl the website host names with subdomains and other domains that the webpages link to. 
               

               

              The default mode is set to ``HOST_ONLY`` .

              

            
          
          - **SiteMapsConfiguration** *(dict) --* 

            Provides the configuration of the sitemap URLs of the websites you want to crawl.

             

            Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.

            

          
            - **SiteMaps** *(list) --* **[REQUIRED]** 

              The list of sitemap URLs of the websites you want to crawl.

               

              The list can include a maximum of three sitemap URLs.

              

            
              - *(string) --* 

              
          
          
        
        - **CrawlDepth** *(integer) --* 

          Specifies the number of levels in a website that you want to crawl.

           

          The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1.

           

          The default crawl depth is set to 2.

          

        
        - **MaxLinksPerPage** *(integer) --* 

          The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage.

           

          As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance.

           

          The default maximum links per page is 100.

          

        
        - **MaxContentSizePerPageInMegaBytes** *(float) --* 

          The maximum size (in MB) of a webpage or attachment to crawl.

           

          Files larger than this size (in MB) are skipped/not crawled.

           

          The default maximum size of a webpage or attachment is set to 50 MB.

          

        
        - **MaxUrlsPerMinuteCrawlRate** *(integer) --* 

          The maximum number of URLs crawled per website host per minute.

           

          A minimum of one URL is required.

           

          The default maximum number of URLs crawled per website host per minute is 300.

          

        
        - **UrlInclusionPatterns** *(list) --* 

          The regular expression pattern to include certain URLs to crawl.

           

          If there is a regular expression pattern to exclude certain URLs that conflicts with the include pattern, the exclude pattern takes precedence.

          

        
          - *(string) --* 

          
      
        - **UrlExclusionPatterns** *(list) --* 

          The regular expression pattern to exclude certain URLs to crawl.

           

          If there is a regular expression pattern to include certain URLs that conflicts with the exclude pattern, the exclude pattern takes precedence.

          

        
          - *(string) --* 

          
      
        - **ProxyConfiguration** *(dict) --* 

          Provides configuration information required to connect to your internal websites via a web proxy.

           

          You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS.

           

          Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ .

          

        
          - **Host** *(string) --* **[REQUIRED]** 

            The name of the website host you want to connect to via a web proxy server.

             

            For example, the host name of https://a.example.com/page1.html is "a.example.com".

            

          
          - **Port** *(integer) --* **[REQUIRED]** 

            The port number of the website host you want to connect to via a web proxy server. 

             

            For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.

            

          
          - **Credentials** *(string) --* 

            Your secret ARN, which you can create in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__  

             

            The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.

            

          
        
        - **AuthenticationConfiguration** *(dict) --* 

          Provides configuration information required to connect to websites using authentication.

           

          You can connect to websites using basic authentication of user name and password.

           

          You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. You use a secret in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__ to store your authentication credentials.

          

        
          - **BasicAuthentication** *(list) --* 

            The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials.

             

            The list includes the name and port number of the website host.

            

          
            - *(dict) --* 

              Provides the configuration information to connect to websites that require basic user authentication.

              

            
              - **Host** *(string) --* **[REQUIRED]** 

                The name of the website host you want to connect to using authentication credentials.

                 

                For example, the host name of https://a.example.com/page1.html is "a.example.com".

                

              
              - **Port** *(integer) --* **[REQUIRED]** 

                The port number of the website host you want to connect to using authentication credentials.

                 

                For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.

                

              
              - **Credentials** *(string) --* **[REQUIRED]** 

                Your secret ARN, which you can create in `AWS Secrets Manager <https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html>`__  

                 

                You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.

                

              
            
        
        
      
      - **WorkDocsConfiguration** *(dict) --* 

        Provides the configuration information to connect to WorkDocs as your data source.

        

      
        - **OrganizationId** *(string) --* **[REQUIRED]** 

          The identifier of the directory corresponding to your Amazon WorkDocs site repository.

           

          You can find the organization ID in the `AWS Directory Service <https://console.aws.amazon.com/directoryservicev2/>`__ by going to **Active Directory** , then **Directories** . Your Amazon WorkDocs site directory has an ID, which is the organization ID. You can also set up a new Amazon WorkDocs directory in the AWS Directory Service console and enable a Amazon WorkDocs site for the directory in the Amazon WorkDocs console.

          

        
        - **CrawlComments** *(boolean) --* 

           ``TRUE`` to include comments on documents in your index. Including comments in your index means each comment is a document that can be searched on.

           

          The default is set to ``FALSE`` .

          

        
        - **UseChangeLog** *(boolean) --* 

           ``TRUE`` to use the change logs to update documents in your index instead of scanning all documents.

           

          If you are syncing your Amazon WorkDocs data source with your index for the first time, all documents are scanned. After your first sync, you can use the change logs to update your documents in your index for future syncs.

           

          The default is set to ``FALSE`` .

          

        
        - **InclusionPatterns** *(list) --* 

          A list of regular expression patterns to include certain files in your Amazon WorkDocs site repository. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.

          

        
          - *(string) --* 

          
      
        - **ExclusionPatterns** *(list) --* 

          A list of regular expression patterns to exclude certain files in your Amazon WorkDocs site repository. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn’t included in the index.

          

        
          - *(string) --* 

          
      
        - **FieldMappings** *(list) --* 

          A list of ``DataSourceToIndexFieldMapping`` objects that map Amazon WorkDocs field names to custom index field names in Amazon Kendra. You must first create the custom index fields using the ``UpdateIndex`` operation before you map to Amazon WorkDocs fields. For more information, see `Mapping Data Source Fields <https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html>`__ . The Amazon WorkDocs data source field names need to exist in your Amazon WorkDocs custom metadata.

          

        
          - *(dict) --* 

            Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the ``UpdateIndex`` operation.

            

          
            - **DataSourceFieldName** *(string) --* **[REQUIRED]** 

              The name of the column or attribute in the data source.

              

            
            - **DateFieldFormat** *(string) --* 

              The type of data stored in the column or attribute.

              

            
            - **IndexFieldName** *(string) --* **[REQUIRED]** 

              The name of the field in the index.

              

            
          
      
      
    
    :type Description: string
    :param Description: 

      The new description for the data source.

      

    
    :type Schedule: string
    :param Schedule: 

      The new update schedule for the data source.

      

    
    :type RoleArn: string
    :param RoleArn: 

      The Amazon Resource Name (ARN) of the new role to use when the data source is accessing resources on your behalf.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: update_index(**kwargs)

    

    Updates an existing Amazon Kendra index.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/UpdateIndex>`_    


    **Request Syntax** 
    ::

      response = client.update_index(
          Id='string',
          Name='string',
          RoleArn='string',
          Description='string',
          DocumentMetadataConfigurationUpdates=[
              {
                  'Name': 'string',
                  'Type': 'STRING_VALUE'|'STRING_LIST_VALUE'|'LONG_VALUE'|'DATE_VALUE',
                  'Relevance': {
                      'Freshness': True|False,
                      'Importance': 123,
                      'Duration': 'string',
                      'RankOrder': 'ASCENDING'|'DESCENDING',
                      'ValueImportanceMap': {
                          'string': 123
                      }
                  },
                  'Search': {
                      'Facetable': True|False,
                      'Searchable': True|False,
                      'Displayable': True|False,
                      'Sortable': True|False
                  }
              },
          ],
          CapacityUnits={
              'StorageCapacityUnits': 123,
              'QueryCapacityUnits': 123
          },
          UserTokenConfigurations=[
              {
                  'JwtTokenTypeConfiguration': {
                      'KeyLocation': 'URL'|'SECRET_MANAGER',
                      'URL': 'string',
                      'SecretManagerArn': 'string',
                      'UserNameAttributeField': 'string',
                      'GroupAttributeField': 'string',
                      'Issuer': 'string',
                      'ClaimRegex': 'string'
                  },
                  'JsonTokenTypeConfiguration': {
                      'UserNameAttributeField': 'string',
                      'GroupAttributeField': 'string'
                  }
              },
          ],
          UserContextPolicy='ATTRIBUTE_FILTER'|'USER_TOKEN'
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the index to update.

      

    
    :type Name: string
    :param Name: 

      The name of the index to update.

      

    
    :type RoleArn: string
    :param RoleArn: 

      A new IAM role that gives Amazon Kendra permission to access your Amazon CloudWatch logs.

      

    
    :type Description: string
    :param Description: 

      A new description for the index.

      

    
    :type DocumentMetadataConfigurationUpdates: list
    :param DocumentMetadataConfigurationUpdates: 

      The document metadata to update. 

      

    
      - *(dict) --* 

        Specifies the properties of a custom index field.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the index field.

          

        
        - **Type** *(string) --* **[REQUIRED]** 

          The data type of the index field. 

          

        
        - **Relevance** *(dict) --* 

          Provides manual tuning parameters to determine how the field affects the search results.

          

        
          - **Freshness** *(boolean) --* 

            Indicates that this field determines how "fresh" a document is. For example, if document 1 was created on November 5, and document 2 was created on October 31, document 1 is "fresher" than document 2. You can only set the ``Freshness`` field on one ``DATE`` type field. Only applies to ``DATE`` fields.

            

          
          - **Importance** *(integer) --* 

            The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers.

            

          
          - **Duration** *(string) --* 

            Specifies the time period that the boost applies to. For example, to make the boost apply to documents with the field value within the last month, you would use "2628000s". Once the field value is beyond the specified range, the effect of the boost drops off. The higher the importance, the faster the effect drops off. If you don't specify a value, the default is 3 months. The value of the field is a numeric string followed by the character "s", for example "86400s" for one day, or "604800s" for one week. 

             

            Only applies to ``DATE`` fields.

            

          
          - **RankOrder** *(string) --* 

            Determines how values should be interpreted.

             

            When the ``RankOrder`` field is ``ASCENDING`` , higher numbers are better. For example, a document with a rating score of 10 is higher ranking than a document with a rating score of 1.

             

            When the ``RankOrder`` field is ``DESCENDING`` , lower numbers are better. For example, in a task tracking application, a priority 1 task is more important than a priority 5 task.

             

            Only applies to ``LONG`` and ``DOUBLE`` fields.

            

          
          - **ValueImportanceMap** *(dict) --* 

            A list of values that should be given a different boost when they appear in the result list. For example, if you are boosting a field called "department," query terms that match the department field are boosted in the result. However, you can add entries from the department field to boost documents with those values higher. 

             

            For example, you can add entries to the map with names of departments. If you add "HR",5 and "Legal",3 those departments are given special attention when they appear in the metadata of a document. When those terms appear they are given the specified importance instead of the regular importance for the boost.

            

          
            - *(string) --* 

            
              - *(integer) --* 

              
        
      
        
        - **Search** *(dict) --* 

          Provides information about how the field is used during a search.

          

        
          - **Facetable** *(boolean) --* 

            Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is ``false`` .

            

          
          - **Searchable** *(boolean) --* 

            Determines whether the field is used in the search. If the ``Searchable`` field is ``true`` , you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is ``true`` for string fields and ``false`` for number and date fields.

            

          
          - **Displayable** *(boolean) --* 

            Determines whether the field is returned in the query response. The default is ``true`` .

            

          
          - **Sortable** *(boolean) --* 

            Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have ``Sortable`` set to ``true`` , Amazon Kendra returns an exception. The default is ``false`` .

            

          
        
      
  
    :type CapacityUnits: dict
    :param CapacityUnits: 

      Sets the number of additional storage and query capacity units that should be used by the index. You can change the capacity of the index up to 5 times per day.

       

      If you are using extra storage units, you can't reduce the storage capacity below that required to meet the storage needs for your index.

      

    
      - **StorageCapacityUnits** *(integer) --* **[REQUIRED]** 

        The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first.

        

      
      - **QueryCapacityUnits** *(integer) --* **[REQUIRED]** 

        The amount of extra query capacity for an index and `GetQuerySuggestions <https://docs.aws.amazon.com/kendra/latest/dg/API_GetQuerySuggestions.html>`__ capacity.

         

        A single extra capacity unit for an index provides 0.1 queries per second or approximately 8,000 queries per day.

         

         ``GetQuerySuggestions`` capacity is five times the provisioned query capacity for an index, or the base capacity of 2.5 calls per second, whichever is higher. For example, the base capacity for an index is 0.1 queries per second, and ``GetQuerySuggestions`` capacity has a base of 2.5 calls per second. If you add another 0.1 queries per second to total 0.2 queries per second for an index, the ``GetQuerySuggestions`` capacity is 2.5 calls per second (higher than five times 0.2 queries per second).

        

      
    
    :type UserTokenConfigurations: list
    :param UserTokenConfigurations: 

      The user token configuration.

      

    
      - *(dict) --* 

        Provides configuration information for a token configuration.

        

      
        - **JwtTokenTypeConfiguration** *(dict) --* 

          Information about the JWT token type configuration.

          

        
          - **KeyLocation** *(string) --* **[REQUIRED]** 

            The location of the key.

            

          
          - **URL** *(string) --* 

            The signing key URL.

            

          
          - **SecretManagerArn** *(string) --* 

            The Amazon Resource Name (arn) of the secret.

            

          
          - **UserNameAttributeField** *(string) --* 

            The user name attribute field.

            

          
          - **GroupAttributeField** *(string) --* 

            The group attribute field.

            

          
          - **Issuer** *(string) --* 

            The issuer of the token.

            

          
          - **ClaimRegex** *(string) --* 

            The regular expression that identifies the claim.

            

          
        
        - **JsonTokenTypeConfiguration** *(dict) --* 

          Information about the JSON token type configuration.

          

        
          - **UserNameAttributeField** *(string) --* **[REQUIRED]** 

            The user name attribute field.

            

          
          - **GroupAttributeField** *(string) --* **[REQUIRED]** 

            The group attribute field.

            

          
        
      
  
    :type UserContextPolicy: string
    :param UserContextPolicy: 

      The user user token context policy.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: update_query_suggestions_block_list(**kwargs)

    

    Updates a block list used for query suggestions for an index.

     

    Updates to a block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to apply any updates to the block list. Other changes not related to the block list apply immediately.

     

    If a block list is updating, then you need to wait for the first update to finish before submitting another update.

     

    Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/UpdateQuerySuggestionsBlockList>`_    


    **Request Syntax** 
    ::

      response = client.update_query_suggestions_block_list(
          IndexId='string',
          Id='string',
          Name='string',
          Description='string',
          SourceS3Path={
              'Bucket': 'string',
              'Key': 'string'
          },
          RoleArn='string'
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index for a block list.

      

    
    :type Id: string
    :param Id: **[REQUIRED]** 

      The unique identifier of a block list.

      

    
    :type Name: string
    :param Name: 

      The name of a block list.

      

    
    :type Description: string
    :param Description: 

      The description for a block list.

      

    
    :type SourceS3Path: dict
    :param SourceS3Path: 

      The S3 path where your block list text file sits in S3.

       

      If you update your block list and provide the same path to the block list text file in S3, then Amazon Kendra reloads the file to refresh the block list. Amazon Kendra does not automatically refresh your block list. You need to call the ``UpdateQuerySuggestionsBlockList`` API to refresh you block list.

       

      If you update your block list, then Amazon Kendra asynchronously refreshes all query suggestions with the latest content in the S3 file. This means changes might not take effect immediately.

      

    
      - **Bucket** *(string) --* **[REQUIRED]** 

        The name of the S3 bucket that contains the file.

        

      
      - **Key** *(string) --* **[REQUIRED]** 

        The name of the file.

        

      
    
    :type RoleArn: string
    :param RoleArn: 

      The IAM (Identity and Access Management) role used to access the block list text file in S3.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: update_query_suggestions_config(**kwargs)

    

    Updates the settings of query suggestions for an index.

     

    Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.

     

    If an update is currently processing (i.e. 'happening'), you need to wait for the update to finish before making another update.

     

    Updates to query suggestions settings might not take effect right away. The time for your updated settings to take effect depends on the updates made and the number of search queries in your index.

     

    You can still enable/disable query suggestions at any time.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/UpdateQuerySuggestionsConfig>`_    


    **Request Syntax** 
    ::

      response = client.update_query_suggestions_config(
          IndexId='string',
          Mode='ENABLED'|'LEARN_ONLY',
          QueryLogLookBackWindowInDays=123,
          IncludeQueriesWithoutUserInformation=True|False,
          MinimumNumberOfQueryingUsers=123,
          MinimumQueryCount=123
      )
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index you want to update query suggestions settings for.

      

    
    :type Mode: string
    :param Mode: 

      Set the mode to ``ENABLED`` or ``LEARN_ONLY`` .

       

      By default, Amazon Kendra enables query suggestions. ``LEARN_ONLY`` mode allows you to turn off query suggestions. You can to update this at any time.

       

      In ``LEARN_ONLY`` mode, Amazon Kendra continues to learn from new queries to keep suggestions up to date for when you are ready to switch to ENABLED mode again.

      

    
    :type QueryLogLookBackWindowInDays: integer
    :param QueryLogLookBackWindowInDays: 

      How recent your queries are in your query log time window.

       

      The time window is the number of days from current day to past days.

       

      By default, Amazon Kendra sets this to 180.

      

    
    :type IncludeQueriesWithoutUserInformation: boolean
    :param IncludeQueriesWithoutUserInformation: 

       ``TRUE`` to include queries without user information (i.e. all queries, irrespective of the user), otherwise ``FALSE`` to only include queries with user information.

       

      If you pass user information to Amazon Kendra along with the queries, you can set this flag to ``FALSE`` and instruct Amazon Kendra to only consider queries with user information.

       

      If you set to ``FALSE`` , Amazon Kendra only considers queries searched at least ``MinimumQueryCount`` times across ``MinimumNumberOfQueryingUsers`` unique users for suggestions.

       

      If you set to ``TRUE`` , Amazon Kendra ignores all user information and learns from all queries.

      

    
    :type MinimumNumberOfQueryingUsers: integer
    :param MinimumNumberOfQueryingUsers: 

      The minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.

       

      Increasing this number might decrease the number of suggestions. However, this ensures a query is searched by many users and is truly popular to suggest to users.

       

      How you tune this setting depends on your specific needs.

      

    
    :type MinimumQueryCount: integer
    :param MinimumQueryCount: 

      The the minimum number of times a query must be searched in order to be eligible to suggest to your users.

       

      Decreasing this number increases the number of suggestions. However, this affects the quality of suggestions as it sets a low bar for a query to be considered popular to suggest to users.

       

      How you tune this setting depends on your specific needs.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

  .. py:method:: update_thesaurus(**kwargs)

    

    Updates a thesaurus file associated with an index.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/kendra-2019-02-03/UpdateThesaurus>`_    


    **Request Syntax** 
    ::

      response = client.update_thesaurus(
          Id='string',
          Name='string',
          IndexId='string',
          Description='string',
          RoleArn='string',
          SourceS3Path={
              'Bucket': 'string',
              'Key': 'string'
          }
      )
    :type Id: string
    :param Id: **[REQUIRED]** 

      The identifier of the thesaurus to update.

      

    
    :type Name: string
    :param Name: 

      The updated name of the thesaurus.

      

    
    :type IndexId: string
    :param IndexId: **[REQUIRED]** 

      The identifier of the index associated with the thesaurus to update.

      

    
    :type Description: string
    :param Description: 

      The updated description of the thesaurus.

      

    
    :type RoleArn: string
    :param RoleArn: 

      The updated role ARN of the thesaurus.

      

    
    :type SourceS3Path: dict
    :param SourceS3Path: 

      Information required to find a specific file in an Amazon S3 bucket.

      

    
      - **Bucket** *(string) --* **[REQUIRED]** 

        The name of the S3 bucket that contains the file.

        

      
      - **Key** *(string) --* **[REQUIRED]** 

        The name of the file.

        

      
    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`kendra.Client.exceptions.ValidationException`

    
    *     :py:class:`kendra.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`kendra.Client.exceptions.ThrottlingException`

    
    *     :py:class:`kendra.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`kendra.Client.exceptions.ConflictException`

    
    *     :py:class:`kendra.Client.exceptions.InternalServerException`

    

==========
Paginators
==========


The available paginators are:
