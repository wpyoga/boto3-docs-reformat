

******
Backup
******

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: Backup.Client

  A low-level client representing AWS Backup
   

  AWS Backup is a unified backup service designed to protect AWS services and their associated data. AWS Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.

  ::

    
    import boto3
    
    client = boto3.client('backup')

  
  These are the available methods:
  
  *   :py:meth:`~Backup.Client.can_paginate`

  
  *   :py:meth:`~Backup.Client.create_backup_plan`

  
  *   :py:meth:`~Backup.Client.create_backup_selection`

  
  *   :py:meth:`~Backup.Client.create_backup_vault`

  
  *   :py:meth:`~Backup.Client.delete_backup_plan`

  
  *   :py:meth:`~Backup.Client.delete_backup_selection`

  
  *   :py:meth:`~Backup.Client.delete_backup_vault`

  
  *   :py:meth:`~Backup.Client.delete_backup_vault_access_policy`

  
  *   :py:meth:`~Backup.Client.delete_backup_vault_notifications`

  
  *   :py:meth:`~Backup.Client.delete_recovery_point`

  
  *   :py:meth:`~Backup.Client.describe_backup_job`

  
  *   :py:meth:`~Backup.Client.describe_backup_vault`

  
  *   :py:meth:`~Backup.Client.describe_copy_job`

  
  *   :py:meth:`~Backup.Client.describe_global_settings`

  
  *   :py:meth:`~Backup.Client.describe_protected_resource`

  
  *   :py:meth:`~Backup.Client.describe_recovery_point`

  
  *   :py:meth:`~Backup.Client.describe_region_settings`

  
  *   :py:meth:`~Backup.Client.describe_restore_job`

  
  *   :py:meth:`~Backup.Client.disassociate_recovery_point`

  
  *   :py:meth:`~Backup.Client.export_backup_plan_template`

  
  *   :py:meth:`~Backup.Client.generate_presigned_url`

  
  *   :py:meth:`~Backup.Client.get_backup_plan`

  
  *   :py:meth:`~Backup.Client.get_backup_plan_from_json`

  
  *   :py:meth:`~Backup.Client.get_backup_plan_from_template`

  
  *   :py:meth:`~Backup.Client.get_backup_selection`

  
  *   :py:meth:`~Backup.Client.get_backup_vault_access_policy`

  
  *   :py:meth:`~Backup.Client.get_backup_vault_notifications`

  
  *   :py:meth:`~Backup.Client.get_paginator`

  
  *   :py:meth:`~Backup.Client.get_recovery_point_restore_metadata`

  
  *   :py:meth:`~Backup.Client.get_supported_resource_types`

  
  *   :py:meth:`~Backup.Client.get_waiter`

  
  *   :py:meth:`~Backup.Client.list_backup_jobs`

  
  *   :py:meth:`~Backup.Client.list_backup_plan_templates`

  
  *   :py:meth:`~Backup.Client.list_backup_plan_versions`

  
  *   :py:meth:`~Backup.Client.list_backup_plans`

  
  *   :py:meth:`~Backup.Client.list_backup_selections`

  
  *   :py:meth:`~Backup.Client.list_backup_vaults`

  
  *   :py:meth:`~Backup.Client.list_copy_jobs`

  
  *   :py:meth:`~Backup.Client.list_protected_resources`

  
  *   :py:meth:`~Backup.Client.list_recovery_points_by_backup_vault`

  
  *   :py:meth:`~Backup.Client.list_recovery_points_by_resource`

  
  *   :py:meth:`~Backup.Client.list_restore_jobs`

  
  *   :py:meth:`~Backup.Client.list_tags`

  
  *   :py:meth:`~Backup.Client.put_backup_vault_access_policy`

  
  *   :py:meth:`~Backup.Client.put_backup_vault_notifications`

  
  *   :py:meth:`~Backup.Client.start_backup_job`

  
  *   :py:meth:`~Backup.Client.start_copy_job`

  
  *   :py:meth:`~Backup.Client.start_restore_job`

  
  *   :py:meth:`~Backup.Client.stop_backup_job`

  
  *   :py:meth:`~Backup.Client.tag_resource`

  
  *   :py:meth:`~Backup.Client.untag_resource`

  
  *   :py:meth:`~Backup.Client.update_backup_plan`

  
  *   :py:meth:`~Backup.Client.update_global_settings`

  
  *   :py:meth:`~Backup.Client.update_recovery_point_lifecycle`

  
  *   :py:meth:`~Backup.Client.update_region_settings`

  

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: create_backup_plan(**kwargs)

    

    Creates a backup plan using a backup plan name and backup rules. A backup plan is a document that contains information that AWS Backup uses to schedule tasks that create recovery points for resources.

     

    If you call ``CreateBackupPlan`` with a plan that already exists, an ``AlreadyExistsException`` is returned.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/CreateBackupPlan>`_    


    **Request Syntax** 
    ::

      response = client.create_backup_plan(
          BackupPlan={
              'BackupPlanName': 'string',
              'Rules': [
                  {
                      'RuleName': 'string',
                      'TargetBackupVaultName': 'string',
                      'ScheduleExpression': 'string',
                      'StartWindowMinutes': 123,
                      'CompletionWindowMinutes': 123,
                      'Lifecycle': {
                          'MoveToColdStorageAfterDays': 123,
                          'DeleteAfterDays': 123
                      },
                      'RecoveryPointTags': {
                          'string': 'string'
                      },
                      'CopyActions': [
                          {
                              'Lifecycle': {
                                  'MoveToColdStorageAfterDays': 123,
                                  'DeleteAfterDays': 123
                              },
                              'DestinationBackupVaultArn': 'string'
                          },
                      ],
                      'EnableContinuousBackup': True|False
                  },
              ],
              'AdvancedBackupSettings': [
                  {
                      'ResourceType': 'string',
                      'BackupOptions': {
                          'string': 'string'
                      }
                  },
              ]
          },
          BackupPlanTags={
              'string': 'string'
          },
          CreatorRequestId='string'
      )
    :type BackupPlan: dict
    :param BackupPlan: **[REQUIRED]** 

      Specifies the body of a backup plan. Includes a ``BackupPlanName`` and one or more sets of ``Rules`` .

      

    
      - **BackupPlanName** *(string) --* **[REQUIRED]** 

        The optional display name of a backup plan.

        

      
      - **Rules** *(list) --* **[REQUIRED]** 

        An array of ``BackupRule`` objects, each of which specifies a scheduled task that is used to back up a selection of resources.

        

      
        - *(dict) --* 

          Specifies a scheduled task used to back up a selection of resources.

          

        
          - **RuleName** *(string) --* **[REQUIRED]** 

            An optional display name for a backup rule.

            

          
          - **TargetBackupVaultName** *(string) --* **[REQUIRED]** 

            The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

            

          
          - **ScheduleExpression** *(string) --* 

            A CRON expression specifying when AWS Backup initiates a backup job.

            

          
          - **StartWindowMinutes** *(integer) --* 

            A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.

            

          
          - **CompletionWindowMinutes** *(integer) --* 

            A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.

            

          
          - **Lifecycle** *(dict) --* 

            The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. 

             

            Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

             

            Only Amazon EFS file system backups can be transitioned to cold storage.

            

          
            - **MoveToColdStorageAfterDays** *(integer) --* 

              Specifies the number of days after creation that a recovery point is moved to cold storage.

              

            
            - **DeleteAfterDays** *(integer) --* 

              Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

              

            
          
          - **RecoveryPointTags** *(dict) --* 

            To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.

            

          
            - *(string) --* 

            
              - *(string) --* 

              
        
      
          - **CopyActions** *(list) --* 

            An array of ``CopyAction`` objects, which contains the details of the copy operation.

            

          
            - *(dict) --* 

              The details of the copy operation.

              

            
              - **Lifecycle** *(dict) --* 

                Contains an array of ``Transition`` objects specifying how long in days before a recovery point transitions to cold storage or is deleted.

                 

                Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

                 

                Only Amazon EFS file system backups can be transitioned to cold storage.

                

              
                - **MoveToColdStorageAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is moved to cold storage.

                  

                
                - **DeleteAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                  

                
              
              - **DestinationBackupVaultArn** *(string) --* **[REQUIRED]** 

                An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

                

              
            
        
          - **EnableContinuousBackup** *(boolean) --* 

            Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.

            

          
        
    
      - **AdvancedBackupSettings** *(list) --* 

        Specifies a list of ``BackupOptions`` for each resource type. These settings are only available for Windows VSS backup jobs.

        

      
        - *(dict) --* 

          A list of backup options for each resource type.

          

        
          - **ResourceType** *(string) --* 

            Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

             

            Valid values: ``EC2`` .

            

          
          - **BackupOptions** *(dict) --* 

            Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

             

            Valid values: 

             

            Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

             

            Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

             

            If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

             

            For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

            

          
            - *(string) --* 

            
              - *(string) --* 

              
        
      
        
    
    
    :type BackupPlanTags: dict
    :param BackupPlanTags: 

      To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type CreatorRequestId: string
    :param CreatorRequestId: 

      Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a ``CreatorRequestId`` that matches an existing backup plan, that plan is returned. This parameter is optional.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlanId': 'string',
            'BackupPlanArn': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'VersionId': 'string',
            'AdvancedBackupSettings': [
                {
                    'ResourceType': 'string',
                    'BackupOptions': {
                        'string': 'string'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlanId** *(string) --* 

          Uniquely identifies a backup plan.

          
        

        - **BackupPlanArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **VersionId** *(string) --* 

          Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

          
        

        - **AdvancedBackupSettings** *(list) --* 

          A list of ``BackupOptions`` settings for a resource type. This option is only available for Windows VSS backup jobs.

          
          

          - *(dict) --* 

            A list of backup options for each resource type.

            
            

            - **ResourceType** *(string) --* 

              Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

               

              Valid values: ``EC2`` .

              
            

            - **BackupOptions** *(dict) --* 

              Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

               

              Valid values: 

               

              Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

               

              Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

               

              If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

               

              For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    
    *     :py:class:`Backup.Client.exceptions.AlreadyExistsException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: create_backup_selection(**kwargs)

    

    Creates a JSON document that specifies a set of resources to assign to a backup plan. Resources can be included by specifying patterns for a ``ListOfTags`` and selected ``Resources`` . 

     

    For example, consider the following patterns:

     

     
    * ``Resources: "arn:aws:ec2:region:account-id:volume/volume-id"``   
     
    * ``ConditionKey:"department"``    ``ConditionValue:"finance"``    ``ConditionType:"StringEquals"``   
     
    * ``ConditionKey:"importance"``    ``ConditionValue:"critical"``    ``ConditionType:"StringEquals"``   
     

     

    Using these patterns would back up all Amazon Elastic Block Store (Amazon EBS) volumes that are tagged as ``"department=finance"`` , ``"importance=critical"`` , in addition to an EBS volume with the specified volume ID.

     

    Resources and conditions are additive in that all resources that match the pattern are selected. This shouldn't be confused with a logical AND, where all conditions must match. The matching patterns are logically put together using the OR operator. In other words, all patterns that match are selected for backup.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/CreateBackupSelection>`_    


    **Request Syntax** 
    ::

      response = client.create_backup_selection(
          BackupPlanId='string',
          BackupSelection={
              'SelectionName': 'string',
              'IamRoleArn': 'string',
              'Resources': [
                  'string',
              ],
              'ListOfTags': [
                  {
                      'ConditionType': 'STRINGEQUALS',
                      'ConditionKey': 'string',
                      'ConditionValue': 'string'
                  },
              ]
          },
          CreatorRequestId='string'
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies the backup plan to be associated with the selection of resources.

      

    
    :type BackupSelection: dict
    :param BackupSelection: **[REQUIRED]** 

      Specifies the body of a request to assign a set of resources to a backup plan.

      

    
      - **SelectionName** *(string) --* **[REQUIRED]** 

        The display name of a resource selection document.

        

      
      - **IamRoleArn** *(string) --* **[REQUIRED]** 

        The ARN of the IAM role that AWS Backup uses to authenticate when backing up the target resource; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

        

      
      - **Resources** *(list) --* 

        An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.

        

      
        - *(string) --* 

        
    
      - **ListOfTags** *(list) --* 

        An array of conditions used to specify a set of resources to assign to a backup plan; for example, ``"StringEquals": {"ec2:ResourceTag/Department": "accounting"`` . Assigns the backup plan to every resource with at least one matching tag.

        

      
        - *(dict) --* 

          Contains an array of triplets made up of a condition type (such as ``StringEquals`` ), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.

          

        
          - **ConditionType** *(string) --* **[REQUIRED]** 

            An operation, such as ``StringEquals`` , that is applied to a key-value pair used to filter resources in a selection.

            

          
          - **ConditionKey** *(string) --* **[REQUIRED]** 

            The key in a key-value pair. For example, in ``"ec2:ResourceTag/Department": "accounting"`` , ``"ec2:ResourceTag/Department"`` is the key.

            

          
          - **ConditionValue** *(string) --* **[REQUIRED]** 

            The value in a key-value pair. For example, in ``"ec2:ResourceTag/Department": "accounting"`` , ``"accounting"`` is the value.

            

          
        
    
    
    :type CreatorRequestId: string
    :param CreatorRequestId: 

      A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'SelectionId': 'string',
            'BackupPlanId': 'string',
            'CreationDate': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **SelectionId** *(string) --* 

          Uniquely identifies the body of a request to assign a set of resources to a backup plan.

          
        

        - **BackupPlanId** *(string) --* 

          Uniquely identifies a backup plan.

          
        

        - **CreationDate** *(datetime) --* 

          The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    
    *     :py:class:`Backup.Client.exceptions.AlreadyExistsException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: create_backup_vault(**kwargs)

    

    Creates a logical container where backups are stored. A ``CreateBackupVault`` request includes a name, optionally one or more resource tags, an encryption key, and a request ID.

     

    .. note::

       

      Sensitive data, such as passport numbers, should not be included the name of a backup vault.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/CreateBackupVault>`_    


    **Request Syntax** 
    ::

      response = client.create_backup_vault(
          BackupVaultName='string',
          BackupVaultTags={
              'string': 'string'
          },
          EncryptionKeyArn='string',
          CreatorRequestId='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of letters, numbers, and hyphens.

      

    
    :type BackupVaultTags: dict
    :param BackupVaultTags: 

      Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type EncryptionKeyArn: string
    :param EncryptionKeyArn: 

      The server-side encryption key that is used to protect your backups; for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` .

      

    
    :type CreatorRequestId: string
    :param CreatorRequestId: 

      A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultName': 'string',
            'BackupVaultArn': 'string',
            'CreationDate': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultName** *(string) --* 

          The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.

          
        

        - **BackupVaultArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **CreationDate** *(datetime) --* 

          The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    
    *     :py:class:`Backup.Client.exceptions.AlreadyExistsException`

    

  .. py:method:: delete_backup_plan(**kwargs)

    

    Deletes a backup plan. A backup plan can only be deleted after all associated selections of resources have been deleted. Deleting a backup plan deletes the current version of a backup plan. Previous versions, if any, will still exist.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DeleteBackupPlan>`_    


    **Request Syntax** 
    ::

      response = client.delete_backup_plan(
          BackupPlanId='string'
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlanId': 'string',
            'BackupPlanArn': 'string',
            'DeletionDate': datetime(2015, 1, 1),
            'VersionId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlanId** *(string) --* 

          Uniquely identifies a backup plan.

          
        

        - **BackupPlanArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

          
        

        - **DeletionDate** *(datetime) --* 

          The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of ``DeletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **VersionId** *(string) --* 

          Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: delete_backup_selection(**kwargs)

    

    Deletes the resource selection associated with a backup plan that is specified by the ``SelectionId`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DeleteBackupSelection>`_    


    **Request Syntax** 
    ::

      response = client.delete_backup_selection(
          BackupPlanId='string',
          SelectionId='string'
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    :type SelectionId: string
    :param SelectionId: **[REQUIRED]** 

      Uniquely identifies the body of a request to assign a set of resources to a backup plan.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: delete_backup_vault(**kwargs)

    

    Deletes the backup vault identified by its name. A vault can be deleted only if it is empty.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DeleteBackupVault>`_    


    **Request Syntax** 
    ::

      response = client.delete_backup_vault(
          BackupVaultName='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: delete_backup_vault_access_policy(**kwargs)

    

    Deletes the policy document that manages permissions on a backup vault.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DeleteBackupVaultAccessPolicy>`_    


    **Request Syntax** 
    ::

      response = client.delete_backup_vault_access_policy(
          BackupVaultName='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: delete_backup_vault_notifications(**kwargs)

    

    Deletes event notifications for the specified backup vault.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DeleteBackupVaultNotifications>`_    


    **Request Syntax** 
    ::

      response = client.delete_backup_vault_notifications(
          BackupVaultName='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: delete_recovery_point(**kwargs)

    

    Deletes the recovery point specified by a recovery point ID.

     

    If the recovery point ID belongs to a continuous backup, calling this endpoint deletes the existing continuous backup and stops future continuous backup.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DeleteRecoveryPoint>`_    


    **Request Syntax** 
    ::

      response = client.delete_recovery_point(
          BackupVaultName='string',
          RecoveryPointArn='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidResourceStateException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: describe_backup_job(**kwargs)

    

    Returns backup job details for the specified ``BackupJobId`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeBackupJob>`_    


    **Request Syntax** 
    ::

      response = client.describe_backup_job(
          BackupJobId='string'
      )
    :type BackupJobId: string
    :param BackupJobId: **[REQUIRED]** 

      Uniquely identifies a request to AWS Backup to back up a resource.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AccountId': 'string',
            'BackupJobId': 'string',
            'BackupVaultName': 'string',
            'BackupVaultArn': 'string',
            'RecoveryPointArn': 'string',
            'ResourceArn': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'CompletionDate': datetime(2015, 1, 1),
            'State': 'CREATED'|'PENDING'|'RUNNING'|'ABORTING'|'ABORTED'|'COMPLETED'|'FAILED'|'EXPIRED',
            'StatusMessage': 'string',
            'PercentDone': 'string',
            'BackupSizeInBytes': 123,
            'IamRoleArn': 'string',
            'CreatedBy': {
                'BackupPlanId': 'string',
                'BackupPlanArn': 'string',
                'BackupPlanVersion': 'string',
                'BackupRuleId': 'string'
            },
            'ResourceType': 'string',
            'BytesTransferred': 123,
            'ExpectedCompletionDate': datetime(2015, 1, 1),
            'StartBy': datetime(2015, 1, 1),
            'BackupOptions': {
                'string': 'string'
            },
            'BackupType': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AccountId** *(string) --* 

          Returns the account ID that owns the backup job.

          
        

        - **BackupJobId** *(string) --* 

          Uniquely identifies a request to AWS Backup to back up a resource.

          
        

        - **BackupVaultName** *(string) --* 

          The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

          
        

        - **BackupVaultArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **RecoveryPointArn** *(string) --* 

          An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

          
        

        - **ResourceArn** *(string) --* 

          An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **CompletionDate** *(datetime) --* 

          The date and time that a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **State** *(string) --* 

          The current state of a resource recovery point.

          
        

        - **StatusMessage** *(string) --* 

          A detailed message explaining the status of the job to back up a resource.

          
        

        - **PercentDone** *(string) --* 

          Contains an estimated percentage that is complete of a job at the time the job status was queried.

          
        

        - **BackupSizeInBytes** *(integer) --* 

          The size, in bytes, of a backup.

          
        

        - **IamRoleArn** *(string) --* 

          Specifies the IAM role ARN used to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

          
        

        - **CreatedBy** *(dict) --* 

          Contains identifying information about the creation of a backup job, including the ``BackupPlanArn`` , ``BackupPlanId`` , ``BackupPlanVersion`` , and ``BackupRuleId`` of the backup plan that is used to create it.

          
          

          - **BackupPlanId** *(string) --* 

            Uniquely identifies a backup plan.

            
          

          - **BackupPlanArn** *(string) --* 

            An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

            
          

          - **BackupPlanVersion** *(string) --* 

            Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

            
          

          - **BackupRuleId** *(string) --* 

            Uniquely identifies a rule used to schedule the backup of a selection of resources.

            
      
        

        - **ResourceType** *(string) --* 

          The type of AWS resource to be backed up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.

          
        

        - **BytesTransferred** *(integer) --* 

          The size in bytes transferred to a backup vault at the time that the job status was queried.

          
        

        - **ExpectedCompletionDate** *(datetime) --* 

          The date and time that a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of ``ExpectedCompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **StartBy** *(datetime) --* 

          Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the ``StartBy`` time would be 8:00 PM on the date specified. The value of ``StartBy`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **BackupOptions** *(dict) --* 

          Represents the options specified as part of backup plan or on-demand backup job.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **BackupType** *(string) --* 

          Represents the actual backup type selected for a backup job. For example, if a successful WindowsVSS backup was taken, ``BackupType`` returns "WindowsVSS". If ``BackupType`` is empty, then the backup type that was is a regular backup.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.DependencyFailureException`

    

  .. py:method:: describe_backup_vault(**kwargs)

    

    Returns metadata about a backup vault specified by its name.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeBackupVault>`_    


    **Request Syntax** 
    ::

      response = client.describe_backup_vault(
          BackupVaultName='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultName': 'string',
            'BackupVaultArn': 'string',
            'EncryptionKeyArn': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'CreatorRequestId': 'string',
            'NumberOfRecoveryPoints': 123
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultName** *(string) --* 

          The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.

          
        

        - **BackupVaultArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **EncryptionKeyArn** *(string) --* 

          The server-side encryption key that is used to protect your backups; for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` .

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **CreatorRequestId** *(string) --* 

          A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

          
        

        - **NumberOfRecoveryPoints** *(integer) --* 

          The number of recovery points that are stored in a backup vault.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_copy_job(**kwargs)

    

    Returns metadata associated with creating a copy of a resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeCopyJob>`_    


    **Request Syntax** 
    ::

      response = client.describe_copy_job(
          CopyJobId='string'
      )
    :type CopyJobId: string
    :param CopyJobId: **[REQUIRED]** 

      Uniquely identifies a copy job.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'CopyJob': {
                'AccountId': 'string',
                'CopyJobId': 'string',
                'SourceBackupVaultArn': 'string',
                'SourceRecoveryPointArn': 'string',
                'DestinationBackupVaultArn': 'string',
                'DestinationRecoveryPointArn': 'string',
                'ResourceArn': 'string',
                'CreationDate': datetime(2015, 1, 1),
                'CompletionDate': datetime(2015, 1, 1),
                'State': 'CREATED'|'RUNNING'|'COMPLETED'|'FAILED',
                'StatusMessage': 'string',
                'BackupSizeInBytes': 123,
                'IamRoleArn': 'string',
                'CreatedBy': {
                    'BackupPlanId': 'string',
                    'BackupPlanArn': 'string',
                    'BackupPlanVersion': 'string',
                    'BackupRuleId': 'string'
                },
                'ResourceType': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **CopyJob** *(dict) --* 

          Contains detailed information about a copy job.

          
          

          - **AccountId** *(string) --* 

            The account ID that owns the copy job.

            
          

          - **CopyJobId** *(string) --* 

            Uniquely identifies a copy job.

            
          

          - **SourceBackupVaultArn** *(string) --* 

            An Amazon Resource Name (ARN) that uniquely identifies a source copy vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` . 

            
          

          - **SourceRecoveryPointArn** *(string) --* 

            An ARN that uniquely identifies a source recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

            
          

          - **DestinationBackupVaultArn** *(string) --* 

            An Amazon Resource Name (ARN) that uniquely identifies a destination copy vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

            
          

          - **DestinationRecoveryPointArn** *(string) --* 

            An ARN that uniquely identifies a destination recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

            
          

          - **ResourceArn** *(string) --* 

            The AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.

            
          

          - **CreationDate** *(datetime) --* 

            The date and time a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

            
          

          - **CompletionDate** *(datetime) --* 

            The date and time a copy job is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

            
          

          - **State** *(string) --* 

            The current state of a copy job.

            
          

          - **StatusMessage** *(string) --* 

            A detailed message explaining the status of the job to copy a resource.

            
          

          - **BackupSizeInBytes** *(integer) --* 

            The size, in bytes, of a copy job.

            
          

          - **IamRoleArn** *(string) --* 

            Specifies the IAM role ARN used to copy the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

            
          

          - **CreatedBy** *(dict) --* 

            Contains information about the backup plan and rule that AWS Backup used to initiate the recovery point backup.

            
            

            - **BackupPlanId** *(string) --* 

              Uniquely identifies a backup plan.

              
            

            - **BackupPlanArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

              
            

            - **BackupPlanVersion** *(string) --* 

              Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

              
            

            - **BackupRuleId** *(string) --* 

              Uniquely identifies a rule used to schedule the backup of a selection of resources.

              
        
          

          - **ResourceType** *(string) --* 

            The type of AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_global_settings()

    

    Describes the global settings of the AWS account, including whether it is opted in to cross-account backup.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeGlobalSettings>`_    


    **Request Syntax** 
    ::

      response = client.describe_global_settings()
      
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GlobalSettings': {
                'string': 'string'
            },
            'LastUpdateTime': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GlobalSettings** *(dict) --* 

          A list of resources along with the opt-in preferences for the account.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **LastUpdateTime** *(datetime) --* 

          The date and time that the global settings were last updated. This update is in Unix format and Coordinated Universal Time (UTC). The value of ``LastUpdateTime`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_protected_resource(**kwargs)

    

    Returns information about a saved resource, including the last time it was backed up, its Amazon Resource Name (ARN), and the AWS service type of the saved resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeProtectedResource>`_    


    **Request Syntax** 
    ::

      response = client.describe_protected_resource(
          ResourceArn='string'
      )
    :type ResourceArn: string
    :param ResourceArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceArn': 'string',
            'ResourceType': 'string',
            'LastBackupTime': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceArn** *(string) --* 

          An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.

          
        

        - **ResourceType** *(string) --* 

          The type of AWS resource saved as a recovery point; for example, an EBS volume or an Amazon RDS database.

          
        

        - **LastBackupTime** *(datetime) --* 

          The date and time that a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of ``LastBackupTime`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: describe_recovery_point(**kwargs)

    

    Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeRecoveryPoint>`_    


    **Request Syntax** 
    ::

      response = client.describe_recovery_point(
          BackupVaultName='string',
          RecoveryPointArn='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RecoveryPointArn': 'string',
            'BackupVaultName': 'string',
            'BackupVaultArn': 'string',
            'SourceBackupVaultArn': 'string',
            'ResourceArn': 'string',
            'ResourceType': 'string',
            'CreatedBy': {
                'BackupPlanId': 'string',
                'BackupPlanArn': 'string',
                'BackupPlanVersion': 'string',
                'BackupRuleId': 'string'
            },
            'IamRoleArn': 'string',
            'Status': 'COMPLETED'|'PARTIAL'|'DELETING'|'EXPIRED',
            'CreationDate': datetime(2015, 1, 1),
            'CompletionDate': datetime(2015, 1, 1),
            'BackupSizeInBytes': 123,
            'CalculatedLifecycle': {
                'MoveToColdStorageAt': datetime(2015, 1, 1),
                'DeleteAt': datetime(2015, 1, 1)
            },
            'Lifecycle': {
                'MoveToColdStorageAfterDays': 123,
                'DeleteAfterDays': 123
            },
            'EncryptionKeyArn': 'string',
            'IsEncrypted': True|False,
            'StorageClass': 'WARM'|'COLD'|'DELETED',
            'LastRestoreTime': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RecoveryPointArn** *(string) --* 

          An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

          
        

        - **BackupVaultName** *(string) --* 

          The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.

          
        

        - **BackupVaultArn** *(string) --* 

          An ARN that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **SourceBackupVaultArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies the source vault where the resource was originally backed up in; for example, ``arn:aws:backup:us-east-1:123456789012:vault:BackupVault`` . If the recovery is restored to the same AWS account or Region, this value will be ``null`` .

          
        

        - **ResourceArn** *(string) --* 

          An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.

          
        

        - **ResourceType** *(string) --* 

          The type of AWS resource to save as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.

          
        

        - **CreatedBy** *(dict) --* 

          Contains identifying information about the creation of a recovery point, including the ``BackupPlanArn`` , ``BackupPlanId`` , ``BackupPlanVersion`` , and ``BackupRuleId`` of the backup plan used to create it.

          
          

          - **BackupPlanId** *(string) --* 

            Uniquely identifies a backup plan.

            
          

          - **BackupPlanArn** *(string) --* 

            An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

            
          

          - **BackupPlanVersion** *(string) --* 

            Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

            
          

          - **BackupRuleId** *(string) --* 

            Uniquely identifies a rule used to schedule the backup of a selection of resources.

            
      
        

        - **IamRoleArn** *(string) --* 

          Specifies the IAM role ARN used to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

          
        

        - **Status** *(string) --* 

          A status code specifying the state of the recovery point.

           

          .. note::

             

            A partial status indicates that the recovery point was not successfully re-created and must be retried.

             

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **CompletionDate** *(datetime) --* 

          The date and time that a job to create a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **BackupSizeInBytes** *(integer) --* 

          The size, in bytes, of a backup.

          
        

        - **CalculatedLifecycle** *(dict) --* 

          A ``CalculatedLifecycle`` object containing ``DeleteAt`` and ``MoveToColdStorageAt`` timestamps.

          
          

          - **MoveToColdStorageAt** *(datetime) --* 

            A timestamp that specifies when to transition a recovery point to cold storage.

            
          

          - **DeleteAt** *(datetime) --* 

            A timestamp that specifies when to delete a recovery point.

            
      
        

        - **Lifecycle** *(dict) --* 

          The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

           

          Backups that are transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

           

          Only Amazon EFS file system backups can be transitioned to cold storage.

          
          

          - **MoveToColdStorageAfterDays** *(integer) --* 

            Specifies the number of days after creation that a recovery point is moved to cold storage.

            
          

          - **DeleteAfterDays** *(integer) --* 

            Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

            
      
        

        - **EncryptionKeyArn** *(string) --* 

          The server-side encryption key used to protect your backups; for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` .

          
        

        - **IsEncrypted** *(boolean) --* 

          A Boolean value that is returned as ``TRUE`` if the specified recovery point is encrypted, or ``FALSE`` if the recovery point is not encrypted.

          
        

        - **StorageClass** *(string) --* 

          Specifies the storage class of the recovery point. Valid values are ``WARM`` or ``COLD`` .

          
        

        - **LastRestoreTime** *(datetime) --* 

          The date and time that a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of ``LastRestoreTime`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_region_settings()

    

    Returns the current service opt-in settings for the Region. If service-opt-in is enabled for a service, AWS Backup tries to protect that service's resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, AWS Backup does not try to protect that service's resources in this Region, AWS Backup does not try to protect that service's resources in this Region.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeRegionSettings>`_    


    **Request Syntax** 
    ::

      response = client.describe_region_settings()
      
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceTypeOptInPreference': {
                'string': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceTypeOptInPreference** *(dict) --* 

          Returns a list of all services along with the opt-in preferences in the Region.

          
          

          - *(string) --* 
            

            - *(boolean) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_restore_job(**kwargs)

    

    Returns metadata associated with a restore job that is specified by a job ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DescribeRestoreJob>`_    


    **Request Syntax** 
    ::

      response = client.describe_restore_job(
          RestoreJobId='string'
      )
    :type RestoreJobId: string
    :param RestoreJobId: **[REQUIRED]** 

      Uniquely identifies the job that restores a recovery point.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'AccountId': 'string',
            'RestoreJobId': 'string',
            'RecoveryPointArn': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'CompletionDate': datetime(2015, 1, 1),
            'Status': 'PENDING'|'RUNNING'|'COMPLETED'|'ABORTED'|'FAILED',
            'StatusMessage': 'string',
            'PercentDone': 'string',
            'BackupSizeInBytes': 123,
            'IamRoleArn': 'string',
            'ExpectedCompletionTimeMinutes': 123,
            'CreatedResourceArn': 'string',
            'ResourceType': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **AccountId** *(string) --* 

          Returns the account ID that owns the restore job.

          
        

        - **RestoreJobId** *(string) --* 

          Uniquely identifies the job that restores a recovery point.

          
        

        - **RecoveryPointArn** *(string) --* 

          An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **CompletionDate** *(datetime) --* 

          The date and time that a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **Status** *(string) --* 

          Status code specifying the state of the job that is initiated by AWS Backup to restore a recovery point.

          
        

        - **StatusMessage** *(string) --* 

          A message showing the status of a job to restore a recovery point.

          
        

        - **PercentDone** *(string) --* 

          Contains an estimated percentage that is complete of a job at the time the job status was queried.

          
        

        - **BackupSizeInBytes** *(integer) --* 

          The size, in bytes, of the restored resource.

          
        

        - **IamRoleArn** *(string) --* 

          Specifies the IAM role ARN used to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

          
        

        - **ExpectedCompletionTimeMinutes** *(integer) --* 

          The amount of time in minutes that a job restoring a recovery point is expected to take.

          
        

        - **CreatedResourceArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a resource whose recovery point is being restored. The format of the ARN depends on the resource type of the backed-up resource.

          
        

        - **ResourceType** *(string) --* 

          Returns metadata associated with a restore job listed by resource type.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.DependencyFailureException`

    

  .. py:method:: disassociate_recovery_point(**kwargs)

    

    Deletes the specified continuous backup recovery point from AWS Backup and releases control of that continuous backup to the source service, such as Amazon RDS. The source service will continue to create and retain continuous backups using the lifecycle that you specified in your original backup plan.

     

    Does not support snapshot backup recovery points.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/DisassociateRecoveryPoint>`_    


    **Request Syntax** 
    ::

      response = client.disassociate_recovery_point(
          BackupVaultName='string',
          RecoveryPointArn='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The unique name of an AWS Backup vault. Required.

      

    
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies an AWS Backup recovery point. Required.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidResourceStateException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: export_backup_plan_template(**kwargs)

    

    Returns the backup plan that is specified by the plan ID as a backup template.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ExportBackupPlanTemplate>`_    


    **Request Syntax** 
    ::

      response = client.export_backup_plan_template(
          BackupPlanId='string'
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlanTemplateJson': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlanTemplateJson** *(string) --* 

          The body of a backup plan template in JSON format.

           

          .. note::

             

            This is a signed JSON document that cannot be modified before being passed to ``GetBackupPlanFromJSON.``  

             

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_backup_plan(**kwargs)

    

    Returns ``BackupPlan`` details for the specified ``BackupPlanId`` . The details are the body of a backup plan in JSON format, in addition to plan metadata.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetBackupPlan>`_    


    **Request Syntax** 
    ::

      response = client.get_backup_plan(
          BackupPlanId='string',
          VersionId='string'
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    :type VersionId: string
    :param VersionId: 

      Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlan': {
                'BackupPlanName': 'string',
                'Rules': [
                    {
                        'RuleName': 'string',
                        'TargetBackupVaultName': 'string',
                        'ScheduleExpression': 'string',
                        'StartWindowMinutes': 123,
                        'CompletionWindowMinutes': 123,
                        'Lifecycle': {
                            'MoveToColdStorageAfterDays': 123,
                            'DeleteAfterDays': 123
                        },
                        'RecoveryPointTags': {
                            'string': 'string'
                        },
                        'RuleId': 'string',
                        'CopyActions': [
                            {
                                'Lifecycle': {
                                    'MoveToColdStorageAfterDays': 123,
                                    'DeleteAfterDays': 123
                                },
                                'DestinationBackupVaultArn': 'string'
                            },
                        ],
                        'EnableContinuousBackup': True|False
                    },
                ],
                'AdvancedBackupSettings': [
                    {
                        'ResourceType': 'string',
                        'BackupOptions': {
                            'string': 'string'
                        }
                    },
                ]
            },
            'BackupPlanId': 'string',
            'BackupPlanArn': 'string',
            'VersionId': 'string',
            'CreatorRequestId': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'DeletionDate': datetime(2015, 1, 1),
            'LastExecutionDate': datetime(2015, 1, 1),
            'AdvancedBackupSettings': [
                {
                    'ResourceType': 'string',
                    'BackupOptions': {
                        'string': 'string'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlan** *(dict) --* 

          Specifies the body of a backup plan. Includes a ``BackupPlanName`` and one or more sets of ``Rules`` .

          
          

          - **BackupPlanName** *(string) --* 

            The display name of a backup plan.

            
          

          - **Rules** *(list) --* 

            An array of ``BackupRule`` objects, each of which specifies a scheduled task that is used to back up a selection of resources. 

            
            

            - *(dict) --* 

              Specifies a scheduled task used to back up a selection of resources.

              
              

              - **RuleName** *(string) --* 

                An optional display name for a backup rule.

                
              

              - **TargetBackupVaultName** *(string) --* 

                The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

                
              

              - **ScheduleExpression** *(string) --* 

                A CRON expression specifying when AWS Backup initiates a backup job. For more information about cron expressions, see `Schedule Expressions for Rules <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html>`__ in the *Amazon CloudWatch Events User Guide.* . Prior to specifying a value for this parameter, we recommend testing your cron expression using one of the many available cron generator and testing tools.

                
              

              - **StartWindowMinutes** *(integer) --* 

                A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.

                
              

              - **CompletionWindowMinutes** *(integer) --* 

                A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.

                
              

              - **Lifecycle** *(dict) --* 

                The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

                 

                Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

                 

                Only Amazon EFS file system backups can be transitioned to cold storage.

                
                

                - **MoveToColdStorageAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is moved to cold storage.

                  
                

                - **DeleteAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                  
            
              

              - **RecoveryPointTags** *(dict) --* 

                An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
              

              - **RuleId** *(string) --* 

                Uniquely identifies a rule that is used to schedule the backup of a selection of resources.

                
              

              - **CopyActions** *(list) --* 

                An array of ``CopyAction`` objects, which contains the details of the copy operation.

                
                

                - *(dict) --* 

                  The details of the copy operation.

                  
                  

                  - **Lifecycle** *(dict) --* 

                    Contains an array of ``Transition`` objects specifying how long in days before a recovery point transitions to cold storage or is deleted.

                     

                    Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

                     

                    Only Amazon EFS file system backups can be transitioned to cold storage.

                    
                    

                    - **MoveToColdStorageAfterDays** *(integer) --* 

                      Specifies the number of days after creation that a recovery point is moved to cold storage.

                      
                    

                    - **DeleteAfterDays** *(integer) --* 

                      Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                      
                
                  

                  - **DestinationBackupVaultArn** *(string) --* 

                    An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

                    
              
            
              

              - **EnableContinuousBackup** *(boolean) --* 

                Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.

                
          
        
          

          - **AdvancedBackupSettings** *(list) --* 

            Contains a list of ``BackupOptions`` for each resource type.

            
            

            - *(dict) --* 

              A list of backup options for each resource type.

              
              

              - **ResourceType** *(string) --* 

                Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

                 

                Valid values: ``EC2`` .

                
              

              - **BackupOptions** *(dict) --* 

                Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

                 

                Valid values: 

                 

                Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

                 

                Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

                 

                If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

                 

                For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
          
        
      
        

        - **BackupPlanId** *(string) --* 

          Uniquely identifies a backup plan.

          
        

        - **BackupPlanArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

          
        

        - **VersionId** *(string) --* 

          Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.

          
        

        - **CreatorRequestId** *(string) --* 

          A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **DeletionDate** *(datetime) --* 

          The date and time that a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of ``DeletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **LastExecutionDate** *(datetime) --* 

          The last time a job to back up resources was run with this backup plan. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of ``LastExecutionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **AdvancedBackupSettings** *(list) --* 

          Contains a list of ``BackupOptions`` for each resource type. The list is populated only if the advanced option is set for the backup plan.

          
          

          - *(dict) --* 

            A list of backup options for each resource type.

            
            

            - **ResourceType** *(string) --* 

              Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

               

              Valid values: ``EC2`` .

              
            

            - **BackupOptions** *(dict) --* 

              Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

               

              Valid values: 

               

              Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

               

              Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

               

              If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

               

              For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: get_backup_plan_from_json(**kwargs)

    

    Returns a valid JSON document specifying a backup plan or an error.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetBackupPlanFromJSON>`_    


    **Request Syntax** 
    ::

      response = client.get_backup_plan_from_json(
          BackupPlanTemplateJson='string'
      )
    :type BackupPlanTemplateJson: string
    :param BackupPlanTemplateJson: **[REQUIRED]** 

      A customer-supplied backup plan document in JSON format.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlan': {
                'BackupPlanName': 'string',
                'Rules': [
                    {
                        'RuleName': 'string',
                        'TargetBackupVaultName': 'string',
                        'ScheduleExpression': 'string',
                        'StartWindowMinutes': 123,
                        'CompletionWindowMinutes': 123,
                        'Lifecycle': {
                            'MoveToColdStorageAfterDays': 123,
                            'DeleteAfterDays': 123
                        },
                        'RecoveryPointTags': {
                            'string': 'string'
                        },
                        'RuleId': 'string',
                        'CopyActions': [
                            {
                                'Lifecycle': {
                                    'MoveToColdStorageAfterDays': 123,
                                    'DeleteAfterDays': 123
                                },
                                'DestinationBackupVaultArn': 'string'
                            },
                        ],
                        'EnableContinuousBackup': True|False
                    },
                ],
                'AdvancedBackupSettings': [
                    {
                        'ResourceType': 'string',
                        'BackupOptions': {
                            'string': 'string'
                        }
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlan** *(dict) --* 

          Specifies the body of a backup plan. Includes a ``BackupPlanName`` and one or more sets of ``Rules`` .

          
          

          - **BackupPlanName** *(string) --* 

            The display name of a backup plan.

            
          

          - **Rules** *(list) --* 

            An array of ``BackupRule`` objects, each of which specifies a scheduled task that is used to back up a selection of resources. 

            
            

            - *(dict) --* 

              Specifies a scheduled task used to back up a selection of resources.

              
              

              - **RuleName** *(string) --* 

                An optional display name for a backup rule.

                
              

              - **TargetBackupVaultName** *(string) --* 

                The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

                
              

              - **ScheduleExpression** *(string) --* 

                A CRON expression specifying when AWS Backup initiates a backup job. For more information about cron expressions, see `Schedule Expressions for Rules <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html>`__ in the *Amazon CloudWatch Events User Guide.* . Prior to specifying a value for this parameter, we recommend testing your cron expression using one of the many available cron generator and testing tools.

                
              

              - **StartWindowMinutes** *(integer) --* 

                A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.

                
              

              - **CompletionWindowMinutes** *(integer) --* 

                A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.

                
              

              - **Lifecycle** *(dict) --* 

                The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

                 

                Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

                 

                Only Amazon EFS file system backups can be transitioned to cold storage.

                
                

                - **MoveToColdStorageAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is moved to cold storage.

                  
                

                - **DeleteAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                  
            
              

              - **RecoveryPointTags** *(dict) --* 

                An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
              

              - **RuleId** *(string) --* 

                Uniquely identifies a rule that is used to schedule the backup of a selection of resources.

                
              

              - **CopyActions** *(list) --* 

                An array of ``CopyAction`` objects, which contains the details of the copy operation.

                
                

                - *(dict) --* 

                  The details of the copy operation.

                  
                  

                  - **Lifecycle** *(dict) --* 

                    Contains an array of ``Transition`` objects specifying how long in days before a recovery point transitions to cold storage or is deleted.

                     

                    Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

                     

                    Only Amazon EFS file system backups can be transitioned to cold storage.

                    
                    

                    - **MoveToColdStorageAfterDays** *(integer) --* 

                      Specifies the number of days after creation that a recovery point is moved to cold storage.

                      
                    

                    - **DeleteAfterDays** *(integer) --* 

                      Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                      
                
                  

                  - **DestinationBackupVaultArn** *(string) --* 

                    An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

                    
              
            
              

              - **EnableContinuousBackup** *(boolean) --* 

                Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.

                
          
        
          

          - **AdvancedBackupSettings** *(list) --* 

            Contains a list of ``BackupOptions`` for each resource type.

            
            

            - *(dict) --* 

              A list of backup options for each resource type.

              
              

              - **ResourceType** *(string) --* 

                Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

                 

                Valid values: ``EC2`` .

                
              

              - **BackupOptions** *(dict) --* 

                Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

                 

                Valid values: 

                 

                Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

                 

                Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

                 

                If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

                 

                For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: get_backup_plan_from_template(**kwargs)

    

    Returns the template specified by its ``templateId`` as a backup plan.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetBackupPlanFromTemplate>`_    


    **Request Syntax** 
    ::

      response = client.get_backup_plan_from_template(
          BackupPlanTemplateId='string'
      )
    :type BackupPlanTemplateId: string
    :param BackupPlanTemplateId: **[REQUIRED]** 

      Uniquely identifies a stored backup plan template.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlanDocument': {
                'BackupPlanName': 'string',
                'Rules': [
                    {
                        'RuleName': 'string',
                        'TargetBackupVaultName': 'string',
                        'ScheduleExpression': 'string',
                        'StartWindowMinutes': 123,
                        'CompletionWindowMinutes': 123,
                        'Lifecycle': {
                            'MoveToColdStorageAfterDays': 123,
                            'DeleteAfterDays': 123
                        },
                        'RecoveryPointTags': {
                            'string': 'string'
                        },
                        'RuleId': 'string',
                        'CopyActions': [
                            {
                                'Lifecycle': {
                                    'MoveToColdStorageAfterDays': 123,
                                    'DeleteAfterDays': 123
                                },
                                'DestinationBackupVaultArn': 'string'
                            },
                        ],
                        'EnableContinuousBackup': True|False
                    },
                ],
                'AdvancedBackupSettings': [
                    {
                        'ResourceType': 'string',
                        'BackupOptions': {
                            'string': 'string'
                        }
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlanDocument** *(dict) --* 

          Returns the body of a backup plan based on the target template, including the name, rules, and backup vault of the plan.

          
          

          - **BackupPlanName** *(string) --* 

            The display name of a backup plan.

            
          

          - **Rules** *(list) --* 

            An array of ``BackupRule`` objects, each of which specifies a scheduled task that is used to back up a selection of resources. 

            
            

            - *(dict) --* 

              Specifies a scheduled task used to back up a selection of resources.

              
              

              - **RuleName** *(string) --* 

                An optional display name for a backup rule.

                
              

              - **TargetBackupVaultName** *(string) --* 

                The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

                
              

              - **ScheduleExpression** *(string) --* 

                A CRON expression specifying when AWS Backup initiates a backup job. For more information about cron expressions, see `Schedule Expressions for Rules <https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html>`__ in the *Amazon CloudWatch Events User Guide.* . Prior to specifying a value for this parameter, we recommend testing your cron expression using one of the many available cron generator and testing tools.

                
              

              - **StartWindowMinutes** *(integer) --* 

                A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.

                
              

              - **CompletionWindowMinutes** *(integer) --* 

                A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.

                
              

              - **Lifecycle** *(dict) --* 

                The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

                 

                Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

                 

                Only Amazon EFS file system backups can be transitioned to cold storage.

                
                

                - **MoveToColdStorageAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is moved to cold storage.

                  
                

                - **DeleteAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                  
            
              

              - **RecoveryPointTags** *(dict) --* 

                An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
              

              - **RuleId** *(string) --* 

                Uniquely identifies a rule that is used to schedule the backup of a selection of resources.

                
              

              - **CopyActions** *(list) --* 

                An array of ``CopyAction`` objects, which contains the details of the copy operation.

                
                

                - *(dict) --* 

                  The details of the copy operation.

                  
                  

                  - **Lifecycle** *(dict) --* 

                    Contains an array of ``Transition`` objects specifying how long in days before a recovery point transitions to cold storage or is deleted.

                     

                    Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

                     

                    Only Amazon EFS file system backups can be transitioned to cold storage.

                    
                    

                    - **MoveToColdStorageAfterDays** *(integer) --* 

                      Specifies the number of days after creation that a recovery point is moved to cold storage.

                      
                    

                    - **DeleteAfterDays** *(integer) --* 

                      Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                      
                
                  

                  - **DestinationBackupVaultArn** *(string) --* 

                    An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

                    
              
            
              

              - **EnableContinuousBackup** *(boolean) --* 

                Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.

                
          
        
          

          - **AdvancedBackupSettings** *(list) --* 

            Contains a list of ``BackupOptions`` for each resource type.

            
            

            - *(dict) --* 

              A list of backup options for each resource type.

              
              

              - **ResourceType** *(string) --* 

                Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

                 

                Valid values: ``EC2`` .

                
              

              - **BackupOptions** *(dict) --* 

                Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

                 

                Valid values: 

                 

                Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

                 

                Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

                 

                If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

                 

                For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: get_backup_selection(**kwargs)

    

    Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetBackupSelection>`_    


    **Request Syntax** 
    ::

      response = client.get_backup_selection(
          BackupPlanId='string',
          SelectionId='string'
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    :type SelectionId: string
    :param SelectionId: **[REQUIRED]** 

      Uniquely identifies the body of a request to assign a set of resources to a backup plan.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupSelection': {
                'SelectionName': 'string',
                'IamRoleArn': 'string',
                'Resources': [
                    'string',
                ],
                'ListOfTags': [
                    {
                        'ConditionType': 'STRINGEQUALS',
                        'ConditionKey': 'string',
                        'ConditionValue': 'string'
                    },
                ]
            },
            'SelectionId': 'string',
            'BackupPlanId': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'CreatorRequestId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupSelection** *(dict) --* 

          Specifies the body of a request to assign a set of resources to a backup plan.

          
          

          - **SelectionName** *(string) --* 

            The display name of a resource selection document.

            
          

          - **IamRoleArn** *(string) --* 

            The ARN of the IAM role that AWS Backup uses to authenticate when backing up the target resource; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

            
          

          - **Resources** *(list) --* 

            An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.

            
            

            - *(string) --* 
        
          

          - **ListOfTags** *(list) --* 

            An array of conditions used to specify a set of resources to assign to a backup plan; for example, ``"StringEquals": {"ec2:ResourceTag/Department": "accounting"`` . Assigns the backup plan to every resource with at least one matching tag.

            
            

            - *(dict) --* 

              Contains an array of triplets made up of a condition type (such as ``StringEquals`` ), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.

              
              

              - **ConditionType** *(string) --* 

                An operation, such as ``StringEquals`` , that is applied to a key-value pair used to filter resources in a selection.

                
              

              - **ConditionKey** *(string) --* 

                The key in a key-value pair. For example, in ``"ec2:ResourceTag/Department": "accounting"`` , ``"ec2:ResourceTag/Department"`` is the key.

                
              

              - **ConditionValue** *(string) --* 

                The value in a key-value pair. For example, in ``"ec2:ResourceTag/Department": "accounting"`` , ``"accounting"`` is the value.

                
          
        
      
        

        - **SelectionId** *(string) --* 

          Uniquely identifies the body of a request to assign a set of resources to a backup plan.

          
        

        - **BackupPlanId** *(string) --* 

          Uniquely identifies a backup plan.

          
        

        - **CreationDate** *(datetime) --* 

          The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **CreatorRequestId** *(string) --* 

          A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: get_backup_vault_access_policy(**kwargs)

    

    Returns the access policy document that is associated with the named backup vault.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetBackupVaultAccessPolicy>`_    


    **Request Syntax** 
    ::

      response = client.get_backup_vault_access_policy(
          BackupVaultName='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultName': 'string',
            'BackupVaultArn': 'string',
            'Policy': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultName** *(string) --* 

          The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.

          
        

        - **BackupVaultArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **Policy** *(string) --* 

          The backup vault access policy document in JSON format.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: get_backup_vault_notifications(**kwargs)

    

    Returns event notifications for the specified backup vault.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetBackupVaultNotifications>`_    


    **Request Syntax** 
    ::

      response = client.get_backup_vault_notifications(
          BackupVaultName='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultName': 'string',
            'BackupVaultArn': 'string',
            'SNSTopicArn': 'string',
            'BackupVaultEvents': [
                'BACKUP_JOB_STARTED'|'BACKUP_JOB_COMPLETED'|'BACKUP_JOB_SUCCESSFUL'|'BACKUP_JOB_FAILED'|'BACKUP_JOB_EXPIRED'|'RESTORE_JOB_STARTED'|'RESTORE_JOB_COMPLETED'|'RESTORE_JOB_SUCCESSFUL'|'RESTORE_JOB_FAILED'|'COPY_JOB_STARTED'|'COPY_JOB_SUCCESSFUL'|'COPY_JOB_FAILED'|'RECOVERY_POINT_MODIFIED'|'BACKUP_PLAN_CREATED'|'BACKUP_PLAN_MODIFIED',
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultName** *(string) --* 

          The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.

          
        

        - **BackupVaultArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **SNSTopicArn** *(string) --* 

          An ARN that uniquely identifies an Amazon Simple Notification Service (Amazon SNS) topic; for example, ``arn:aws:sns:us-west-2:111122223333:MyTopic`` .

          
        

        - **BackupVaultEvents** *(list) --* 

          An array of events that indicate the status of jobs to back up resources to the backup vault.

          
          

          - *(string) --* 
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_recovery_point_restore_metadata(**kwargs)

    

    Returns a set of metadata key-value pairs that were used to create the backup.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetRecoveryPointRestoreMetadata>`_    


    **Request Syntax** 
    ::

      response = client.get_recovery_point_restore_metadata(
          BackupVaultName='string',
          RecoveryPointArn='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultArn': 'string',
            'RecoveryPointArn': 'string',
            'RestoreMetadata': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultArn** *(string) --* 

          An ARN that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **RecoveryPointArn** *(string) --* 

          An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

          
        

        - **RestoreMetadata** *(dict) --* 

          The set of metadata key-value pairs that describe the original configuration of the backed-up resource. These values vary depending on the service that is being restored.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: get_supported_resource_types()

    

    Returns the AWS resource types supported by AWS Backup.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/GetSupportedResourceTypes>`_    


    **Request Syntax** 

    ::

      response = client.get_supported_resource_types()
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourceTypes': [
                'string',
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourceTypes** *(list) --* 

          Contains a string with the supported AWS resource types:

           

           
          * ``DynamoDB`` for Amazon DynamoDB 
           
          * ``EBS`` for Amazon Elastic Block Store 
           
          * ``EC2`` for Amazon Elastic Compute Cloud 
           
          * ``EFS`` for Amazon Elastic File System 
           
          * ``RDS`` for Amazon Relational Database Service 
           
          * ``Aurora`` for Amazon Aurora 
           
          * ``Storage Gateway`` for AWS Storage Gateway 
           

          
          

          - *(string) --* 
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_backup_jobs(**kwargs)

    

    Returns a list of existing backup jobs for an authenticated account for the last 30 days. For a longer period of time, consider using these `monitoring tools <https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListBackupJobs>`_    


    **Request Syntax** 
    ::

      response = client.list_backup_jobs(
          NextToken='string',
          MaxResults=123,
          ByResourceArn='string',
          ByState='CREATED'|'PENDING'|'RUNNING'|'ABORTING'|'ABORTED'|'COMPLETED'|'FAILED'|'EXPIRED',
          ByBackupVaultName='string',
          ByCreatedBefore=datetime(2015, 1, 1),
          ByCreatedAfter=datetime(2015, 1, 1),
          ByResourceType='string',
          ByAccountId='string'
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    :type ByResourceArn: string
    :param ByResourceArn: 

      Returns only backup jobs that match the specified resource Amazon Resource Name (ARN).

      

    
    :type ByState: string
    :param ByState: 

      Returns only backup jobs that are in the specified state.

      

    
    :type ByBackupVaultName: string
    :param ByBackupVaultName: 

      Returns only backup jobs that will be stored in the specified backup vault. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type ByCreatedBefore: datetime
    :param ByCreatedBefore: 

      Returns only backup jobs that were created before the specified date.

      

    
    :type ByCreatedAfter: datetime
    :param ByCreatedAfter: 

      Returns only backup jobs that were created after the specified date.

      

    
    :type ByResourceType: string
    :param ByResourceType: 

      Returns only backup jobs for the specified resources:

       

       
      * ``DynamoDB`` for Amazon DynamoDB 
       
      * ``EBS`` for Amazon Elastic Block Store 
       
      * ``EC2`` for Amazon Elastic Compute Cloud 
       
      * ``EFS`` for Amazon Elastic File System 
       
      * ``RDS`` for Amazon Relational Database Service 
       
      * ``Aurora`` for Amazon Aurora 
       
      * ``Storage Gateway`` for AWS Storage Gateway 
       

      

    
    :type ByAccountId: string
    :param ByAccountId: 

      The account ID to list the jobs from. Returns only backup jobs associated with the specified account ID.

       

      If used from an AWS Organizations management account, passing ``*`` returns all jobs across the organization.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupJobs': [
                {
                    'AccountId': 'string',
                    'BackupJobId': 'string',
                    'BackupVaultName': 'string',
                    'BackupVaultArn': 'string',
                    'RecoveryPointArn': 'string',
                    'ResourceArn': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'CompletionDate': datetime(2015, 1, 1),
                    'State': 'CREATED'|'PENDING'|'RUNNING'|'ABORTING'|'ABORTED'|'COMPLETED'|'FAILED'|'EXPIRED',
                    'StatusMessage': 'string',
                    'PercentDone': 'string',
                    'BackupSizeInBytes': 123,
                    'IamRoleArn': 'string',
                    'CreatedBy': {
                        'BackupPlanId': 'string',
                        'BackupPlanArn': 'string',
                        'BackupPlanVersion': 'string',
                        'BackupRuleId': 'string'
                    },
                    'ExpectedCompletionDate': datetime(2015, 1, 1),
                    'StartBy': datetime(2015, 1, 1),
                    'ResourceType': 'string',
                    'BytesTransferred': 123,
                    'BackupOptions': {
                        'string': 'string'
                    },
                    'BackupType': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupJobs** *(list) --* 

          An array of structures containing metadata about your backup jobs returned in JSON format.

          
          

          - *(dict) --* 

            Contains detailed information about a backup job.

            
            

            - **AccountId** *(string) --* 

              The account ID that owns the backup job.

              
            

            - **BackupJobId** *(string) --* 

              Uniquely identifies a request to AWS Backup to back up a resource.

              
            

            - **BackupVaultName** *(string) --* 

              The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

              
            

            - **BackupVaultArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

              
            

            - **RecoveryPointArn** *(string) --* 

              An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

              
            

            - **ResourceArn** *(string) --* 

              An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **CompletionDate** *(datetime) --* 

              The date and time a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **State** *(string) --* 

              The current state of a resource recovery point.

              
            

            - **StatusMessage** *(string) --* 

              A detailed message explaining the status of the job to back up a resource.

              
            

            - **PercentDone** *(string) --* 

              Contains an estimated percentage complete of a job at the time the job status was queried.

              
            

            - **BackupSizeInBytes** *(integer) --* 

              The size, in bytes, of a backup.

              
            

            - **IamRoleArn** *(string) --* 

              Specifies the IAM role ARN used to create the target recovery point. IAM roles other than the default role must include either ``AWSBackup`` or ``AwsBackup`` in the role name. For example, ``arn:aws:iam::123456789012:role/AWSBackupRDSAccess`` . Role names without those strings lack permissions to perform backup jobs.

              
            

            - **CreatedBy** *(dict) --* 

              Contains identifying information about the creation of a backup job, including the ``BackupPlanArn`` , ``BackupPlanId`` , ``BackupPlanVersion`` , and ``BackupRuleId`` of the backup plan used to create it.

              
              

              - **BackupPlanId** *(string) --* 

                Uniquely identifies a backup plan.

                
              

              - **BackupPlanArn** *(string) --* 

                An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

                
              

              - **BackupPlanVersion** *(string) --* 

                Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

                
              

              - **BackupRuleId** *(string) --* 

                Uniquely identifies a rule used to schedule the backup of a selection of resources.

                
          
            

            - **ExpectedCompletionDate** *(datetime) --* 

              The date and time a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of ``ExpectedCompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **StartBy** *(datetime) --* 

              Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the ``StartBy`` time would be 8:00 PM on the date specified. The value of ``StartBy`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **ResourceType** *(string) --* 

              The type of AWS resource to be backed up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.

              
            

            - **BytesTransferred** *(integer) --* 

              The size in bytes transferred to a backup vault at the time that the job status was queried.

              
            

            - **BackupOptions** *(dict) --* 

              Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

               

              Valid values: Set to ``"WindowsVSS”:“enabled"`` to enable WindowsVSS backup option and create a VSS Windows backup. Set to “WindowsVSS”:”disabled” to create a regular backup. If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **BackupType** *(string) --* 

              Represents the type of backup for a backup job.

              
        
      
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_backup_plan_templates(**kwargs)

    

    Returns metadata of your saved backup plan templates, including the template ID, name, and the creation and deletion dates.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListBackupPlanTemplates>`_    


    **Request Syntax** 
    ::

      response = client.list_backup_plan_templates(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'BackupPlanTemplatesList': [
                {
                    'BackupPlanTemplateId': 'string',
                    'BackupPlanTemplateName': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **BackupPlanTemplatesList** *(list) --* 

          An array of template list items containing metadata about your saved templates.

          
          

          - *(dict) --* 

            An object specifying metadata associated with a backup plan template.

            
            

            - **BackupPlanTemplateId** *(string) --* 

              Uniquely identifies a stored backup plan template.

              
            

            - **BackupPlanTemplateName** *(string) --* 

              The optional display name of a backup plan template.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: list_backup_plan_versions(**kwargs)

    

    Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListBackupPlanVersions>`_    


    **Request Syntax** 
    ::

      response = client.list_backup_plan_versions(
          BackupPlanId='string',
          NextToken='string',
          MaxResults=123
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'BackupPlanVersionsList': [
                {
                    'BackupPlanArn': 'string',
                    'BackupPlanId': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'DeletionDate': datetime(2015, 1, 1),
                    'VersionId': 'string',
                    'BackupPlanName': 'string',
                    'CreatorRequestId': 'string',
                    'LastExecutionDate': datetime(2015, 1, 1),
                    'AdvancedBackupSettings': [
                        {
                            'ResourceType': 'string',
                            'BackupOptions': {
                                'string': 'string'
                            }
                        },
                    ]
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **BackupPlanVersionsList** *(list) --* 

          An array of version list items containing metadata about your backup plans.

          
          

          - *(dict) --* 

            Contains metadata about a backup plan.

            
            

            - **BackupPlanArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

              
            

            - **BackupPlanId** *(string) --* 

              Uniquely identifies a backup plan.

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a resource backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **DeletionDate** *(datetime) --* 

              The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of ``DeletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **VersionId** *(string) --* 

              Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.

              
            

            - **BackupPlanName** *(string) --* 

              The display name of a saved backup plan.

              
            

            - **CreatorRequestId** *(string) --* 

              A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

              
            

            - **LastExecutionDate** *(datetime) --* 

              The last time a job to back up resources was run with this rule. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of ``LastExecutionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **AdvancedBackupSettings** *(list) --* 

              Contains a list of ``BackupOptions`` for a resource type.

              
              

              - *(dict) --* 

                A list of backup options for each resource type.

                
                

                - **ResourceType** *(string) --* 

                  Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

                   

                  Valid values: ``EC2`` .

                  
                

                - **BackupOptions** *(dict) --* 

                  Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

                   

                  Valid values: 

                   

                  Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

                   

                  Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

                   

                  If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

                   

                  For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

                  
                  

                  - *(string) --* 
                    

                    - *(string) --* 
              
            
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_backup_plans(**kwargs)

    

    Returns a list of existing backup plans for an authenticated account. The list is populated only if the advanced option is set for the backup plan. The list contains information such as Amazon Resource Names (ARNs), plan IDs, creation and deletion dates, version IDs, plan names, and creator request IDs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListBackupPlans>`_    


    **Request Syntax** 
    ::

      response = client.list_backup_plans(
          NextToken='string',
          MaxResults=123,
          IncludeDeleted=True|False
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    :type IncludeDeleted: boolean
    :param IncludeDeleted: 

      A Boolean value with a default value of ``FALSE`` that returns deleted backup plans when set to ``TRUE`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'BackupPlansList': [
                {
                    'BackupPlanArn': 'string',
                    'BackupPlanId': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'DeletionDate': datetime(2015, 1, 1),
                    'VersionId': 'string',
                    'BackupPlanName': 'string',
                    'CreatorRequestId': 'string',
                    'LastExecutionDate': datetime(2015, 1, 1),
                    'AdvancedBackupSettings': [
                        {
                            'ResourceType': 'string',
                            'BackupOptions': {
                                'string': 'string'
                            }
                        },
                    ]
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **BackupPlansList** *(list) --* 

          An array of backup plan list items containing metadata about your saved backup plans.

          
          

          - *(dict) --* 

            Contains metadata about a backup plan.

            
            

            - **BackupPlanArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

              
            

            - **BackupPlanId** *(string) --* 

              Uniquely identifies a backup plan.

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a resource backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **DeletionDate** *(datetime) --* 

              The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of ``DeletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **VersionId** *(string) --* 

              Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.

              
            

            - **BackupPlanName** *(string) --* 

              The display name of a saved backup plan.

              
            

            - **CreatorRequestId** *(string) --* 

              A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

              
            

            - **LastExecutionDate** *(datetime) --* 

              The last time a job to back up resources was run with this rule. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of ``LastExecutionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **AdvancedBackupSettings** *(list) --* 

              Contains a list of ``BackupOptions`` for a resource type.

              
              

              - *(dict) --* 

                A list of backup options for each resource type.

                
                

                - **ResourceType** *(string) --* 

                  Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

                   

                  Valid values: ``EC2`` .

                  
                

                - **BackupOptions** *(dict) --* 

                  Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

                   

                  Valid values: 

                   

                  Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

                   

                  Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

                   

                  If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

                   

                  For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

                  
                  

                  - *(string) --* 
                    

                    - *(string) --* 
              
            
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_backup_selections(**kwargs)

    

    Returns an array containing metadata of the resources associated with the target backup plan.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListBackupSelections>`_    


    **Request Syntax** 
    ::

      response = client.list_backup_selections(
          BackupPlanId='string',
          NextToken='string',
          MaxResults=123
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'BackupSelectionsList': [
                {
                    'SelectionId': 'string',
                    'SelectionName': 'string',
                    'BackupPlanId': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'CreatorRequestId': 'string',
                    'IamRoleArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **BackupSelectionsList** *(list) --* 

          An array of backup selection list items containing metadata about each resource in the list.

          
          

          - *(dict) --* 

            Contains metadata about a ``BackupSelection`` object.

            
            

            - **SelectionId** *(string) --* 

              Uniquely identifies a request to assign a set of resources to a backup plan.

              
            

            - **SelectionName** *(string) --* 

              The display name of a resource selection document.

              
            

            - **BackupPlanId** *(string) --* 

              Uniquely identifies a backup plan.

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **CreatorRequestId** *(string) --* 

              A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

              
            

            - **IamRoleArn** *(string) --* 

              Specifies the IAM role Amazon Resource Name (ARN) to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_backup_vaults(**kwargs)

    

    Returns a list of recovery point storage containers along with information about them.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListBackupVaults>`_    


    **Request Syntax** 
    ::

      response = client.list_backup_vaults(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultList': [
                {
                    'BackupVaultName': 'string',
                    'BackupVaultArn': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'EncryptionKeyArn': 'string',
                    'CreatorRequestId': 'string',
                    'NumberOfRecoveryPoints': 123
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultList** *(list) --* 

          An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.

          
          

          - *(dict) --* 

            Contains metadata about a backup vault.

            
            

            - **BackupVaultName** *(string) --* 

              The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

              
            

            - **BackupVaultArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a resource backup is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **EncryptionKeyArn** *(string) --* 

              The server-side encryption key that is used to protect your backups; for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` .

              
            

            - **CreatorRequestId** *(string) --* 

              A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.

              
            

            - **NumberOfRecoveryPoints** *(integer) --* 

              The number of recovery points that are stored in a backup vault.

              
        
      
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_copy_jobs(**kwargs)

    

    Returns metadata about your copy jobs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListCopyJobs>`_    


    **Request Syntax** 
    ::

      response = client.list_copy_jobs(
          NextToken='string',
          MaxResults=123,
          ByResourceArn='string',
          ByState='CREATED'|'RUNNING'|'COMPLETED'|'FAILED',
          ByCreatedBefore=datetime(2015, 1, 1),
          ByCreatedAfter=datetime(2015, 1, 1),
          ByResourceType='string',
          ByDestinationVaultArn='string',
          ByAccountId='string'
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. 

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    :type ByResourceArn: string
    :param ByResourceArn: 

      Returns only copy jobs that match the specified resource Amazon Resource Name (ARN). 

      

    
    :type ByState: string
    :param ByState: 

      Returns only copy jobs that are in the specified state.

      

    
    :type ByCreatedBefore: datetime
    :param ByCreatedBefore: 

      Returns only copy jobs that were created before the specified date.

      

    
    :type ByCreatedAfter: datetime
    :param ByCreatedAfter: 

      Returns only copy jobs that were created after the specified date.

      

    
    :type ByResourceType: string
    :param ByResourceType: 

      Returns only backup jobs for the specified resources:

       

       
      * ``DynamoDB`` for Amazon DynamoDB 
       
      * ``EBS`` for Amazon Elastic Block Store 
       
      * ``EC2`` for Amazon Elastic Compute Cloud 
       
      * ``EFS`` for Amazon Elastic File System 
       
      * ``RDS`` for Amazon Relational Database Service 
       
      * ``Aurora`` for Amazon Aurora 
       
      * ``Storage Gateway`` for AWS Storage Gateway 
       

      

    
    :type ByDestinationVaultArn: string
    :param ByDestinationVaultArn: 

      An Amazon Resource Name (ARN) that uniquely identifies a source backup vault to copy from; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` . 

      

    
    :type ByAccountId: string
    :param ByAccountId: 

      The account ID to list the jobs from. Returns only copy jobs associated with the specified account ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'CopyJobs': [
                {
                    'AccountId': 'string',
                    'CopyJobId': 'string',
                    'SourceBackupVaultArn': 'string',
                    'SourceRecoveryPointArn': 'string',
                    'DestinationBackupVaultArn': 'string',
                    'DestinationRecoveryPointArn': 'string',
                    'ResourceArn': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'CompletionDate': datetime(2015, 1, 1),
                    'State': 'CREATED'|'RUNNING'|'COMPLETED'|'FAILED',
                    'StatusMessage': 'string',
                    'BackupSizeInBytes': 123,
                    'IamRoleArn': 'string',
                    'CreatedBy': {
                        'BackupPlanId': 'string',
                        'BackupPlanArn': 'string',
                        'BackupPlanVersion': 'string',
                        'BackupRuleId': 'string'
                    },
                    'ResourceType': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **CopyJobs** *(list) --* 

          An array of structures containing metadata about your copy jobs returned in JSON format. 

          
          

          - *(dict) --* 

            Contains detailed information about a copy job.

            
            

            - **AccountId** *(string) --* 

              The account ID that owns the copy job.

              
            

            - **CopyJobId** *(string) --* 

              Uniquely identifies a copy job.

              
            

            - **SourceBackupVaultArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a source copy vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` . 

              
            

            - **SourceRecoveryPointArn** *(string) --* 

              An ARN that uniquely identifies a source recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

              
            

            - **DestinationBackupVaultArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a destination copy vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

              
            

            - **DestinationRecoveryPointArn** *(string) --* 

              An ARN that uniquely identifies a destination recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

              
            

            - **ResourceArn** *(string) --* 

              The AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **CompletionDate** *(datetime) --* 

              The date and time a copy job is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **State** *(string) --* 

              The current state of a copy job.

              
            

            - **StatusMessage** *(string) --* 

              A detailed message explaining the status of the job to copy a resource.

              
            

            - **BackupSizeInBytes** *(integer) --* 

              The size, in bytes, of a copy job.

              
            

            - **IamRoleArn** *(string) --* 

              Specifies the IAM role ARN used to copy the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

              
            

            - **CreatedBy** *(dict) --* 

              Contains information about the backup plan and rule that AWS Backup used to initiate the recovery point backup.

              
              

              - **BackupPlanId** *(string) --* 

                Uniquely identifies a backup plan.

                
              

              - **BackupPlanArn** *(string) --* 

                An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

                
              

              - **BackupPlanVersion** *(string) --* 

                Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

                
              

              - **BackupRuleId** *(string) --* 

                Uniquely identifies a rule used to schedule the backup of a selection of resources.

                
          
            

            - **ResourceType** *(string) --* 

              The type of AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.

              
        
      
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. 

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_protected_resources(**kwargs)

    

    Returns an array of resources successfully backed up by AWS Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListProtectedResources>`_    


    **Request Syntax** 
    ::

      response = client.list_protected_resources(
          NextToken='string',
          MaxResults=123
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Results': [
                {
                    'ResourceArn': 'string',
                    'ResourceType': 'string',
                    'LastBackupTime': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Results** *(list) --* 

          An array of resources successfully backed up by AWS Backup including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.

          
          

          - *(dict) --* 

            A structure that contains information about a backed-up resource.

            
            

            - **ResourceArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.

              
            

            - **ResourceType** *(string) --* 

              The type of AWS resource; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.

              
            

            - **LastBackupTime** *(datetime) --* 

              The date and time a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of ``LastBackupTime`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
        
      
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_recovery_points_by_backup_vault(**kwargs)

    

    Returns detailed information about the recovery points stored in a backup vault.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListRecoveryPointsByBackupVault>`_    


    **Request Syntax** 
    ::

      response = client.list_recovery_points_by_backup_vault(
          BackupVaultName='string',
          NextToken='string',
          MaxResults=123,
          ByResourceArn='string',
          ByResourceType='string',
          ByBackupPlanId='string',
          ByCreatedBefore=datetime(2015, 1, 1),
          ByCreatedAfter=datetime(2015, 1, 1)
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    :type ByResourceArn: string
    :param ByResourceArn: 

      Returns only recovery points that match the specified resource Amazon Resource Name (ARN).

      

    
    :type ByResourceType: string
    :param ByResourceType: 

      Returns only recovery points that match the specified resource type.

      

    
    :type ByBackupPlanId: string
    :param ByBackupPlanId: 

      Returns only recovery points that match the specified backup plan ID.

      

    
    :type ByCreatedBefore: datetime
    :param ByCreatedBefore: 

      Returns only recovery points that were created before the specified timestamp.

      

    
    :type ByCreatedAfter: datetime
    :param ByCreatedAfter: 

      Returns only recovery points that were created after the specified timestamp.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'RecoveryPoints': [
                {
                    'RecoveryPointArn': 'string',
                    'BackupVaultName': 'string',
                    'BackupVaultArn': 'string',
                    'SourceBackupVaultArn': 'string',
                    'ResourceArn': 'string',
                    'ResourceType': 'string',
                    'CreatedBy': {
                        'BackupPlanId': 'string',
                        'BackupPlanArn': 'string',
                        'BackupPlanVersion': 'string',
                        'BackupRuleId': 'string'
                    },
                    'IamRoleArn': 'string',
                    'Status': 'COMPLETED'|'PARTIAL'|'DELETING'|'EXPIRED',
                    'CreationDate': datetime(2015, 1, 1),
                    'CompletionDate': datetime(2015, 1, 1),
                    'BackupSizeInBytes': 123,
                    'CalculatedLifecycle': {
                        'MoveToColdStorageAt': datetime(2015, 1, 1),
                        'DeleteAt': datetime(2015, 1, 1)
                    },
                    'Lifecycle': {
                        'MoveToColdStorageAfterDays': 123,
                        'DeleteAfterDays': 123
                    },
                    'EncryptionKeyArn': 'string',
                    'IsEncrypted': True|False,
                    'LastRestoreTime': datetime(2015, 1, 1)
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **RecoveryPoints** *(list) --* 

          An array of objects that contain detailed information about recovery points saved in a backup vault.

          
          

          - *(dict) --* 

            Contains detailed information about the recovery points stored in a backup vault.

            
            

            - **RecoveryPointArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

              
            

            - **BackupVaultName** *(string) --* 

              The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

              
            

            - **BackupVaultArn** *(string) --* 

              An ARN that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

              
            

            - **SourceBackupVaultArn** *(string) --* 

              The backup vault where the recovery point was originally copied from. If the recovery point is restored to the same account this value will be ``null`` .

              
            

            - **ResourceArn** *(string) --* 

              An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.

              
            

            - **ResourceType** *(string) --* 

              The type of AWS resource saved as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.

              
            

            - **CreatedBy** *(dict) --* 

              Contains identifying information about the creation of a recovery point, including the ``BackupPlanArn`` , ``BackupPlanId`` , ``BackupPlanVersion`` , and ``BackupRuleId`` of the backup plan that is used to create it.

              
              

              - **BackupPlanId** *(string) --* 

                Uniquely identifies a backup plan.

                
              

              - **BackupPlanArn** *(string) --* 

                An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

                
              

              - **BackupPlanVersion** *(string) --* 

                Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.

                
              

              - **BackupRuleId** *(string) --* 

                Uniquely identifies a rule used to schedule the backup of a selection of resources.

                
          
            

            - **IamRoleArn** *(string) --* 

              Specifies the IAM role ARN used to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

              
            

            - **Status** *(string) --* 

              A status code specifying the state of the recovery point.

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **CompletionDate** *(datetime) --* 

              The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **BackupSizeInBytes** *(integer) --* 

              The size, in bytes, of a backup.

              
            

            - **CalculatedLifecycle** *(dict) --* 

              A ``CalculatedLifecycle`` object containing ``DeleteAt`` and ``MoveToColdStorageAt`` timestamps.

              
              

              - **MoveToColdStorageAt** *(datetime) --* 

                A timestamp that specifies when to transition a recovery point to cold storage.

                
              

              - **DeleteAt** *(datetime) --* 

                A timestamp that specifies when to delete a recovery point.

                
          
            

            - **Lifecycle** *(dict) --* 

              The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

               

              Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

               

              Only Amazon EFS file system backups can be transitioned to cold storage.

              
              

              - **MoveToColdStorageAfterDays** *(integer) --* 

                Specifies the number of days after creation that a recovery point is moved to cold storage.

                
              

              - **DeleteAfterDays** *(integer) --* 

                Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                
          
            

            - **EncryptionKeyArn** *(string) --* 

              The server-side encryption key that is used to protect your backups; for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` .

              
            

            - **IsEncrypted** *(boolean) --* 

              A Boolean value that is returned as ``TRUE`` if the specified recovery point is encrypted, or ``FALSE`` if the recovery point is not encrypted.

              
            

            - **LastRestoreTime** *(datetime) --* 

              The date and time a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of ``LastRestoreTime`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_recovery_points_by_resource(**kwargs)

    

    Returns detailed information about recovery points of the type specified by a resource Amazon Resource Name (ARN).

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListRecoveryPointsByResource>`_    


    **Request Syntax** 
    ::

      response = client.list_recovery_points_by_resource(
          ResourceArn='string',
          NextToken='string',
          MaxResults=123
      )
    :type ResourceArn: string
    :param ResourceArn: **[REQUIRED]** 

      An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.

      

    
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'RecoveryPoints': [
                {
                    'RecoveryPointArn': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'Status': 'COMPLETED'|'PARTIAL'|'DELETING'|'EXPIRED',
                    'EncryptionKeyArn': 'string',
                    'BackupSizeBytes': 123,
                    'BackupVaultName': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **RecoveryPoints** *(list) --* 

          An array of objects that contain detailed information about recovery points of the specified resource type.

          
          

          - *(dict) --* 

            Contains detailed information about a saved recovery point.

            
            

            - **RecoveryPointArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **Status** *(string) --* 

              A status code specifying the state of the recovery point.

              
            

            - **EncryptionKeyArn** *(string) --* 

              The server-side encryption key that is used to protect your backups; for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` .

              
            

            - **BackupSizeBytes** *(integer) --* 

              The size, in bytes, of a backup.

              
            

            - **BackupVaultName** *(string) --* 

              The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_restore_jobs(**kwargs)

    

    Returns a list of jobs that AWS Backup initiated to restore a saved resource, including metadata about the recovery process.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListRestoreJobs>`_    


    **Request Syntax** 
    ::

      response = client.list_restore_jobs(
          NextToken='string',
          MaxResults=123,
          ByAccountId='string',
          ByCreatedBefore=datetime(2015, 1, 1),
          ByCreatedAfter=datetime(2015, 1, 1),
          ByStatus='PENDING'|'RUNNING'|'COMPLETED'|'ABORTED'|'FAILED'
      )
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    :type ByAccountId: string
    :param ByAccountId: 

      The account ID to list the jobs from. Returns only restore jobs associated with the specified account ID.

      

    
    :type ByCreatedBefore: datetime
    :param ByCreatedBefore: 

      Returns only restore jobs that were created before the specified date.

      

    
    :type ByCreatedAfter: datetime
    :param ByCreatedAfter: 

      Returns only restore jobs that were created after the specified date.

      

    
    :type ByStatus: string
    :param ByStatus: 

      Returns only restore jobs associated with the specified job status.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RestoreJobs': [
                {
                    'AccountId': 'string',
                    'RestoreJobId': 'string',
                    'RecoveryPointArn': 'string',
                    'CreationDate': datetime(2015, 1, 1),
                    'CompletionDate': datetime(2015, 1, 1),
                    'Status': 'PENDING'|'RUNNING'|'COMPLETED'|'ABORTED'|'FAILED',
                    'StatusMessage': 'string',
                    'PercentDone': 'string',
                    'BackupSizeInBytes': 123,
                    'IamRoleArn': 'string',
                    'ExpectedCompletionTimeMinutes': 123,
                    'CreatedResourceArn': 'string',
                    'ResourceType': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RestoreJobs** *(list) --* 

          An array of objects that contain detailed information about jobs to restore saved resources.

          
          

          - *(dict) --* 

            Contains metadata about a restore job.

            
            

            - **AccountId** *(string) --* 

              The account ID that owns the restore job.

              
            

            - **RestoreJobId** *(string) --* 

              Uniquely identifies the job that restores a recovery point.

              
            

            - **RecoveryPointArn** *(string) --* 

              An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

              
            

            - **CreationDate** *(datetime) --* 

              The date and time a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **CompletionDate** *(datetime) --* 

              The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of ``CompletionDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

              
            

            - **Status** *(string) --* 

              A status code specifying the state of the job initiated by AWS Backup to restore a recovery point.

              
            

            - **StatusMessage** *(string) --* 

              A detailed message explaining the status of the job to restore a recovery point.

              
            

            - **PercentDone** *(string) --* 

              Contains an estimated percentage complete of a job at the time the job status was queried.

              
            

            - **BackupSizeInBytes** *(integer) --* 

              The size, in bytes, of the restored resource.

              
            

            - **IamRoleArn** *(string) --* 

              Specifies the IAM role ARN used to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

              
            

            - **ExpectedCompletionTimeMinutes** *(integer) --* 

              The amount of time in minutes that a job restoring a recovery point is expected to take.

              
            

            - **CreatedResourceArn** *(string) --* 

              An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.

              
            

            - **ResourceType** *(string) --* 

              The resource type of the listed restore jobs; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.

              
        
      
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: list_tags(**kwargs)

    

    Returns a list of key-value pairs assigned to a target recovery point, backup plan, or backup vault.

     

    .. note::

       

       ``ListTags`` are currently only supported with Amazon EFS backups.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/ListTags>`_    


    **Request Syntax** 
    ::

      response = client.list_tags(
          ResourceArn='string',
          NextToken='string',
          MaxResults=123
      )
    :type ResourceArn: string
    :param ResourceArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the type of resource. Valid targets for ``ListTags`` are recovery points, backup plans, and backup vaults.

      

    
    :type NextToken: string
    :param NextToken: 

      The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of items to be returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'Tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The next item following a partial list of returned items. For example, if a request is made to return ``maxResults`` number of items, ``NextToken`` allows you to return more items in your list starting at the location pointed to by the next token.

          
        

        - **Tags** *(dict) --* 

          To help organize your resources, you can assign your own metadata to the resources you create. Each tag is a key-value pair.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: put_backup_vault_access_policy(**kwargs)

    

    Sets a resource-based policy that is used to manage access permissions on the target backup vault. Requires a backup vault name and an access policy document in JSON format.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/PutBackupVaultAccessPolicy>`_    


    **Request Syntax** 
    ::

      response = client.put_backup_vault_access_policy(
          BackupVaultName='string',
          Policy='string'
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type Policy: string
    :param Policy: 

      The backup vault access policy document in JSON format.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: put_backup_vault_notifications(**kwargs)

    

    Turns on notifications on a backup vault for the specified topic and events.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/PutBackupVaultNotifications>`_    


    **Request Syntax** 
    ::

      response = client.put_backup_vault_notifications(
          BackupVaultName='string',
          SNSTopicArn='string',
          BackupVaultEvents=[
              'BACKUP_JOB_STARTED'|'BACKUP_JOB_COMPLETED'|'BACKUP_JOB_SUCCESSFUL'|'BACKUP_JOB_FAILED'|'BACKUP_JOB_EXPIRED'|'RESTORE_JOB_STARTED'|'RESTORE_JOB_COMPLETED'|'RESTORE_JOB_SUCCESSFUL'|'RESTORE_JOB_FAILED'|'COPY_JOB_STARTED'|'COPY_JOB_SUCCESSFUL'|'COPY_JOB_FAILED'|'RECOVERY_POINT_MODIFIED'|'BACKUP_PLAN_CREATED'|'BACKUP_PLAN_MODIFIED',
          ]
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type SNSTopicArn: string
    :param SNSTopicArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, ``arn:aws:sns:us-west-2:111122223333:MyVaultTopic`` .

      

    
    :type BackupVaultEvents: list
    :param BackupVaultEvents: **[REQUIRED]** 

      An array of events that indicate the status of jobs to back up resources to the backup vault.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: start_backup_job(**kwargs)

    

    Starts an on-demand backup job for the specified resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/StartBackupJob>`_    


    **Request Syntax** 
    ::

      response = client.start_backup_job(
          BackupVaultName='string',
          ResourceArn='string',
          IamRoleArn='string',
          IdempotencyToken='string',
          StartWindowMinutes=123,
          CompleteWindowMinutes=123,
          Lifecycle={
              'MoveToColdStorageAfterDays': 123,
              'DeleteAfterDays': 123
          },
          RecoveryPointTags={
              'string': 'string'
          },
          BackupOptions={
              'string': 'string'
          }
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type ResourceArn: string
    :param ResourceArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.

      

    
    :type IamRoleArn: string
    :param IamRoleArn: **[REQUIRED]** 

      Specifies the IAM role ARN used to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

      

    
    :type IdempotencyToken: string
    :param IdempotencyToken: 

      A customer chosen string that can be used to distinguish between calls to ``StartBackupJob`` .

      

    
    :type StartWindowMinutes: integer
    :param StartWindowMinutes: 

      A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional, and the default is 8 hours.

      

    
    :type CompleteWindowMinutes: integer
    :param CompleteWindowMinutes: 

      A value in minutes during which a successfully started backup must complete, or else AWS Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for ``StartWindowMinutes`` , or if the backup started later than scheduled.

      

    
    :type Lifecycle: dict
    :param Lifecycle: 

      The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. 

       

      Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

       

      Only Amazon EFS file system backups can be transitioned to cold storage.

      

    
      - **MoveToColdStorageAfterDays** *(integer) --* 

        Specifies the number of days after creation that a recovery point is moved to cold storage.

        

      
      - **DeleteAfterDays** *(integer) --* 

        Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

        

      
    
    :type RecoveryPointTags: dict
    :param RecoveryPointTags: 

      To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type BackupOptions: dict
    :param BackupOptions: 

      Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

       

      Valid values: Set to ``"WindowsVSS”:“enabled"`` to enable WindowsVSS backup option and create a VSS Windows backup. Set to “WindowsVSS”:”disabled” to create a regular backup. The WindowsVSS option is not enabled by default.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupJobId': 'string',
            'RecoveryPointArn': 'string',
            'CreationDate': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupJobId** *(string) --* 

          Uniquely identifies a request to AWS Backup to back up a resource.

          
        

        - **RecoveryPointArn** *(string) --* 

          An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    

  .. py:method:: start_copy_job(**kwargs)

    

    Starts a job to create a one-time copy of the specified resource.

     

    Does not support continuous backups.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/StartCopyJob>`_    


    **Request Syntax** 
    ::

      response = client.start_copy_job(
          RecoveryPointArn='string',
          SourceBackupVaultName='string',
          DestinationBackupVaultArn='string',
          IamRoleArn='string',
          IdempotencyToken='string',
          Lifecycle={
              'MoveToColdStorageAfterDays': 123,
              'DeleteAfterDays': 123
          }
      )
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. 

      

    
    :type SourceBackupVaultName: string
    :param SourceBackupVaultName: **[REQUIRED]** 

      The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type DestinationBackupVaultArn: string
    :param DestinationBackupVaultArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

      

    
    :type IamRoleArn: string
    :param IamRoleArn: **[REQUIRED]** 

      Specifies the IAM role ARN used to copy the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

      

    
    :type IdempotencyToken: string
    :param IdempotencyToken: 

      A customer chosen string that can be used to distinguish between calls to ``StartCopyJob`` .

      

    
    :type Lifecycle: dict
    :param Lifecycle: 

      Contains an array of ``Transition`` objects specifying how long in days before a recovery point transitions to cold storage or is deleted.

       

      Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

       

      Only Amazon EFS file system backups can be transitioned to cold storage.

      

    
      - **MoveToColdStorageAfterDays** *(integer) --* 

        Specifies the number of days after creation that a recovery point is moved to cold storage.

        

      
      - **DeleteAfterDays** *(integer) --* 

        Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'CopyJobId': 'string',
            'CreationDate': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **CopyJobId** *(string) --* 

          Uniquely identifies a copy job.

          
        

        - **CreationDate** *(datetime) --* 

          The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: start_restore_job(**kwargs)

    

    Recovers the saved resource identified by an Amazon Resource Name (ARN).

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/StartRestoreJob>`_    


    **Request Syntax** 
    ::

      response = client.start_restore_job(
          RecoveryPointArn='string',
          Metadata={
              'string': 'string'
          },
          IamRoleArn='string',
          IdempotencyToken='string',
          ResourceType='string'
      )
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An ARN that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

      

    
    :type Metadata: dict
    :param Metadata: **[REQUIRED]** 

      A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.

       

      You can get configuration metadata about a resource at the time it was backed up by calling ``GetRecoveryPointRestoreMetadata`` . However, values in addition to those provided by ``GetRecoveryPointRestoreMetadata`` might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.

       

      You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:

       

       
      * ``file-system-id`` : The ID of the Amazon EFS file system that is backed up by AWS Backup. Returned in ``GetRecoveryPointRestoreMetadata`` . 
       
      * ``Encrypted`` : A Boolean value that, if true, specifies that the file system is encrypted. If ``KmsKeyId`` is specified, ``Encrypted`` must be set to ``true`` . 
       
      * ``KmsKeyId`` : Specifies the AWS KMS key that is used to encrypt the restored file system. You can specify a key from another AWS account provided that key it is properly shared with your account via AWS KMS. 
       
      * ``PerformanceMode`` : Specifies the throughput mode of the file system. 
       
      * ``CreationToken`` : A user-supplied value that ensures the uniqueness (idempotency) of the request. 
       
      * ``newFileSystem`` : A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system. 
       
      * ``ItemsToRestore`` : An array of one to five strings where each string is a file path. Use ``ItemsToRestore`` to restore specific files or directories rather than the entire file system. This parameter is optional. For example, ``"itemsToRestore":"[\"/my.test\"]"`` . 
       

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type IamRoleArn: string
    :param IamRoleArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, ``arn:aws:iam::123456789012:role/S3Access`` .

      

    
    :type IdempotencyToken: string
    :param IdempotencyToken: 

      A customer chosen string that can be used to distinguish between calls to ``StartRestoreJob`` .

      

    
    :type ResourceType: string
    :param ResourceType: 

      Starts a job to restore a recovery point for one of the following resources:

       

       
      * ``DynamoDB`` for Amazon DynamoDB 
       
      * ``EBS`` for Amazon Elastic Block Store 
       
      * ``EC2`` for Amazon Elastic Compute Cloud 
       
      * ``EFS`` for Amazon Elastic File System 
       
      * ``RDS`` for Amazon Relational Database Service 
       
      * ``Aurora`` for Amazon Aurora 
       
      * ``Storage Gateway`` for AWS Storage Gateway 
       

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'RestoreJobId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **RestoreJobId** *(string) --* 

          Uniquely identifies the job that restores a recovery point.

          
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: stop_backup_job(**kwargs)

    

    Attempts to cancel a job to create a one-time backup of a resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/StopBackupJob>`_    


    **Request Syntax** 
    ::

      response = client.stop_backup_job(
          BackupJobId='string'
      )
    :type BackupJobId: string
    :param BackupJobId: **[REQUIRED]** 

      Uniquely identifies a request to AWS Backup to back up a resource.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN).

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          ResourceArn='string',
          Tags={
              'string': 'string'
          }
      )
    :type ResourceArn: string
    :param ResourceArn: **[REQUIRED]** 

      An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.

      

    
    :type Tags: dict
    :param Tags: **[REQUIRED]** 

      Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.LimitExceededException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          ResourceArn='string',
          TagKeyList=[
              'string',
          ]
      )
    :type ResourceArn: string
    :param ResourceArn: **[REQUIRED]** 

      An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.

      

    
    :type TagKeyList: list
    :param TagKeyList: **[REQUIRED]** 

      A list of keys to identify which key-value tags to remove from a resource.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: update_backup_plan(**kwargs)

    

    Updates an existing backup plan identified by its ``backupPlanId`` with the input document in JSON format. The new version is uniquely identified by a ``VersionId`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/UpdateBackupPlan>`_    


    **Request Syntax** 
    ::

      response = client.update_backup_plan(
          BackupPlanId='string',
          BackupPlan={
              'BackupPlanName': 'string',
              'Rules': [
                  {
                      'RuleName': 'string',
                      'TargetBackupVaultName': 'string',
                      'ScheduleExpression': 'string',
                      'StartWindowMinutes': 123,
                      'CompletionWindowMinutes': 123,
                      'Lifecycle': {
                          'MoveToColdStorageAfterDays': 123,
                          'DeleteAfterDays': 123
                      },
                      'RecoveryPointTags': {
                          'string': 'string'
                      },
                      'CopyActions': [
                          {
                              'Lifecycle': {
                                  'MoveToColdStorageAfterDays': 123,
                                  'DeleteAfterDays': 123
                              },
                              'DestinationBackupVaultArn': 'string'
                          },
                      ],
                      'EnableContinuousBackup': True|False
                  },
              ],
              'AdvancedBackupSettings': [
                  {
                      'ResourceType': 'string',
                      'BackupOptions': {
                          'string': 'string'
                      }
                  },
              ]
          }
      )
    :type BackupPlanId: string
    :param BackupPlanId: **[REQUIRED]** 

      Uniquely identifies a backup plan.

      

    
    :type BackupPlan: dict
    :param BackupPlan: **[REQUIRED]** 

      Specifies the body of a backup plan. Includes a ``BackupPlanName`` and one or more sets of ``Rules`` .

      

    
      - **BackupPlanName** *(string) --* **[REQUIRED]** 

        The optional display name of a backup plan.

        

      
      - **Rules** *(list) --* **[REQUIRED]** 

        An array of ``BackupRule`` objects, each of which specifies a scheduled task that is used to back up a selection of resources.

        

      
        - *(dict) --* 

          Specifies a scheduled task used to back up a selection of resources.

          

        
          - **RuleName** *(string) --* **[REQUIRED]** 

            An optional display name for a backup rule.

            

          
          - **TargetBackupVaultName** *(string) --* **[REQUIRED]** 

            The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

            

          
          - **ScheduleExpression** *(string) --* 

            A CRON expression specifying when AWS Backup initiates a backup job.

            

          
          - **StartWindowMinutes** *(integer) --* 

            A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.

            

          
          - **CompletionWindowMinutes** *(integer) --* 

            A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.

            

          
          - **Lifecycle** *(dict) --* 

            The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. 

             

            Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

             

            Only Amazon EFS file system backups can be transitioned to cold storage.

            

          
            - **MoveToColdStorageAfterDays** *(integer) --* 

              Specifies the number of days after creation that a recovery point is moved to cold storage.

              

            
            - **DeleteAfterDays** *(integer) --* 

              Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

              

            
          
          - **RecoveryPointTags** *(dict) --* 

            To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.

            

          
            - *(string) --* 

            
              - *(string) --* 

              
        
      
          - **CopyActions** *(list) --* 

            An array of ``CopyAction`` objects, which contains the details of the copy operation.

            

          
            - *(dict) --* 

              The details of the copy operation.

              

            
              - **Lifecycle** *(dict) --* 

                Contains an array of ``Transition`` objects specifying how long in days before a recovery point transitions to cold storage or is deleted.

                 

                Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

                 

                Only Amazon EFS file system backups can be transitioned to cold storage.

                

              
                - **MoveToColdStorageAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is moved to cold storage.

                  

                
                - **DeleteAfterDays** *(integer) --* 

                  Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

                  

                
              
              - **DestinationBackupVaultArn** *(string) --* **[REQUIRED]** 

                An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

                

              
            
        
          - **EnableContinuousBackup** *(boolean) --* 

            Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.

            

          
        
    
      - **AdvancedBackupSettings** *(list) --* 

        Specifies a list of ``BackupOptions`` for each resource type. These settings are only available for Windows VSS backup jobs.

        

      
        - *(dict) --* 

          A list of backup options for each resource type.

          

        
          - **ResourceType** *(string) --* 

            Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

             

            Valid values: ``EC2`` .

            

          
          - **BackupOptions** *(dict) --* 

            Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

             

            Valid values: 

             

            Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

             

            Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

             

            If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

             

            For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

            

          
            - *(string) --* 

            
              - *(string) --* 

              
        
      
        
    
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupPlanId': 'string',
            'BackupPlanArn': 'string',
            'CreationDate': datetime(2015, 1, 1),
            'VersionId': 'string',
            'AdvancedBackupSettings': [
                {
                    'ResourceType': 'string',
                    'BackupOptions': {
                        'string': 'string'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupPlanId** *(string) --* 

          Uniquely identifies a backup plan.

          
        

        - **BackupPlanArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, ``arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`` .

          
        

        - **CreationDate** *(datetime) --* 

          The date and time a backup plan is updated, in Unix format and Coordinated Universal Time (UTC). The value of ``CreationDate`` is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.

          
        

        - **VersionId** *(string) --* 

          Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.

          
        

        - **AdvancedBackupSettings** *(list) --* 

          Contains a list of ``BackupOptions`` for each resource type.

          
          

          - *(dict) --* 

            A list of backup options for each resource type.

            
            

            - **ResourceType** *(string) --* 

              Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the `sample CloudFormation template to enable Windows VSS <https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html>`__ in the *AWS Backup User Guide* .

               

              Valid values: ``EC2`` .

              
            

            - **BackupOptions** *(dict) --* 

              Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.

               

              Valid values: 

               

              Set to ``"WindowsVSS":"enabled"`` to enable the WindowsVSS backup option and create a VSS Windows backup. 

               

              Set to ``"WindowsVSS":"disabled"`` to create a regular backup. The WindowsVSS option is not enabled by default.

               

              If you specify an invalid option, you get an ``InvalidParameterValueException`` exception.

               

              For more information about Windows VSS backups, see `Creating a VSS-Enabled Windows Backup <https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html>`__ .

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
        
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: update_global_settings(**kwargs)

    

    Updates the current global settings for the AWS account. Use the ``DescribeGlobalSettings`` API to determine the current settings.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/UpdateGlobalSettings>`_    


    **Request Syntax** 
    ::

      response = client.update_global_settings(
          GlobalSettings={
              'string': 'string'
          }
      )
    :type GlobalSettings: dict
    :param GlobalSettings: 

      A list of resources along with the opt-in preferences for the account.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidRequestException`

    

  .. py:method:: update_recovery_point_lifecycle(**kwargs)

    

    Sets the transition lifecycle of a recovery point.

     

    The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define.

     

    Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

     

    Only Amazon EFS file system backups can be transitioned to cold storage.

     

    Does not support continuous backups.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/UpdateRecoveryPointLifecycle>`_    


    **Request Syntax** 
    ::

      response = client.update_recovery_point_lifecycle(
          BackupVaultName='string',
          RecoveryPointArn='string',
          Lifecycle={
              'MoveToColdStorageAfterDays': 123,
              'DeleteAfterDays': 123
          }
      )
    :type BackupVaultName: string
    :param BackupVaultName: **[REQUIRED]** 

      The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.

      

    
    :type RecoveryPointArn: string
    :param RecoveryPointArn: **[REQUIRED]** 

      An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

      

    
    :type Lifecycle: dict
    :param Lifecycle: 

      The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

       

      Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

      

    
      - **MoveToColdStorageAfterDays** *(integer) --* 

        Specifies the number of days after creation that a recovery point is moved to cold storage.

        

      
      - **DeleteAfterDays** *(integer) --* 

        Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'BackupVaultArn': 'string',
            'RecoveryPointArn': 'string',
            'Lifecycle': {
                'MoveToColdStorageAfterDays': 123,
                'DeleteAfterDays': 123
            },
            'CalculatedLifecycle': {
                'MoveToColdStorageAt': datetime(2015, 1, 1),
                'DeleteAt': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **BackupVaultArn** *(string) --* 

          An ARN that uniquely identifies a backup vault; for example, ``arn:aws:backup:us-east-1:123456789012:vault:aBackupVault`` .

          
        

        - **RecoveryPointArn** *(string) --* 

          An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, ``arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`` .

          
        

        - **Lifecycle** *(dict) --* 

          The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. 

           

          Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. 

           

          Only Amazon EFS file system backups can be transitioned to cold storage.

          
          

          - **MoveToColdStorageAfterDays** *(integer) --* 

            Specifies the number of days after creation that a recovery point is moved to cold storage.

            
          

          - **DeleteAfterDays** *(integer) --* 

            Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus ``MoveToColdStorageAfterDays`` .

            
      
        

        - **CalculatedLifecycle** *(dict) --* 

          A ``CalculatedLifecycle`` object containing ``DeleteAt`` and ``MoveToColdStorageAt`` timestamps.

          
          

          - **MoveToColdStorageAt** *(datetime) --* 

            A timestamp that specifies when to transition a recovery point to cold storage.

            
          

          - **DeleteAt** *(datetime) --* 

            A timestamp that specifies when to delete a recovery point.

            
      
    
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: update_region_settings(**kwargs)

    

    Updates the current service opt-in settings for the Region. If service-opt-in is enabled for a service, AWS Backup tries to protect that service's resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, AWS Backup does not try to protect that service's resources in this Region. Use the ``DescribeRegionSettings`` API to determine the resource types that are supported.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/backup-2018-11-15/UpdateRegionSettings>`_    


    **Request Syntax** 
    ::

      response = client.update_region_settings(
          ResourceTypeOptInPreference={
              'string': True|False
          }
      )
    :type ResourceTypeOptInPreference: dict
    :param ResourceTypeOptInPreference: 

      Updates the list of services along with the opt-in preferences for the Region.

      

    
      - *(string) --* 

      
        - *(boolean) --* 

        
  

    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`Backup.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`Backup.Client.exceptions.MissingParameterValueException`

    
    *     :py:class:`Backup.Client.exceptions.InvalidParameterValueException`

    

==========
Paginators
==========


The available paginators are:
