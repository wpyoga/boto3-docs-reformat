

*****************
TranscribeService
*****************

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: TranscribeService.Client

  A low-level client representing Amazon Transcribe Service
  

  Operations and objects for transcribing speech to text.

  ::

    
    import boto3
    
    client = boto3.client('transcribe')

  
  These are the available methods:
  
  *   :py:meth:`~TranscribeService.Client.can_paginate`

  
  *   :py:meth:`~TranscribeService.Client.create_language_model`

  
  *   :py:meth:`~TranscribeService.Client.create_medical_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.create_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.create_vocabulary_filter`

  
  *   :py:meth:`~TranscribeService.Client.delete_language_model`

  
  *   :py:meth:`~TranscribeService.Client.delete_medical_transcription_job`

  
  *   :py:meth:`~TranscribeService.Client.delete_medical_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.delete_transcription_job`

  
  *   :py:meth:`~TranscribeService.Client.delete_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.delete_vocabulary_filter`

  
  *   :py:meth:`~TranscribeService.Client.describe_language_model`

  
  *   :py:meth:`~TranscribeService.Client.generate_presigned_url`

  
  *   :py:meth:`~TranscribeService.Client.get_medical_transcription_job`

  
  *   :py:meth:`~TranscribeService.Client.get_medical_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.get_paginator`

  
  *   :py:meth:`~TranscribeService.Client.get_transcription_job`

  
  *   :py:meth:`~TranscribeService.Client.get_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.get_vocabulary_filter`

  
  *   :py:meth:`~TranscribeService.Client.get_waiter`

  
  *   :py:meth:`~TranscribeService.Client.list_language_models`

  
  *   :py:meth:`~TranscribeService.Client.list_medical_transcription_jobs`

  
  *   :py:meth:`~TranscribeService.Client.list_medical_vocabularies`

  
  *   :py:meth:`~TranscribeService.Client.list_transcription_jobs`

  
  *   :py:meth:`~TranscribeService.Client.list_vocabularies`

  
  *   :py:meth:`~TranscribeService.Client.list_vocabulary_filters`

  
  *   :py:meth:`~TranscribeService.Client.start_medical_transcription_job`

  
  *   :py:meth:`~TranscribeService.Client.start_transcription_job`

  
  *   :py:meth:`~TranscribeService.Client.update_medical_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.update_vocabulary`

  
  *   :py:meth:`~TranscribeService.Client.update_vocabulary_filter`

  

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: create_language_model(**kwargs)

    

    Creates a new custom language model. Use Amazon S3 prefixes to provide the location of your input files. The time it takes to create your model depends on the size of your training data.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/CreateLanguageModel>`_    


    **Request Syntax** 
    ::

      response = client.create_language_model(
          LanguageCode='en-US'|'hi-IN'|'es-US'|'en-GB'|'en-AU',
          BaseModelName='NarrowBand'|'WideBand',
          ModelName='string',
          InputDataConfig={
              'S3Uri': 'string',
              'TuningDataS3Uri': 'string',
              'DataAccessRoleArn': 'string'
          }
      )
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language of the input text you're using to train your custom language model.

      

    
    :type BaseModelName: string
    :param BaseModelName: **[REQUIRED]** 

      The Amazon Transcribe standard language model, or base model used to create your custom language model.

       

      If you want to use your custom language model to transcribe audio with a sample rate of 16 kHz or greater, choose ``Wideband`` .

       

      If you want to use your custom language model to transcribe audio with a sample rate that is less than 16 kHz, choose ``Narrowband`` .

      

    
    :type ModelName: string
    :param ModelName: **[REQUIRED]** 

      The name you choose for your custom language model when you create it.

      

    
    :type InputDataConfig: dict
    :param InputDataConfig: **[REQUIRED]** 

      Contains the data access role and the Amazon S3 prefixes to read the required input files to create a custom language model.

      

    
      - **S3Uri** *(string) --* **[REQUIRED]** 

        The Amazon S3 prefix you specify to access the plain text files that you use to train your custom language model.

        

      
      - **TuningDataS3Uri** *(string) --* 

        The Amazon S3 prefix you specify to access the plain text files that you use to tune your custom language model.

        

      
      - **DataAccessRoleArn** *(string) --* **[REQUIRED]** 

        The Amazon Resource Name (ARN) that uniquely identifies the permissions you've given Amazon Transcribe to access your Amazon S3 buckets containing your media files or text data.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'LanguageCode': 'en-US'|'hi-IN'|'es-US'|'en-GB'|'en-AU',
            'BaseModelName': 'NarrowBand'|'WideBand',
            'ModelName': 'string',
            'InputDataConfig': {
                'S3Uri': 'string',
                'TuningDataS3Uri': 'string',
                'DataAccessRoleArn': 'string'
            },
            'ModelStatus': 'IN_PROGRESS'|'FAILED'|'COMPLETED'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **LanguageCode** *(string) --* 

          The language code of the text you've used to create a custom language model.

          
        

        - **BaseModelName** *(string) --* 

          The Amazon Transcribe standard language model, or base model you've used to create a custom language model.

          
        

        - **ModelName** *(string) --* 

          The name you've chosen for your custom language model.

          
        

        - **InputDataConfig** *(dict) --* 

          The data access role and Amazon S3 prefixes you've chosen to create your custom language model.

          
          

          - **S3Uri** *(string) --* 

            The Amazon S3 prefix you specify to access the plain text files that you use to train your custom language model.

            
          

          - **TuningDataS3Uri** *(string) --* 

            The Amazon S3 prefix you specify to access the plain text files that you use to tune your custom language model.

            
          

          - **DataAccessRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) that uniquely identifies the permissions you've given Amazon Transcribe to access your Amazon S3 buckets containing your media files or text data.

            
      
        

        - **ModelStatus** *(string) --* 

          The status of the custom language model. When the status is ``COMPLETED`` the model is ready to use.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: create_medical_vocabulary(**kwargs)

    

    Creates a new custom vocabulary that you can use to change how Amazon Transcribe Medical transcribes your audio file.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/CreateMedicalVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.create_medical_vocabulary(
          VocabularyName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          VocabularyFileUri='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the custom vocabulary. This case-sensitive name must be unique within an AWS account. If you try to create a vocabulary with the same name as a previous vocabulary, you get a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language code for the language used for the entries in your custom vocabulary. The language code of your custom vocabulary must match the language code of your transcription job. US English (en-US) is the only language code available for Amazon Transcribe Medical.

      

    
    :type VocabularyFileUri: string
    :param VocabularyFileUri: **[REQUIRED]** 

      The location in Amazon S3 of the text file you use to define your custom vocabulary. The URI must be in the same AWS Region as the resource that you're calling. Enter information about your ``VocabularyFileUri`` in the following format:

       

       ``https://s3.<aws-region>.amazonaws.com/<bucket-name>/<keyprefix>/<objectkey>``  

       

      The following is an example URI for a vocabulary file that is stored in Amazon S3:

       

       ``https://s3.us-east-1.amazonaws.com/AWSDOC-EXAMPLE-BUCKET/vocab.txt``  

       

      For more information about Amazon S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

       

      For more information about custom vocabularies, see `Medical Custom Vocabularies <http://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary-med>`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'VocabularyState': 'PENDING'|'READY'|'FAILED',
            'LastModifiedTime': datetime(2015, 1, 1),
            'FailureReason': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyName** *(string) --* 

          The name of the vocabulary. The name must be unique within an AWS account and is case sensitive.

          
        

        - **LanguageCode** *(string) --* 

          The language code for the entries in your custom vocabulary. US English (en-US) is the only valid language code for Amazon Transcribe Medical.

          
        

        - **VocabularyState** *(string) --* 

          The processing state of your custom vocabulary in Amazon Transcribe Medical. If the state is ``READY`` , you can use the vocabulary in a ``StartMedicalTranscriptionJob`` request.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that you created the vocabulary.

          
        

        - **FailureReason** *(string) --* 

          If the ``VocabularyState`` field is ``FAILED`` , this field contains information about why the job failed.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: create_vocabulary(**kwargs)

    

    Creates a new custom vocabulary that you can use to change the way Amazon Transcribe handles transcription of an audio file.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/CreateVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.create_vocabulary(
          VocabularyName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          Phrases=[
              'string',
          ],
          VocabularyFileUri='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary. The name must be unique within an AWS account. The name is case sensitive. If you try to create a vocabulary with the same name as a previous vocabulary you will receive a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see  what-is-transcribe .

      

    
    :type Phrases: list
    :param Phrases: 

      An array of strings that contains the vocabulary entries. 

      

    
      - *(string) --* 

      
  
    :type VocabularyFileUri: string
    :param VocabularyFileUri: 

      The S3 location of the text file that contains the definition of the custom vocabulary. The URI must be in the same region as the API endpoint that you are calling. The general form is 

       

      For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

       

      For more information about custom vocabularies, see `Custom Vocabularies <http://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary>`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'VocabularyState': 'PENDING'|'READY'|'FAILED',
            'LastModifiedTime': datetime(2015, 1, 1),
            'FailureReason': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyName** *(string) --* 

          The name of the vocabulary.

          
        

        - **LanguageCode** *(string) --* 

          The language code of the vocabulary entries.

          
        

        - **VocabularyState** *(string) --* 

          The processing state of the vocabulary. When the ``VocabularyState`` field contains ``READY`` the vocabulary is ready to be used in a ``StartTranscriptionJob`` request.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary was created.

          
        

        - **FailureReason** *(string) --* 

          If the ``VocabularyState`` field is ``FAILED`` , this field contains information about why the job failed.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: create_vocabulary_filter(**kwargs)

    

    Creates a new vocabulary filter that you can use to filter words, such as profane words, from the output of a transcription job.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/CreateVocabularyFilter>`_    


    **Request Syntax** 
    ::

      response = client.create_vocabulary_filter(
          VocabularyFilterName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          Words=[
              'string',
          ],
          VocabularyFilterFileUri='string'
      )
    :type VocabularyFilterName: string
    :param VocabularyFilterName: **[REQUIRED]** 

      The vocabulary filter name. The name must be unique within the account that contains it. If you try to create a vocabulary filter with the same name as another vocabulary filter, you get a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language code of the words in the vocabulary filter. All words in the filter must be in the same language. The vocabulary filter can only be used with transcription jobs in the specified language.

      

    
    :type Words: list
    :param Words: 

      The words to use in the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see `Character Sets for Custom Vocabularies <https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets>`__ .

       

      If you provide a list of words in the ``Words`` parameter, you can't use the ``VocabularyFilterFileUri`` parameter.

      

    
      - *(string) --* 

      
  
    :type VocabularyFilterFileUri: string
    :param VocabularyFilterFileUri: 

      The Amazon S3 location of a text file used as input to create the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see `Character Sets for Custom Vocabularies <https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets>`__ .

       

      The specified file must be less than 50 KB of UTF-8 characters.

       

      If you provide the location of a list of words in the ``VocabularyFilterFileUri`` parameter, you can't use the ``Words`` parameter.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyFilterName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'LastModifiedTime': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyFilterName** *(string) --* 

          The name of the vocabulary filter.

          
        

        - **LanguageCode** *(string) --* 

          The language code of the words in the collection.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary filter was modified.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: delete_language_model(**kwargs)

    

    Deletes a custom language model using its name.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DeleteLanguageModel>`_    


    **Request Syntax** 
    ::

      response = client.delete_language_model(
          ModelName='string'
      )
    :type ModelName: string
    :param ModelName: **[REQUIRED]** 

      The name of the model you're choosing to delete.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: delete_medical_transcription_job(**kwargs)

    

    Deletes a transcription job generated by Amazon Transcribe Medical and any related information.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DeleteMedicalTranscriptionJob>`_    


    **Request Syntax** 
    ::

      response = client.delete_medical_transcription_job(
          MedicalTranscriptionJobName='string'
      )
    :type MedicalTranscriptionJobName: string
    :param MedicalTranscriptionJobName: **[REQUIRED]** 

      The name you provide to the ``DeleteMedicalTranscriptionJob`` object to delete a transcription job.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: delete_medical_vocabulary(**kwargs)

    

    Deletes a vocabulary from Amazon Transcribe Medical.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DeleteMedicalVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.delete_medical_vocabulary(
          VocabularyName='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary that you want to delete.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: delete_transcription_job(**kwargs)

    

    Deletes a previously submitted transcription job along with any other generated results such as the transcription, models, and so on.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DeleteTranscriptionJob>`_    


    **Request Syntax** 
    ::

      response = client.delete_transcription_job(
          TranscriptionJobName='string'
      )
    :type TranscriptionJobName: string
    :param TranscriptionJobName: **[REQUIRED]** 

      The name of the transcription job to be deleted.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: delete_vocabulary(**kwargs)

    

    Deletes a vocabulary from Amazon Transcribe. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DeleteVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.delete_vocabulary(
          VocabularyName='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary to delete. 

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: delete_vocabulary_filter(**kwargs)

    

    Removes a vocabulary filter.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DeleteVocabularyFilter>`_    


    **Request Syntax** 
    ::

      response = client.delete_vocabulary_filter(
          VocabularyFilterName='string'
      )
    :type VocabularyFilterName: string
    :param VocabularyFilterName: **[REQUIRED]** 

      The name of the vocabulary filter to remove.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: describe_language_model(**kwargs)

    

    Gets information about a single custom language model. Use this information to see details about the language model in your AWS account. You can also see whether the base language model used to create your custom language model has been updated. If Amazon Transcribe has updated the base model, you can create a new custom language model using the updated base model. If the language model wasn't created, you can use this operation to understand why Amazon Transcribe couldn't create it. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/DescribeLanguageModel>`_    


    **Request Syntax** 
    ::

      response = client.describe_language_model(
          ModelName='string'
      )
    :type ModelName: string
    :param ModelName: **[REQUIRED]** 

      The name of the custom language model you submit to get more information.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'LanguageModel': {
                'ModelName': 'string',
                'CreateTime': datetime(2015, 1, 1),
                'LastModifiedTime': datetime(2015, 1, 1),
                'LanguageCode': 'en-US'|'hi-IN'|'es-US'|'en-GB'|'en-AU',
                'BaseModelName': 'NarrowBand'|'WideBand',
                'ModelStatus': 'IN_PROGRESS'|'FAILED'|'COMPLETED',
                'UpgradeAvailability': True|False,
                'FailureReason': 'string',
                'InputDataConfig': {
                    'S3Uri': 'string',
                    'TuningDataS3Uri': 'string',
                    'DataAccessRoleArn': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **LanguageModel** *(dict) --* 

          The name of the custom language model you requested more information about.

          
          

          - **ModelName** *(string) --* 

            The name of the custom language model.

            
          

          - **CreateTime** *(datetime) --* 

            The time the custom language model was created.

            
          

          - **LastModifiedTime** *(datetime) --* 

            The most recent time the custom language model was modified.

            
          

          - **LanguageCode** *(string) --* 

            The language code you used to create your custom language model.

            
          

          - **BaseModelName** *(string) --* 

            The Amazon Transcribe standard language model, or base model used to create the custom language model.

            
          

          - **ModelStatus** *(string) --* 

            The creation status of a custom language model. When the status is ``COMPLETED`` the model is ready for use.

            
          

          - **UpgradeAvailability** *(boolean) --* 

            Whether the base model used for the custom language model is up to date. If this field is ``true`` then you are running the most up-to-date version of the base model in your custom language model.

            
          

          - **FailureReason** *(string) --* 

            The reason why the custom language model couldn't be created.

            
          

          - **InputDataConfig** *(dict) --* 

            The data access role and Amazon S3 prefixes for the input files used to train the custom language model.

            
            

            - **S3Uri** *(string) --* 

              The Amazon S3 prefix you specify to access the plain text files that you use to train your custom language model.

              
            

            - **TuningDataS3Uri** *(string) --* 

              The Amazon S3 prefix you specify to access the plain text files that you use to tune your custom language model.

              
            

            - **DataAccessRoleArn** *(string) --* 

              The Amazon Resource Name (ARN) that uniquely identifies the permissions you've given Amazon Transcribe to access your Amazon S3 buckets containing your media files or text data.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_medical_transcription_job(**kwargs)

    

    Returns information about a transcription job from Amazon Transcribe Medical. To see the status of the job, check the ``TranscriptionJobStatus`` field. If the status is ``COMPLETED`` , the job is finished. You find the results of the completed job in the ``TranscriptFileUri`` field.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/GetMedicalTranscriptionJob>`_    


    **Request Syntax** 
    ::

      response = client.get_medical_transcription_job(
          MedicalTranscriptionJobName='string'
      )
    :type MedicalTranscriptionJobName: string
    :param MedicalTranscriptionJobName: **[REQUIRED]** 

      The name of the medical transcription job.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'MedicalTranscriptionJob': {
                'MedicalTranscriptionJobName': 'string',
                'TranscriptionJobStatus': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
                'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                'MediaSampleRateHertz': 123,
                'MediaFormat': 'mp3'|'mp4'|'wav'|'flac'|'ogg'|'amr'|'webm',
                'Media': {
                    'MediaFileUri': 'string'
                },
                'Transcript': {
                    'TranscriptFileUri': 'string'
                },
                'StartTime': datetime(2015, 1, 1),
                'CreationTime': datetime(2015, 1, 1),
                'CompletionTime': datetime(2015, 1, 1),
                'FailureReason': 'string',
                'Settings': {
                    'ShowSpeakerLabels': True|False,
                    'MaxSpeakerLabels': 123,
                    'ChannelIdentification': True|False,
                    'ShowAlternatives': True|False,
                    'MaxAlternatives': 123,
                    'VocabularyName': 'string'
                },
                'ContentIdentificationType': 'PHI',
                'Specialty': 'PRIMARYCARE',
                'Type': 'CONVERSATION'|'DICTATION'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **MedicalTranscriptionJob** *(dict) --* 

          An object that contains the results of the medical transcription job.

          
          

          - **MedicalTranscriptionJobName** *(string) --* 

            The name for a given medical transcription job.

            
          

          - **TranscriptionJobStatus** *(string) --* 

            The completion status of a medical transcription job.

            
          

          - **LanguageCode** *(string) --* 

            The language code for the language spoken in the source audio file. US English (en-US) is the only supported language for medical transcriptions. Any other value you enter for language code results in a ``BadRequestException`` error.

            
          

          - **MediaSampleRateHertz** *(integer) --* 

            The sample rate, in Hertz, of the source audio containing medical information.

             

            If you don't specify the sample rate, Amazon Transcribe Medical determines it for you. If you choose to specify the sample rate, it must match the rate detected by Amazon Transcribe Medical. In most cases, you should leave the ``MediaSampleHertz`` blank and let Amazon Transcribe Medical determine the sample rate.

            
          

          - **MediaFormat** *(string) --* 

            The format of the input media file.

            
          

          - **Media** *(dict) --* 

            Describes the input media file in a transcription request.

            
            

            - **MediaFileUri** *(string) --* 

              The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:

               

              For example:

               

              For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

              
        
          

          - **Transcript** *(dict) --* 

            An object that contains the ``MedicalTranscript`` . The ``MedicalTranscript`` contains the ``TranscriptFileUri`` .

            
            

            - **TranscriptFileUri** *(string) --* 

              The S3 object location of the medical transcript.

               

              Use this URI to access the medical transcript. This URI points to the S3 bucket you created to store the medical transcript.

              
        
          

          - **StartTime** *(datetime) --* 

            A timestamp that shows when the job started processing.

            
          

          - **CreationTime** *(datetime) --* 

            A timestamp that shows when the job was created.

            
          

          - **CompletionTime** *(datetime) --* 

            A timestamp that shows when the job was completed.

            
          

          - **FailureReason** *(string) --* 

            If the ``TranscriptionJobStatus`` field is ``FAILED`` , this field contains information about why the job failed.

             

            The ``FailureReason`` field contains one of the following values:

             

             
            * ``Unsupported media format`` - The media format specified in the ``MediaFormat`` field of the request isn't valid. See the description of the ``MediaFormat`` field for a list of valid values. 
             
            * ``The media format provided does not match the detected media format`` - The media format of the audio file doesn't match the format specified in the ``MediaFormat`` field in the request. Check the media format of your media file and make sure the two values match. 
             
            * ``Invalid sample rate for audio file`` - The sample rate specified in the ``MediaSampleRateHertz`` of the request isn't valid. The sample rate must be between 8000 and 48000 Hertz. 
             
            * ``The sample rate provided does not match the detected sample rate`` - The sample rate in the audio file doesn't match the sample rate specified in the ``MediaSampleRateHertz`` field in the request. Check the sample rate of your media file and make sure that the two values match. 
             
            * ``Invalid file size: file size too large`` - The size of your audio file is larger than what Amazon Transcribe Medical can process. For more information, see `Guidelines and Quotas <https://docs.aws.amazon.com/transcribe/latest/dg/limits-guidelines.html#limits>`__ in the *Amazon Transcribe Medical Guide*   
             
            * ``Invalid number of channels: number of channels too large`` - Your audio contains more channels than Amazon Transcribe Medical is configured to process. To request additional channels, see `Amazon Transcribe Medical Endpoints and Quotas <https://docs.aws.amazon.com/general/latest/gr/transcribe-medical.html>`__ in the *Amazon Web Services General Reference*   
             

            
          

          - **Settings** *(dict) --* 

            Object that contains object.

            
            

            - **ShowSpeakerLabels** *(boolean) --* 

              Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the ``ShowSpeakerLabels`` field to true, you must also set the maximum number of speaker labels in the ``MaxSpeakerLabels`` field.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

              
            

            - **MaxSpeakerLabels** *(integer) --* 

              The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers are identified as a single speaker. If you specify the ``MaxSpeakerLabels`` field, you must set the ``ShowSpeakerLabels`` field to true.

              
            

            - **ChannelIdentification** *(boolean) --* 

              Instructs Amazon Transcribe Medical to process each audio channel separately and then merge the transcription output of each channel into a single transcription.

               

              Amazon Transcribe Medical also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of item. The alternative transcriptions also come with confidence scores provided by Amazon Transcribe Medical.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException``  

              
            

            - **ShowAlternatives** *(boolean) --* 

              Determines whether alternative transcripts are generated along with the transcript that has the highest confidence. If you set ``ShowAlternatives`` field to true, you must also set the maximum number of alternatives to return in the ``MaxAlternatives`` field.

              
            

            - **MaxAlternatives** *(integer) --* 

              The maximum number of alternatives that you tell the service to return. If you specify the ``MaxAlternatives`` field, you must set the ``ShowAlternatives`` field to true.

              
            

            - **VocabularyName** *(string) --* 

              The name of the vocabulary to use when processing a medical transcription job.

              
        
          

          - **ContentIdentificationType** *(string) --* 

            Shows the type of content that you've configured Amazon Transcribe Medical to identify in a transcription job. If the value is ``PHI`` , you've configured the job to identify personal health information (PHI) in the transcription output.

            
          

          - **Specialty** *(string) --* 

            The medical specialty of any clinicians providing a dictation or having a conversation. ``PRIMARYCARE`` is the only available setting for this object. This specialty enables you to generate transcriptions for the following medical fields:

             

             
            * Family Medicine 
             

            
          

          - **Type** *(string) --* 

            The type of speech in the transcription job. ``CONVERSATION`` is generally used for patient-physician dialogues. ``DICTATION`` is the setting for physicians speaking their notes after seeing a patient. For more information, see  how-it-works-med  

            
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    

  .. py:method:: get_medical_vocabulary(**kwargs)

    

    Retrieves information about a medical vocabulary.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/GetMedicalVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.get_medical_vocabulary(
          VocabularyName='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary that you want information about. The value is case sensitive. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'VocabularyState': 'PENDING'|'READY'|'FAILED',
            'LastModifiedTime': datetime(2015, 1, 1),
            'FailureReason': 'string',
            'DownloadUri': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyName** *(string) --* 

          The name of the vocabulary returned by Amazon Transcribe Medical.

          
        

        - **LanguageCode** *(string) --* 

          The valid language code for your vocabulary entries.

          
        

        - **VocabularyState** *(string) --* 

          The processing state of the vocabulary. If the ``VocabularyState`` is ``READY`` then you can use it in the ``StartMedicalTranscriptionJob`` operation. 

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary was last modified with a text file different from the one that was previously used.

          
        

        - **FailureReason** *(string) --* 

          If the ``VocabularyState`` is ``FAILED`` , this field contains information about why the job failed.

          
        

        - **DownloadUri** *(string) --* 

          The location in Amazon S3 where the vocabulary is stored. Use this URI to get the contents of the vocabulary. You can download your vocabulary from the URI for a limited time.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    

  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_transcription_job(**kwargs)

    

    Returns information about a transcription job. To see the status of the job, check the ``TranscriptionJobStatus`` field. If the status is ``COMPLETED`` , the job is finished and you can find the results at the location specified in the ``TranscriptFileUri`` field. If you enable content redaction, the redacted transcript appears in ``RedactedTranscriptFileUri`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/GetTranscriptionJob>`_    


    **Request Syntax** 
    ::

      response = client.get_transcription_job(
          TranscriptionJobName='string'
      )
    :type TranscriptionJobName: string
    :param TranscriptionJobName: **[REQUIRED]** 

      The name of the job.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'TranscriptionJob': {
                'TranscriptionJobName': 'string',
                'TranscriptionJobStatus': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
                'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                'MediaSampleRateHertz': 123,
                'MediaFormat': 'mp3'|'mp4'|'wav'|'flac'|'ogg'|'amr'|'webm',
                'Media': {
                    'MediaFileUri': 'string'
                },
                'Transcript': {
                    'TranscriptFileUri': 'string',
                    'RedactedTranscriptFileUri': 'string'
                },
                'StartTime': datetime(2015, 1, 1),
                'CreationTime': datetime(2015, 1, 1),
                'CompletionTime': datetime(2015, 1, 1),
                'FailureReason': 'string',
                'Settings': {
                    'VocabularyName': 'string',
                    'ShowSpeakerLabels': True|False,
                    'MaxSpeakerLabels': 123,
                    'ChannelIdentification': True|False,
                    'ShowAlternatives': True|False,
                    'MaxAlternatives': 123,
                    'VocabularyFilterName': 'string',
                    'VocabularyFilterMethod': 'remove'|'mask'|'tag'
                },
                'ModelSettings': {
                    'LanguageModelName': 'string'
                },
                'JobExecutionSettings': {
                    'AllowDeferredExecution': True|False,
                    'DataAccessRoleArn': 'string'
                },
                'ContentRedaction': {
                    'RedactionType': 'PII',
                    'RedactionOutput': 'redacted'|'redacted_and_unredacted'
                },
                'IdentifyLanguage': True|False,
                'LanguageOptions': [
                    'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                ],
                'IdentifiedLanguageScore': ...
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **TranscriptionJob** *(dict) --* 

          An object that contains the results of the transcription job.

          
          

          - **TranscriptionJobName** *(string) --* 

            The name of the transcription job.

            
          

          - **TranscriptionJobStatus** *(string) --* 

            The status of the transcription job.

            
          

          - **LanguageCode** *(string) --* 

            The language code for the input speech.

            
          

          - **MediaSampleRateHertz** *(integer) --* 

            The sample rate, in Hertz, of the audio track in the input media file. 

            
          

          - **MediaFormat** *(string) --* 

            The format of the input media file.

            
          

          - **Media** *(dict) --* 

            An object that describes the input media for the transcription job.

            
            

            - **MediaFileUri** *(string) --* 

              The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:

               

              For example:

               

              For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

              
        
          

          - **Transcript** *(dict) --* 

            An object that describes the output of the transcription job.

            
            

            - **TranscriptFileUri** *(string) --* 

              The S3 object location of the transcript.

               

              Use this URI to access the transcript. If you specified an S3 bucket in the ``OutputBucketName`` field when you created the job, this is the URI of that bucket. If you chose to store the transcript in Amazon Transcribe, this is a shareable URL that provides secure access to that location.

              
            

            - **RedactedTranscriptFileUri** *(string) --* 

              The S3 object location of the redacted transcript.

               

              Use this URI to access the redacted transcript. If you specified an S3 bucket in the ``OutputBucketName`` field when you created the job, this is the URI of that bucket. If you chose to store the transcript in Amazon Transcribe, this is a shareable URL that provides secure access to that location.

              
        
          

          - **StartTime** *(datetime) --* 

            A timestamp that shows with the job was started processing.

            
          

          - **CreationTime** *(datetime) --* 

            A timestamp that shows when the job was created.

            
          

          - **CompletionTime** *(datetime) --* 

            A timestamp that shows when the job was completed.

            
          

          - **FailureReason** *(string) --* 

            If the ``TranscriptionJobStatus`` field is ``FAILED`` , this field contains information about why the job failed.

             

            The ``FailureReason`` field can contain one of the following values:

             

             
            * ``Unsupported media format`` - The media format specified in the ``MediaFormat`` field of the request isn't valid. See the description of the ``MediaFormat`` field for a list of valid values. 
             
            * ``The media format provided does not match the detected media format`` - The media format of the audio file doesn't match the format specified in the ``MediaFormat`` field in the request. Check the media format of your media file and make sure that the two values match. 
             
            * ``Invalid sample rate for audio file`` - The sample rate specified in the ``MediaSampleRateHertz`` of the request isn't valid. The sample rate must be between 8000 and 48000 Hertz. 
             
            * ``The sample rate provided does not match the detected sample rate`` - The sample rate in the audio file doesn't match the sample rate specified in the ``MediaSampleRateHertz`` field in the request. Check the sample rate of your media file and make sure that the two values match. 
             
            * ``Invalid file size: file size too large`` - The size of your audio file is larger than Amazon Transcribe can process. For more information, see `Limits <https://docs.aws.amazon.com/transcribe/latest/dg/limits-guidelines.html#limits>`__ in the *Amazon Transcribe Developer Guide* . 
             
            * ``Invalid number of channels: number of channels too large`` - Your audio contains more channels than Amazon Transcribe is configured to process. To request additional channels, see `Amazon Transcribe Limits <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits-amazon-transcribe>`__ in the *Amazon Web Services General Reference* . 
             

            
          

          - **Settings** *(dict) --* 

            Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.

            
            

            - **VocabularyName** *(string) --* 

              The name of a vocabulary to use when processing the transcription job.

              
            

            - **ShowSpeakerLabels** *(boolean) --* 

              Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the ``ShowSpeakerLabels`` field to true, you must also set the maximum number of speaker labels ``MaxSpeakerLabels`` field.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

              
            

            - **MaxSpeakerLabels** *(integer) --* 

              The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers are identified as a single speaker. If you specify the ``MaxSpeakerLabels`` field, you must set the ``ShowSpeakerLabels`` field to true.

              
            

            - **ChannelIdentification** *(boolean) --* 

              Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. 

               

              Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

              
            

            - **ShowAlternatives** *(boolean) --* 

              Determines whether the transcription contains alternative transcriptions. If you set the ``ShowAlternatives`` field to true, you must also set the maximum number of alternatives to return in the ``MaxAlternatives`` field.

              
            

            - **MaxAlternatives** *(integer) --* 

              The number of alternative transcriptions that the service should return. If you specify the ``MaxAlternatives`` field, you must set the ``ShowAlternatives`` field to true.

              
            

            - **VocabularyFilterName** *(string) --* 

              The name of the vocabulary filter to use when transcribing the audio. The filter that you specify must have the same language code as the transcription job.

              
            

            - **VocabularyFilterMethod** *(string) --* 

              Set to ``mask`` to remove filtered text from the transcript and replace it with three asterisks ("***") as placeholder text. Set to ``remove`` to remove filtered text from the transcript without using placeholder text. Set to ``tag`` to mark the word in the transcription output that matches the vocabulary filter. When you set the filter method to ``tag`` , the words matching your vocabulary filter are not masked or removed.

              
        
          

          - **ModelSettings** *(dict) --* 

            An object containing the details of your custom language model.

            
            

            - **LanguageModelName** *(string) --* 

              The name of your custom language model.

              
        
          

          - **JobExecutionSettings** *(dict) --* 

            Provides information about how a transcription job is executed.

            
            

            - **AllowDeferredExecution** *(boolean) --* 

              Indicates whether a job should be queued by Amazon Transcribe when the concurrent execution limit is exceeded. When the ``AllowDeferredExecution`` field is true, jobs are queued and executed when the number of executing jobs falls below the concurrent execution limit. If the field is false, Amazon Transcribe returns a ``LimitExceededException`` exception.

               

              If you specify the ``AllowDeferredExecution`` field, you must specify the ``DataAccessRoleArn`` field.

              
            

            - **DataAccessRoleArn** *(string) --* 

              The Amazon Resource Name (ARN) of a role that has access to the S3 bucket that contains the input files. Amazon Transcribe assumes this role to read queued media files. If you have specified an output S3 bucket for the transcription results, this role should have access to the output bucket as well.

               

              If you specify the ``AllowDeferredExecution`` field, you must specify the ``DataAccessRoleArn`` field.

              
        
          

          - **ContentRedaction** *(dict) --* 

            An object that describes content redaction settings for the transcription job.

            
            

            - **RedactionType** *(string) --* 

              Request parameter that defines the entities to be redacted. The only accepted value is ``PII`` .

              
            

            - **RedactionOutput** *(string) --* 

              The output transcript file stored in either the default S3 bucket or in a bucket you specify.

               

              When you choose ``redacted`` Amazon Transcribe outputs only the redacted transcript.

               

              When you choose ``redacted_and_unredacted`` Amazon Transcribe outputs both the redacted and unredacted transcripts.

              
        
          

          - **IdentifyLanguage** *(boolean) --* 

            A value that shows if automatic language identification was enabled for a transcription job.

            
          

          - **LanguageOptions** *(list) --* 

            An object that shows the optional array of languages inputted for transcription jobs with automatic language identification enabled.

            
            

            - *(string) --* 
        
          

          - **IdentifiedLanguageScore** *(float) --* 

            A value between zero and one that Amazon Transcribe assigned to the language that it identified in the source audio. Larger values indicate that Amazon Transcribe has higher confidence in the language it identified.

            
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    

  .. py:method:: get_vocabulary(**kwargs)

    

    Gets information about a vocabulary. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/GetVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.get_vocabulary(
          VocabularyName='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary to return information about. The name is case sensitive.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'VocabularyState': 'PENDING'|'READY'|'FAILED',
            'LastModifiedTime': datetime(2015, 1, 1),
            'FailureReason': 'string',
            'DownloadUri': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyName** *(string) --* 

          The name of the vocabulary to return.

          
        

        - **LanguageCode** *(string) --* 

          The language code of the vocabulary entries.

          
        

        - **VocabularyState** *(string) --* 

          The processing state of the vocabulary.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary was last modified.

          
        

        - **FailureReason** *(string) --* 

          If the ``VocabularyState`` field is ``FAILED`` , this field contains information about why the job failed.

          
        

        - **DownloadUri** *(string) --* 

          The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    

  .. py:method:: get_vocabulary_filter(**kwargs)

    

    Returns information about a vocabulary filter.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/GetVocabularyFilter>`_    


    **Request Syntax** 
    ::

      response = client.get_vocabulary_filter(
          VocabularyFilterName='string'
      )
    :type VocabularyFilterName: string
    :param VocabularyFilterName: **[REQUIRED]** 

      The name of the vocabulary filter for which to return information.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyFilterName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'LastModifiedTime': datetime(2015, 1, 1),
            'DownloadUri': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyFilterName** *(string) --* 

          The name of the vocabulary filter.

          
        

        - **LanguageCode** *(string) --* 

          The language code of the words in the vocabulary filter.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the contents of the vocabulary filter were updated.

          
        

        - **DownloadUri** *(string) --* 

          The URI of the list of words in the vocabulary filter. You can use this URI to get the list of words.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    

  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_language_models(**kwargs)

    

    Provides more information about the custom language models you've created. You can use the information in this list to find a specific custom language model. You can then use the operation to get more information about it.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/ListLanguageModels>`_    


    **Request Syntax** 
    ::

      response = client.list_language_models(
          StatusEquals='IN_PROGRESS'|'FAILED'|'COMPLETED',
          NameContains='string',
          NextToken='string',
          MaxResults=123
      )
    :type StatusEquals: string
    :param StatusEquals: 

      When specified, returns only custom language models with the specified status. Language models are ordered by creation date, with the newest models first. If you don't specify a status, Amazon Transcribe returns all custom language models ordered by date.

      

    
    :type NameContains: string
    :param NameContains: 

      When specified, the custom language model names returned contain the substring you've specified.

      

    
    :type NextToken: string
    :param NextToken: 

      When included, fetches the next set of jobs if the result of the previous request was truncated.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of language models to return in the response. If there are fewer results in the list, the response contains only the actual results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'Models': [
                {
                    'ModelName': 'string',
                    'CreateTime': datetime(2015, 1, 1),
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'LanguageCode': 'en-US'|'hi-IN'|'es-US'|'en-GB'|'en-AU',
                    'BaseModelName': 'NarrowBand'|'WideBand',
                    'ModelStatus': 'IN_PROGRESS'|'FAILED'|'COMPLETED',
                    'UpgradeAvailability': True|False,
                    'FailureReason': 'string',
                    'InputDataConfig': {
                        'S3Uri': 'string',
                        'TuningDataS3Uri': 'string',
                        'DataAccessRoleArn': 'string'
                    }
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The operation returns a page of jobs at a time. The maximum size of the list is set by the MaxResults parameter. If there are more language models in the list than the page size, Amazon Transcribe returns the ``NextPage`` token. Include the token in the next request to the operation to return the next page of language models.

          
        

        - **Models** *(list) --* 

          A list of objects containing information about custom language models.

          
          

          - *(dict) --* 

            The structure used to describe a custom language model.

            
            

            - **ModelName** *(string) --* 

              The name of the custom language model.

              
            

            - **CreateTime** *(datetime) --* 

              The time the custom language model was created.

              
            

            - **LastModifiedTime** *(datetime) --* 

              The most recent time the custom language model was modified.

              
            

            - **LanguageCode** *(string) --* 

              The language code you used to create your custom language model.

              
            

            - **BaseModelName** *(string) --* 

              The Amazon Transcribe standard language model, or base model used to create the custom language model.

              
            

            - **ModelStatus** *(string) --* 

              The creation status of a custom language model. When the status is ``COMPLETED`` the model is ready for use.

              
            

            - **UpgradeAvailability** *(boolean) --* 

              Whether the base model used for the custom language model is up to date. If this field is ``true`` then you are running the most up-to-date version of the base model in your custom language model.

              
            

            - **FailureReason** *(string) --* 

              The reason why the custom language model couldn't be created.

              
            

            - **InputDataConfig** *(dict) --* 

              The data access role and Amazon S3 prefixes for the input files used to train the custom language model.

              
              

              - **S3Uri** *(string) --* 

                The Amazon S3 prefix you specify to access the plain text files that you use to train your custom language model.

                
              

              - **TuningDataS3Uri** *(string) --* 

                The Amazon S3 prefix you specify to access the plain text files that you use to tune your custom language model.

                
              

              - **DataAccessRoleArn** *(string) --* 

                The Amazon Resource Name (ARN) that uniquely identifies the permissions you've given Amazon Transcribe to access your Amazon S3 buckets containing your media files or text data.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: list_medical_transcription_jobs(**kwargs)

    

    Lists medical transcription jobs with a specified status or substring that matches their names.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/ListMedicalTranscriptionJobs>`_    


    **Request Syntax** 
    ::

      response = client.list_medical_transcription_jobs(
          Status='QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
          JobNameContains='string',
          NextToken='string',
          MaxResults=123
      )
    :type Status: string
    :param Status: 

      When specified, returns only medical transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don't specify a status, Amazon Transcribe Medical returns all transcription jobs ordered by creation date.

      

    
    :type JobNameContains: string
    :param JobNameContains: 

      When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.

      

    
    :type NextToken: string
    :param NextToken: 

      If you a receive a truncated result in the previous request of ``ListMedicalTranscriptionJobs`` , include ``NextToken`` to fetch the next set of jobs.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of medical transcription jobs to return in the response. IF there are fewer results in the list, this response contains only the actual results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Status': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
            'NextToken': 'string',
            'MedicalTranscriptionJobSummaries': [
                {
                    'MedicalTranscriptionJobName': 'string',
                    'CreationTime': datetime(2015, 1, 1),
                    'StartTime': datetime(2015, 1, 1),
                    'CompletionTime': datetime(2015, 1, 1),
                    'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                    'TranscriptionJobStatus': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
                    'FailureReason': 'string',
                    'OutputLocationType': 'CUSTOMER_BUCKET'|'SERVICE_BUCKET',
                    'Specialty': 'PRIMARYCARE',
                    'ContentIdentificationType': 'PHI',
                    'Type': 'CONVERSATION'|'DICTATION'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Status** *(string) --* 

          The requested status of the medical transcription jobs returned.

          
        

        - **NextToken** *(string) --* 

          The ``ListMedicalTranscriptionJobs`` operation returns a page of jobs at a time. The maximum size of the page is set by the ``MaxResults`` parameter. If the number of jobs exceeds what can fit on a page, Amazon Transcribe Medical returns the ``NextPage`` token. Include the token in the next request to the ``ListMedicalTranscriptionJobs`` operation to return in the next page of jobs.

          
        

        - **MedicalTranscriptionJobSummaries** *(list) --* 

          A list of objects containing summary information for a transcription job.

          
          

          - *(dict) --* 

            Provides summary information about a transcription job.

            
            

            - **MedicalTranscriptionJobName** *(string) --* 

              The name of a medical transcription job.

              
            

            - **CreationTime** *(datetime) --* 

              A timestamp that shows when the medical transcription job was created.

              
            

            - **StartTime** *(datetime) --* 

              A timestamp that shows when the job began processing.

              
            

            - **CompletionTime** *(datetime) --* 

              A timestamp that shows when the job was completed.

              
            

            - **LanguageCode** *(string) --* 

              The language of the transcript in the source audio file.

              
            

            - **TranscriptionJobStatus** *(string) --* 

              The status of the medical transcription job.

              
            

            - **FailureReason** *(string) --* 

              If the ``TranscriptionJobStatus`` field is ``FAILED`` , a description of the error.

              
            

            - **OutputLocationType** *(string) --* 

              Indicates the location of the transcription job's output.

               

              The ``CUSTOMER_BUCKET`` is the S3 location provided in the ``OutputBucketName`` field when the 

              
            

            - **Specialty** *(string) --* 

              The medical specialty of the transcription job. ``Primary care`` is the only valid value.

              
            

            - **ContentIdentificationType** *(string) --* 

              Shows the type of information you've configured Amazon Transcribe Medical to identify in a transcription job. If the value is ``PHI`` , you've configured the transcription job to identify personal health information (PHI).

              
            

            - **Type** *(string) --* 

              The speech of the clinician in the input audio.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: list_medical_vocabularies(**kwargs)

    

    Returns a list of vocabularies that match the specified criteria. If you don't enter a value in any of the request parameters, returns the entire list of vocabularies.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/ListMedicalVocabularies>`_    


    **Request Syntax** 
    ::

      response = client.list_medical_vocabularies(
          NextToken='string',
          MaxResults=123,
          StateEquals='PENDING'|'READY'|'FAILED',
          NameContains='string'
      )
    :type NextToken: string
    :param NextToken: 

      If the result of your previous request to ``ListMedicalVocabularies`` was truncated, include the ``NextToken`` to fetch the next set of vocabularies.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of vocabularies to return in the response.

      

    
    :type StateEquals: string
    :param StateEquals: 

      When specified, returns only vocabularies with the ``VocabularyState`` equal to the specified vocabulary state. Use this field to see which vocabularies are ready for your medical transcription jobs.

      

    
    :type NameContains: string
    :param NameContains: 

      Returns vocabularies whose names contain the specified string. The search is not case sensitive. ``ListMedicalVocabularies`` returns both "``vocabularyname`` " and "``VocabularyName`` ".

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Status': 'PENDING'|'READY'|'FAILED',
            'NextToken': 'string',
            'Vocabularies': [
                {
                    'VocabularyName': 'string',
                    'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'VocabularyState': 'PENDING'|'READY'|'FAILED'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Status** *(string) --* 

          The requested vocabulary state.

          
        

        - **NextToken** *(string) --* 

          The ``ListMedicalVocabularies`` operation returns a page of vocabularies at a time. You set the maximum number of vocabularies to return on a page with the ``MaxResults`` parameter. If there are more jobs in the list will fit on a page, Amazon Transcribe Medical returns the ``NextPage`` token. To return the next page of vocabularies, include the token in the next request to the ``ListMedicalVocabularies`` operation .

          
        

        - **Vocabularies** *(list) --* 

          A list of objects that describe the vocabularies that match your search criteria.

          
          

          - *(dict) --* 

            Provides information about a custom vocabulary. 

            
            

            - **VocabularyName** *(string) --* 

              The name of the vocabulary.

              
            

            - **LanguageCode** *(string) --* 

              The language code of the vocabulary entries.

              
            

            - **LastModifiedTime** *(datetime) --* 

              The date and time that the vocabulary was last modified.

              
            

            - **VocabularyState** *(string) --* 

              The processing state of the vocabulary. If the state is ``READY`` you can use the vocabulary in a ``StartTranscriptionJob`` request.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: list_transcription_jobs(**kwargs)

    

    Lists transcription jobs with the specified status.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/ListTranscriptionJobs>`_    


    **Request Syntax** 
    ::

      response = client.list_transcription_jobs(
          Status='QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
          JobNameContains='string',
          NextToken='string',
          MaxResults=123
      )
    :type Status: string
    :param Status: 

      When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. 

      

    
    :type JobNameContains: string
    :param JobNameContains: 

      When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.

      

    
    :type NextToken: string
    :param NextToken: 

      If the result of the previous request to ``ListTranscriptionJobs`` was truncated, include the ``NextToken`` to fetch the next set of jobs.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Status': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
            'NextToken': 'string',
            'TranscriptionJobSummaries': [
                {
                    'TranscriptionJobName': 'string',
                    'CreationTime': datetime(2015, 1, 1),
                    'StartTime': datetime(2015, 1, 1),
                    'CompletionTime': datetime(2015, 1, 1),
                    'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                    'TranscriptionJobStatus': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
                    'FailureReason': 'string',
                    'OutputLocationType': 'CUSTOMER_BUCKET'|'SERVICE_BUCKET',
                    'ContentRedaction': {
                        'RedactionType': 'PII',
                        'RedactionOutput': 'redacted'|'redacted_and_unredacted'
                    },
                    'ModelSettings': {
                        'LanguageModelName': 'string'
                    },
                    'IdentifyLanguage': True|False,
                    'IdentifiedLanguageScore': ...
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Status** *(string) --* 

          The requested status of the jobs returned.

          
        

        - **NextToken** *(string) --* 

          The ``ListTranscriptionJobs`` operation returns a page of jobs at a time. The maximum size of the page is set by the ``MaxResults`` parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the ``NextPage`` token. Include the token in the next request to the ``ListTranscriptionJobs`` operation to return in the next page of jobs.

          
        

        - **TranscriptionJobSummaries** *(list) --* 

          A list of objects containing summary information for a transcription job.

          
          

          - *(dict) --* 

            Provides a summary of information about a transcription job.

            
            

            - **TranscriptionJobName** *(string) --* 

              The name of the transcription job.

              
            

            - **CreationTime** *(datetime) --* 

              A timestamp that shows when the job was created.

              
            

            - **StartTime** *(datetime) --* 

              A timestamp that shows when the job started processing.

              
            

            - **CompletionTime** *(datetime) --* 

              A timestamp that shows when the job was completed.

              
            

            - **LanguageCode** *(string) --* 

              The language code for the input speech.

              
            

            - **TranscriptionJobStatus** *(string) --* 

              The status of the transcription job. When the status is ``COMPLETED`` , use the ``GetTranscriptionJob`` operation to get the results of the transcription.

              
            

            - **FailureReason** *(string) --* 

              If the ``TranscriptionJobStatus`` field is ``FAILED`` , a description of the error.

              
            

            - **OutputLocationType** *(string) --* 

              Indicates the location of the output of the transcription job.

               

              If the value is ``CUSTOMER_BUCKET`` then the location is the S3 bucket specified in the ``outputBucketName`` field when the transcription job was started with the ``StartTranscriptionJob`` operation.

               

              If the value is ``SERVICE_BUCKET`` then the output is stored by Amazon Transcribe and can be retrieved using the URI in the ``GetTranscriptionJob`` response's ``TranscriptFileUri`` field.

              
            

            - **ContentRedaction** *(dict) --* 

              The content redaction settings of the transcription job.

              
              

              - **RedactionType** *(string) --* 

                Request parameter that defines the entities to be redacted. The only accepted value is ``PII`` .

                
              

              - **RedactionOutput** *(string) --* 

                The output transcript file stored in either the default S3 bucket or in a bucket you specify.

                 

                When you choose ``redacted`` Amazon Transcribe outputs only the redacted transcript.

                 

                When you choose ``redacted_and_unredacted`` Amazon Transcribe outputs both the redacted and unredacted transcripts.

                
          
            

            - **ModelSettings** *(dict) --* 

              The object used to call your custom language model to your transcription job.

              
              

              - **LanguageModelName** *(string) --* 

                The name of your custom language model.

                
          
            

            - **IdentifyLanguage** *(boolean) --* 

              Whether automatic language identification was enabled for a transcription job.

              
            

            - **IdentifiedLanguageScore** *(float) --* 

              A value between zero and one that Amazon Transcribe assigned to the language it identified in the source audio. A higher score indicates that Amazon Transcribe is more confident in the language it identified.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: list_vocabularies(**kwargs)

    

    Returns a list of vocabularies that match the specified criteria. If no criteria are specified, returns the entire list of vocabularies.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/ListVocabularies>`_    


    **Request Syntax** 
    ::

      response = client.list_vocabularies(
          NextToken='string',
          MaxResults=123,
          StateEquals='PENDING'|'READY'|'FAILED',
          NameContains='string'
      )
    :type NextToken: string
    :param NextToken: 

      If the result of the previous request to ``ListVocabularies`` was truncated, include the ``NextToken`` to fetch the next set of jobs.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.

      

    
    :type StateEquals: string
    :param StateEquals: 

      When specified, only returns vocabularies with the ``VocabularyState`` field equal to the specified state.

      

    
    :type NameContains: string
    :param NameContains: 

      When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is not case sensitive, ``ListVocabularies`` returns both "vocabularyname" and "VocabularyName" in the response list.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Status': 'PENDING'|'READY'|'FAILED',
            'NextToken': 'string',
            'Vocabularies': [
                {
                    'VocabularyName': 'string',
                    'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                    'LastModifiedTime': datetime(2015, 1, 1),
                    'VocabularyState': 'PENDING'|'READY'|'FAILED'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Status** *(string) --* 

          The requested vocabulary state.

          
        

        - **NextToken** *(string) --* 

          The ``ListVocabularies`` operation returns a page of vocabularies at a time. The maximum size of the page is set in the ``MaxResults`` parameter. If there are more jobs in the list than will fit on the page, Amazon Transcribe returns the ``NextPage`` token. To return in the next page of jobs, include the token in the next request to the ``ListVocabularies`` operation.

          
        

        - **Vocabularies** *(list) --* 

          A list of objects that describe the vocabularies that match the search criteria in the request.

          
          

          - *(dict) --* 

            Provides information about a custom vocabulary. 

            
            

            - **VocabularyName** *(string) --* 

              The name of the vocabulary.

              
            

            - **LanguageCode** *(string) --* 

              The language code of the vocabulary entries.

              
            

            - **LastModifiedTime** *(datetime) --* 

              The date and time that the vocabulary was last modified.

              
            

            - **VocabularyState** *(string) --* 

              The processing state of the vocabulary. If the state is ``READY`` you can use the vocabulary in a ``StartTranscriptionJob`` request.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: list_vocabulary_filters(**kwargs)

    

    Gets information about vocabulary filters.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/ListVocabularyFilters>`_    


    **Request Syntax** 
    ::

      response = client.list_vocabulary_filters(
          NextToken='string',
          MaxResults=123,
          NameContains='string'
      )
    :type NextToken: string
    :param NextToken: 

      If the result of the previous request to ``ListVocabularyFilters`` was truncated, include the ``NextToken`` to fetch the next set of collections.

      

    
    :type MaxResults: integer
    :param MaxResults: 

      The maximum number of filters to return in the response. If there are fewer results in the list, this response contains only the actual results.

      

    
    :type NameContains: string
    :param NameContains: 

      Filters the response so that it only contains vocabulary filters whose name contains the specified string.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'NextToken': 'string',
            'VocabularyFilters': [
                {
                    'VocabularyFilterName': 'string',
                    'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                    'LastModifiedTime': datetime(2015, 1, 1)
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **NextToken** *(string) --* 

          The ``ListVocabularyFilters`` operation returns a page of collections at a time. The maximum size of the page is set by the ``MaxResults`` parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the ``NextPage`` token. Include the token in the next request to the ``ListVocabularyFilters`` operation to return in the next page of jobs.

          
        

        - **VocabularyFilters** *(list) --* 

          The list of vocabulary filters. It contains at most ``MaxResults`` number of filters. If there are more filters, call the ``ListVocabularyFilters`` operation again with the ``NextToken`` parameter in the request set to the value of the ``NextToken`` field in the response.

          
          

          - *(dict) --* 

            Provides information about a vocabulary filter.

            
            

            - **VocabularyFilterName** *(string) --* 

              The name of the vocabulary filter. The name must be unique in the account that holds the filter.

              
            

            - **LanguageCode** *(string) --* 

              The language code of the words in the vocabulary filter.

              
            

            - **LastModifiedTime** *(datetime) --* 

              The date and time that the vocabulary was last updated.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    

  .. py:method:: start_medical_transcription_job(**kwargs)

    

    Starts a batch job to transcribe medical speech to text.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/StartMedicalTranscriptionJob>`_    


    **Request Syntax** 
    ::

      response = client.start_medical_transcription_job(
          MedicalTranscriptionJobName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          MediaSampleRateHertz=123,
          MediaFormat='mp3'|'mp4'|'wav'|'flac'|'ogg'|'amr'|'webm',
          Media={
              'MediaFileUri': 'string'
          },
          OutputBucketName='string',
          OutputKey='string',
          OutputEncryptionKMSKeyId='string',
          Settings={
              'ShowSpeakerLabels': True|False,
              'MaxSpeakerLabels': 123,
              'ChannelIdentification': True|False,
              'ShowAlternatives': True|False,
              'MaxAlternatives': 123,
              'VocabularyName': 'string'
          },
          ContentIdentificationType='PHI',
          Specialty='PRIMARYCARE',
          Type='CONVERSATION'|'DICTATION'
      )
    :type MedicalTranscriptionJobName: string
    :param MedicalTranscriptionJobName: **[REQUIRED]** 

      The name of the medical transcription job. You can't use the strings "``.`` " or "``..`` " by themselves as the job name. The name must also be unique within an AWS account. If you try to create a medical transcription job with the same name as a previous medical transcription job, you get a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language code for the language spoken in the input media file. US English (en-US) is the valid value for medical transcription jobs. Any other value you enter for language code results in a ``BadRequestException`` error.

      

    
    :type MediaSampleRateHertz: integer
    :param MediaSampleRateHertz: 

      The sample rate, in Hertz, of the audio track in the input media file.

       

      If you do not specify the media sample rate, Amazon Transcribe Medical determines the sample rate. If you specify the sample rate, it must match the rate detected by Amazon Transcribe Medical. In most cases, you should leave the ``MediaSampleRateHertz`` field blank and let Amazon Transcribe Medical determine the sample rate.

      

    
    :type MediaFormat: string
    :param MediaFormat: 

      The audio format of the input media file.

      

    
    :type Media: dict
    :param Media: **[REQUIRED]** 

      Describes the input media file in a transcription request.

      

    
      - **MediaFileUri** *(string) --* 

        The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:

         

        For example:

         

        For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

        

      
    
    :type OutputBucketName: string
    :param OutputBucketName: **[REQUIRED]** 

      The Amazon S3 location where the transcription is stored.

       

      You must set ``OutputBucketName`` for Amazon Transcribe Medical to store the transcription results. Your transcript appears in the S3 location you specify. When you call the  GetMedicalTranscriptionJob , the operation returns this location in the ``TranscriptFileUri`` field. The S3 bucket must have permissions that allow Amazon Transcribe Medical to put files in the bucket. For more information, see `Permissions Required for IAM User Roles <https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user>`__ .

       

      You can specify an AWS Key Management Service (KMS) key to encrypt the output of your transcription using the ``OutputEncryptionKMSKeyId`` parameter. If you don't specify a KMS key, Amazon Transcribe Medical uses the default Amazon S3 key for server-side encryption of transcripts that are placed in your S3 bucket.

      

    
    :type OutputKey: string
    :param OutputKey: 

      You can specify a location in an Amazon S3 bucket to store the output of your medical transcription job.

       

      If you don't specify an output key, Amazon Transcribe Medical stores the output of your transcription job in the Amazon S3 bucket you specified. By default, the object key is "your-transcription-job-name.json".

       

      You can use output keys to specify the Amazon S3 prefix and file name of the transcription output. For example, specifying the Amazon S3 prefix, "folder1/folder2/", as an output key would lead to the output being stored as "folder1/folder2/your-transcription-job-name.json". If you specify "my-other-job-name.json" as the output key, the object key is changed to "my-other-job-name.json". You can use an output key to change both the prefix and the file name, for example "folder/my-other-job-name.json".

       

      If you specify an output key, you must also specify an S3 bucket in the ``OutputBucketName`` parameter.

      

    
    :type OutputEncryptionKMSKeyId: string
    :param OutputEncryptionKMSKeyId: 

      The Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key used to encrypt the output of the transcription job. The user calling the  StartMedicalTranscriptionJob operation must have permission to use the specified KMS key.

       

      You use either of the following to identify a KMS key in the current account:

       

       
      * KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab" 
       
      * KMS Key Alias: "alias/ExampleAlias" 
       

       

      You can use either of the following to identify a KMS key in the current account or another account:

       

       
      * Amazon Resource Name (ARN) of a KMS key in the current account or another account: "arn:aws:kms:region:account ID:key/1234abcd-12ab-34cd-56ef-1234567890ab" 
       
      * ARN of a KMS Key Alias: "arn:aws:kms:region:account ID:alias/ExampleAlias" 
       

       

      If you don't specify an encryption key, the output of the medical transcription job is encrypted with the default Amazon S3 key (SSE-S3).

       

      If you specify a KMS key to encrypt your output, you must also specify an output location in the ``OutputBucketName`` parameter.

      

    
    :type Settings: dict
    :param Settings: 

      Optional settings for the medical transcription job.

      

    
      - **ShowSpeakerLabels** *(boolean) --* 

        Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the ``ShowSpeakerLabels`` field to true, you must also set the maximum number of speaker labels in the ``MaxSpeakerLabels`` field.

         

        You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

        

      
      - **MaxSpeakerLabels** *(integer) --* 

        The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers are identified as a single speaker. If you specify the ``MaxSpeakerLabels`` field, you must set the ``ShowSpeakerLabels`` field to true.

        

      
      - **ChannelIdentification** *(boolean) --* 

        Instructs Amazon Transcribe Medical to process each audio channel separately and then merge the transcription output of each channel into a single transcription.

         

        Amazon Transcribe Medical also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of item. The alternative transcriptions also come with confidence scores provided by Amazon Transcribe Medical.

         

        You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException``  

        

      
      - **ShowAlternatives** *(boolean) --* 

        Determines whether alternative transcripts are generated along with the transcript that has the highest confidence. If you set ``ShowAlternatives`` field to true, you must also set the maximum number of alternatives to return in the ``MaxAlternatives`` field.

        

      
      - **MaxAlternatives** *(integer) --* 

        The maximum number of alternatives that you tell the service to return. If you specify the ``MaxAlternatives`` field, you must set the ``ShowAlternatives`` field to true.

        

      
      - **VocabularyName** *(string) --* 

        The name of the vocabulary to use when processing a medical transcription job.

        

      
    
    :type ContentIdentificationType: string
    :param ContentIdentificationType: 

      You can configure Amazon Transcribe Medical to label content in the transcription output. If you specify ``PHI`` , Amazon Transcribe Medical labels the personal health information (PHI) that it identifies in the transcription output.

      

    
    :type Specialty: string
    :param Specialty: **[REQUIRED]** 

      The medical specialty of any clinician speaking in the input media.

      

    
    :type Type: string
    :param Type: **[REQUIRED]** 

      The type of speech in the input audio. ``CONVERSATION`` refers to conversations between two or more speakers, e.g., a conversations between doctors and patients. ``DICTATION`` refers to single-speaker dictated speech, e.g., for clinical notes.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'MedicalTranscriptionJob': {
                'MedicalTranscriptionJobName': 'string',
                'TranscriptionJobStatus': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
                'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                'MediaSampleRateHertz': 123,
                'MediaFormat': 'mp3'|'mp4'|'wav'|'flac'|'ogg'|'amr'|'webm',
                'Media': {
                    'MediaFileUri': 'string'
                },
                'Transcript': {
                    'TranscriptFileUri': 'string'
                },
                'StartTime': datetime(2015, 1, 1),
                'CreationTime': datetime(2015, 1, 1),
                'CompletionTime': datetime(2015, 1, 1),
                'FailureReason': 'string',
                'Settings': {
                    'ShowSpeakerLabels': True|False,
                    'MaxSpeakerLabels': 123,
                    'ChannelIdentification': True|False,
                    'ShowAlternatives': True|False,
                    'MaxAlternatives': 123,
                    'VocabularyName': 'string'
                },
                'ContentIdentificationType': 'PHI',
                'Specialty': 'PRIMARYCARE',
                'Type': 'CONVERSATION'|'DICTATION'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **MedicalTranscriptionJob** *(dict) --* 

          A batch job submitted to transcribe medical speech to text.

          
          

          - **MedicalTranscriptionJobName** *(string) --* 

            The name for a given medical transcription job.

            
          

          - **TranscriptionJobStatus** *(string) --* 

            The completion status of a medical transcription job.

            
          

          - **LanguageCode** *(string) --* 

            The language code for the language spoken in the source audio file. US English (en-US) is the only supported language for medical transcriptions. Any other value you enter for language code results in a ``BadRequestException`` error.

            
          

          - **MediaSampleRateHertz** *(integer) --* 

            The sample rate, in Hertz, of the source audio containing medical information.

             

            If you don't specify the sample rate, Amazon Transcribe Medical determines it for you. If you choose to specify the sample rate, it must match the rate detected by Amazon Transcribe Medical. In most cases, you should leave the ``MediaSampleHertz`` blank and let Amazon Transcribe Medical determine the sample rate.

            
          

          - **MediaFormat** *(string) --* 

            The format of the input media file.

            
          

          - **Media** *(dict) --* 

            Describes the input media file in a transcription request.

            
            

            - **MediaFileUri** *(string) --* 

              The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:

               

              For example:

               

              For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

              
        
          

          - **Transcript** *(dict) --* 

            An object that contains the ``MedicalTranscript`` . The ``MedicalTranscript`` contains the ``TranscriptFileUri`` .

            
            

            - **TranscriptFileUri** *(string) --* 

              The S3 object location of the medical transcript.

               

              Use this URI to access the medical transcript. This URI points to the S3 bucket you created to store the medical transcript.

              
        
          

          - **StartTime** *(datetime) --* 

            A timestamp that shows when the job started processing.

            
          

          - **CreationTime** *(datetime) --* 

            A timestamp that shows when the job was created.

            
          

          - **CompletionTime** *(datetime) --* 

            A timestamp that shows when the job was completed.

            
          

          - **FailureReason** *(string) --* 

            If the ``TranscriptionJobStatus`` field is ``FAILED`` , this field contains information about why the job failed.

             

            The ``FailureReason`` field contains one of the following values:

             

             
            * ``Unsupported media format`` - The media format specified in the ``MediaFormat`` field of the request isn't valid. See the description of the ``MediaFormat`` field for a list of valid values. 
             
            * ``The media format provided does not match the detected media format`` - The media format of the audio file doesn't match the format specified in the ``MediaFormat`` field in the request. Check the media format of your media file and make sure the two values match. 
             
            * ``Invalid sample rate for audio file`` - The sample rate specified in the ``MediaSampleRateHertz`` of the request isn't valid. The sample rate must be between 8000 and 48000 Hertz. 
             
            * ``The sample rate provided does not match the detected sample rate`` - The sample rate in the audio file doesn't match the sample rate specified in the ``MediaSampleRateHertz`` field in the request. Check the sample rate of your media file and make sure that the two values match. 
             
            * ``Invalid file size: file size too large`` - The size of your audio file is larger than what Amazon Transcribe Medical can process. For more information, see `Guidelines and Quotas <https://docs.aws.amazon.com/transcribe/latest/dg/limits-guidelines.html#limits>`__ in the *Amazon Transcribe Medical Guide*   
             
            * ``Invalid number of channels: number of channels too large`` - Your audio contains more channels than Amazon Transcribe Medical is configured to process. To request additional channels, see `Amazon Transcribe Medical Endpoints and Quotas <https://docs.aws.amazon.com/general/latest/gr/transcribe-medical.html>`__ in the *Amazon Web Services General Reference*   
             

            
          

          - **Settings** *(dict) --* 

            Object that contains object.

            
            

            - **ShowSpeakerLabels** *(boolean) --* 

              Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the ``ShowSpeakerLabels`` field to true, you must also set the maximum number of speaker labels in the ``MaxSpeakerLabels`` field.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

              
            

            - **MaxSpeakerLabels** *(integer) --* 

              The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers are identified as a single speaker. If you specify the ``MaxSpeakerLabels`` field, you must set the ``ShowSpeakerLabels`` field to true.

              
            

            - **ChannelIdentification** *(boolean) --* 

              Instructs Amazon Transcribe Medical to process each audio channel separately and then merge the transcription output of each channel into a single transcription.

               

              Amazon Transcribe Medical also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of item. The alternative transcriptions also come with confidence scores provided by Amazon Transcribe Medical.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException``  

              
            

            - **ShowAlternatives** *(boolean) --* 

              Determines whether alternative transcripts are generated along with the transcript that has the highest confidence. If you set ``ShowAlternatives`` field to true, you must also set the maximum number of alternatives to return in the ``MaxAlternatives`` field.

              
            

            - **MaxAlternatives** *(integer) --* 

              The maximum number of alternatives that you tell the service to return. If you specify the ``MaxAlternatives`` field, you must set the ``ShowAlternatives`` field to true.

              
            

            - **VocabularyName** *(string) --* 

              The name of the vocabulary to use when processing a medical transcription job.

              
        
          

          - **ContentIdentificationType** *(string) --* 

            Shows the type of content that you've configured Amazon Transcribe Medical to identify in a transcription job. If the value is ``PHI`` , you've configured the job to identify personal health information (PHI) in the transcription output.

            
          

          - **Specialty** *(string) --* 

            The medical specialty of any clinicians providing a dictation or having a conversation. ``PRIMARYCARE`` is the only available setting for this object. This specialty enables you to generate transcriptions for the following medical fields:

             

             
            * Family Medicine 
             

            
          

          - **Type** *(string) --* 

            The type of speech in the transcription job. ``CONVERSATION`` is generally used for patient-physician dialogues. ``DICTATION`` is the setting for physicians speaking their notes after seeing a patient. For more information, see  how-it-works-med  

            
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: start_transcription_job(**kwargs)

    

    Starts an asynchronous job to transcribe speech to text.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/StartTranscriptionJob>`_    


    **Request Syntax** 
    ::

      response = client.start_transcription_job(
          TranscriptionJobName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          MediaSampleRateHertz=123,
          MediaFormat='mp3'|'mp4'|'wav'|'flac'|'ogg'|'amr'|'webm',
          Media={
              'MediaFileUri': 'string'
          },
          OutputBucketName='string',
          OutputKey='string',
          OutputEncryptionKMSKeyId='string',
          Settings={
              'VocabularyName': 'string',
              'ShowSpeakerLabels': True|False,
              'MaxSpeakerLabels': 123,
              'ChannelIdentification': True|False,
              'ShowAlternatives': True|False,
              'MaxAlternatives': 123,
              'VocabularyFilterName': 'string',
              'VocabularyFilterMethod': 'remove'|'mask'|'tag'
          },
          ModelSettings={
              'LanguageModelName': 'string'
          },
          JobExecutionSettings={
              'AllowDeferredExecution': True|False,
              'DataAccessRoleArn': 'string'
          },
          ContentRedaction={
              'RedactionType': 'PII',
              'RedactionOutput': 'redacted'|'redacted_and_unredacted'
          },
          IdentifyLanguage=True|False,
          LanguageOptions=[
              'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          ]
      )
    :type TranscriptionJobName: string
    :param TranscriptionJobName: **[REQUIRED]** 

      The name of the job. You can't use the strings "``.`` " or "``..`` " by themselves as the job name. The name must also be unique within an AWS account. If you try to create a transcription job with the same name as a previous transcription job, you get a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: 

      The language code for the language used in the input media file.

       

      To transcribe speech in Modern Standard Arabic (ar-SA), your audio or video file must be encoded at a sample rate of 16000 Hz or higher.

      

    
    :type MediaSampleRateHertz: integer
    :param MediaSampleRateHertz: 

      The sample rate, in Hertz, of the audio track in the input media file. 

       

      If you do not specify the media sample rate, Amazon Transcribe determines the sample rate. If you specify the sample rate, it must match the sample rate detected by Amazon Transcribe. In most cases, you should leave the ``MediaSampleRateHertz`` field blank and let Amazon Transcribe determine the sample rate.

      

    
    :type MediaFormat: string
    :param MediaFormat: 

      The format of the input media file.

      

    
    :type Media: dict
    :param Media: **[REQUIRED]** 

      An object that describes the input media for a transcription job.

      

    
      - **MediaFileUri** *(string) --* 

        The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:

         

        For example:

         

        For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

        

      
    
    :type OutputBucketName: string
    :param OutputBucketName: 

      The location where the transcription is stored.

       

      If you set the ``OutputBucketName`` , Amazon Transcribe puts the transcript in the specified S3 bucket. When you call the  GetTranscriptionJob operation, the operation returns this location in the ``TranscriptFileUri`` field. If you enable content redaction, the redacted transcript appears in ``RedactedTranscriptFileUri`` . If you enable content redaction and choose to output an unredacted transcript, that transcript's location still appears in the ``TranscriptFileUri`` . The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see `Permissions Required for IAM User Roles <https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user>`__ .

       

      You can specify an AWS Key Management Service (KMS) key to encrypt the output of your transcription using the ``OutputEncryptionKMSKeyId`` parameter. If you don't specify a KMS key, Amazon Transcribe uses the default Amazon S3 key for server-side encryption of transcripts that are placed in your S3 bucket.

       

      If you don't set the ``OutputBucketName`` , Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the ``TranscriptFileUri`` field. Use this URL to download the transcription.

      

    
    :type OutputKey: string
    :param OutputKey: 

      You can specify a location in an Amazon S3 bucket to store the output of your transcription job.

       

      If you don't specify an output key, Amazon Transcribe stores the output of your transcription job in the Amazon S3 bucket you specified. By default, the object key is "your-transcription-job-name.json".

       

      You can use output keys to specify the Amazon S3 prefix and file name of the transcription output. For example, specifying the Amazon S3 prefix, "folder1/folder2/", as an output key would lead to the output being stored as "folder1/folder2/your-transcription-job-name.json". If you specify "my-other-job-name.json" as the output key, the object key is changed to "my-other-job-name.json". You can use an output key to change both the prefix and the file name, for example "folder/my-other-job-name.json".

       

      If you specify an output key, you must also specify an S3 bucket in the ``OutputBucketName`` parameter.

      

    
    :type OutputEncryptionKMSKeyId: string
    :param OutputEncryptionKMSKeyId: 

      The Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key used to encrypt the output of the transcription job. The user calling the ``StartTranscriptionJob`` operation must have permission to use the specified KMS key.

       

      You can use either of the following to identify a KMS key in the current account:

       

       
      * KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab" 
       
      * KMS Key Alias: "alias/ExampleAlias" 
       

       

      You can use either of the following to identify a KMS key in the current account or another account:

       

       
      * Amazon Resource Name (ARN) of a KMS Key: "arn:aws:kms:region:account ID:key/1234abcd-12ab-34cd-56ef-1234567890ab" 
       
      * ARN of a KMS Key Alias: "arn:aws:kms:region:account ID:alias/ExampleAlias" 
       

       

      If you don't specify an encryption key, the output of the transcription job is encrypted with the default Amazon S3 key (SSE-S3). 

       

      If you specify a KMS key to encrypt your output, you must also specify an output location in the ``OutputBucketName`` parameter.

      

    
    :type Settings: dict
    :param Settings: 

      A ``Settings`` object that provides optional settings for a transcription job.

      

    
      - **VocabularyName** *(string) --* 

        The name of a vocabulary to use when processing the transcription job.

        

      
      - **ShowSpeakerLabels** *(boolean) --* 

        Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the ``ShowSpeakerLabels`` field to true, you must also set the maximum number of speaker labels ``MaxSpeakerLabels`` field.

         

        You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

        

      
      - **MaxSpeakerLabels** *(integer) --* 

        The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers are identified as a single speaker. If you specify the ``MaxSpeakerLabels`` field, you must set the ``ShowSpeakerLabels`` field to true.

        

      
      - **ChannelIdentification** *(boolean) --* 

        Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. 

         

        Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.

         

        You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

        

      
      - **ShowAlternatives** *(boolean) --* 

        Determines whether the transcription contains alternative transcriptions. If you set the ``ShowAlternatives`` field to true, you must also set the maximum number of alternatives to return in the ``MaxAlternatives`` field.

        

      
      - **MaxAlternatives** *(integer) --* 

        The number of alternative transcriptions that the service should return. If you specify the ``MaxAlternatives`` field, you must set the ``ShowAlternatives`` field to true.

        

      
      - **VocabularyFilterName** *(string) --* 

        The name of the vocabulary filter to use when transcribing the audio. The filter that you specify must have the same language code as the transcription job.

        

      
      - **VocabularyFilterMethod** *(string) --* 

        Set to ``mask`` to remove filtered text from the transcript and replace it with three asterisks ("***") as placeholder text. Set to ``remove`` to remove filtered text from the transcript without using placeholder text. Set to ``tag`` to mark the word in the transcription output that matches the vocabulary filter. When you set the filter method to ``tag`` , the words matching your vocabulary filter are not masked or removed.

        

      
    
    :type ModelSettings: dict
    :param ModelSettings: 

      Choose the custom language model you use for your transcription job in this parameter.

      

    
      - **LanguageModelName** *(string) --* 

        The name of your custom language model.

        

      
    
    :type JobExecutionSettings: dict
    :param JobExecutionSettings: 

      Provides information about how a transcription job is executed. Use this field to indicate that the job can be queued for deferred execution if the concurrency limit is reached and there are no slots available to immediately run the job.

      

    
      - **AllowDeferredExecution** *(boolean) --* 

        Indicates whether a job should be queued by Amazon Transcribe when the concurrent execution limit is exceeded. When the ``AllowDeferredExecution`` field is true, jobs are queued and executed when the number of executing jobs falls below the concurrent execution limit. If the field is false, Amazon Transcribe returns a ``LimitExceededException`` exception.

         

        If you specify the ``AllowDeferredExecution`` field, you must specify the ``DataAccessRoleArn`` field.

        

      
      - **DataAccessRoleArn** *(string) --* 

        The Amazon Resource Name (ARN) of a role that has access to the S3 bucket that contains the input files. Amazon Transcribe assumes this role to read queued media files. If you have specified an output S3 bucket for the transcription results, this role should have access to the output bucket as well.

         

        If you specify the ``AllowDeferredExecution`` field, you must specify the ``DataAccessRoleArn`` field.

        

      
    
    :type ContentRedaction: dict
    :param ContentRedaction: 

      An object that contains the request parameters for content redaction.

      

    
      - **RedactionType** *(string) --* **[REQUIRED]** 

        Request parameter that defines the entities to be redacted. The only accepted value is ``PII`` .

        

      
      - **RedactionOutput** *(string) --* **[REQUIRED]** 

        The output transcript file stored in either the default S3 bucket or in a bucket you specify.

         

        When you choose ``redacted`` Amazon Transcribe outputs only the redacted transcript.

         

        When you choose ``redacted_and_unredacted`` Amazon Transcribe outputs both the redacted and unredacted transcripts.

        

      
    
    :type IdentifyLanguage: boolean
    :param IdentifyLanguage: 

      Set this field to ``true`` to enable automatic language identification. Automatic language identification is disabled by default. You receive a ``BadRequestException`` error if you enter a value for a ``LanguageCode`` .

      

    
    :type LanguageOptions: list
    :param LanguageOptions: 

      An object containing a list of languages that might be present in your collection of audio files. Automatic language identification chooses a language that best matches the source audio from that list.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'TranscriptionJob': {
                'TranscriptionJobName': 'string',
                'TranscriptionJobStatus': 'QUEUED'|'IN_PROGRESS'|'FAILED'|'COMPLETED',
                'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                'MediaSampleRateHertz': 123,
                'MediaFormat': 'mp3'|'mp4'|'wav'|'flac'|'ogg'|'amr'|'webm',
                'Media': {
                    'MediaFileUri': 'string'
                },
                'Transcript': {
                    'TranscriptFileUri': 'string',
                    'RedactedTranscriptFileUri': 'string'
                },
                'StartTime': datetime(2015, 1, 1),
                'CreationTime': datetime(2015, 1, 1),
                'CompletionTime': datetime(2015, 1, 1),
                'FailureReason': 'string',
                'Settings': {
                    'VocabularyName': 'string',
                    'ShowSpeakerLabels': True|False,
                    'MaxSpeakerLabels': 123,
                    'ChannelIdentification': True|False,
                    'ShowAlternatives': True|False,
                    'MaxAlternatives': 123,
                    'VocabularyFilterName': 'string',
                    'VocabularyFilterMethod': 'remove'|'mask'|'tag'
                },
                'ModelSettings': {
                    'LanguageModelName': 'string'
                },
                'JobExecutionSettings': {
                    'AllowDeferredExecution': True|False,
                    'DataAccessRoleArn': 'string'
                },
                'ContentRedaction': {
                    'RedactionType': 'PII',
                    'RedactionOutput': 'redacted'|'redacted_and_unredacted'
                },
                'IdentifyLanguage': True|False,
                'LanguageOptions': [
                    'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
                ],
                'IdentifiedLanguageScore': ...
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **TranscriptionJob** *(dict) --* 

          An object containing details of the asynchronous transcription job.

          
          

          - **TranscriptionJobName** *(string) --* 

            The name of the transcription job.

            
          

          - **TranscriptionJobStatus** *(string) --* 

            The status of the transcription job.

            
          

          - **LanguageCode** *(string) --* 

            The language code for the input speech.

            
          

          - **MediaSampleRateHertz** *(integer) --* 

            The sample rate, in Hertz, of the audio track in the input media file. 

            
          

          - **MediaFormat** *(string) --* 

            The format of the input media file.

            
          

          - **Media** *(dict) --* 

            An object that describes the input media for the transcription job.

            
            

            - **MediaFileUri** *(string) --* 

              The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:

               

              For example:

               

              For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

              
        
          

          - **Transcript** *(dict) --* 

            An object that describes the output of the transcription job.

            
            

            - **TranscriptFileUri** *(string) --* 

              The S3 object location of the transcript.

               

              Use this URI to access the transcript. If you specified an S3 bucket in the ``OutputBucketName`` field when you created the job, this is the URI of that bucket. If you chose to store the transcript in Amazon Transcribe, this is a shareable URL that provides secure access to that location.

              
            

            - **RedactedTranscriptFileUri** *(string) --* 

              The S3 object location of the redacted transcript.

               

              Use this URI to access the redacted transcript. If you specified an S3 bucket in the ``OutputBucketName`` field when you created the job, this is the URI of that bucket. If you chose to store the transcript in Amazon Transcribe, this is a shareable URL that provides secure access to that location.

              
        
          

          - **StartTime** *(datetime) --* 

            A timestamp that shows with the job was started processing.

            
          

          - **CreationTime** *(datetime) --* 

            A timestamp that shows when the job was created.

            
          

          - **CompletionTime** *(datetime) --* 

            A timestamp that shows when the job was completed.

            
          

          - **FailureReason** *(string) --* 

            If the ``TranscriptionJobStatus`` field is ``FAILED`` , this field contains information about why the job failed.

             

            The ``FailureReason`` field can contain one of the following values:

             

             
            * ``Unsupported media format`` - The media format specified in the ``MediaFormat`` field of the request isn't valid. See the description of the ``MediaFormat`` field for a list of valid values. 
             
            * ``The media format provided does not match the detected media format`` - The media format of the audio file doesn't match the format specified in the ``MediaFormat`` field in the request. Check the media format of your media file and make sure that the two values match. 
             
            * ``Invalid sample rate for audio file`` - The sample rate specified in the ``MediaSampleRateHertz`` of the request isn't valid. The sample rate must be between 8000 and 48000 Hertz. 
             
            * ``The sample rate provided does not match the detected sample rate`` - The sample rate in the audio file doesn't match the sample rate specified in the ``MediaSampleRateHertz`` field in the request. Check the sample rate of your media file and make sure that the two values match. 
             
            * ``Invalid file size: file size too large`` - The size of your audio file is larger than Amazon Transcribe can process. For more information, see `Limits <https://docs.aws.amazon.com/transcribe/latest/dg/limits-guidelines.html#limits>`__ in the *Amazon Transcribe Developer Guide* . 
             
            * ``Invalid number of channels: number of channels too large`` - Your audio contains more channels than Amazon Transcribe is configured to process. To request additional channels, see `Amazon Transcribe Limits <https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits-amazon-transcribe>`__ in the *Amazon Web Services General Reference* . 
             

            
          

          - **Settings** *(dict) --* 

            Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.

            
            

            - **VocabularyName** *(string) --* 

              The name of a vocabulary to use when processing the transcription job.

              
            

            - **ShowSpeakerLabels** *(boolean) --* 

              Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the ``ShowSpeakerLabels`` field to true, you must also set the maximum number of speaker labels ``MaxSpeakerLabels`` field.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

              
            

            - **MaxSpeakerLabels** *(integer) --* 

              The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers are identified as a single speaker. If you specify the ``MaxSpeakerLabels`` field, you must set the ``ShowSpeakerLabels`` field to true.

              
            

            - **ChannelIdentification** *(boolean) --* 

              Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. 

               

              Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.

               

              You can't set both ``ShowSpeakerLabels`` and ``ChannelIdentification`` in the same request. If you set both, your request returns a ``BadRequestException`` .

              
            

            - **ShowAlternatives** *(boolean) --* 

              Determines whether the transcription contains alternative transcriptions. If you set the ``ShowAlternatives`` field to true, you must also set the maximum number of alternatives to return in the ``MaxAlternatives`` field.

              
            

            - **MaxAlternatives** *(integer) --* 

              The number of alternative transcriptions that the service should return. If you specify the ``MaxAlternatives`` field, you must set the ``ShowAlternatives`` field to true.

              
            

            - **VocabularyFilterName** *(string) --* 

              The name of the vocabulary filter to use when transcribing the audio. The filter that you specify must have the same language code as the transcription job.

              
            

            - **VocabularyFilterMethod** *(string) --* 

              Set to ``mask`` to remove filtered text from the transcript and replace it with three asterisks ("***") as placeholder text. Set to ``remove`` to remove filtered text from the transcript without using placeholder text. Set to ``tag`` to mark the word in the transcription output that matches the vocabulary filter. When you set the filter method to ``tag`` , the words matching your vocabulary filter are not masked or removed.

              
        
          

          - **ModelSettings** *(dict) --* 

            An object containing the details of your custom language model.

            
            

            - **LanguageModelName** *(string) --* 

              The name of your custom language model.

              
        
          

          - **JobExecutionSettings** *(dict) --* 

            Provides information about how a transcription job is executed.

            
            

            - **AllowDeferredExecution** *(boolean) --* 

              Indicates whether a job should be queued by Amazon Transcribe when the concurrent execution limit is exceeded. When the ``AllowDeferredExecution`` field is true, jobs are queued and executed when the number of executing jobs falls below the concurrent execution limit. If the field is false, Amazon Transcribe returns a ``LimitExceededException`` exception.

               

              If you specify the ``AllowDeferredExecution`` field, you must specify the ``DataAccessRoleArn`` field.

              
            

            - **DataAccessRoleArn** *(string) --* 

              The Amazon Resource Name (ARN) of a role that has access to the S3 bucket that contains the input files. Amazon Transcribe assumes this role to read queued media files. If you have specified an output S3 bucket for the transcription results, this role should have access to the output bucket as well.

               

              If you specify the ``AllowDeferredExecution`` field, you must specify the ``DataAccessRoleArn`` field.

              
        
          

          - **ContentRedaction** *(dict) --* 

            An object that describes content redaction settings for the transcription job.

            
            

            - **RedactionType** *(string) --* 

              Request parameter that defines the entities to be redacted. The only accepted value is ``PII`` .

              
            

            - **RedactionOutput** *(string) --* 

              The output transcript file stored in either the default S3 bucket or in a bucket you specify.

               

              When you choose ``redacted`` Amazon Transcribe outputs only the redacted transcript.

               

              When you choose ``redacted_and_unredacted`` Amazon Transcribe outputs both the redacted and unredacted transcripts.

              
        
          

          - **IdentifyLanguage** *(boolean) --* 

            A value that shows if automatic language identification was enabled for a transcription job.

            
          

          - **LanguageOptions** *(list) --* 

            An object that shows the optional array of languages inputted for transcription jobs with automatic language identification enabled.

            
            

            - *(string) --* 
        
          

          - **IdentifiedLanguageScore** *(float) --* 

            A value between zero and one that Amazon Transcribe assigned to the language that it identified in the source audio. Larger values indicate that Amazon Transcribe has higher confidence in the language it identified.

            
      
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: update_medical_vocabulary(**kwargs)

    

    Updates a vocabulary with new values that you provide in a different text file from the one you used to create the vocabulary. The ``UpdateMedicalVocabulary`` operation overwrites all of the existing information with the values that you provide in the request.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/UpdateMedicalVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.update_medical_vocabulary(
          VocabularyName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          VocabularyFileUri='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary to update. The name is case sensitive. If you try to update a vocabulary with the same name as a vocabulary you've already made, you get a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language code of the language used for the entries in the updated vocabulary. US English (en-US) is the only valid language code in Amazon Transcribe Medical.

      

    
    :type VocabularyFileUri: string
    :param VocabularyFileUri: 

      The location in Amazon S3 of the text file that contains the you use for your custom vocabulary. The URI must be in the same AWS Region as the resource that you are calling. The following is the format for a URI:

       

       ``https://s3.<aws-region>.amazonaws.com/<bucket-name>/<keyprefix>/<objectkey>``  

       

      For example:

       

       ``https://s3.us-east-1.amazonaws.com/AWSDOC-EXAMPLE-BUCKET/vocab.txt``  

       

      For more information about Amazon S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

       

      For more information about custom vocabularies in Amazon Transcribe Medical, see `Medical Custom Vocabularies <http://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary>`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'LastModifiedTime': datetime(2015, 1, 1),
            'VocabularyState': 'PENDING'|'READY'|'FAILED'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyName** *(string) --* 

          The name of the updated vocabulary.

          
        

        - **LanguageCode** *(string) --* 

          The language code for the language of the text file used to update the custom vocabulary. US English (en-US) is the only language supported in Amazon Transcribe Medical.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary was updated.

          
        

        - **VocabularyState** *(string) --* 

          The processing state of the update to the vocabulary. When the ``VocabularyState`` field is ``READY`` , the vocabulary is ready to be used in a ``StartMedicalTranscriptionJob`` request.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: update_vocabulary(**kwargs)

    

    Updates an existing vocabulary with new values. The ``UpdateVocabulary`` operation overwrites all of the existing information with the values that you provide in the request. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/UpdateVocabulary>`_    


    **Request Syntax** 
    ::

      response = client.update_vocabulary(
          VocabularyName='string',
          LanguageCode='af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
          Phrases=[
              'string',
          ],
          VocabularyFileUri='string'
      )
    :type VocabularyName: string
    :param VocabularyName: **[REQUIRED]** 

      The name of the vocabulary to update. The name is case sensitive. If you try to update a vocabulary with the same name as a previous vocabulary you will receive a ``ConflictException`` error.

      

    
    :type LanguageCode: string
    :param LanguageCode: **[REQUIRED]** 

      The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see  what-is-transcribe .

      

    
    :type Phrases: list
    :param Phrases: 

      An array of strings containing the vocabulary entries.

      

    
      - *(string) --* 

      
  
    :type VocabularyFileUri: string
    :param VocabularyFileUri: 

      The S3 location of the text file that contains the definition of the custom vocabulary. The URI must be in the same region as the API endpoint that you are calling. The general form is 

       

      For example:

       

      For more information about S3 object names, see `Object Keys <http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys>`__ in the *Amazon S3 Developer Guide* .

       

      For more information about custom vocabularies, see `Custom Vocabularies <http://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary>`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'LastModifiedTime': datetime(2015, 1, 1),
            'VocabularyState': 'PENDING'|'READY'|'FAILED'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyName** *(string) --* 

          The name of the vocabulary that was updated.

          
        

        - **LanguageCode** *(string) --* 

          The language code of the vocabulary entries.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary was updated.

          
        

        - **VocabularyState** *(string) --* 

          The processing state of the vocabulary. When the ``VocabularyState`` field contains ``READY`` the vocabulary is ready to be used in a ``StartTranscriptionJob`` request.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    
    *     :py:class:`TranscribeService.Client.exceptions.ConflictException`

    

  .. py:method:: update_vocabulary_filter(**kwargs)

    

    Updates a vocabulary filter with a new list of filtered words.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/transcribe-2017-10-26/UpdateVocabularyFilter>`_    


    **Request Syntax** 
    ::

      response = client.update_vocabulary_filter(
          VocabularyFilterName='string',
          Words=[
              'string',
          ],
          VocabularyFilterFileUri='string'
      )
    :type VocabularyFilterName: string
    :param VocabularyFilterName: **[REQUIRED]** 

      The name of the vocabulary filter to update. If you try to update a vocabulary filter with the same name as another vocabulary filter, you get a ``ConflictException`` error.

      

    
    :type Words: list
    :param Words: 

      The words to use in the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see `Character Sets for Custom Vocabularies <https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets>`__ .

       

      If you provide a list of words in the ``Words`` parameter, you can't use the ``VocabularyFilterFileUri`` parameter.

      

    
      - *(string) --* 

      
  
    :type VocabularyFilterFileUri: string
    :param VocabularyFilterFileUri: 

      The Amazon S3 location of a text file used as input to create the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see `Character Sets for Custom Vocabularies <https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets>`__ .

       

      The specified file must be less than 50 KB of UTF-8 characters.

       

      If you provide the location of a list of words in the ``VocabularyFilterFileUri`` parameter, you can't use the ``Words`` parameter.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'VocabularyFilterName': 'string',
            'LanguageCode': 'af-ZA'|'ar-AE'|'ar-SA'|'cy-GB'|'da-DK'|'de-CH'|'de-DE'|'en-AB'|'en-AU'|'en-GB'|'en-IE'|'en-IN'|'en-US'|'en-WL'|'es-ES'|'es-US'|'fa-IR'|'fr-CA'|'fr-FR'|'ga-IE'|'gd-GB'|'he-IL'|'hi-IN'|'id-ID'|'it-IT'|'ja-JP'|'ko-KR'|'ms-MY'|'nl-NL'|'pt-BR'|'pt-PT'|'ru-RU'|'ta-IN'|'te-IN'|'tr-TR'|'zh-CN',
            'LastModifiedTime': datetime(2015, 1, 1)
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **VocabularyFilterName** *(string) --* 

          The name of the updated vocabulary filter.

          
        

        - **LanguageCode** *(string) --* 

          The language code of the words in the vocabulary filter.

          
        

        - **LastModifiedTime** *(datetime) --* 

          The date and time that the vocabulary filter was updated.

          
    
    **Exceptions** 
    
    *     :py:class:`TranscribeService.Client.exceptions.BadRequestException`

    
    *     :py:class:`TranscribeService.Client.exceptions.LimitExceededException`

    
    *     :py:class:`TranscribeService.Client.exceptions.InternalFailureException`

    
    *     :py:class:`TranscribeService.Client.exceptions.NotFoundException`

    

==========
Paginators
==========


The available paginators are:
