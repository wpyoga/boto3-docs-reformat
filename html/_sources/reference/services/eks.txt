

.. _https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html: https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html
.. _https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html
.. _https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html
.. _https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html: https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html


***
EKS
***

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: EKS.Client

  A low-level client representing Amazon Elastic Kubernetes Service (EKS)
  

  Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. 

   

  Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.

  ::

    
    import boto3
    
    client = boto3.client('eks')

  
  These are the available methods:
  
  *   :py:meth:`~EKS.Client.associate_encryption_config`

  
  *   :py:meth:`~EKS.Client.associate_identity_provider_config`

  
  *   :py:meth:`~EKS.Client.can_paginate`

  
  *   :py:meth:`~EKS.Client.create_addon`

  
  *   :py:meth:`~EKS.Client.create_cluster`

  
  *   :py:meth:`~EKS.Client.create_fargate_profile`

  
  *   :py:meth:`~EKS.Client.create_nodegroup`

  
  *   :py:meth:`~EKS.Client.delete_addon`

  
  *   :py:meth:`~EKS.Client.delete_cluster`

  
  *   :py:meth:`~EKS.Client.delete_fargate_profile`

  
  *   :py:meth:`~EKS.Client.delete_nodegroup`

  
  *   :py:meth:`~EKS.Client.describe_addon`

  
  *   :py:meth:`~EKS.Client.describe_addon_versions`

  
  *   :py:meth:`~EKS.Client.describe_cluster`

  
  *   :py:meth:`~EKS.Client.describe_fargate_profile`

  
  *   :py:meth:`~EKS.Client.describe_identity_provider_config`

  
  *   :py:meth:`~EKS.Client.describe_nodegroup`

  
  *   :py:meth:`~EKS.Client.describe_update`

  
  *   :py:meth:`~EKS.Client.disassociate_identity_provider_config`

  
  *   :py:meth:`~EKS.Client.generate_presigned_url`

  
  *   :py:meth:`~EKS.Client.get_paginator`

  
  *   :py:meth:`~EKS.Client.get_waiter`

  
  *   :py:meth:`~EKS.Client.list_addons`

  
  *   :py:meth:`~EKS.Client.list_clusters`

  
  *   :py:meth:`~EKS.Client.list_fargate_profiles`

  
  *   :py:meth:`~EKS.Client.list_identity_provider_configs`

  
  *   :py:meth:`~EKS.Client.list_nodegroups`

  
  *   :py:meth:`~EKS.Client.list_tags_for_resource`

  
  *   :py:meth:`~EKS.Client.list_updates`

  
  *   :py:meth:`~EKS.Client.tag_resource`

  
  *   :py:meth:`~EKS.Client.untag_resource`

  
  *   :py:meth:`~EKS.Client.update_addon`

  
  *   :py:meth:`~EKS.Client.update_cluster_config`

  
  *   :py:meth:`~EKS.Client.update_cluster_version`

  
  *   :py:meth:`~EKS.Client.update_nodegroup_config`

  
  *   :py:meth:`~EKS.Client.update_nodegroup_version`

  

  .. py:method:: associate_encryption_config(**kwargs)

    

    Associate encryption configuration to an existing cluster.

     

    You can use this API to enable encryption on existing clusters which do not have encryption already enabled. This allows you to implement a defense-in-depth security strategy without migrating applications to new Amazon EKS clusters.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateEncryptionConfig>`_    


    **Request Syntax** 
    ::

      response = client.associate_encryption_config(
          clusterName='string',
          encryptionConfig=[
              {
                  'resources': [
                      'string',
                  ],
                  'provider': {
                      'keyArn': 'string'
                  }
              },
          ],
          clientRequestToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster that you are associating with encryption configuration.

      

    
    :type encryptionConfig: list
    :param encryptionConfig: **[REQUIRED]** 

      The configuration you are using for encryption.

      

    
      - *(dict) --* 

        The encryption configuration for the cluster.

        

      
        - **resources** *(list) --* 

          Specifies the resources to be encrypted. The only supported value is "secrets".

          

        
          - *(string) --* 

          
      
        - **provider** *(dict) --* 

          Key Management Service (KMS) key. Either the ARN or the alias can be used.

          

        
          - **keyArn** *(string) --* 

            Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see `Allowing Users in Other Accounts to Use a KMS key <https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html>`__ in the *Key Management Service Developer Guide* .

            

          
        
      
  
    :type clientRequestToken: string
    :param clientRequestToken: 

      The client request token you are using with the encryption configuration.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

  .. py:method:: associate_identity_provider_config(**kwargs)

    

    Associate an identity provider configuration to a cluster.

     

    If you want to authenticate identities using an identity provider, you can create an identity provider configuration and associate it to your cluster. After configuring authentication to your cluster you can create Kubernetes ``roles`` and ``clusterroles`` to assign permissions to the roles, and then bind the roles to the identities using Kubernetes ``rolebindings`` and ``clusterrolebindings`` . For more information see `Using RBAC Authorization <https://kubernetes.io/docs/reference/access-authn-authz/rbac/>`__ in the Kubernetes documentation.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/AssociateIdentityProviderConfig>`_    


    **Request Syntax** 
    ::

      response = client.associate_identity_provider_config(
          clusterName='string',
          oidc={
              'identityProviderConfigName': 'string',
              'issuerUrl': 'string',
              'clientId': 'string',
              'usernameClaim': 'string',
              'usernamePrefix': 'string',
              'groupsClaim': 'string',
              'groupsPrefix': 'string',
              'requiredClaims': {
                  'string': 'string'
              }
          },
          tags={
              'string': 'string'
          },
          clientRequestToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster to associate the configuration to.

      

    
    :type oidc: dict
    :param oidc: **[REQUIRED]** 

      An object that represents an OpenID Connect (OIDC) identity provider configuration.

      

    
      - **identityProviderConfigName** *(string) --* **[REQUIRED]** 

        The name of the OIDC provider configuration.

        

      
      - **issuerUrl** *(string) --* **[REQUIRED]** 

        The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens. The URL must begin with ``https://`` and should correspond to the ``iss`` claim in the provider's OIDC ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like ``https://server.example.org`` or ``https://example.com`` . This URL should point to the level below ``.well-known/openid-configuration`` and must be publicly accessible over the internet.

        

      
      - **clientId** *(string) --* **[REQUIRED]** 

        This is also known as *audience* . The ID for the client application that makes authentication requests to the OpenID identity provider.

        

      
      - **usernameClaim** *(string) --* 

        The JSON Web Token (JWT) claim to use as the username. The default is ``sub`` , which is expected to be a unique identifier of the end user. You can choose other claims, such as ``email`` or ``name`` , depending on the OpenID identity provider. Claims other than ``email`` are prefixed with the issuer URL to prevent naming clashes with other plug-ins.

        

      
      - **usernamePrefix** *(string) --* 

        The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and ``username`` is a value other than ``email`` , the prefix defaults to ``issuerurl#`` . You can use the value ``-`` to disable all prefixing.

        

      
      - **groupsClaim** *(string) --* 

        The JWT claim that the provider uses to return your groups.

        

      
      - **groupsPrefix** *(string) --* 

        The prefix that is prepended to group claims to prevent clashes with existing names (such as ``system:`` groups). For example, the value``oidc:`` will create group names like ``oidc:engineering`` and ``oidc:infra`` .

        

      
      - **requiredClaims** *(dict) --* 

        The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value. For the maximum number of claims that you can require, see `Amazon EKS service quotas <https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html>`__ in the *Amazon EKS User Guide* .

        

      
        - *(string) --* 

        
          - *(string) --* 

          
    
  
    
    :type tags: dict
    :param tags: 

      The metadata to apply to the configuration to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            },
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
        

        - **tags** *(dict) --* 

          The tags for the resource.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: create_addon(**kwargs)

    

    Creates an Amazon EKS add-on.

     

    Amazon EKS add-ons help to automate the provisioning and lifecycle management of common operational software for Amazon EKS clusters. Amazon EKS add-ons can only be used with Amazon EKS clusters running version 1.18 with platform version ``eks.3`` or later because add-ons rely on the Server-side Apply Kubernetes feature, which is only available in Kubernetes 1.18 and later.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateAddon>`_    


    **Request Syntax** 
    ::

      response = client.create_addon(
          clusterName='string',
          addonName='string',
          addonVersion='string',
          serviceAccountRoleArn='string',
          resolveConflicts='OVERWRITE'|'NONE',
          clientRequestToken='string',
          tags={
              'string': 'string'
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster to create the add-on for.

      

    
    :type addonName: string
    :param addonName: **[REQUIRED]** 

      The name of the add-on. The name must match one of the names returned by ` ``DescribeAddonVersions`` https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html`__ .

      

    
    :type addonVersion: string
    :param addonVersion: 

      The version of the add-on. The version must match one of the versions returned by ` ``DescribeAddonVersions`` https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html`__ .

      

    
    :type serviceAccountRoleArn: string
    :param serviceAccountRoleArn: 

      The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see `Amazon EKS node IAM role <https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html>`__ in the *Amazon EKS User Guide* .

       

      .. note::

         

        To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see `Enabling IAM roles for service accounts on your cluster <https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html>`__ in the *Amazon EKS User Guide* .

         

      

    
    :type resolveConflicts: string
    :param resolveConflicts: 

      How to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on.

      

    
    :type clientRequestToken: string
    :param clientRequestToken: 

      A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    :type tags: dict
    :param tags: 

      The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. 

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addon': {
                'addonName': 'string',
                'clusterName': 'string',
                'status': 'CREATING'|'ACTIVE'|'CREATE_FAILED'|'UPDATING'|'DELETING'|'DELETE_FAILED'|'DEGRADED',
                'addonVersion': 'string',
                'health': {
                    'issues': [
                        {
                            'code': 'AccessDenied'|'InternalFailure'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                            'message': 'string',
                            'resourceIds': [
                                'string',
                            ]
                        },
                    ]
                },
                'addonArn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'modifiedAt': datetime(2015, 1, 1),
                'serviceAccountRoleArn': 'string',
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addon** *(dict) --* 

          An Amazon EKS add-on.

          
          

          - **addonName** *(string) --* 

            The name of the add-on.

            
          

          - **clusterName** *(string) --* 

            The name of the cluster.

            
          

          - **status** *(string) --* 

            The status of the add-on.

            
          

          - **addonVersion** *(string) --* 

            The version of the add-on.

            
          

          - **health** *(dict) --* 

            An object that represents the health of the add-on.

            
            

            - **issues** *(list) --* 

              An object that represents the add-on's health issues.

              
              

              - *(dict) --* 

                An issue related to an add-on.

                
                

                - **code** *(string) --* 

                  A code that describes the type of issue.

                  
                

                - **message** *(string) --* 

                  A message that provides details about the issue and what might cause it.

                  
                

                - **resourceIds** *(list) --* 

                  The resource IDs of the issue.

                  
                  

                  - *(string) --* 
              
            
          
        
          

          - **addonArn** *(string) --* 

            The Amazon Resource Name (ARN) of the add-on.

            
          

          - **createdAt** *(datetime) --* 

            The date and time that the add-on was created.

            
          

          - **modifiedAt** *(datetime) --* 

            The date and time that the add-on was last modified.

            
          

          - **serviceAccountRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the IAM role that is bound to the Kubernetes service account used by the add-on.

            
          

          - **tags** *(dict) --* 

            The metadata that you apply to the add-on to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Add-on tags do not propagate to any other resources associated with the cluster. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    

  .. py:method:: create_cluster(**kwargs)

    

    Creates an Amazon EKS control plane. 

     

    The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as ``etcd`` and the API server. The control plane runs in an account managed by Amazon Web Services, and the Kubernetes API is exposed via the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single-tenant and unique and runs on its own set of Amazon EC2 instances.

     

    The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support ``kubectl exec`` , ``logs`` , and ``proxy`` data flows).

     

    Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's control plane via the Kubernetes API server endpoint and a certificate file that is created for your cluster.

     

    Cluster creation typically takes several minutes. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see `Managing Cluster Authentication <https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html>`__ and `Launching Amazon EKS nodes <https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html>`__ in the *Amazon EKS User Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster>`_    


    **Request Syntax** 
    ::

      response = client.create_cluster(
          name='string',
          version='string',
          roleArn='string',
          resourcesVpcConfig={
              'subnetIds': [
                  'string',
              ],
              'securityGroupIds': [
                  'string',
              ],
              'endpointPublicAccess': True|False,
              'endpointPrivateAccess': True|False,
              'publicAccessCidrs': [
                  'string',
              ]
          },
          kubernetesNetworkConfig={
              'serviceIpv4Cidr': 'string'
          },
          logging={
              'clusterLogging': [
                  {
                      'types': [
                          'api'|'audit'|'authenticator'|'controllerManager'|'scheduler',
                      ],
                      'enabled': True|False
                  },
              ]
          },
          clientRequestToken='string',
          tags={
              'string': 'string'
          },
          encryptionConfig=[
              {
                  'resources': [
                      'string',
                  ],
                  'provider': {
                      'keyArn': 'string'
                  }
              },
          ]
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The unique name to give to your cluster.

      

    
    :type version: string
    :param version: 

      The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.

      

    
    :type roleArn: string
    :param roleArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see `Amazon EKS Service IAM Role <https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html>`__ in the * *Amazon EKS User Guide* * .

      

    
    :type resourcesVpcConfig: dict
    :param resourcesVpcConfig: **[REQUIRED]** 

      The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see `Cluster VPC Considerations <https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html>`__ and `Cluster Security Group Considerations <https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the *Amazon EKS User Guide* . You must specify at least two subnets. You can specify up to five security groups, but we recommend that you use a dedicated security group for your cluster control plane.

      

    
      - **subnetIds** *(list) --* 

        Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.

        

      
        - *(string) --* 

        
    
      - **securityGroupIds** *(list) --* 

        Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use that allow communication between your nodes and the Kubernetes control plane. If you don't specify any security groups, then familiarize yourself with the difference between Amazon EKS defaults for clusters deployed with Kubernetes:

         

         
        * 1.14 Amazon EKS platform version ``eks.2`` and earlier 
         
        * 1.14 Amazon EKS platform version ``eks.3`` and later  
         

         

        For more information, see `Amazon EKS security group considerations <https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the * *Amazon EKS User Guide* * .

        

      
        - *(string) --* 

        
    
      - **endpointPublicAccess** *(boolean) --* 

        Set this value to ``false`` to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is ``true`` , which enables public access for your Kubernetes API server. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

        

      
      - **endpointPrivateAccess** *(boolean) --* 

        Set this value to ``true`` to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is ``false`` , which disables private access for your Kubernetes API server. If you disable private access and you have nodes or Fargate pods in the cluster, then ensure that ``publicAccessCidrs`` includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

        

      
      - **publicAccessCidrs** *(list) --* 

        The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is ``0.0.0.0/0`` . If you've disabled private endpoint access and you have nodes or Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

        

      
        - *(string) --* 

        
    
    
    :type kubernetesNetworkConfig: dict
    :param kubernetesNetworkConfig: 

      The Kubernetes network configuration for the cluster.

      

    
      - **serviceIpv4Cidr** *(string) --* 

        The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. The block must meet the following requirements:

         

         
        * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0.0/12, or 192.168.0.0/16. 
         
        * Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC. 
         
        * Between /24 and /12. 
         

         

        .. warning::

           

          You can only specify a custom CIDR block when you create a cluster and can't change this value once the cluster is created.

           

        

      
    
    :type logging: dict
    :param logging: 

      Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see `Amazon EKS Cluster control plane logs <https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html>`__ in the * *Amazon EKS User Guide* * .

       

      .. note::

         

        CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see `CloudWatch Pricing <http://aws.amazon.com/cloudwatch/pricing/>`__ .

         

      

    
      - **clusterLogging** *(list) --* 

        The cluster control plane logging configuration for your cluster.

        

      
        - *(dict) --* 

          An object representing the enabled or disabled Kubernetes control plane logs for your cluster.

          

        
          - **types** *(list) --* 

            The available cluster control plane log types.

            

          
            - *(string) --* 

            
        
          - **enabled** *(boolean) --* 

            If a log type is enabled, that log type exports its control plane logs to CloudWatch Logs. If a log type isn't enabled, that log type doesn't export its control plane logs. Each individual log type can be enabled or disabled independently.

            

          
        
    
    
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    :type tags: dict
    :param tags: 

      The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type encryptionConfig: list
    :param encryptionConfig: 

      The encryption configuration for the cluster.

      

    
      - *(dict) --* 

        The encryption configuration for the cluster.

        

      
        - **resources** *(list) --* 

          Specifies the resources to be encrypted. The only supported value is "secrets".

          

        
          - *(string) --* 

          
      
        - **provider** *(dict) --* 

          Key Management Service (KMS) key. Either the ARN or the alias can be used.

          

        
          - **keyArn** *(string) --* 

            Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see `Allowing Users in Other Accounts to Use a KMS key <https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html>`__ in the *Key Management Service Developer Guide* .

            

          
        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'cluster': {
                'name': 'string',
                'arn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'version': 'string',
                'endpoint': 'string',
                'roleArn': 'string',
                'resourcesVpcConfig': {
                    'subnetIds': [
                        'string',
                    ],
                    'securityGroupIds': [
                        'string',
                    ],
                    'clusterSecurityGroupId': 'string',
                    'vpcId': 'string',
                    'endpointPublicAccess': True|False,
                    'endpointPrivateAccess': True|False,
                    'publicAccessCidrs': [
                        'string',
                    ]
                },
                'kubernetesNetworkConfig': {
                    'serviceIpv4Cidr': 'string'
                },
                'logging': {
                    'clusterLogging': [
                        {
                            'types': [
                                'api'|'audit'|'authenticator'|'controllerManager'|'scheduler',
                            ],
                            'enabled': True|False
                        },
                    ]
                },
                'identity': {
                    'oidc': {
                        'issuer': 'string'
                    }
                },
                'status': 'CREATING'|'ACTIVE'|'DELETING'|'FAILED'|'UPDATING',
                'certificateAuthority': {
                    'data': 'string'
                },
                'clientRequestToken': 'string',
                'platformVersion': 'string',
                'tags': {
                    'string': 'string'
                },
                'encryptionConfig': [
                    {
                        'resources': [
                            'string',
                        ],
                        'provider': {
                            'keyArn': 'string'
                        }
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **cluster** *(dict) --* 

          The full description of your new cluster.

          
          

          - **name** *(string) --* 

            The name of the cluster.

            
          

          - **arn** *(string) --* 

            The Amazon Resource Name (ARN) of the cluster.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the cluster was created.

            
          

          - **version** *(string) --* 

            The Kubernetes server version for the cluster.

            
          

          - **endpoint** *(string) --* 

            The endpoint for your Kubernetes API server.

            
          

          - **roleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.

            
          

          - **resourcesVpcConfig** *(dict) --* 

            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see `Cluster VPC Considerations <https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html>`__ and `Cluster Security Group Considerations <https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the *Amazon EKS User Guide* .

            
            

            - **subnetIds** *(list) --* 

              The subnets associated with your cluster.

              
              

              - *(string) --* 
          
            

            - **securityGroupIds** *(list) --* 

              The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.

              
              

              - *(string) --* 
          
            

            - **clusterSecurityGroupId** *(string) --* 

              The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.

              
            

            - **vpcId** *(string) --* 

              The VPC associated with your cluster.

              
            

            - **endpointPublicAccess** *(boolean) --* 

              This parameter indicates whether the Amazon EKS public API server endpoint is enabled. If the Amazon EKS public API server endpoint is disabled, your cluster's Kubernetes API server can only receive requests that originate from within the cluster VPC.

              
            

            - **endpointPrivateAccess** *(boolean) --* 

              This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that ``publicAccessCidrs`` includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

              
            

            - **publicAccessCidrs** *(list) --* 

              The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the listed CIDR blocks is denied. The default value is ``0.0.0.0/0`` . If you've disabled private endpoint access and you have nodes or Fargate pods in the cluster, then ensure that the necessary CIDR blocks are listed. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

              
              

              - *(string) --* 
          
        
          

          - **kubernetesNetworkConfig** *(dict) --* 

            The Kubernetes network configuration for the cluster.

            
            

            - **serviceIpv4Cidr** *(string) --* 

              The CIDR block that Kubernetes service IP addresses are assigned from. If you didn't specify a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. If this was specified, then it was specified when the cluster was created and it cannot be changed.

              
        
          

          - **logging** *(dict) --* 

            The logging configuration for your cluster.

            
            

            - **clusterLogging** *(list) --* 

              The cluster control plane logging configuration for your cluster.

              
              

              - *(dict) --* 

                An object representing the enabled or disabled Kubernetes control plane logs for your cluster.

                
                

                - **types** *(list) --* 

                  The available cluster control plane log types.

                  
                  

                  - *(string) --* 
              
                

                - **enabled** *(boolean) --* 

                  If a log type is enabled, that log type exports its control plane logs to CloudWatch Logs. If a log type isn't enabled, that log type doesn't export its control plane logs. Each individual log type can be enabled or disabled independently.

                  
            
          
        
          

          - **identity** *(dict) --* 

            The identity provider information for the cluster.

            
            

            - **oidc** *(dict) --* 

              An object representing the `OpenID Connect <https://openid.net/connect/>`__ identity provider information.

              
              

              - **issuer** *(string) --* 

                The issuer URL for the OIDC identity provider.

                
          
        
          

          - **status** *(string) --* 

            The current status of the cluster.

            
          

          - **certificateAuthority** *(dict) --* 

            The ``certificate-authority-data`` for your cluster.

            
            

            - **data** *(string) --* 

              The Base64-encoded certificate data required to communicate with your cluster. Add this to the ``certificate-authority-data`` section of the ``kubeconfig`` file for your cluster.

              
        
          

          - **clientRequestToken** *(string) --* 

            Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

            
          

          - **platformVersion** *(string) --* 

            The platform version of your Amazon EKS cluster. For more information, see `Platform Versions <https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html>`__ in the * *Amazon EKS User Guide* * .

            
          

          - **tags** *(dict) --* 

            The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags do not propagate to any other resources associated with the cluster. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **encryptionConfig** *(list) --* 

            The encryption configuration for the cluster.

            
            

            - *(dict) --* 

              The encryption configuration for the cluster.

              
              

              - **resources** *(list) --* 

                Specifies the resources to be encrypted. The only supported value is "secrets".

                
                

                - *(string) --* 
            
              

              - **provider** *(dict) --* 

                Key Management Service (KMS) key. Either the ARN or the alias can be used.

                
                

                - **keyArn** *(string) --* 

                  Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see `Allowing Users in Other Accounts to Use a KMS key <https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html>`__ in the *Key Management Service Developer Guide* .

                  
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`EKS.Client.exceptions.UnsupportedAvailabilityZoneException`

    

    **Examples** 

    The following example creates an Amazon EKS cluster called prod.
    ::

      response = client.create_cluster(
          version='1.10',
          name='prod',
          clientRequestToken='1d2129a1-3d38-460a-9756-e5b91fddb951',
          resourcesVpcConfig={
              'securityGroupIds': [
                  'sg-6979fe18',
              ],
              'subnetIds': [
                  'subnet-6782e71e',
                  'subnet-e7e761ac',
              ],
          },
          roleArn='arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI',
      )
      
      print(response)

    
    Expected Output:
    ::

      {
          'ResponseMetadata': {
              '...': '...',
          },
      }

    

  .. py:method:: create_fargate_profile(**kwargs)

    

    Creates an Fargate profile for your Amazon EKS cluster. You must have at least one Fargate profile in a cluster to be able to run pods on Fargate.

     

    The Fargate profile allows an administrator to declare which pods run on Fargate and specify which pods run on which Fargate profile. This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and labels. A namespace is required for every selector. The label field consists of multiple optional key-value pairs. Pods that match the selectors are scheduled on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is run on Fargate.

     

    When you create a Fargate profile, you must specify a pod execution role to use with the pods that are scheduled with the profile. This role is added to the cluster's Kubernetes `Role Based Access Control <https://kubernetes.io/docs/admin/authorization/rbac/>`__ (RBAC) for authorization so that the ``kubelet`` that is running on the Fargate infrastructure can register with your Amazon EKS cluster so that it can appear in your cluster as a node. The pod execution role also provides IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image repositories. For more information, see `Pod Execution Role <https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html>`__ in the *Amazon EKS User Guide* .

     

    Fargate profiles are immutable. However, you can create a new updated profile to replace an existing profile and then delete the original after the updated profile has finished creating.

     

    If any Fargate profiles in a cluster are in the ``DELETING`` status, you must wait for that Fargate profile to finish deleting before you can create any other profiles in that cluster.

     

    For more information, see `Fargate Profile <https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html>`__ in the *Amazon EKS User Guide* .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateFargateProfile>`_    


    **Request Syntax** 
    ::

      response = client.create_fargate_profile(
          fargateProfileName='string',
          clusterName='string',
          podExecutionRoleArn='string',
          subnets=[
              'string',
          ],
          selectors=[
              {
                  'namespace': 'string',
                  'labels': {
                      'string': 'string'
                  }
              },
          ],
          clientRequestToken='string',
          tags={
              'string': 'string'
          }
      )
    :type fargateProfileName: string
    :param fargateProfileName: **[REQUIRED]** 

      The name of the Fargate profile.

      

    
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster to apply the Fargate profile to.

      

    
    :type podExecutionRoleArn: string
    :param podExecutionRoleArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see `Pod Execution Role <https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html>`__ in the *Amazon EKS User Guide* .

      

    
    :type subnets: list
    :param subnets: 

      The IDs of subnets to launch your pods into. At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.

      

    
      - *(string) --* 

      
  
    :type selectors: list
    :param selectors: 

      The selectors to match for pods to use this Fargate profile. Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.

      

    
      - *(dict) --* 

        An object representing an Fargate profile selector.

        

      
        - **namespace** *(string) --* 

          The Kubernetes namespace that the selector should match.

          

        
        - **labels** *(dict) --* 

          The Kubernetes labels that the selector should match. A pod must contain all of the labels that are specified in the selector for it to be considered a match.

          

        
          - *(string) --* 

          
            - *(string) --* 

            
      
    
      
  
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    :type tags: dict
    :param tags: 

      The metadata to apply to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'fargateProfile': {
                'fargateProfileName': 'string',
                'fargateProfileArn': 'string',
                'clusterName': 'string',
                'createdAt': datetime(2015, 1, 1),
                'podExecutionRoleArn': 'string',
                'subnets': [
                    'string',
                ],
                'selectors': [
                    {
                        'namespace': 'string',
                        'labels': {
                            'string': 'string'
                        }
                    },
                ],
                'status': 'CREATING'|'ACTIVE'|'DELETING'|'CREATE_FAILED'|'DELETE_FAILED',
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **fargateProfile** *(dict) --* 

          The full description of your new Fargate profile.

          
          

          - **fargateProfileName** *(string) --* 

            The name of the Fargate profile.

            
          

          - **fargateProfileArn** *(string) --* 

            The full Amazon Resource Name (ARN) of the Fargate profile.

            
          

          - **clusterName** *(string) --* 

            The name of the Amazon EKS cluster that the Fargate profile belongs to.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the Fargate profile was created.

            
          

          - **podExecutionRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. For more information, see `Pod Execution Role <https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html>`__ in the *Amazon EKS User Guide* .

            
          

          - **subnets** *(list) --* 

            The IDs of subnets to launch pods into.

            
            

            - *(string) --* 
        
          

          - **selectors** *(list) --* 

            The selectors to match for pods to use this Fargate profile.

            
            

            - *(dict) --* 

              An object representing an Fargate profile selector.

              
              

              - **namespace** *(string) --* 

                The Kubernetes namespace that the selector should match.

                
              

              - **labels** *(dict) --* 

                The Kubernetes labels that the selector should match. A pod must contain all of the labels that are specified in the selector for it to be considered a match.

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
          
        
          

          - **status** *(string) --* 

            The current status of the Fargate profile.

            
          

          - **tags** *(dict) --* 

            The metadata applied to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`EKS.Client.exceptions.UnsupportedAvailabilityZoneException`

    

  .. py:method:: create_nodegroup(**kwargs)

    

    Creates a managed node group for an Amazon EKS cluster. You can only create a node group for your cluster that is equal to the current Kubernetes version for the cluster. All node groups are created with the latest AMI release version for the respective minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch template. For more information about using launch templates, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ .

     

    An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster. Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For more information, see `Managed Node Groups <https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html>`__ in the *Amazon EKS User Guide* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateNodegroup>`_    


    **Request Syntax** 
    ::

      response = client.create_nodegroup(
          clusterName='string',
          nodegroupName='string',
          scalingConfig={
              'minSize': 123,
              'maxSize': 123,
              'desiredSize': 123
          },
          diskSize=123,
          subnets=[
              'string',
          ],
          instanceTypes=[
              'string',
          ],
          amiType='AL2_x86_64'|'AL2_x86_64_GPU'|'AL2_ARM_64'|'CUSTOM',
          remoteAccess={
              'ec2SshKey': 'string',
              'sourceSecurityGroups': [
                  'string',
              ]
          },
          nodeRole='string',
          labels={
              'string': 'string'
          },
          taints=[
              {
                  'key': 'string',
                  'value': 'string',
                  'effect': 'NO_SCHEDULE'|'NO_EXECUTE'|'PREFER_NO_SCHEDULE'
              },
          ],
          tags={
              'string': 'string'
          },
          clientRequestToken='string',
          launchTemplate={
              'name': 'string',
              'version': 'string',
              'id': 'string'
          },
          updateConfig={
              'maxUnavailable': 123,
              'maxUnavailablePercentage': 123
          },
          capacityType='ON_DEMAND'|'SPOT',
          version='string',
          releaseVersion='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster to create the node group in.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The unique name to give your node group.

      

    
    :type scalingConfig: dict
    :param scalingConfig: 

      The scaling configuration details for the Auto Scaling group that is created for your node group.

      

    
      - **minSize** *(integer) --* 

        The minimum number of nodes that the managed node group can scale in to.

        

      
      - **maxSize** *(integer) --* 

        The maximum number of nodes that the managed node group can scale out to. For information about the maximum number that you can specify, see `Amazon EKS service quotas <https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html>`__ in the *Amazon EKS User Guide* .

        

      
      - **desiredSize** *(integer) --* 

        The current number of nodes that the managed node group should maintain.

        

      
    
    :type diskSize: integer
    :param diskSize: 

      The root device disk size (in GiB) for your node group instances. The default disk size is 20 GiB. If you specify ``launchTemplate`` , then don't specify ``diskSize`` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    :type subnets: list
    :param subnets: **[REQUIRED]** 

      The subnets to use for the Auto Scaling group that is created for your node group. If you specify ``launchTemplate`` , then don't specify ` ``SubnetId`` https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html`__ in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
      - *(string) --* 

      
  
    :type instanceTypes: list
    :param instanceTypes: 

      Specify the instance types for a node group. If you specify a GPU instance type, be sure to specify ``AL2_x86_64_GPU`` with the ``amiType`` parameter. If you specify ``launchTemplate`` , then you can specify zero or one instance type in your launch template *or* you can specify 0-20 instance types for ``instanceTypes`` . If however, you specify an instance type in your launch template *and* specify any ``instanceTypes`` , the node group deployment will fail. If you don't specify an instance type in a launch template or for ``instanceTypes`` , then ``t3.medium`` is used, by default. If you specify ``Spot`` for ``capacityType`` , then we recommend specifying multiple values for ``instanceTypes`` . For more information, see `Managed node group capacity types <https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types>`__ and `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the *Amazon EKS User Guide* .

      

    
      - *(string) --* 

      
  
    :type amiType: string
    :param amiType: 

      The AMI type for your node group. GPU instance types should use the ``AL2_x86_64_GPU`` AMI type. Non-GPU instances should use the ``AL2_x86_64`` AMI type. Arm instances should use the ``AL2_ARM_64`` AMI type. All types use the Amazon EKS optimized Amazon Linux 2 AMI. If you specify ``launchTemplate`` , and your launch template uses a custom AMI, then don't specify ``amiType`` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    :type remoteAccess: dict
    :param remoteAccess: 

      The remote access (SSH) configuration to use with your node group. If you specify ``launchTemplate`` , then don't specify ``remoteAccess`` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
      - **ec2SshKey** *(string) --* 

        The Amazon EC2 SSH key that provides access for SSH communication with the nodes in the managed node group. For more information, see `Amazon EC2 key pairs and Linux instances <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html>`__ in the *Amazon Elastic Compute Cloud User Guide for Linux Instances* .

        

      
      - **sourceSecurityGroups** *(list) --* 

        The security groups that are allowed SSH access (port 22) to the nodes. If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0). For more information, see `Security Groups for Your VPC <https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html>`__ in the *Amazon Virtual Private Cloud User Guide* .

        

      
        - *(string) --* 

        
    
    
    :type nodeRole: string
    :param nodeRole: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker node ``kubelet`` daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see `Amazon EKS node IAM role <https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html>`__ in the * *Amazon EKS User Guide* * . If you specify ``launchTemplate`` , then don't specify ` ``IamInstanceProfile`` https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html`__ in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    :type labels: dict
    :param labels: 

      The Kubernetes labels to be applied to the nodes in the node group when they are created.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type taints: list
    :param taints: 

      The Kubernetes taints to be applied to the nodes in the node group.

      

    
      - *(dict) --* 

        A property that allows a node to repel a set of pods.

        

      
        - **key** *(string) --* 

          The key of the taint.

          

        
        - **value** *(string) --* 

          The value of the taint.

          

        
        - **effect** *(string) --* 

          The effect of the taint.

          

        
      
  
    :type tags: dict
    :param tags: 

      The metadata to apply to the node group to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    :type launchTemplate: dict
    :param launchTemplate: 

      An object representing a node group's launch template specification. If specified, then do not specify ``instanceTypes`` , ``diskSize`` , or ``remoteAccess`` and make sure that the launch template meets the requirements in ``launchTemplateSpecification`` .

      

    
      - **name** *(string) --* 

        The name of the launch template.

        

      
      - **version** *(string) --* 

        The version of the launch template to use. If no version is specified, then the template's default version is used.

        

      
      - **id** *(string) --* 

        The ID of the launch template.

        

      
    
    :type updateConfig: dict
    :param updateConfig: 

      The node group update configuration.

      

    
      - **maxUnavailable** *(integer) --* 

        The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or ``maxUnavailablePercentage`` is required to have a value.The maximum number is 100.

        

      
      - **maxUnavailablePercentage** *(integer) --* 

        The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or ``maxUnavailable`` is required to have a value.

        

      
    
    :type capacityType: string
    :param capacityType: 

      The capacity type for your node group.

      

    
    :type version: string
    :param version: 

      The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify ``launchTemplate`` , and your launch template uses a custom AMI, then don't specify ``version`` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    :type releaseVersion: string
    :param releaseVersion: 

      The AMI version of the Amazon EKS optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see `Amazon EKS optimized Amazon Linux 2 AMI versions <https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html>`__ in the *Amazon EKS User Guide* . If you specify ``launchTemplate`` , and your launch template uses a custom AMI, then don't specify ``releaseVersion`` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'nodegroup': {
                'nodegroupName': 'string',
                'nodegroupArn': 'string',
                'clusterName': 'string',
                'version': 'string',
                'releaseVersion': 'string',
                'createdAt': datetime(2015, 1, 1),
                'modifiedAt': datetime(2015, 1, 1),
                'status': 'CREATING'|'ACTIVE'|'UPDATING'|'DELETING'|'CREATE_FAILED'|'DELETE_FAILED'|'DEGRADED',
                'capacityType': 'ON_DEMAND'|'SPOT',
                'scalingConfig': {
                    'minSize': 123,
                    'maxSize': 123,
                    'desiredSize': 123
                },
                'instanceTypes': [
                    'string',
                ],
                'subnets': [
                    'string',
                ],
                'remoteAccess': {
                    'ec2SshKey': 'string',
                    'sourceSecurityGroups': [
                        'string',
                    ]
                },
                'amiType': 'AL2_x86_64'|'AL2_x86_64_GPU'|'AL2_ARM_64'|'CUSTOM',
                'nodeRole': 'string',
                'labels': {
                    'string': 'string'
                },
                'taints': [
                    {
                        'key': 'string',
                        'value': 'string',
                        'effect': 'NO_SCHEDULE'|'NO_EXECUTE'|'PREFER_NO_SCHEDULE'
                    },
                ],
                'resources': {
                    'autoScalingGroups': [
                        {
                            'name': 'string'
                        },
                    ],
                    'remoteAccessSecurityGroup': 'string'
                },
                'diskSize': 123,
                'health': {
                    'issues': [
                        {
                            'code': 'AutoScalingGroupNotFound'|'AutoScalingGroupInvalidConfiguration'|'Ec2SecurityGroupNotFound'|'Ec2SecurityGroupDeletionFailure'|'Ec2LaunchTemplateNotFound'|'Ec2LaunchTemplateVersionMismatch'|'Ec2SubnetNotFound'|'Ec2SubnetInvalidConfiguration'|'IamInstanceProfileNotFound'|'IamLimitExceeded'|'IamNodeRoleNotFound'|'NodeCreationFailure'|'AsgInstanceLaunchFailures'|'InstanceLimitExceeded'|'InsufficientFreeAddresses'|'AccessDenied'|'InternalFailure'|'ClusterUnreachable',
                            'message': 'string',
                            'resourceIds': [
                                'string',
                            ]
                        },
                    ]
                },
                'updateConfig': {
                    'maxUnavailable': 123,
                    'maxUnavailablePercentage': 123
                },
                'launchTemplate': {
                    'name': 'string',
                    'version': 'string',
                    'id': 'string'
                },
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **nodegroup** *(dict) --* 

          The full description of your new node group.

          
          

          - **nodegroupName** *(string) --* 

            The name associated with an Amazon EKS managed node group.

            
          

          - **nodegroupArn** *(string) --* 

            The Amazon Resource Name (ARN) associated with the managed node group.

            
          

          - **clusterName** *(string) --* 

            The name of the cluster that the managed node group resides in.

            
          

          - **version** *(string) --* 

            The Kubernetes version of the managed node group.

            
          

          - **releaseVersion** *(string) --* 

            If the node group was deployed using a launch template with a custom AMI, then this is the AMI ID that was specified in the launch template. For node groups that weren't deployed using a launch template, this is the version of the Amazon EKS optimized AMI that the node group was deployed with.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the managed node group was created.

            
          

          - **modifiedAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the managed node group was last modified.

            
          

          - **status** *(string) --* 

            The current status of the managed node group.

            
          

          - **capacityType** *(string) --* 

            The capacity type of your managed node group.

            
          

          - **scalingConfig** *(dict) --* 

            The scaling configuration details for the Auto Scaling group that is associated with your node group.

            
            

            - **minSize** *(integer) --* 

              The minimum number of nodes that the managed node group can scale in to.

              
            

            - **maxSize** *(integer) --* 

              The maximum number of nodes that the managed node group can scale out to. For information about the maximum number that you can specify, see `Amazon EKS service quotas <https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html>`__ in the *Amazon EKS User Guide* .

              
            

            - **desiredSize** *(integer) --* 

              The current number of nodes that the managed node group should maintain.

              
        
          

          - **instanceTypes** *(list) --* 

            If the node group wasn't deployed with a launch template, then this is the instance type that is associated with the node group. If the node group was deployed with a launch template, then this is ``null`` .

            
            

            - *(string) --* 
        
          

          - **subnets** *(list) --* 

            The subnets that were specified for the Auto Scaling group that is associated with your node group.

            
            

            - *(string) --* 
        
          

          - **remoteAccess** *(dict) --* 

            If the node group wasn't deployed with a launch template, then this is the remote access configuration that is associated with the node group. If the node group was deployed with a launch template, then this is ``null`` .

            
            

            - **ec2SshKey** *(string) --* 

              The Amazon EC2 SSH key that provides access for SSH communication with the nodes in the managed node group. For more information, see `Amazon EC2 key pairs and Linux instances <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html>`__ in the *Amazon Elastic Compute Cloud User Guide for Linux Instances* .

              
            

            - **sourceSecurityGroups** *(list) --* 

              The security groups that are allowed SSH access (port 22) to the nodes. If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0). For more information, see `Security Groups for Your VPC <https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html>`__ in the *Amazon Virtual Private Cloud User Guide* .

              
              

              - *(string) --* 
          
        
          

          - **amiType** *(string) --* 

            If the node group was deployed using a launch template with a custom AMI, then this is ``CUSTOM`` . For node groups that weren't deployed using a launch template, this is the AMI type that was specified in the node group configuration.

            
          

          - **nodeRole** *(string) --* 

            The IAM role associated with your node group. The Amazon EKS node ``kubelet`` daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies.

            
          

          - **labels** *(dict) --* 

            The Kubernetes labels applied to the nodes in the node group.

             

            .. note::

               

              Only labels that are applied with the Amazon EKS API are shown here. There may be other Kubernetes labels applied to the nodes in this group.

               

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **taints** *(list) --* 

            The Kubernetes taints to be applied to the nodes in the node group when they are created. Effect is one of ``No_Schedule`` , ``Prefer_No_Schedule`` , or ``No_Execute`` . Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes.

            
            

            - *(dict) --* 

              A property that allows a node to repel a set of pods.

              
              

              - **key** *(string) --* 

                The key of the taint.

                
              

              - **value** *(string) --* 

                The value of the taint.

                
              

              - **effect** *(string) --* 

                The effect of the taint.

                
          
        
          

          - **resources** *(dict) --* 

            The resources associated with the node group, such as Auto Scaling groups and security groups for remote access.

            
            

            - **autoScalingGroups** *(list) --* 

              The Auto Scaling groups associated with the node group.

              
              

              - *(dict) --* 

                An Auto Scaling group that is associated with an Amazon EKS managed node group.

                
                

                - **name** *(string) --* 

                  The name of the Auto Scaling group associated with an Amazon EKS managed node group.

                  
            
          
            

            - **remoteAccessSecurityGroup** *(string) --* 

              The remote access security group associated with the node group. This security group controls SSH access to the nodes.

              
        
          

          - **diskSize** *(integer) --* 

            If the node group wasn't deployed with a launch template, then this is the disk size in the node group configuration. If the node group was deployed with a launch template, then this is ``null`` .

            
          

          - **health** *(dict) --* 

            The health status of the node group. If there are issues with your node group's health, they are listed here.

            
            

            - **issues** *(list) --* 

              Any issues that are associated with the node group. 

              
              

              - *(dict) --* 

                An object representing an issue with an Amazon EKS resource.

                
                

                - **code** *(string) --* 

                  A brief description of the error.

                   

                   
                  * **AccessDenied** : Amazon EKS or one or more of your managed nodes is failing to authenticate or authorize with your Kubernetes cluster API server. 
                   
                  * **AsgInstanceLaunchFailures** : Your Auto Scaling group is experiencing failures while attempting to launch instances. 
                   
                  * **AutoScalingGroupNotFound** : We couldn't find the Auto Scaling group associated with the managed node group. You may be able to recreate an Auto Scaling group with the same settings to recover. 
                   
                  * **ClusterUnreachable** : Amazon EKS or one or more of your managed nodes is unable to to communicate with your Kubernetes cluster API server. This can happen if there are network disruptions or if API servers are timing out processing requests.  
                   
                  * **Ec2LaunchTemplateNotFound** : We couldn't find the Amazon EC2 launch template for your managed node group. You may be able to recreate a launch template with the same settings to recover. 
                   
                  * **Ec2LaunchTemplateVersionMismatch** : The Amazon EC2 launch template version for your managed node group does not match the version that Amazon EKS created. You may be able to revert to the version that Amazon EKS created to recover. 
                   
                  * **Ec2SecurityGroupDeletionFailure** : We could not delete the remote access security group for your managed node group. Remove any dependencies from the security group. 
                   
                  * **Ec2SecurityGroupNotFound** : We couldn't find the cluster security group for the cluster. You must recreate your cluster. 
                   
                  * **Ec2SubnetInvalidConfiguration** : One or more Amazon EC2 subnets specified for a node group do not automatically assign public IP addresses to instances launched into it. If you want your instances to be assigned a public IP address, then you need to enable the ``auto-assign public IP address`` setting for the subnet. See `Modifying the public IPv4 addressing attribute for your subnet <https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip>`__ in the Amazon VPC User Guide. 
                   
                  * **IamInstanceProfileNotFound** : We couldn't find the IAM instance profile for your managed node group. You may be able to recreate an instance profile with the same settings to recover. 
                   
                  * **IamNodeRoleNotFound** : We couldn't find the IAM role for your managed node group. You may be able to recreate an IAM role with the same settings to recover. 
                   
                  * **InstanceLimitExceeded** : Your Amazon Web Services account is unable to launch any more instances of the specified instance type. You may be able to request an Amazon EC2 instance limit increase to recover. 
                   
                  * **InsufficientFreeAddresses** : One or more of the subnets associated with your managed node group does not have enough available IP addresses for new nodes. 
                   
                  * **InternalFailure** : These errors are usually caused by an Amazon EKS server-side issue. 
                   
                  * **NodeCreationFailure** : Your launched instances are unable to register with your Amazon EKS cluster. Common causes of this failure are insufficient `node IAM role <https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html>`__ permissions or lack of outbound internet access for the nodes.  
                   

                  
                

                - **message** *(string) --* 

                  The error message associated with the issue.

                  
                

                - **resourceIds** *(list) --* 

                  The Amazon Web Services resources that are afflicted by this issue.

                  
                  

                  - *(string) --* 
              
            
          
        
          

          - **updateConfig** *(dict) --* 

            The node group update configuration.

            
            

            - **maxUnavailable** *(integer) --* 

              The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or ``maxUnavailablePercentage`` is required to have a value.The maximum number is 100.

              
            

            - **maxUnavailablePercentage** *(integer) --* 

              The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or ``maxUnavailable`` is required to have a value.

              
        
          

          - **launchTemplate** *(dict) --* 

            If a launch template was used to create the node group, then this is the launch template that was used.

            
            

            - **name** *(string) --* 

              The name of the launch template.

              
            

            - **version** *(string) --* 

              The version of the launch template to use. If no version is specified, then the template's default version is used.

              
            

            - **id** *(string) --* 

              The ID of the launch template.

              
        
          

          - **tags** *(dict) --* 

            The metadata applied to the node group to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceLimitExceededException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: delete_addon(**kwargs)

    

    Delete an Amazon EKS add-on.

     

    When you remove the add-on, it will also be deleted from the cluster. You can always manually start an add-on on the cluster using the Kubernetes API.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteAddon>`_    


    **Request Syntax** 
    ::

      response = client.delete_addon(
          clusterName='string',
          addonName='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster to delete the add-on from.

      

    
    :type addonName: string
    :param addonName: **[REQUIRED]** 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addon': {
                'addonName': 'string',
                'clusterName': 'string',
                'status': 'CREATING'|'ACTIVE'|'CREATE_FAILED'|'UPDATING'|'DELETING'|'DELETE_FAILED'|'DEGRADED',
                'addonVersion': 'string',
                'health': {
                    'issues': [
                        {
                            'code': 'AccessDenied'|'InternalFailure'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                            'message': 'string',
                            'resourceIds': [
                                'string',
                            ]
                        },
                    ]
                },
                'addonArn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'modifiedAt': datetime(2015, 1, 1),
                'serviceAccountRoleArn': 'string',
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addon** *(dict) --* 

          An Amazon EKS add-on.

          
          

          - **addonName** *(string) --* 

            The name of the add-on.

            
          

          - **clusterName** *(string) --* 

            The name of the cluster.

            
          

          - **status** *(string) --* 

            The status of the add-on.

            
          

          - **addonVersion** *(string) --* 

            The version of the add-on.

            
          

          - **health** *(dict) --* 

            An object that represents the health of the add-on.

            
            

            - **issues** *(list) --* 

              An object that represents the add-on's health issues.

              
              

              - *(dict) --* 

                An issue related to an add-on.

                
                

                - **code** *(string) --* 

                  A code that describes the type of issue.

                  
                

                - **message** *(string) --* 

                  A message that provides details about the issue and what might cause it.

                  
                

                - **resourceIds** *(list) --* 

                  The resource IDs of the issue.

                  
                  

                  - *(string) --* 
              
            
          
        
          

          - **addonArn** *(string) --* 

            The Amazon Resource Name (ARN) of the add-on.

            
          

          - **createdAt** *(datetime) --* 

            The date and time that the add-on was created.

            
          

          - **modifiedAt** *(datetime) --* 

            The date and time that the add-on was last modified.

            
          

          - **serviceAccountRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the IAM role that is bound to the Kubernetes service account used by the add-on.

            
          

          - **tags** *(dict) --* 

            The metadata that you apply to the add-on to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Add-on tags do not propagate to any other resources associated with the cluster. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    

  .. py:method:: delete_cluster(**kwargs)

    

    Deletes the Amazon EKS cluster control plane.

     

    If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see `Deleting a Cluster <https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html>`__ in the *Amazon EKS User Guide* .

     

    If you have managed node groups or Fargate profiles attached to the cluster, you must delete them first. For more information, see  DeleteNodegroup and  DeleteFargateProfile .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteCluster>`_    


    **Request Syntax** 
    ::

      response = client.delete_cluster(
          name='string'
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the cluster to delete.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'cluster': {
                'name': 'string',
                'arn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'version': 'string',
                'endpoint': 'string',
                'roleArn': 'string',
                'resourcesVpcConfig': {
                    'subnetIds': [
                        'string',
                    ],
                    'securityGroupIds': [
                        'string',
                    ],
                    'clusterSecurityGroupId': 'string',
                    'vpcId': 'string',
                    'endpointPublicAccess': True|False,
                    'endpointPrivateAccess': True|False,
                    'publicAccessCidrs': [
                        'string',
                    ]
                },
                'kubernetesNetworkConfig': {
                    'serviceIpv4Cidr': 'string'
                },
                'logging': {
                    'clusterLogging': [
                        {
                            'types': [
                                'api'|'audit'|'authenticator'|'controllerManager'|'scheduler',
                            ],
                            'enabled': True|False
                        },
                    ]
                },
                'identity': {
                    'oidc': {
                        'issuer': 'string'
                    }
                },
                'status': 'CREATING'|'ACTIVE'|'DELETING'|'FAILED'|'UPDATING',
                'certificateAuthority': {
                    'data': 'string'
                },
                'clientRequestToken': 'string',
                'platformVersion': 'string',
                'tags': {
                    'string': 'string'
                },
                'encryptionConfig': [
                    {
                        'resources': [
                            'string',
                        ],
                        'provider': {
                            'keyArn': 'string'
                        }
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **cluster** *(dict) --* 

          The full description of the cluster to delete.

          
          

          - **name** *(string) --* 

            The name of the cluster.

            
          

          - **arn** *(string) --* 

            The Amazon Resource Name (ARN) of the cluster.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the cluster was created.

            
          

          - **version** *(string) --* 

            The Kubernetes server version for the cluster.

            
          

          - **endpoint** *(string) --* 

            The endpoint for your Kubernetes API server.

            
          

          - **roleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.

            
          

          - **resourcesVpcConfig** *(dict) --* 

            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see `Cluster VPC Considerations <https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html>`__ and `Cluster Security Group Considerations <https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the *Amazon EKS User Guide* .

            
            

            - **subnetIds** *(list) --* 

              The subnets associated with your cluster.

              
              

              - *(string) --* 
          
            

            - **securityGroupIds** *(list) --* 

              The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.

              
              

              - *(string) --* 
          
            

            - **clusterSecurityGroupId** *(string) --* 

              The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.

              
            

            - **vpcId** *(string) --* 

              The VPC associated with your cluster.

              
            

            - **endpointPublicAccess** *(boolean) --* 

              This parameter indicates whether the Amazon EKS public API server endpoint is enabled. If the Amazon EKS public API server endpoint is disabled, your cluster's Kubernetes API server can only receive requests that originate from within the cluster VPC.

              
            

            - **endpointPrivateAccess** *(boolean) --* 

              This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that ``publicAccessCidrs`` includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

              
            

            - **publicAccessCidrs** *(list) --* 

              The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the listed CIDR blocks is denied. The default value is ``0.0.0.0/0`` . If you've disabled private endpoint access and you have nodes or Fargate pods in the cluster, then ensure that the necessary CIDR blocks are listed. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

              
              

              - *(string) --* 
          
        
          

          - **kubernetesNetworkConfig** *(dict) --* 

            The Kubernetes network configuration for the cluster.

            
            

            - **serviceIpv4Cidr** *(string) --* 

              The CIDR block that Kubernetes service IP addresses are assigned from. If you didn't specify a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. If this was specified, then it was specified when the cluster was created and it cannot be changed.

              
        
          

          - **logging** *(dict) --* 

            The logging configuration for your cluster.

            
            

            - **clusterLogging** *(list) --* 

              The cluster control plane logging configuration for your cluster.

              
              

              - *(dict) --* 

                An object representing the enabled or disabled Kubernetes control plane logs for your cluster.

                
                

                - **types** *(list) --* 

                  The available cluster control plane log types.

                  
                  

                  - *(string) --* 
              
                

                - **enabled** *(boolean) --* 

                  If a log type is enabled, that log type exports its control plane logs to CloudWatch Logs. If a log type isn't enabled, that log type doesn't export its control plane logs. Each individual log type can be enabled or disabled independently.

                  
            
          
        
          

          - **identity** *(dict) --* 

            The identity provider information for the cluster.

            
            

            - **oidc** *(dict) --* 

              An object representing the `OpenID Connect <https://openid.net/connect/>`__ identity provider information.

              
              

              - **issuer** *(string) --* 

                The issuer URL for the OIDC identity provider.

                
          
        
          

          - **status** *(string) --* 

            The current status of the cluster.

            
          

          - **certificateAuthority** *(dict) --* 

            The ``certificate-authority-data`` for your cluster.

            
            

            - **data** *(string) --* 

              The Base64-encoded certificate data required to communicate with your cluster. Add this to the ``certificate-authority-data`` section of the ``kubeconfig`` file for your cluster.

              
        
          

          - **clientRequestToken** *(string) --* 

            Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

            
          

          - **platformVersion** *(string) --* 

            The platform version of your Amazon EKS cluster. For more information, see `Platform Versions <https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html>`__ in the * *Amazon EKS User Guide* * .

            
          

          - **tags** *(dict) --* 

            The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags do not propagate to any other resources associated with the cluster. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **encryptionConfig** *(list) --* 

            The encryption configuration for the cluster.

            
            

            - *(dict) --* 

              The encryption configuration for the cluster.

              
              

              - **resources** *(list) --* 

                Specifies the resources to be encrypted. The only supported value is "secrets".

                
                

                - *(string) --* 
            
              

              - **provider** *(dict) --* 

                Key Management Service (KMS) key. Either the ARN or the alias can be used.

                
                

                - **keyArn** *(string) --* 

                  Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see `Allowing Users in Other Accounts to Use a KMS key <https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html>`__ in the *Key Management Service Developer Guide* .

                  
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

    **Examples** 

    This example command deletes a cluster named `devel` in your default region.
    ::

      response = client.delete_cluster(
          name='devel',
      )
      
      print(response)

    
    Expected Output:
    ::

      {
          'ResponseMetadata': {
              '...': '...',
          },
      }

    

  .. py:method:: delete_fargate_profile(**kwargs)

    

    Deletes an Fargate profile.

     

    When you delete a Fargate profile, any pods running on Fargate that were created with the profile are deleted. If those pods match another Fargate profile, then they are scheduled on Fargate with that profile. If they no longer match any Fargate profiles, then they are not scheduled on Fargate and they may remain in a pending state.

     

    Only one Fargate profile in a cluster can be in the ``DELETING`` status at a time. You must wait for a Fargate profile to finish deleting before you can delete any other profiles in that cluster.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteFargateProfile>`_    


    **Request Syntax** 
    ::

      response = client.delete_fargate_profile(
          clusterName='string',
          fargateProfileName='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the Fargate profile to delete.

      

    
    :type fargateProfileName: string
    :param fargateProfileName: **[REQUIRED]** 

      The name of the Fargate profile to delete.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'fargateProfile': {
                'fargateProfileName': 'string',
                'fargateProfileArn': 'string',
                'clusterName': 'string',
                'createdAt': datetime(2015, 1, 1),
                'podExecutionRoleArn': 'string',
                'subnets': [
                    'string',
                ],
                'selectors': [
                    {
                        'namespace': 'string',
                        'labels': {
                            'string': 'string'
                        }
                    },
                ],
                'status': 'CREATING'|'ACTIVE'|'DELETING'|'CREATE_FAILED'|'DELETE_FAILED',
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **fargateProfile** *(dict) --* 

          The deleted Fargate profile.

          
          

          - **fargateProfileName** *(string) --* 

            The name of the Fargate profile.

            
          

          - **fargateProfileArn** *(string) --* 

            The full Amazon Resource Name (ARN) of the Fargate profile.

            
          

          - **clusterName** *(string) --* 

            The name of the Amazon EKS cluster that the Fargate profile belongs to.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the Fargate profile was created.

            
          

          - **podExecutionRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. For more information, see `Pod Execution Role <https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html>`__ in the *Amazon EKS User Guide* .

            
          

          - **subnets** *(list) --* 

            The IDs of subnets to launch pods into.

            
            

            - *(string) --* 
        
          

          - **selectors** *(list) --* 

            The selectors to match for pods to use this Fargate profile.

            
            

            - *(dict) --* 

              An object representing an Fargate profile selector.

              
              

              - **namespace** *(string) --* 

                The Kubernetes namespace that the selector should match.

                
              

              - **labels** *(dict) --* 

                The Kubernetes labels that the selector should match. A pod must contain all of the labels that are specified in the selector for it to be considered a match.

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
          
        
          

          - **status** *(string) --* 

            The current status of the Fargate profile.

            
          

          - **tags** *(dict) --* 

            The metadata applied to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: delete_nodegroup(**kwargs)

    

    Deletes an Amazon EKS node group for a cluster.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DeleteNodegroup>`_    


    **Request Syntax** 
    ::

      response = client.delete_nodegroup(
          clusterName='string',
          nodegroupName='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that is associated with your node group.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The name of the node group to delete.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'nodegroup': {
                'nodegroupName': 'string',
                'nodegroupArn': 'string',
                'clusterName': 'string',
                'version': 'string',
                'releaseVersion': 'string',
                'createdAt': datetime(2015, 1, 1),
                'modifiedAt': datetime(2015, 1, 1),
                'status': 'CREATING'|'ACTIVE'|'UPDATING'|'DELETING'|'CREATE_FAILED'|'DELETE_FAILED'|'DEGRADED',
                'capacityType': 'ON_DEMAND'|'SPOT',
                'scalingConfig': {
                    'minSize': 123,
                    'maxSize': 123,
                    'desiredSize': 123
                },
                'instanceTypes': [
                    'string',
                ],
                'subnets': [
                    'string',
                ],
                'remoteAccess': {
                    'ec2SshKey': 'string',
                    'sourceSecurityGroups': [
                        'string',
                    ]
                },
                'amiType': 'AL2_x86_64'|'AL2_x86_64_GPU'|'AL2_ARM_64'|'CUSTOM',
                'nodeRole': 'string',
                'labels': {
                    'string': 'string'
                },
                'taints': [
                    {
                        'key': 'string',
                        'value': 'string',
                        'effect': 'NO_SCHEDULE'|'NO_EXECUTE'|'PREFER_NO_SCHEDULE'
                    },
                ],
                'resources': {
                    'autoScalingGroups': [
                        {
                            'name': 'string'
                        },
                    ],
                    'remoteAccessSecurityGroup': 'string'
                },
                'diskSize': 123,
                'health': {
                    'issues': [
                        {
                            'code': 'AutoScalingGroupNotFound'|'AutoScalingGroupInvalidConfiguration'|'Ec2SecurityGroupNotFound'|'Ec2SecurityGroupDeletionFailure'|'Ec2LaunchTemplateNotFound'|'Ec2LaunchTemplateVersionMismatch'|'Ec2SubnetNotFound'|'Ec2SubnetInvalidConfiguration'|'IamInstanceProfileNotFound'|'IamLimitExceeded'|'IamNodeRoleNotFound'|'NodeCreationFailure'|'AsgInstanceLaunchFailures'|'InstanceLimitExceeded'|'InsufficientFreeAddresses'|'AccessDenied'|'InternalFailure'|'ClusterUnreachable',
                            'message': 'string',
                            'resourceIds': [
                                'string',
                            ]
                        },
                    ]
                },
                'updateConfig': {
                    'maxUnavailable': 123,
                    'maxUnavailablePercentage': 123
                },
                'launchTemplate': {
                    'name': 'string',
                    'version': 'string',
                    'id': 'string'
                },
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **nodegroup** *(dict) --* 

          The full description of your deleted node group.

          
          

          - **nodegroupName** *(string) --* 

            The name associated with an Amazon EKS managed node group.

            
          

          - **nodegroupArn** *(string) --* 

            The Amazon Resource Name (ARN) associated with the managed node group.

            
          

          - **clusterName** *(string) --* 

            The name of the cluster that the managed node group resides in.

            
          

          - **version** *(string) --* 

            The Kubernetes version of the managed node group.

            
          

          - **releaseVersion** *(string) --* 

            If the node group was deployed using a launch template with a custom AMI, then this is the AMI ID that was specified in the launch template. For node groups that weren't deployed using a launch template, this is the version of the Amazon EKS optimized AMI that the node group was deployed with.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the managed node group was created.

            
          

          - **modifiedAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the managed node group was last modified.

            
          

          - **status** *(string) --* 

            The current status of the managed node group.

            
          

          - **capacityType** *(string) --* 

            The capacity type of your managed node group.

            
          

          - **scalingConfig** *(dict) --* 

            The scaling configuration details for the Auto Scaling group that is associated with your node group.

            
            

            - **minSize** *(integer) --* 

              The minimum number of nodes that the managed node group can scale in to.

              
            

            - **maxSize** *(integer) --* 

              The maximum number of nodes that the managed node group can scale out to. For information about the maximum number that you can specify, see `Amazon EKS service quotas <https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html>`__ in the *Amazon EKS User Guide* .

              
            

            - **desiredSize** *(integer) --* 

              The current number of nodes that the managed node group should maintain.

              
        
          

          - **instanceTypes** *(list) --* 

            If the node group wasn't deployed with a launch template, then this is the instance type that is associated with the node group. If the node group was deployed with a launch template, then this is ``null`` .

            
            

            - *(string) --* 
        
          

          - **subnets** *(list) --* 

            The subnets that were specified for the Auto Scaling group that is associated with your node group.

            
            

            - *(string) --* 
        
          

          - **remoteAccess** *(dict) --* 

            If the node group wasn't deployed with a launch template, then this is the remote access configuration that is associated with the node group. If the node group was deployed with a launch template, then this is ``null`` .

            
            

            - **ec2SshKey** *(string) --* 

              The Amazon EC2 SSH key that provides access for SSH communication with the nodes in the managed node group. For more information, see `Amazon EC2 key pairs and Linux instances <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html>`__ in the *Amazon Elastic Compute Cloud User Guide for Linux Instances* .

              
            

            - **sourceSecurityGroups** *(list) --* 

              The security groups that are allowed SSH access (port 22) to the nodes. If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0). For more information, see `Security Groups for Your VPC <https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html>`__ in the *Amazon Virtual Private Cloud User Guide* .

              
              

              - *(string) --* 
          
        
          

          - **amiType** *(string) --* 

            If the node group was deployed using a launch template with a custom AMI, then this is ``CUSTOM`` . For node groups that weren't deployed using a launch template, this is the AMI type that was specified in the node group configuration.

            
          

          - **nodeRole** *(string) --* 

            The IAM role associated with your node group. The Amazon EKS node ``kubelet`` daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies.

            
          

          - **labels** *(dict) --* 

            The Kubernetes labels applied to the nodes in the node group.

             

            .. note::

               

              Only labels that are applied with the Amazon EKS API are shown here. There may be other Kubernetes labels applied to the nodes in this group.

               

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **taints** *(list) --* 

            The Kubernetes taints to be applied to the nodes in the node group when they are created. Effect is one of ``No_Schedule`` , ``Prefer_No_Schedule`` , or ``No_Execute`` . Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes.

            
            

            - *(dict) --* 

              A property that allows a node to repel a set of pods.

              
              

              - **key** *(string) --* 

                The key of the taint.

                
              

              - **value** *(string) --* 

                The value of the taint.

                
              

              - **effect** *(string) --* 

                The effect of the taint.

                
          
        
          

          - **resources** *(dict) --* 

            The resources associated with the node group, such as Auto Scaling groups and security groups for remote access.

            
            

            - **autoScalingGroups** *(list) --* 

              The Auto Scaling groups associated with the node group.

              
              

              - *(dict) --* 

                An Auto Scaling group that is associated with an Amazon EKS managed node group.

                
                

                - **name** *(string) --* 

                  The name of the Auto Scaling group associated with an Amazon EKS managed node group.

                  
            
          
            

            - **remoteAccessSecurityGroup** *(string) --* 

              The remote access security group associated with the node group. This security group controls SSH access to the nodes.

              
        
          

          - **diskSize** *(integer) --* 

            If the node group wasn't deployed with a launch template, then this is the disk size in the node group configuration. If the node group was deployed with a launch template, then this is ``null`` .

            
          

          - **health** *(dict) --* 

            The health status of the node group. If there are issues with your node group's health, they are listed here.

            
            

            - **issues** *(list) --* 

              Any issues that are associated with the node group. 

              
              

              - *(dict) --* 

                An object representing an issue with an Amazon EKS resource.

                
                

                - **code** *(string) --* 

                  A brief description of the error.

                   

                   
                  * **AccessDenied** : Amazon EKS or one or more of your managed nodes is failing to authenticate or authorize with your Kubernetes cluster API server. 
                   
                  * **AsgInstanceLaunchFailures** : Your Auto Scaling group is experiencing failures while attempting to launch instances. 
                   
                  * **AutoScalingGroupNotFound** : We couldn't find the Auto Scaling group associated with the managed node group. You may be able to recreate an Auto Scaling group with the same settings to recover. 
                   
                  * **ClusterUnreachable** : Amazon EKS or one or more of your managed nodes is unable to to communicate with your Kubernetes cluster API server. This can happen if there are network disruptions or if API servers are timing out processing requests.  
                   
                  * **Ec2LaunchTemplateNotFound** : We couldn't find the Amazon EC2 launch template for your managed node group. You may be able to recreate a launch template with the same settings to recover. 
                   
                  * **Ec2LaunchTemplateVersionMismatch** : The Amazon EC2 launch template version for your managed node group does not match the version that Amazon EKS created. You may be able to revert to the version that Amazon EKS created to recover. 
                   
                  * **Ec2SecurityGroupDeletionFailure** : We could not delete the remote access security group for your managed node group. Remove any dependencies from the security group. 
                   
                  * **Ec2SecurityGroupNotFound** : We couldn't find the cluster security group for the cluster. You must recreate your cluster. 
                   
                  * **Ec2SubnetInvalidConfiguration** : One or more Amazon EC2 subnets specified for a node group do not automatically assign public IP addresses to instances launched into it. If you want your instances to be assigned a public IP address, then you need to enable the ``auto-assign public IP address`` setting for the subnet. See `Modifying the public IPv4 addressing attribute for your subnet <https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip>`__ in the Amazon VPC User Guide. 
                   
                  * **IamInstanceProfileNotFound** : We couldn't find the IAM instance profile for your managed node group. You may be able to recreate an instance profile with the same settings to recover. 
                   
                  * **IamNodeRoleNotFound** : We couldn't find the IAM role for your managed node group. You may be able to recreate an IAM role with the same settings to recover. 
                   
                  * **InstanceLimitExceeded** : Your Amazon Web Services account is unable to launch any more instances of the specified instance type. You may be able to request an Amazon EC2 instance limit increase to recover. 
                   
                  * **InsufficientFreeAddresses** : One or more of the subnets associated with your managed node group does not have enough available IP addresses for new nodes. 
                   
                  * **InternalFailure** : These errors are usually caused by an Amazon EKS server-side issue. 
                   
                  * **NodeCreationFailure** : Your launched instances are unable to register with your Amazon EKS cluster. Common causes of this failure are insufficient `node IAM role <https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html>`__ permissions or lack of outbound internet access for the nodes.  
                   

                  
                

                - **message** *(string) --* 

                  The error message associated with the issue.

                  
                

                - **resourceIds** *(list) --* 

                  The Amazon Web Services resources that are afflicted by this issue.

                  
                  

                  - *(string) --* 
              
            
          
        
          

          - **updateConfig** *(dict) --* 

            The node group update configuration.

            
            

            - **maxUnavailable** *(integer) --* 

              The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or ``maxUnavailablePercentage`` is required to have a value.The maximum number is 100.

              
            

            - **maxUnavailablePercentage** *(integer) --* 

              The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or ``maxUnavailable`` is required to have a value.

              
        
          

          - **launchTemplate** *(dict) --* 

            If a launch template was used to create the node group, then this is the launch template that was used.

            
            

            - **name** *(string) --* 

              The name of the launch template.

              
            

            - **version** *(string) --* 

              The version of the launch template to use. If no version is specified, then the template's default version is used.

              
            

            - **id** *(string) --* 

              The ID of the launch template.

              
        
          

          - **tags** *(dict) --* 

            The metadata applied to the node group to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_addon(**kwargs)

    

    Describes an Amazon EKS add-on.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon>`_    


    **Request Syntax** 
    ::

      response = client.describe_addon(
          clusterName='string',
          addonName='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster.

      

    
    :type addonName: string
    :param addonName: **[REQUIRED]** 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addon': {
                'addonName': 'string',
                'clusterName': 'string',
                'status': 'CREATING'|'ACTIVE'|'CREATE_FAILED'|'UPDATING'|'DELETING'|'DELETE_FAILED'|'DEGRADED',
                'addonVersion': 'string',
                'health': {
                    'issues': [
                        {
                            'code': 'AccessDenied'|'InternalFailure'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                            'message': 'string',
                            'resourceIds': [
                                'string',
                            ]
                        },
                    ]
                },
                'addonArn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'modifiedAt': datetime(2015, 1, 1),
                'serviceAccountRoleArn': 'string',
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addon** *(dict) --* 

          An Amazon EKS add-on.

          
          

          - **addonName** *(string) --* 

            The name of the add-on.

            
          

          - **clusterName** *(string) --* 

            The name of the cluster.

            
          

          - **status** *(string) --* 

            The status of the add-on.

            
          

          - **addonVersion** *(string) --* 

            The version of the add-on.

            
          

          - **health** *(dict) --* 

            An object that represents the health of the add-on.

            
            

            - **issues** *(list) --* 

              An object that represents the add-on's health issues.

              
              

              - *(dict) --* 

                An issue related to an add-on.

                
                

                - **code** *(string) --* 

                  A code that describes the type of issue.

                  
                

                - **message** *(string) --* 

                  A message that provides details about the issue and what might cause it.

                  
                

                - **resourceIds** *(list) --* 

                  The resource IDs of the issue.

                  
                  

                  - *(string) --* 
              
            
          
        
          

          - **addonArn** *(string) --* 

            The Amazon Resource Name (ARN) of the add-on.

            
          

          - **createdAt** *(datetime) --* 

            The date and time that the add-on was created.

            
          

          - **modifiedAt** *(datetime) --* 

            The date and time that the add-on was last modified.

            
          

          - **serviceAccountRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the IAM role that is bound to the Kubernetes service account used by the add-on.

            
          

          - **tags** *(dict) --* 

            The metadata that you apply to the add-on to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Add-on tags do not propagate to any other resources associated with the cluster. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    

  .. py:method:: describe_addon_versions(**kwargs)

    

    Describes the Kubernetes versions that the add-on can be used with.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddonVersions>`_    


    **Request Syntax** 
    ::

      response = client.describe_addon_versions(
          kubernetesVersion='string',
          maxResults=123,
          nextToken='string',
          addonName='string'
      )
    :type kubernetesVersion: string
    :param kubernetesVersion: 

      The Kubernetes versions that the add-on can be used with.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``DescribeAddonVersionsRequest`` where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

       

      .. note::

         

        This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.

         

      

    
    :type addonName: string
    :param addonName: 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addons': [
                {
                    'addonName': 'string',
                    'type': 'string',
                    'addonVersions': [
                        {
                            'addonVersion': 'string',
                            'architecture': [
                                'string',
                            ],
                            'compatibilities': [
                                {
                                    'clusterVersion': 'string',
                                    'platformVersions': [
                                        'string',
                                    ],
                                    'defaultVersion': True|False
                                },
                            ]
                        },
                    ]
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addons** *(list) --* 

          The list of available versions with Kubernetes version compatibility.

          
          

          - *(dict) --* 

            Information about an add-on.

            
            

            - **addonName** *(string) --* 

              The name of the add-on.

              
            

            - **type** *(string) --* 

              The type of the add-on.

              
            

            - **addonVersions** *(list) --* 

              An object that represents information about available add-on versions and compatible Kubernetes versions.

              
              

              - *(dict) --* 

                Information about an add-on version.

                
                

                - **addonVersion** *(string) --* 

                  The version of the add-on.

                  
                

                - **architecture** *(list) --* 

                  The architectures that the version supports.

                  
                  

                  - *(string) --* 
              
                

                - **compatibilities** *(list) --* 

                  An object that represents the compatibilities of a version.

                  
                  

                  - *(dict) --* 

                    Compatibility information.

                    
                    

                    - **clusterVersion** *(string) --* 

                      The supported Kubernetes version of the cluster.

                      
                    

                    - **platformVersions** *(list) --* 

                      The supported compute platform.

                      
                      

                      - *(string) --* 
                  
                    

                    - **defaultVersion** *(boolean) --* 

                      The supported default version.

                      
                
              
            
          
        
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value returned from a previous paginated ``DescribeAddonVersionsResponse`` where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

           

          .. note::

             

            This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.

             

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    

  .. py:method:: describe_cluster(**kwargs)

    

    Returns descriptive information about an Amazon EKS cluster.

     

    The API server endpoint and certificate authority data returned by this operation are required for ``kubelet`` and ``kubectl`` to communicate with your Kubernetes API server. For more information, see `Create a kubeconfig for Amazon EKS <https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html>`__ .

     

    .. note::

       

      The API server endpoint and certificate authority data aren't available until the cluster reaches the ``ACTIVE`` state.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster>`_    


    **Request Syntax** 
    ::

      response = client.describe_cluster(
          name='string'
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the cluster to describe.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'cluster': {
                'name': 'string',
                'arn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'version': 'string',
                'endpoint': 'string',
                'roleArn': 'string',
                'resourcesVpcConfig': {
                    'subnetIds': [
                        'string',
                    ],
                    'securityGroupIds': [
                        'string',
                    ],
                    'clusterSecurityGroupId': 'string',
                    'vpcId': 'string',
                    'endpointPublicAccess': True|False,
                    'endpointPrivateAccess': True|False,
                    'publicAccessCidrs': [
                        'string',
                    ]
                },
                'kubernetesNetworkConfig': {
                    'serviceIpv4Cidr': 'string'
                },
                'logging': {
                    'clusterLogging': [
                        {
                            'types': [
                                'api'|'audit'|'authenticator'|'controllerManager'|'scheduler',
                            ],
                            'enabled': True|False
                        },
                    ]
                },
                'identity': {
                    'oidc': {
                        'issuer': 'string'
                    }
                },
                'status': 'CREATING'|'ACTIVE'|'DELETING'|'FAILED'|'UPDATING',
                'certificateAuthority': {
                    'data': 'string'
                },
                'clientRequestToken': 'string',
                'platformVersion': 'string',
                'tags': {
                    'string': 'string'
                },
                'encryptionConfig': [
                    {
                        'resources': [
                            'string',
                        ],
                        'provider': {
                            'keyArn': 'string'
                        }
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **cluster** *(dict) --* 

          The full description of your specified cluster.

          
          

          - **name** *(string) --* 

            The name of the cluster.

            
          

          - **arn** *(string) --* 

            The Amazon Resource Name (ARN) of the cluster.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the cluster was created.

            
          

          - **version** *(string) --* 

            The Kubernetes server version for the cluster.

            
          

          - **endpoint** *(string) --* 

            The endpoint for your Kubernetes API server.

            
          

          - **roleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf.

            
          

          - **resourcesVpcConfig** *(dict) --* 

            The VPC configuration used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see `Cluster VPC Considerations <https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html>`__ and `Cluster Security Group Considerations <https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the *Amazon EKS User Guide* .

            
            

            - **subnetIds** *(list) --* 

              The subnets associated with your cluster.

              
              

              - *(string) --* 
          
            

            - **securityGroupIds** *(list) --* 

              The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Kubernetes control plane.

              
              

              - *(string) --* 
          
            

            - **clusterSecurityGroupId** *(string) --* 

              The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.

              
            

            - **vpcId** *(string) --* 

              The VPC associated with your cluster.

              
            

            - **endpointPublicAccess** *(boolean) --* 

              This parameter indicates whether the Amazon EKS public API server endpoint is enabled. If the Amazon EKS public API server endpoint is disabled, your cluster's Kubernetes API server can only receive requests that originate from within the cluster VPC.

              
            

            - **endpointPrivateAccess** *(boolean) --* 

              This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate from within your cluster's VPC use the private VPC endpoint instead of traversing the internet. If this value is disabled and you have nodes or Fargate pods in the cluster, then ensure that ``publicAccessCidrs`` includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

              
            

            - **publicAccessCidrs** *(list) --* 

              The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the listed CIDR blocks is denied. The default value is ``0.0.0.0/0`` . If you've disabled private endpoint access and you have nodes or Fargate pods in the cluster, then ensure that the necessary CIDR blocks are listed. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

              
              

              - *(string) --* 
          
        
          

          - **kubernetesNetworkConfig** *(dict) --* 

            The Kubernetes network configuration for the cluster.

            
            

            - **serviceIpv4Cidr** *(string) --* 

              The CIDR block that Kubernetes service IP addresses are assigned from. If you didn't specify a CIDR block when you created the cluster, then Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. If this was specified, then it was specified when the cluster was created and it cannot be changed.

              
        
          

          - **logging** *(dict) --* 

            The logging configuration for your cluster.

            
            

            - **clusterLogging** *(list) --* 

              The cluster control plane logging configuration for your cluster.

              
              

              - *(dict) --* 

                An object representing the enabled or disabled Kubernetes control plane logs for your cluster.

                
                

                - **types** *(list) --* 

                  The available cluster control plane log types.

                  
                  

                  - *(string) --* 
              
                

                - **enabled** *(boolean) --* 

                  If a log type is enabled, that log type exports its control plane logs to CloudWatch Logs. If a log type isn't enabled, that log type doesn't export its control plane logs. Each individual log type can be enabled or disabled independently.

                  
            
          
        
          

          - **identity** *(dict) --* 

            The identity provider information for the cluster.

            
            

            - **oidc** *(dict) --* 

              An object representing the `OpenID Connect <https://openid.net/connect/>`__ identity provider information.

              
              

              - **issuer** *(string) --* 

                The issuer URL for the OIDC identity provider.

                
          
        
          

          - **status** *(string) --* 

            The current status of the cluster.

            
          

          - **certificateAuthority** *(dict) --* 

            The ``certificate-authority-data`` for your cluster.

            
            

            - **data** *(string) --* 

              The Base64-encoded certificate data required to communicate with your cluster. Add this to the ``certificate-authority-data`` section of the ``kubeconfig`` file for your cluster.

              
        
          

          - **clientRequestToken** *(string) --* 

            Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

            
          

          - **platformVersion** *(string) --* 

            The platform version of your Amazon EKS cluster. For more information, see `Platform Versions <https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html>`__ in the * *Amazon EKS User Guide* * .

            
          

          - **tags** *(dict) --* 

            The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags do not propagate to any other resources associated with the cluster. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **encryptionConfig** *(list) --* 

            The encryption configuration for the cluster.

            
            

            - *(dict) --* 

              The encryption configuration for the cluster.

              
              

              - **resources** *(list) --* 

                Specifies the resources to be encrypted. The only supported value is "secrets".

                
                

                - *(string) --* 
            
              

              - **provider** *(dict) --* 

                Key Management Service (KMS) key. Either the ARN or the alias can be used.

                
                

                - **keyArn** *(string) --* 

                  Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see `Allowing Users in Other Accounts to Use a KMS key <https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html>`__ in the *Key Management Service Developer Guide* .

                  
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

    **Examples** 

    This example command provides a description of the specified cluster in your default region.
    ::

      response = client.describe_cluster(
          name='devel',
      )
      
      print(response)

    
    Expected Output:
    ::

      {
          'cluster': {
              'version': '1.10',
              'name': 'devel',
              'arn': 'arn:aws:eks:us-west-2:012345678910:cluster/devel',
              'certificateAuthority': {
                  'data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNE1EVXpNVEl6TVRFek1Wb1hEVEk0TURVeU9ESXpNVEV6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTZWCjVUaG4rdFcySm9Xa2hQMzRlVUZMNitaRXJOZGIvWVdrTmtDdWNGS2RaaXl2TjlMVmdvUmV2MjlFVFZlN1ZGbSsKUTJ3ZURyRXJiQyt0dVlibkFuN1ZLYmE3ay9hb1BHekZMdmVnb0t6b0M1N2NUdGVwZzRIazRlK2tIWHNaME10MApyb3NzcjhFM1ROeExETnNJTThGL1cwdjhsTGNCbWRPcjQyV2VuTjFHZXJnaDNSZ2wzR3JIazBnNTU0SjFWenJZCm9hTi8zODFUczlOTFF2QTBXb0xIcjBFRlZpTFdSZEoyZ3lXaC9ybDVyOFNDOHZaQXg1YW1BU0hVd01aTFpWRC8KTDBpOW4wRVM0MkpVdzQyQmxHOEdpd3NhTkJWV3lUTHZKclNhRXlDSHFtVVZaUTFDZkFXUjl0L3JleVVOVXM3TApWV1FqM3BFbk9RMitMSWJrc0RzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNZ3RsQ1dIQ2U2YzVHMXl2YlFTS0Q4K2hUalkKSm1NSG56L2EvRGt0WG9YUjFVQzIrZUgzT1BZWmVjRVZZZHVaSlZCckNNQ2VWR0ZkeWdBYlNLc1FxWDg0S2RXbAp1MU5QaERDSmEyRHliN2pVMUV6VThTQjFGZUZ5ZFE3a0hNS1E1blpBRVFQOTY4S01hSGUrSm0yQ2x1UFJWbEJVCjF4WlhTS1gzTVZ0K1Q0SU1EV2d6c3JRSjVuQkRjdEtLcUZtM3pKdVVubHo5ZEpVckdscEltMjVJWXJDckxYUFgKWkUwRUtRNWEzMHhkVWNrTHRGQkQrOEtBdFdqSS9yZUZPNzM1YnBMdVoyOTBaNm42QlF3elRrS0p4cnhVc3QvOAppNGsxcnlsaUdWMm5SSjBUYjNORkczNHgrYWdzYTRoSTFPbU90TFM0TmgvRXJxT3lIUXNDc2hEQUtKUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=',
              },
              'createdAt': 1527807879.988,
              'endpoint': 'https://A0DCCD80A04F01705DD065655C30CC3D.yl4.us-west-2.eks.amazonaws.com',
              'resourcesVpcConfig': {
                  'securityGroupIds': [
                      'sg-6979fe18',
                  ],
                  'subnetIds': [
                      'subnet-6782e71e',
                      'subnet-e7e761ac',
                  ],
                  'vpcId': 'vpc-950809ec',
              },
              'roleArn': 'arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI',
              'status': 'ACTIVE',
          },
          'ResponseMetadata': {
              '...': '...',
          },
      }

    

  .. py:method:: describe_fargate_profile(**kwargs)

    

    Returns descriptive information about an Fargate profile.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile>`_    


    **Request Syntax** 
    ::

      response = client.describe_fargate_profile(
          clusterName='string',
          fargateProfileName='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the Fargate profile.

      

    
    :type fargateProfileName: string
    :param fargateProfileName: **[REQUIRED]** 

      The name of the Fargate profile to describe.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'fargateProfile': {
                'fargateProfileName': 'string',
                'fargateProfileArn': 'string',
                'clusterName': 'string',
                'createdAt': datetime(2015, 1, 1),
                'podExecutionRoleArn': 'string',
                'subnets': [
                    'string',
                ],
                'selectors': [
                    {
                        'namespace': 'string',
                        'labels': {
                            'string': 'string'
                        }
                    },
                ],
                'status': 'CREATING'|'ACTIVE'|'DELETING'|'CREATE_FAILED'|'DELETE_FAILED',
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **fargateProfile** *(dict) --* 

          The full description of your Fargate profile.

          
          

          - **fargateProfileName** *(string) --* 

            The name of the Fargate profile.

            
          

          - **fargateProfileArn** *(string) --* 

            The full Amazon Resource Name (ARN) of the Fargate profile.

            
          

          - **clusterName** *(string) --* 

            The name of the Amazon EKS cluster that the Fargate profile belongs to.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the Fargate profile was created.

            
          

          - **podExecutionRoleArn** *(string) --* 

            The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. For more information, see `Pod Execution Role <https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html>`__ in the *Amazon EKS User Guide* .

            
          

          - **subnets** *(list) --* 

            The IDs of subnets to launch pods into.

            
            

            - *(string) --* 
        
          

          - **selectors** *(list) --* 

            The selectors to match for pods to use this Fargate profile.

            
            

            - *(dict) --* 

              An object representing an Fargate profile selector.

              
              

              - **namespace** *(string) --* 

                The Kubernetes namespace that the selector should match.

                
              

              - **labels** *(dict) --* 

                The Kubernetes labels that the selector should match. A pod must contain all of the labels that are specified in the selector for it to be considered a match.

                
                

                - *(string) --* 
                  

                  - *(string) --* 
            
          
          
        
          

          - **status** *(string) --* 

            The current status of the Fargate profile.

            
          

          - **tags** *(dict) --* 

            The metadata applied to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: describe_identity_provider_config(**kwargs)

    

    Returns descriptive information about an identity provider configuration.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeIdentityProviderConfig>`_    


    **Request Syntax** 
    ::

      response = client.describe_identity_provider_config(
          clusterName='string',
          identityProviderConfig={
              'type': 'string',
              'name': 'string'
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The cluster name that the identity provider configuration is associated to.

      

    
    :type identityProviderConfig: dict
    :param identityProviderConfig: **[REQUIRED]** 

      An object that represents an identity provider configuration.

      

    
      - **type** *(string) --* **[REQUIRED]** 

        The type of the identity provider configuration.

        

      
      - **name** *(string) --* **[REQUIRED]** 

        The name of the identity provider configuration.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'identityProviderConfig': {
                'oidc': {
                    'identityProviderConfigName': 'string',
                    'identityProviderConfigArn': 'string',
                    'clusterName': 'string',
                    'issuerUrl': 'string',
                    'clientId': 'string',
                    'usernameClaim': 'string',
                    'usernamePrefix': 'string',
                    'groupsClaim': 'string',
                    'groupsPrefix': 'string',
                    'requiredClaims': {
                        'string': 'string'
                    },
                    'tags': {
                        'string': 'string'
                    },
                    'status': 'CREATING'|'DELETING'|'ACTIVE'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **identityProviderConfig** *(dict) --* 

          The object that represents an OpenID Connect (OIDC) identity provider configuration.

          
          

          - **oidc** *(dict) --* 

            An object that represents an OpenID Connect (OIDC) identity provider configuration.

            
            

            - **identityProviderConfigName** *(string) --* 

              The name of the configuration.

              
            

            - **identityProviderConfigArn** *(string) --* 

              The ARN of the configuration.

              
            

            - **clusterName** *(string) --* 

              The cluster that the configuration is associated to.

              
            

            - **issuerUrl** *(string) --* 

              The URL of the OIDC identity provider that allows the API server to discover public signing keys for verifying tokens.

              
            

            - **clientId** *(string) --* 

              This is also known as *audience* . The ID of the client application that makes authentication requests to the OIDC identity provider.

              
            

            - **usernameClaim** *(string) --* 

              The JSON Web token (JWT) claim that is used as the username.

              
            

            - **usernamePrefix** *(string) --* 

              The prefix that is prepended to username claims to prevent clashes with existing names. The prefix can't contain ``system:``  

              
            

            - **groupsClaim** *(string) --* 

              The JSON web token (JWT) claim that the provider uses to return your groups.

              
            

            - **groupsPrefix** *(string) --* 

              The prefix that is prepended to group claims to prevent clashes with existing names (such as ``system:`` groups). For example, the value``oidc:`` creates group names like ``oidc:engineering`` and ``oidc:infra`` . The prefix can't contain ``system:``  

              
            

            - **requiredClaims** *(dict) --* 

              The key-value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **tags** *(dict) --* 

              The metadata to apply to the provider configuration to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you defined.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **status** *(string) --* 

              The status of the OIDC identity provider.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_nodegroup(**kwargs)

    

    Returns descriptive information about an Amazon EKS node group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup>`_    


    **Request Syntax** 
    ::

      response = client.describe_nodegroup(
          clusterName='string',
          nodegroupName='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the node group.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The name of the node group to describe.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'nodegroup': {
                'nodegroupName': 'string',
                'nodegroupArn': 'string',
                'clusterName': 'string',
                'version': 'string',
                'releaseVersion': 'string',
                'createdAt': datetime(2015, 1, 1),
                'modifiedAt': datetime(2015, 1, 1),
                'status': 'CREATING'|'ACTIVE'|'UPDATING'|'DELETING'|'CREATE_FAILED'|'DELETE_FAILED'|'DEGRADED',
                'capacityType': 'ON_DEMAND'|'SPOT',
                'scalingConfig': {
                    'minSize': 123,
                    'maxSize': 123,
                    'desiredSize': 123
                },
                'instanceTypes': [
                    'string',
                ],
                'subnets': [
                    'string',
                ],
                'remoteAccess': {
                    'ec2SshKey': 'string',
                    'sourceSecurityGroups': [
                        'string',
                    ]
                },
                'amiType': 'AL2_x86_64'|'AL2_x86_64_GPU'|'AL2_ARM_64'|'CUSTOM',
                'nodeRole': 'string',
                'labels': {
                    'string': 'string'
                },
                'taints': [
                    {
                        'key': 'string',
                        'value': 'string',
                        'effect': 'NO_SCHEDULE'|'NO_EXECUTE'|'PREFER_NO_SCHEDULE'
                    },
                ],
                'resources': {
                    'autoScalingGroups': [
                        {
                            'name': 'string'
                        },
                    ],
                    'remoteAccessSecurityGroup': 'string'
                },
                'diskSize': 123,
                'health': {
                    'issues': [
                        {
                            'code': 'AutoScalingGroupNotFound'|'AutoScalingGroupInvalidConfiguration'|'Ec2SecurityGroupNotFound'|'Ec2SecurityGroupDeletionFailure'|'Ec2LaunchTemplateNotFound'|'Ec2LaunchTemplateVersionMismatch'|'Ec2SubnetNotFound'|'Ec2SubnetInvalidConfiguration'|'IamInstanceProfileNotFound'|'IamLimitExceeded'|'IamNodeRoleNotFound'|'NodeCreationFailure'|'AsgInstanceLaunchFailures'|'InstanceLimitExceeded'|'InsufficientFreeAddresses'|'AccessDenied'|'InternalFailure'|'ClusterUnreachable',
                            'message': 'string',
                            'resourceIds': [
                                'string',
                            ]
                        },
                    ]
                },
                'updateConfig': {
                    'maxUnavailable': 123,
                    'maxUnavailablePercentage': 123
                },
                'launchTemplate': {
                    'name': 'string',
                    'version': 'string',
                    'id': 'string'
                },
                'tags': {
                    'string': 'string'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **nodegroup** *(dict) --* 

          The full description of your node group.

          
          

          - **nodegroupName** *(string) --* 

            The name associated with an Amazon EKS managed node group.

            
          

          - **nodegroupArn** *(string) --* 

            The Amazon Resource Name (ARN) associated with the managed node group.

            
          

          - **clusterName** *(string) --* 

            The name of the cluster that the managed node group resides in.

            
          

          - **version** *(string) --* 

            The Kubernetes version of the managed node group.

            
          

          - **releaseVersion** *(string) --* 

            If the node group was deployed using a launch template with a custom AMI, then this is the AMI ID that was specified in the launch template. For node groups that weren't deployed using a launch template, this is the version of the Amazon EKS optimized AMI that the node group was deployed with.

            
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the managed node group was created.

            
          

          - **modifiedAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the managed node group was last modified.

            
          

          - **status** *(string) --* 

            The current status of the managed node group.

            
          

          - **capacityType** *(string) --* 

            The capacity type of your managed node group.

            
          

          - **scalingConfig** *(dict) --* 

            The scaling configuration details for the Auto Scaling group that is associated with your node group.

            
            

            - **minSize** *(integer) --* 

              The minimum number of nodes that the managed node group can scale in to.

              
            

            - **maxSize** *(integer) --* 

              The maximum number of nodes that the managed node group can scale out to. For information about the maximum number that you can specify, see `Amazon EKS service quotas <https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html>`__ in the *Amazon EKS User Guide* .

              
            

            - **desiredSize** *(integer) --* 

              The current number of nodes that the managed node group should maintain.

              
        
          

          - **instanceTypes** *(list) --* 

            If the node group wasn't deployed with a launch template, then this is the instance type that is associated with the node group. If the node group was deployed with a launch template, then this is ``null`` .

            
            

            - *(string) --* 
        
          

          - **subnets** *(list) --* 

            The subnets that were specified for the Auto Scaling group that is associated with your node group.

            
            

            - *(string) --* 
        
          

          - **remoteAccess** *(dict) --* 

            If the node group wasn't deployed with a launch template, then this is the remote access configuration that is associated with the node group. If the node group was deployed with a launch template, then this is ``null`` .

            
            

            - **ec2SshKey** *(string) --* 

              The Amazon EC2 SSH key that provides access for SSH communication with the nodes in the managed node group. For more information, see `Amazon EC2 key pairs and Linux instances <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html>`__ in the *Amazon Elastic Compute Cloud User Guide for Linux Instances* .

              
            

            - **sourceSecurityGroups** *(list) --* 

              The security groups that are allowed SSH access (port 22) to the nodes. If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0). For more information, see `Security Groups for Your VPC <https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html>`__ in the *Amazon Virtual Private Cloud User Guide* .

              
              

              - *(string) --* 
          
        
          

          - **amiType** *(string) --* 

            If the node group was deployed using a launch template with a custom AMI, then this is ``CUSTOM`` . For node groups that weren't deployed using a launch template, this is the AMI type that was specified in the node group configuration.

            
          

          - **nodeRole** *(string) --* 

            The IAM role associated with your node group. The Amazon EKS node ``kubelet`` daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies.

            
          

          - **labels** *(dict) --* 

            The Kubernetes labels applied to the nodes in the node group.

             

            .. note::

               

              Only labels that are applied with the Amazon EKS API are shown here. There may be other Kubernetes labels applied to the nodes in this group.

               

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **taints** *(list) --* 

            The Kubernetes taints to be applied to the nodes in the node group when they are created. Effect is one of ``No_Schedule`` , ``Prefer_No_Schedule`` , or ``No_Execute`` . Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes.

            
            

            - *(dict) --* 

              A property that allows a node to repel a set of pods.

              
              

              - **key** *(string) --* 

                The key of the taint.

                
              

              - **value** *(string) --* 

                The value of the taint.

                
              

              - **effect** *(string) --* 

                The effect of the taint.

                
          
        
          

          - **resources** *(dict) --* 

            The resources associated with the node group, such as Auto Scaling groups and security groups for remote access.

            
            

            - **autoScalingGroups** *(list) --* 

              The Auto Scaling groups associated with the node group.

              
              

              - *(dict) --* 

                An Auto Scaling group that is associated with an Amazon EKS managed node group.

                
                

                - **name** *(string) --* 

                  The name of the Auto Scaling group associated with an Amazon EKS managed node group.

                  
            
          
            

            - **remoteAccessSecurityGroup** *(string) --* 

              The remote access security group associated with the node group. This security group controls SSH access to the nodes.

              
        
          

          - **diskSize** *(integer) --* 

            If the node group wasn't deployed with a launch template, then this is the disk size in the node group configuration. If the node group was deployed with a launch template, then this is ``null`` .

            
          

          - **health** *(dict) --* 

            The health status of the node group. If there are issues with your node group's health, they are listed here.

            
            

            - **issues** *(list) --* 

              Any issues that are associated with the node group. 

              
              

              - *(dict) --* 

                An object representing an issue with an Amazon EKS resource.

                
                

                - **code** *(string) --* 

                  A brief description of the error.

                   

                   
                  * **AccessDenied** : Amazon EKS or one or more of your managed nodes is failing to authenticate or authorize with your Kubernetes cluster API server. 
                   
                  * **AsgInstanceLaunchFailures** : Your Auto Scaling group is experiencing failures while attempting to launch instances. 
                   
                  * **AutoScalingGroupNotFound** : We couldn't find the Auto Scaling group associated with the managed node group. You may be able to recreate an Auto Scaling group with the same settings to recover. 
                   
                  * **ClusterUnreachable** : Amazon EKS or one or more of your managed nodes is unable to to communicate with your Kubernetes cluster API server. This can happen if there are network disruptions or if API servers are timing out processing requests.  
                   
                  * **Ec2LaunchTemplateNotFound** : We couldn't find the Amazon EC2 launch template for your managed node group. You may be able to recreate a launch template with the same settings to recover. 
                   
                  * **Ec2LaunchTemplateVersionMismatch** : The Amazon EC2 launch template version for your managed node group does not match the version that Amazon EKS created. You may be able to revert to the version that Amazon EKS created to recover. 
                   
                  * **Ec2SecurityGroupDeletionFailure** : We could not delete the remote access security group for your managed node group. Remove any dependencies from the security group. 
                   
                  * **Ec2SecurityGroupNotFound** : We couldn't find the cluster security group for the cluster. You must recreate your cluster. 
                   
                  * **Ec2SubnetInvalidConfiguration** : One or more Amazon EC2 subnets specified for a node group do not automatically assign public IP addresses to instances launched into it. If you want your instances to be assigned a public IP address, then you need to enable the ``auto-assign public IP address`` setting for the subnet. See `Modifying the public IPv4 addressing attribute for your subnet <https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip>`__ in the Amazon VPC User Guide. 
                   
                  * **IamInstanceProfileNotFound** : We couldn't find the IAM instance profile for your managed node group. You may be able to recreate an instance profile with the same settings to recover. 
                   
                  * **IamNodeRoleNotFound** : We couldn't find the IAM role for your managed node group. You may be able to recreate an IAM role with the same settings to recover. 
                   
                  * **InstanceLimitExceeded** : Your Amazon Web Services account is unable to launch any more instances of the specified instance type. You may be able to request an Amazon EC2 instance limit increase to recover. 
                   
                  * **InsufficientFreeAddresses** : One or more of the subnets associated with your managed node group does not have enough available IP addresses for new nodes. 
                   
                  * **InternalFailure** : These errors are usually caused by an Amazon EKS server-side issue. 
                   
                  * **NodeCreationFailure** : Your launched instances are unable to register with your Amazon EKS cluster. Common causes of this failure are insufficient `node IAM role <https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html>`__ permissions or lack of outbound internet access for the nodes.  
                   

                  
                

                - **message** *(string) --* 

                  The error message associated with the issue.

                  
                

                - **resourceIds** *(list) --* 

                  The Amazon Web Services resources that are afflicted by this issue.

                  
                  

                  - *(string) --* 
              
            
          
        
          

          - **updateConfig** *(dict) --* 

            The node group update configuration.

            
            

            - **maxUnavailable** *(integer) --* 

              The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or ``maxUnavailablePercentage`` is required to have a value.The maximum number is 100.

              
            

            - **maxUnavailablePercentage** *(integer) --* 

              The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or ``maxUnavailable`` is required to have a value.

              
        
          

          - **launchTemplate** *(dict) --* 

            If a launch template was used to create the node group, then this is the launch template that was used.

            
            

            - **name** *(string) --* 

              The name of the launch template.

              
            

            - **version** *(string) --* 

              The version of the launch template to use. If no version is specified, then the template's default version is used.

              
            

            - **id** *(string) --* 

              The ID of the launch template.

              
        
          

          - **tags** *(dict) --* 

            The metadata applied to the node group to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets. 

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

  .. py:method:: describe_update(**kwargs)

    

    Returns descriptive information about an update against your Amazon EKS cluster or associated managed node group.

     

    When the status of the update is ``Succeeded`` , the update is complete. If an update fails, the status is ``Failed`` , and an error detail explains the reason for the failure.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeUpdate>`_    


    **Request Syntax** 
    ::

      response = client.describe_update(
          name='string',
          updateId='string',
          nodegroupName='string',
          addonName='string'
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the update.

      

    
    :type updateId: string
    :param updateId: **[REQUIRED]** 

      The ID of the update to describe.

      

    
    :type nodegroupName: string
    :param nodegroupName: 

      The name of the Amazon EKS node group associated with the update.

      

    
    :type addonName: string
    :param addonName: 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          The full description of the specified update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: disassociate_identity_provider_config(**kwargs)

    

    Disassociates an identity provider configuration from a cluster. If you disassociate an identity provider from your cluster, users included in the provider can no longer access the cluster. However, you can still access the cluster with Amazon Web Services IAM users.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DisassociateIdentityProviderConfig>`_    


    **Request Syntax** 
    ::

      response = client.disassociate_identity_provider_config(
          clusterName='string',
          identityProviderConfig={
              'type': 'string',
              'name': 'string'
          },
          clientRequestToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster to disassociate an identity provider from.

      

    
    :type identityProviderConfig: dict
    :param identityProviderConfig: **[REQUIRED]** 

      An object that represents an identity provider configuration.

      

    
      - **type** *(string) --* **[REQUIRED]** 

        The type of the identity provider configuration.

        

      
      - **name** *(string) --* **[REQUIRED]** 

        The name of the identity provider configuration.

        

      
    
    :type clientRequestToken: string
    :param clientRequestToken: 

      A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_addons(**kwargs)

    

    Lists the available add-ons.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListAddons>`_    


    **Request Syntax** 
    ::

      response = client.list_addons(
          clusterName='string',
          maxResults=123,
          nextToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of add-on results returned by ``ListAddonsRequest`` in paginated output. When you use this parameter, ``ListAddonsRequest`` returns only ``maxResults`` results in a single page along with a ``nextToken`` response element. You can see the remaining results of the initial request by sending another ``ListAddonsRequest`` request with the returned ``nextToken`` value. This value can be between 1 and 100. If you don't use this parameter, ``ListAddonsRequest`` returns up to 100 results and a ``nextToken`` value, if applicable.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``ListAddonsRequest`` where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

       

      .. note::

         

        This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.

         

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addons': [
                'string',
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addons** *(list) --* 

          A list of available add-ons.

          
          

          - *(string) --* 
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value returned from a previous paginated ``ListAddonsResponse`` where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

           

          .. note::

             

            This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.

             

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    

  .. py:method:: list_clusters(**kwargs)

    

    Lists the Amazon EKS clusters in your Amazon Web Services account in the specified Region.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters>`_    


    **Request Syntax** 
    ::

      response = client.list_clusters(
          maxResults=123,
          nextToken='string'
      )
    :type maxResults: integer
    :param maxResults: 

      The maximum number of cluster results returned by ``ListClusters`` in paginated output. When you use this parameter, ``ListClusters`` returns only ``maxResults`` results in a single page along with a ``nextToken`` response element. You can see the remaining results of the initial request by sending another ``ListClusters`` request with the returned ``nextToken`` value. This value can be between 1 and 100. If you don't use this parameter, ``ListClusters`` returns up to 100 results and a ``nextToken`` value if applicable.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``ListClusters`` request where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

       

      .. note::

         

        This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.

         

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'clusters': [
                'string',
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **clusters** *(list) --* 

          A list of all of the clusters for your account in the specified Region.

          
          

          - *(string) --* 
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value to include in a future ``ListClusters`` request. When the results of a ``ListClusters`` request exceed ``maxResults`` , you can use this value to retrieve the next page of results. This value is ``null`` when there are no more results to return.

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    

    **Examples** 

    This example command lists all of your available clusters in your default region.
    ::

      response = client.list_clusters(
      )
      
      print(response)

    
    Expected Output:
    ::

      {
          'clusters': [
              'devel',
              'prod',
          ],
          'ResponseMetadata': {
              '...': '...',
          },
      }

    

  .. py:method:: list_fargate_profiles(**kwargs)

    

    Lists the Fargate profiles associated with the specified cluster in your Amazon Web Services account in the specified Region.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListFargateProfiles>`_    


    **Request Syntax** 
    ::

      response = client.list_fargate_profiles(
          clusterName='string',
          maxResults=123,
          nextToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that you would like to list Fargate profiles in.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of Fargate profile results returned by ``ListFargateProfiles`` in paginated output. When you use this parameter, ``ListFargateProfiles`` returns only ``maxResults`` results in a single page along with a ``nextToken`` response element. You can see the remaining results of the initial request by sending another ``ListFargateProfiles`` request with the returned ``nextToken`` value. This value can be between 1 and 100. If you don't use this parameter, ``ListFargateProfiles`` returns up to 100 results and a ``nextToken`` value if applicable.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``ListFargateProfiles`` request where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'fargateProfileNames': [
                'string',
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **fargateProfileNames** *(list) --* 

          A list of all of the Fargate profiles associated with the specified cluster.

          
          

          - *(string) --* 
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value to include in a future ``ListFargateProfiles`` request. When the results of a ``ListFargateProfiles`` request exceed ``maxResults`` , you can use this value to retrieve the next page of results. This value is ``null`` when there are no more results to return.

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    

  .. py:method:: list_identity_provider_configs(**kwargs)

    

    A list of identity provider configurations.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListIdentityProviderConfigs>`_    


    **Request Syntax** 
    ::

      response = client.list_identity_provider_configs(
          clusterName='string',
          maxResults=123,
          nextToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The cluster name that you want to list identity provider configurations for.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of identity provider configurations returned by ``ListIdentityProviderConfigs`` in paginated output. When you use this parameter, ``ListIdentityProviderConfigs`` returns only ``maxResults`` results in a single page along with a ``nextToken`` response element. You can see the remaining results of the initial request by sending another ``ListIdentityProviderConfigs`` request with the returned ``nextToken`` value. This value can be between 1 and 100. If you don't use this parameter, ``ListIdentityProviderConfigs`` returns up to 100 results and a ``nextToken`` value, if applicable.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``IdentityProviderConfigsRequest`` where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'identityProviderConfigs': [
                {
                    'type': 'string',
                    'name': 'string'
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **identityProviderConfigs** *(list) --* 

          The identity provider configurations for the cluster.

          
          

          - *(dict) --* 

            An object representing an identity provider configuration.

            
            

            - **type** *(string) --* 

              The type of the identity provider configuration.

              
            

            - **name** *(string) --* 

              The name of the identity provider configuration.

              
        
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value returned from a previous paginated ``ListIdentityProviderConfigsResponse`` where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: list_nodegroups(**kwargs)

    

    Lists the Amazon EKS managed node groups associated with the specified cluster in your Amazon Web Services account in the specified Region. Self-managed node groups are not listed.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListNodegroups>`_    


    **Request Syntax** 
    ::

      response = client.list_nodegroups(
          clusterName='string',
          maxResults=123,
          nextToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that you would like to list node groups in.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of node group results returned by ``ListNodegroups`` in paginated output. When you use this parameter, ``ListNodegroups`` returns only ``maxResults`` results in a single page along with a ``nextToken`` response element. You can see the remaining results of the initial request by sending another ``ListNodegroups`` request with the returned ``nextToken`` value. This value can be between 1 and 100. If you don't use this parameter, ``ListNodegroups`` returns up to 100 results and a ``nextToken`` value if applicable.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``ListNodegroups`` request where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'nodegroups': [
                'string',
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **nodegroups** *(list) --* 

          A list of all of the node groups associated with the specified cluster.

          
          

          - *(string) --* 
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value to include in a future ``ListNodegroups`` request. When the results of a ``ListNodegroups`` request exceed ``maxResults`` , you can use this value to retrieve the next page of results. This value is ``null`` when there are no more results to return.

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ServiceUnavailableException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: list_tags_for_resource(**kwargs)

    

    List the tags for an Amazon EKS resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          resourceArn='string'
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **tags** *(dict) --* 

          The tags for the resource.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.BadRequestException`

    
    *     :py:class:`EKS.Client.exceptions.NotFoundException`

    

  .. py:method:: list_updates(**kwargs)

    

    Lists the updates associated with an Amazon EKS cluster or managed node group in your Amazon Web Services account, in the specified Region.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates>`_    


    **Request Syntax** 
    ::

      response = client.list_updates(
          name='string',
          nodegroupName='string',
          addonName='string',
          nextToken='string',
          maxResults=123
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the Amazon EKS cluster to list updates for.

      

    
    :type nodegroupName: string
    :param nodegroupName: 

      The name of the Amazon EKS managed node group to list updates for.

      

    
    :type addonName: string
    :param addonName: 

      The names of the installed add-ons that have available updates.

      

    
    :type nextToken: string
    :param nextToken: 

      The ``nextToken`` value returned from a previous paginated ``ListUpdates`` request where ``maxResults`` was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the ``nextToken`` value.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of update results returned by ``ListUpdates`` in paginated output. When you use this parameter, ``ListUpdates`` returns only ``maxResults`` results in a single page along with a ``nextToken`` response element. You can see the remaining results of the initial request by sending another ``ListUpdates`` request with the returned ``nextToken`` value. This value can be between 1 and 100. If you don't use this parameter, ``ListUpdates`` returns up to 100 results and a ``nextToken`` value if applicable.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'updateIds': [
                'string',
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **updateIds** *(list) --* 

          A list of all the updates for the specified cluster and Region.

          
          

          - *(string) --* 
      
        

        - **nextToken** *(string) --* 

          The ``nextToken`` value to include in a future ``ListUpdates`` request. When the results of a ``ListUpdates`` request exceed ``maxResults`` , you can use this value to retrieve the next page of results. This value is ``null`` when there are no more results to return.

          
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Associates the specified tags to a resource with the specified ``resourceArn`` . If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well. Tags that you create for Amazon EKS resources do not propagate to any other resources associated with the cluster. For example, if you tag a cluster with this operation, that tag does not automatically propagate to the subnets and nodes associated with the cluster.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          resourceArn='string',
          tags={
              'string': 'string'
          }
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.

      

    
    :type tags: dict
    :param tags: **[REQUIRED]** 

      The tags to add to the resource. A tag is an array of key-value pairs.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.BadRequestException`

    
    *     :py:class:`EKS.Client.exceptions.NotFoundException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Deletes specified tags from a resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          resourceArn='string',
          tagKeys=[
              'string',
          ]
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.

      

    
    :type tagKeys: list
    :param tagKeys: **[REQUIRED]** 

      The keys of the tags to be removed.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.BadRequestException`

    
    *     :py:class:`EKS.Client.exceptions.NotFoundException`

    

  .. py:method:: update_addon(**kwargs)

    

    Updates an Amazon EKS add-on.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateAddon>`_    


    **Request Syntax** 
    ::

      response = client.update_addon(
          clusterName='string',
          addonName='string',
          addonVersion='string',
          serviceAccountRoleArn='string',
          resolveConflicts='OVERWRITE'|'NONE',
          clientRequestToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster.

      

    
    :type addonName: string
    :param addonName: **[REQUIRED]** 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    :type addonVersion: string
    :param addonVersion: 

      The version of the add-on. The version must match one of the versions returned by ` ``DescribeAddonVersions`` https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html`__ .

      

    
    :type serviceAccountRoleArn: string
    :param serviceAccountRoleArn: 

      The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see `Amazon EKS node IAM role <https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html>`__ in the *Amazon EKS User Guide* .

       

      .. note::

         

        To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see `Enabling IAM roles for service accounts on your cluster <https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html>`__ in the *Amazon EKS User Guide* .

         

      

    
    :type resolveConflicts: string
    :param resolveConflicts: 

      How to resolve parameter value conflicts when applying the new version of the add-on to the cluster.

      

    
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    

  .. py:method:: update_cluster_config(**kwargs)

    

    Updates an Amazon EKS cluster configuration. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the  DescribeUpdate API operation.

     

    You can use this API operation to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see `Amazon EKS Cluster Control Plane Logs <https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html>`__ in the * *Amazon EKS User Guide* * .

     

    .. note::

       

      CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see `CloudWatch Pricing <http://aws.amazon.com/cloudwatch/pricing/>`__ .

       

     

    You can also use this API operation to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * . 

     

    .. warning::

       

      You can't update the subnets or security group IDs for an existing cluster.

       

     

    Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to ``UPDATING`` (this status transition is eventually consistent). When the update is complete (either ``Failed`` or ``Successful`` ), the cluster status moves to ``Active`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterConfig>`_    


    **Request Syntax** 
    ::

      response = client.update_cluster_config(
          name='string',
          resourcesVpcConfig={
              'subnetIds': [
                  'string',
              ],
              'securityGroupIds': [
                  'string',
              ],
              'endpointPublicAccess': True|False,
              'endpointPrivateAccess': True|False,
              'publicAccessCidrs': [
                  'string',
              ]
          },
          logging={
              'clusterLogging': [
                  {
                      'types': [
                          'api'|'audit'|'authenticator'|'controllerManager'|'scheduler',
                      ],
                      'enabled': True|False
                  },
              ]
          },
          clientRequestToken='string'
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the Amazon EKS cluster to update.

      

    
    :type resourcesVpcConfig: dict
    :param resourcesVpcConfig: 

      An object representing the VPC configuration to use for an Amazon EKS cluster.

      

    
      - **subnetIds** *(list) --* 

        Specify subnets for your Amazon EKS nodes. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.

        

      
        - *(string) --* 

        
    
      - **securityGroupIds** *(list) --* 

        Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use that allow communication between your nodes and the Kubernetes control plane. If you don't specify any security groups, then familiarize yourself with the difference between Amazon EKS defaults for clusters deployed with Kubernetes:

         

         
        * 1.14 Amazon EKS platform version ``eks.2`` and earlier 
         
        * 1.14 Amazon EKS platform version ``eks.3`` and later  
         

         

        For more information, see `Amazon EKS security group considerations <https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the * *Amazon EKS User Guide* * .

        

      
        - *(string) --* 

        
    
      - **endpointPublicAccess** *(boolean) --* 

        Set this value to ``false`` to disable public access to your cluster's Kubernetes API server endpoint. If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is ``true`` , which enables public access for your Kubernetes API server. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

        

      
      - **endpointPrivateAccess** *(boolean) --* 

        Set this value to ``true`` to enable private access for your cluster's Kubernetes API server endpoint. If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is ``false`` , which disables private access for your Kubernetes API server. If you disable private access and you have nodes or Fargate pods in the cluster, then ensure that ``publicAccessCidrs`` includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

        

      
      - **publicAccessCidrs** *(list) --* 

        The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint. Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is ``0.0.0.0/0`` . If you've disabled private endpoint access and you have nodes or Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks. For more information, see `Amazon EKS cluster endpoint access control <https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html>`__ in the * *Amazon EKS User Guide* * .

        

      
        - *(string) --* 

        
    
    
    :type logging: dict
    :param logging: 

      Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see `Amazon EKS cluster control plane logs <https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html>`__ in the * *Amazon EKS User Guide* * .

       

      .. note::

         

        CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see `CloudWatch Pricing <http://aws.amazon.com/cloudwatch/pricing/>`__ .

         

      

    
      - **clusterLogging** *(list) --* 

        The cluster control plane logging configuration for your cluster.

        

      
        - *(dict) --* 

          An object representing the enabled or disabled Kubernetes control plane logs for your cluster.

          

        
          - **types** *(list) --* 

            The available cluster control plane log types.

            

          
            - *(string) --* 

            
        
          - **enabled** *(boolean) --* 

            If a log type is enabled, that log type exports its control plane logs to CloudWatch Logs. If a log type isn't enabled, that log type doesn't export its control plane logs. Each individual log type can be enabled or disabled independently.

            

          
        
    
    
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

  .. py:method:: update_cluster_version(**kwargs)

    

    Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the  DescribeUpdate API operation.

     

    Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to ``UPDATING`` (this status transition is eventually consistent). When the update is complete (either ``Failed`` or ``Successful`` ), the cluster status moves to ``Active`` .

     

    If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes versions must match the cluster’s Kubernetes version in order to update the cluster to a new Kubernetes version.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateClusterVersion>`_    


    **Request Syntax** 
    ::

      response = client.update_cluster_version(
          name='string',
          version='string',
          clientRequestToken='string'
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the Amazon EKS cluster to update.

      

    
    :type version: string
    :param version: **[REQUIRED]** 

      The desired Kubernetes version following a successful update.

      

    
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          The full description of the specified update

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

  .. py:method:: update_nodegroup_config(**kwargs)

    

    Updates an Amazon EKS managed node group configuration. Your node group continues to function during the update. The response output includes an update ID that you can use to track the status of your node group update with the  DescribeUpdate API operation. Currently you can update the Kubernetes labels for a node group or the scaling configuration.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupConfig>`_    


    **Request Syntax** 
    ::

      response = client.update_nodegroup_config(
          clusterName='string',
          nodegroupName='string',
          labels={
              'addOrUpdateLabels': {
                  'string': 'string'
              },
              'removeLabels': [
                  'string',
              ]
          },
          taints={
              'addOrUpdateTaints': [
                  {
                      'key': 'string',
                      'value': 'string',
                      'effect': 'NO_SCHEDULE'|'NO_EXECUTE'|'PREFER_NO_SCHEDULE'
                  },
              ],
              'removeTaints': [
                  {
                      'key': 'string',
                      'value': 'string',
                      'effect': 'NO_SCHEDULE'|'NO_EXECUTE'|'PREFER_NO_SCHEDULE'
                  },
              ]
          },
          scalingConfig={
              'minSize': 123,
              'maxSize': 123,
              'desiredSize': 123
          },
          updateConfig={
              'maxUnavailable': 123,
              'maxUnavailablePercentage': 123
          },
          clientRequestToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that the managed node group resides in.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The name of the managed node group to update.

      

    
    :type labels: dict
    :param labels: 

      The Kubernetes labels to be applied to the nodes in the node group after the update.

      

    
      - **addOrUpdateLabels** *(dict) --* 

        Kubernetes labels to be added or updated.

        

      
        - *(string) --* 

        
          - *(string) --* 

          
    
  
      - **removeLabels** *(list) --* 

        Kubernetes labels to be removed.

        

      
        - *(string) --* 

        
    
    
    :type taints: dict
    :param taints: 

      The Kubernetes taints to be applied to the nodes in the node group after the update.

      

    
      - **addOrUpdateTaints** *(list) --* 

        Kubernetes taints to be added or updated.

        

      
        - *(dict) --* 

          A property that allows a node to repel a set of pods.

          

        
          - **key** *(string) --* 

            The key of the taint.

            

          
          - **value** *(string) --* 

            The value of the taint.

            

          
          - **effect** *(string) --* 

            The effect of the taint.

            

          
        
    
      - **removeTaints** *(list) --* 

        Kubernetes taints to be removed.

        

      
        - *(dict) --* 

          A property that allows a node to repel a set of pods.

          

        
          - **key** *(string) --* 

            The key of the taint.

            

          
          - **value** *(string) --* 

            The value of the taint.

            

          
          - **effect** *(string) --* 

            The effect of the taint.

            

          
        
    
    
    :type scalingConfig: dict
    :param scalingConfig: 

      The scaling configuration details for the Auto Scaling group after the update.

      

    
      - **minSize** *(integer) --* 

        The minimum number of nodes that the managed node group can scale in to.

        

      
      - **maxSize** *(integer) --* 

        The maximum number of nodes that the managed node group can scale out to. For information about the maximum number that you can specify, see `Amazon EKS service quotas <https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html>`__ in the *Amazon EKS User Guide* .

        

      
      - **desiredSize** *(integer) --* 

        The current number of nodes that the managed node group should maintain.

        

      
    
    :type updateConfig: dict
    :param updateConfig: 

      The node group update configuration.

      

    
      - **maxUnavailable** *(integer) --* 

        The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. This value or ``maxUnavailablePercentage`` is required to have a value.The maximum number is 100.

        

      
      - **maxUnavailablePercentage** *(integer) --* 

        The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or ``maxUnavailable`` is required to have a value.

        

      
    
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

  .. py:method:: update_nodegroup_version(**kwargs)

    

    Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.

     

    You can update a node group using a launch template only if the node group was originally deployed with a launch template. If you need to update a custom AMI in a node group that was deployed with a launch template, then update your custom AMI, specify the new ID in a new version of the launch template, and then update the node group to the new version of the launch template.

     

    If you update without a launch template, then you can update to the latest available AMI version of a node group's current Kubernetes version by not specifying a Kubernetes version in the request. You can update to the latest AMI version of your cluster's current Kubernetes version by specifying your cluster's Kubernetes version in the request. For more information, see `Amazon EKS optimized Amazon Linux 2 AMI versions <https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html>`__ in the *Amazon EKS User Guide* .

     

    You cannot roll back a node group to an earlier Kubernetes version or AMI version.

     

    When a node in a managed node group is terminated due to a scaling action or update, the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully and will fail if it is unable to do so. You can ``force`` the update if Amazon EKS is unable to drain the nodes as a result of a pod disruption budget issue.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/UpdateNodegroupVersion>`_    


    **Request Syntax** 
    ::

      response = client.update_nodegroup_version(
          clusterName='string',
          nodegroupName='string',
          version='string',
          releaseVersion='string',
          launchTemplate={
              'name': 'string',
              'version': 'string',
              'id': 'string'
          },
          force=True|False,
          clientRequestToken='string'
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that is associated with the managed node group to update.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The name of the managed node group to update.

      

    
    :type version: string
    :param version: 

      The Kubernetes version to update to. If no version is specified, then the Kubernetes version of the node group does not change. You can specify the Kubernetes version of the cluster to update the node group to the latest AMI version of the cluster's Kubernetes version. If you specify ``launchTemplate`` , and your launch template uses a custom AMI, then don't specify ``version`` , or the node group update will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    :type releaseVersion: string
    :param releaseVersion: 

      The AMI version of the Amazon EKS optimized AMI to use for the update. By default, the latest available AMI version for the node group's Kubernetes version is used. For more information, see `Amazon EKS optimized Amazon Linux 2 AMI versions <https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html>`__ in the *Amazon EKS User Guide* . If you specify ``launchTemplate`` , and your launch template uses a custom AMI, then don't specify ``releaseVersion`` , or the node group update will fail. For more information about using launch templates with Amazon EKS, see `Launch template support <https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html>`__ in the Amazon EKS User Guide.

      

    
    :type launchTemplate: dict
    :param launchTemplate: 

      An object representing a node group's launch template specification. You can only update a node group using a launch template if the node group was originally deployed with a launch template.

      

    
      - **name** *(string) --* 

        The name of the launch template.

        

      
      - **version** *(string) --* 

        The version of the launch template to use. If no version is specified, then the template's default version is used.

        

      
      - **id** *(string) --* 

        The ID of the launch template.

        

      
    
    :type force: boolean
    :param force: 

      Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.

      

    
    :type clientRequestToken: string
    :param clientRequestToken: 

      Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

      This field is autopopulated if not provided.

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'update': {
                'id': 'string',
                'status': 'InProgress'|'Failed'|'Cancelled'|'Successful',
                'type': 'VersionUpdate'|'EndpointAccessUpdate'|'LoggingUpdate'|'ConfigUpdate'|'AssociateIdentityProviderConfig'|'DisassociateIdentityProviderConfig'|'AssociateEncryptionConfig'|'AddonUpdate',
                'params': [
                    {
                        'type': 'Version'|'PlatformVersion'|'EndpointPrivateAccess'|'EndpointPublicAccess'|'ClusterLogging'|'DesiredSize'|'LabelsToAdd'|'LabelsToRemove'|'TaintsToAdd'|'TaintsToRemove'|'MaxSize'|'MinSize'|'ReleaseVersion'|'PublicAccessCidrs'|'LaunchTemplateName'|'LaunchTemplateVersion'|'IdentityProviderConfig'|'EncryptionConfig'|'AddonVersion'|'ServiceAccountRoleArn'|'ResolveConflicts'|'MaxUnavailable'|'MaxUnavailablePercentage',
                        'value': 'string'
                    },
                ],
                'createdAt': datetime(2015, 1, 1),
                'errors': [
                    {
                        'errorCode': 'SubnetNotFound'|'SecurityGroupNotFound'|'EniLimitReached'|'IpNotAvailable'|'AccessDenied'|'OperationNotPermitted'|'VpcIdNotFound'|'Unknown'|'NodeCreationFailure'|'PodEvictionFailure'|'InsufficientFreeAddresses'|'ClusterUnreachable'|'InsufficientNumberOfReplicas'|'ConfigurationConflict'|'AdmissionRequestDenied'|'UnsupportedAddonModification',
                        'errorMessage': 'string',
                        'resourceIds': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **update** *(dict) --* 

          An object representing an asynchronous update.

          
          

          - **id** *(string) --* 

            A UUID that is used to track the update.

            
          

          - **status** *(string) --* 

            The current status of the update.

            
          

          - **type** *(string) --* 

            The type of the update.

            
          

          - **params** *(list) --* 

            A key-value map that contains the parameters associated with the update.

            
            

            - *(dict) --* 

              An object representing the details of an update request.

              
              

              - **type** *(string) --* 

                The keys associated with an update request.

                
              

              - **value** *(string) --* 

                The value of the keys submitted as part of an update request.

                
          
        
          

          - **createdAt** *(datetime) --* 

            The Unix epoch timestamp in seconds for when the update was created.

            
          

          - **errors** *(list) --* 

            Any errors associated with a ``Failed`` update.

            
            

            - *(dict) --* 

              An object representing an error when an asynchronous operation fails.

              
              

              - **errorCode** *(string) --* 

                A brief description of the error. 

                 

                 
                * **SubnetNotFound** : We couldn't find one of the subnets associated with the cluster. 
                 
                * **SecurityGroupNotFound** : We couldn't find one of the security groups associated with the cluster. 
                 
                * **EniLimitReached** : You have reached the elastic network interface limit for your account. 
                 
                * **IpNotAvailable** : A subnet associated with the cluster doesn't have any free IP addresses. 
                 
                * **AccessDenied** : You don't have permissions to perform the specified operation. 
                 
                * **OperationNotPermitted** : The service role associated with the cluster doesn't have the required access permissions for Amazon EKS. 
                 
                * **VpcIdNotFound** : We couldn't find the VPC associated with the cluster. 
                 

                
              

              - **errorMessage** *(string) --* 

                A more complete description of the error.

                
              

              - **resourceIds** *(list) --* 

                An optional field that contains the resource IDs associated with the error.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`EKS.Client.exceptions.InvalidParameterException`

    
    *     :py:class:`EKS.Client.exceptions.ClientException`

    
    *     :py:class:`EKS.Client.exceptions.ServerException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceInUseException`

    
    *     :py:class:`EKS.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`EKS.Client.exceptions.InvalidRequestException`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`EKS.Paginator.DescribeAddonVersions`


* :py:class:`EKS.Paginator.ListAddons`


* :py:class:`EKS.Paginator.ListClusters`


* :py:class:`EKS.Paginator.ListFargateProfiles`


* :py:class:`EKS.Paginator.ListIdentityProviderConfigs`


* :py:class:`EKS.Paginator.ListNodegroups`


* :py:class:`EKS.Paginator.ListUpdates`



.. py:class:: EKS.Paginator.DescribeAddonVersions

  ::

    
    paginator = client.get_paginator('describe_addon_versions')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.describe_addon_versions`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddonVersions>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          kubernetesVersion='string',
          addonName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type kubernetesVersion: string
    :param kubernetesVersion: 

      The Kubernetes versions that the add-on can be used with.

      

    
    :type addonName: string
    :param addonName: 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addons': [
                {
                    'addonName': 'string',
                    'type': 'string',
                    'addonVersions': [
                        {
                            'addonVersion': 'string',
                            'architecture': [
                                'string',
                            ],
                            'compatibilities': [
                                {
                                    'clusterVersion': 'string',
                                    'platformVersions': [
                                        'string',
                                    ],
                                    'defaultVersion': True|False
                                },
                            ]
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addons** *(list) --* 

          The list of available versions with Kubernetes version compatibility.

          
          

          - *(dict) --* 

            Information about an add-on.

            
            

            - **addonName** *(string) --* 

              The name of the add-on.

              
            

            - **type** *(string) --* 

              The type of the add-on.

              
            

            - **addonVersions** *(list) --* 

              An object that represents information about available add-on versions and compatible Kubernetes versions.

              
              

              - *(dict) --* 

                Information about an add-on version.

                
                

                - **addonVersion** *(string) --* 

                  The version of the add-on.

                  
                

                - **architecture** *(list) --* 

                  The architectures that the version supports.

                  
                  

                  - *(string) --* 
              
                

                - **compatibilities** *(list) --* 

                  An object that represents the compatibilities of a version.

                  
                  

                  - *(dict) --* 

                    Compatibility information.

                    
                    

                    - **clusterVersion** *(string) --* 

                      The supported Kubernetes version of the cluster.

                      
                    

                    - **platformVersions** *(list) --* 

                      The supported compute platform.

                      
                      

                      - *(string) --* 
                  
                    

                    - **defaultVersion** *(boolean) --* 

                      The supported default version.

                      
                
              
            
          
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: EKS.Paginator.ListAddons

  ::

    
    paginator = client.get_paginator('list_addons')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.list_addons`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListAddons>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          clusterName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'addons': [
                'string',
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **addons** *(list) --* 

          A list of available add-ons.

          
          

          - *(string) --* 
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: EKS.Paginator.ListClusters

  ::

    
    paginator = client.get_paginator('list_clusters')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.list_clusters`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListClusters>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'clusters': [
                'string',
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **clusters** *(list) --* 

          A list of all of the clusters for your account in the specified Region.

          
          

          - *(string) --* 
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: EKS.Paginator.ListFargateProfiles

  ::

    
    paginator = client.get_paginator('list_fargate_profiles')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.list_fargate_profiles`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListFargateProfiles>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          clusterName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that you would like to list Fargate profiles in.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'fargateProfileNames': [
                'string',
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **fargateProfileNames** *(list) --* 

          A list of all of the Fargate profiles associated with the specified cluster.

          
          

          - *(string) --* 
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: EKS.Paginator.ListIdentityProviderConfigs

  ::

    
    paginator = client.get_paginator('list_identity_provider_configs')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.list_identity_provider_configs`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListIdentityProviderConfigs>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          clusterName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The cluster name that you want to list identity provider configurations for.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'identityProviderConfigs': [
                {
                    'type': 'string',
                    'name': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **identityProviderConfigs** *(list) --* 

          The identity provider configurations for the cluster.

          
          

          - *(dict) --* 

            An object representing an identity provider configuration.

            
            

            - **type** *(string) --* 

              The type of the identity provider configuration.

              
            

            - **name** *(string) --* 

              The name of the identity provider configuration.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: EKS.Paginator.ListNodegroups

  ::

    
    paginator = client.get_paginator('list_nodegroups')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.list_nodegroups`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListNodegroups>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          clusterName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster that you would like to list node groups in.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'nodegroups': [
                'string',
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **nodegroups** *(list) --* 

          A list of all of the node groups associated with the specified cluster.

          
          

          - *(string) --* 
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: EKS.Paginator.ListUpdates

  ::

    
    paginator = client.get_paginator('list_updates')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`EKS.Client.list_updates`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/ListUpdates>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          name='string',
          nodegroupName='string',
          addonName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the Amazon EKS cluster to list updates for.

      

    
    :type nodegroupName: string
    :param nodegroupName: 

      The name of the Amazon EKS managed node group to list updates for.

      

    
    :type addonName: string
    :param addonName: 

      The names of the installed add-ons that have available updates.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'updateIds': [
                'string',
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **updateIds** *(list) --* 

          A list of all the updates for the specified cluster and Region.

          
          

          - *(string) --* 
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

=======
Waiters
=======


The available waiters are:

* :py:class:`EKS.Waiter.AddonActive`


* :py:class:`EKS.Waiter.AddonDeleted`


* :py:class:`EKS.Waiter.ClusterActive`


* :py:class:`EKS.Waiter.ClusterDeleted`


* :py:class:`EKS.Waiter.FargateProfileActive`


* :py:class:`EKS.Waiter.FargateProfileDeleted`


* :py:class:`EKS.Waiter.NodegroupActive`


* :py:class:`EKS.Waiter.NodegroupDeleted`



.. py:class:: EKS.Waiter.AddonActive

  ::

    
    waiter = client.get_waiter('addon_active')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_addon` every 10 seconds until a successful state is reached. An error is returned after 60 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          clusterName='string',
          addonName='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster.

      

    
    :type addonName: string
    :param addonName: **[REQUIRED]** 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 10

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 60

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.AddonDeleted

  ::

    
    waiter = client.get_waiter('addon_deleted')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_addon` every 10 seconds until a successful state is reached. An error is returned after 60 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeAddon>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          clusterName='string',
          addonName='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the cluster.

      

    
    :type addonName: string
    :param addonName: **[REQUIRED]** 

      The name of the add-on. The name must match one of the names returned by ` ``ListAddons`` https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html`__ .

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 10

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 60

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.ClusterActive

  ::

    
    waiter = client.get_waiter('cluster_active')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_cluster` every 30 seconds until a successful state is reached. An error is returned after 40 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          name='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the cluster to describe.

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 40

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.ClusterDeleted

  ::

    
    waiter = client.get_waiter('cluster_deleted')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_cluster` every 30 seconds until a successful state is reached. An error is returned after 40 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeCluster>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          name='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type name: string
    :param name: **[REQUIRED]** 

      The name of the cluster to describe.

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 40

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.FargateProfileActive

  ::

    
    waiter = client.get_waiter('fargate_profile_active')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_fargate_profile` every 10 seconds until a successful state is reached. An error is returned after 60 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          clusterName='string',
          fargateProfileName='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the Fargate profile.

      

    
    :type fargateProfileName: string
    :param fargateProfileName: **[REQUIRED]** 

      The name of the Fargate profile to describe.

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 10

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 60

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.FargateProfileDeleted

  ::

    
    waiter = client.get_waiter('fargate_profile_deleted')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_fargate_profile` every 30 seconds until a successful state is reached. An error is returned after 60 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeFargateProfile>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          clusterName='string',
          fargateProfileName='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the Fargate profile.

      

    
    :type fargateProfileName: string
    :param fargateProfileName: **[REQUIRED]** 

      The name of the Fargate profile to describe.

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 60

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.NodegroupActive

  ::

    
    waiter = client.get_waiter('nodegroup_active')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_nodegroup` every 30 seconds until a successful state is reached. An error is returned after 80 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          clusterName='string',
          nodegroupName='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the node group.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The name of the node group to describe.

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 80

        

      
    
    
    :returns: None

.. py:class:: EKS.Waiter.NodegroupDeleted

  ::

    
    waiter = client.get_waiter('nodegroup_deleted')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`EKS.Client.describe_nodegroup` every 30 seconds until a successful state is reached. An error is returned after 40 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/DescribeNodegroup>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          clusterName='string',
          nodegroupName='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type clusterName: string
    :param clusterName: **[REQUIRED]** 

      The name of the Amazon EKS cluster associated with the node group.

      

    
    :type nodegroupName: string
    :param nodegroupName: **[REQUIRED]** 

      The name of the node group to describe.

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 40

        

      
    
    
    :returns: None