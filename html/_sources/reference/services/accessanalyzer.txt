

**************
AccessAnalyzer
**************

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: AccessAnalyzer.Client

  A low-level client representing Access Analyzer
  

  AWS IAM Access Analyzer helps identify potential resource-access risks by enabling you to identify any policies that grant access to an external principal. It does this by using logic-based reasoning to analyze resource-based policies in your AWS environment. An external principal can be another AWS account, a root user, an IAM user or role, a federated user, an AWS service, or an anonymous user. You can also use Access Analyzer to preview and validate public and cross-account access to your resources before deploying permissions changes. This guide describes the AWS IAM Access Analyzer operations that you can call programmatically. For general information about Access Analyzer, see `AWS IAM Access Analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html>`__ in the **IAM User Guide** .

   

  To start using Access Analyzer, you first need to create an analyzer.

  ::

    
    import boto3
    
    client = boto3.client('accessanalyzer')

  
  These are the available methods:
  
  *   :py:meth:`~AccessAnalyzer.Client.apply_archive_rule`

  
  *   :py:meth:`~AccessAnalyzer.Client.can_paginate`

  
  *   :py:meth:`~AccessAnalyzer.Client.cancel_policy_generation`

  
  *   :py:meth:`~AccessAnalyzer.Client.create_access_preview`

  
  *   :py:meth:`~AccessAnalyzer.Client.create_analyzer`

  
  *   :py:meth:`~AccessAnalyzer.Client.create_archive_rule`

  
  *   :py:meth:`~AccessAnalyzer.Client.delete_analyzer`

  
  *   :py:meth:`~AccessAnalyzer.Client.delete_archive_rule`

  
  *   :py:meth:`~AccessAnalyzer.Client.generate_presigned_url`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_access_preview`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_analyzed_resource`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_analyzer`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_archive_rule`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_finding`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_generated_policy`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_paginator`

  
  *   :py:meth:`~AccessAnalyzer.Client.get_waiter`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_access_preview_findings`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_access_previews`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_analyzed_resources`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_analyzers`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_archive_rules`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_findings`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_policy_generations`

  
  *   :py:meth:`~AccessAnalyzer.Client.list_tags_for_resource`

  
  *   :py:meth:`~AccessAnalyzer.Client.start_policy_generation`

  
  *   :py:meth:`~AccessAnalyzer.Client.start_resource_scan`

  
  *   :py:meth:`~AccessAnalyzer.Client.tag_resource`

  
  *   :py:meth:`~AccessAnalyzer.Client.untag_resource`

  
  *   :py:meth:`~AccessAnalyzer.Client.update_archive_rule`

  
  *   :py:meth:`~AccessAnalyzer.Client.update_findings`

  
  *   :py:meth:`~AccessAnalyzer.Client.validate_policy`

  

  .. py:method:: apply_archive_rule(**kwargs)

    

    Retroactively applies the archive rule to existing findings that meet the archive rule criteria.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ApplyArchiveRule>`_    


    **Request Syntax** 
    ::

      response = client.apply_archive_rule(
          analyzerArn='string',
          clientToken='string',
          ruleName='string'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The Amazon resource name (ARN) of the analyzer.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type ruleName: string
    :param ruleName: **[REQUIRED]** 

      The name of the rule to apply.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: cancel_policy_generation(**kwargs)

    

    Cancels the requested policy generation.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/CancelPolicyGeneration>`_    


    **Request Syntax** 
    ::

      response = client.cancel_policy_generation(
          jobId='string'
      )
    :type jobId: string
    :param jobId: **[REQUIRED]** 

      The ``JobId`` that is returned by the ``StartPolicyGeneration`` operation. The ``JobId`` can be used with ``GetGeneratedPolicy`` to retrieve the generated policies or used with ``CancelPolicyGeneration`` to cancel the policy generation request.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: create_access_preview(**kwargs)

    

    Creates an access preview that allows you to preview Access Analyzer findings for your resource before deploying resource permissions.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/CreateAccessPreview>`_    


    **Request Syntax** 
    ::

      response = client.create_access_preview(
          analyzerArn='string',
          clientToken='string',
          configurations={
              'string': {
                  'iamRole': {
                      'trustPolicy': 'string'
                  },
                  'kmsKey': {
                      'grants': [
                          {
                              'constraints': {
                                  'encryptionContextEquals': {
                                      'string': 'string'
                                  },
                                  'encryptionContextSubset': {
                                      'string': 'string'
                                  }
                              },
                              'granteePrincipal': 'string',
                              'issuingAccount': 'string',
                              'operations': [
                                  'CreateGrant'|'Decrypt'|'DescribeKey'|'Encrypt'|'GenerateDataKey'|'GenerateDataKeyPair'|'GenerateDataKeyPairWithoutPlaintext'|'GenerateDataKeyWithoutPlaintext'|'GetPublicKey'|'ReEncryptFrom'|'ReEncryptTo'|'RetireGrant'|'Sign'|'Verify',
                              ],
                              'retiringPrincipal': 'string'
                          },
                      ],
                      'keyPolicies': {
                          'string': 'string'
                      }
                  },
                  's3Bucket': {
                      'accessPoints': {
                          'string': {
                              'accessPointPolicy': 'string',
                              'networkOrigin': {
                                  'internetConfiguration': {}
                                  ,
                                  'vpcConfiguration': {
                                      'vpcId': 'string'
                                  }
                              },
                              'publicAccessBlock': {
                                  'ignorePublicAcls': True|False,
                                  'restrictPublicBuckets': True|False
                              }
                          }
                      },
                      'bucketAclGrants': [
                          {
                              'grantee': {
                                  'id': 'string',
                                  'uri': 'string'
                              },
                              'permission': 'READ'|'WRITE'|'READ_ACP'|'WRITE_ACP'|'FULL_CONTROL'
                          },
                      ],
                      'bucketPolicy': 'string',
                      'bucketPublicAccessBlock': {
                          'ignorePublicAcls': True|False,
                          'restrictPublicBuckets': True|False
                      }
                  },
                  'secretsManagerSecret': {
                      'kmsKeyId': 'string',
                      'secretPolicy': 'string'
                  },
                  'sqsQueue': {
                      'queuePolicy': 'string'
                  }
              }
          }
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the account analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ used to generate the access preview. You can only create an access preview for analyzers with an ``Account`` type and ``Active`` status.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type configurations: dict
    :param configurations: **[REQUIRED]** 

      Access control configuration for your resource that is used to generate the access preview. The access preview includes findings for external access allowed to the resource with the proposed access control configuration. The configuration must contain exactly one element.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          Access control configuration structures for your resource. You specify the configuration as a type-value pair. You can specify only one type of access control configuration.

          

        
          - **iamRole** *(dict) --* 

            The access control configuration is for an IAM role. 

            

          
            - **trustPolicy** *(string) --* 

              The proposed trust policy for the IAM role.

              

            
          
          - **kmsKey** *(dict) --* 

            The access control configuration is for a KMS key. 

            

          
            - **grants** *(list) --* 

              A list of proposed grant configurations for the KMS key. If the proposed grant configuration is for an existing key, the access preview uses the proposed list of grant configurations in place of the existing grants. Otherwise, the access preview uses the existing grants for the key.

              

            
              - *(dict) --* 

                A proposed grant configuration for a KMS key. For more information, see `CreateGrant <https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html>`__ .

                

              
                - **constraints** *(dict) --* 

                  Use this structure to propose allowing `cryptographic operations <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations>`__ in the grant only when the operation request includes the specified `encryption context <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context>`__ .

                  

                
                  - **encryptionContextEquals** *(dict) --* 

                    A list of key-value pairs that must match the encryption context in the `cryptographic operation <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations>`__ request. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint.

                    

                  
                    - *(string) --* 

                    
                      - *(string) --* 

                      
                
              
                  - **encryptionContextSubset** *(dict) --* 

                    A list of key-value pairs that must be included in the encryption context of the `cryptographic operation <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations>`__ request. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs.

                    

                  
                    - *(string) --* 

                    
                      - *(string) --* 

                      
                
              
                
                - **granteePrincipal** *(string) --* **[REQUIRED]** 

                  The principal that is given permission to perform the operations that the grant permits.

                  

                
                - **issuingAccount** *(string) --* **[REQUIRED]** 

                  The AWS account under which the grant was issued. The account is used to propose KMS grants issued by accounts other than the owner of the key.

                  

                
                - **operations** *(list) --* **[REQUIRED]** 

                  A list of operations that the grant permits.

                  

                
                  - *(string) --* 

                  
              
                - **retiringPrincipal** *(string) --* 

                  The principal that is given permission to retire the grant by using `RetireGrant <https://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html>`__ operation.

                  

                
              
          
            - **keyPolicies** *(dict) --* 

              Resource policy configuration for the KMS key. The only valid value for the name of the key policy is ``default`` . For more information, see `Default key policy <https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default>`__ .

              

            
              - *(string) --* 

              
                - *(string) --* 

                
          
        
          
          - **s3Bucket** *(dict) --* 

            The access control configuration is for an Amazon S3 Bucket. 

            

          
            - **accessPoints** *(dict) --* 

              The configuration of Amazon S3 access points for the bucket.

              

            
              - *(string) --* 

              
                - *(dict) --* 

                  The configuration for an Amazon S3 access point for the bucket. You can propose up to 10 access points per bucket. If the proposed Amazon S3 access point configuration is for an existing bucket, the access preview uses the proposed access point configuration in place of the existing access points. To propose an access point without a policy, you can provide an empty string as the access point policy. For more information, see `Creating access points <https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html>`__ . For more information about access point policy limits, see `Access points restrictions and limitations <https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points-restrictions-limitations.html>`__ .

                  

                
                  - **accessPointPolicy** *(string) --* 

                    The access point policy.

                    

                  
                  - **networkOrigin** *(dict) --* 

                    The proposed ``Internet`` and ``VpcConfiguration`` to apply to this Amazon S3 access point. If the access preview is for a new resource and neither is specified, the access preview uses ``Internet`` for the network origin. If the access preview is for an existing resource and neither is specified, the access preview uses the exiting network origin.

                    

                  
                    - **internetConfiguration** *(dict) --* 

                      The configuration for the Amazon S3 access point with an ``Internet`` origin.

                      

                    
                    
                    - **vpcConfiguration** *(dict) --* 

                      The proposed virtual private cloud (VPC) configuration for the Amazon S3 access point. For more information, see `VpcConfiguration <https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_VpcConfiguration.html>`__ . 

                      

                    
                      - **vpcId** *(string) --* **[REQUIRED]** 

                        If this field is specified, this access point will only allow connections from the specified VPC ID. 

                        

                      
                    
                  
                  - **publicAccessBlock** *(dict) --* 

                    The proposed ``S3PublicAccessBlock`` configuration to apply to this Amazon S3 Access Point.

                    

                  
                    - **ignorePublicAcls** *(boolean) --* **[REQUIRED]** 

                      Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. 

                      

                    
                    - **restrictPublicBuckets** *(boolean) --* **[REQUIRED]** 

                      Specifies whether Amazon S3 should restrict public bucket policies for this bucket. 

                      

                    
                  
                
          
        
            - **bucketAclGrants** *(list) --* 

              The proposed list of ACL grants for the Amazon S3 bucket. You can propose up to 100 ACL grants per bucket. If the proposed grant configuration is for an existing bucket, the access preview uses the proposed list of grant configurations in place of the existing grants. Otherwise, the access preview uses the existing grants for the bucket.

              

            
              - *(dict) --* 

                A proposed access control list grant configuration for an Amazon S3 bucket. For more information, see `How to Specify an ACL <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#setting-acls>`__ .

                

              
                - **grantee** *(dict) --* **[REQUIRED]** 

                  The grantee to whom you’re assigning access rights.

                  

                
                  - **id** *(string) --* 

                    The value specified is the canonical user ID of an AWS account.

                    

                  
                  - **uri** *(string) --* 

                    Used for granting permissions to a predefined group.

                    

                  
                
                - **permission** *(string) --* **[REQUIRED]** 

                  The permissions being granted.

                  

                
              
          
            - **bucketPolicy** *(string) --* 

              The proposed bucket policy for the Amazon S3 bucket.

              

            
            - **bucketPublicAccessBlock** *(dict) --* 

              The proposed block public access configuration for the Amazon S3 bucket.

              

            
              - **ignorePublicAcls** *(boolean) --* **[REQUIRED]** 

                Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. 

                

              
              - **restrictPublicBuckets** *(boolean) --* **[REQUIRED]** 

                Specifies whether Amazon S3 should restrict public bucket policies for this bucket. 

                

              
            
          
          - **secretsManagerSecret** *(dict) --* 

            The access control configuration is for a Secrets Manager secret.

            

          
            - **kmsKeyId** *(string) --* 

              The proposed ARN, key ID, or alias of the AWS KMS customer master key (CMK).

              

            
            - **secretPolicy** *(string) --* 

              The proposed resource policy defining who can access or manage the secret.

              

            
          
          - **sqsQueue** *(dict) --* 

            The access control configuration is for an SQS queue. 

            

          
            - **queuePolicy** *(string) --* 

              The proposed resource policy for the SQS queue. 

              

            
          
        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'id': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **id** *(string) --* 

          The unique ID for the access preview.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ConflictException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: create_analyzer(**kwargs)

    

    Creates an analyzer for your account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/CreateAnalyzer>`_    


    **Request Syntax** 
    ::

      response = client.create_analyzer(
          analyzerName='string',
          archiveRules=[
              {
                  'filter': {
                      'string': {
                          'contains': [
                              'string',
                          ],
                          'eq': [
                              'string',
                          ],
                          'exists': True|False,
                          'neq': [
                              'string',
                          ]
                      }
                  },
                  'ruleName': 'string'
              },
          ],
          clientToken='string',
          tags={
              'string': 'string'
          },
          type='ACCOUNT'|'ORGANIZATION'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer to create.

      

    
    :type archiveRules: list
    :param archiveRules: 

      Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.

      

    
      - *(dict) --* 

        An criterion statement in an archive rule. Each archive rule may have multiple criteria.

        

      
        - **filter** *(dict) --* **[REQUIRED]** 

          The condition and values for a criterion.

          

        
          - *(string) --* 

          
            - *(dict) --* 

              The criteria to use in the filter that defines the archive rule.

              

            
              - **contains** *(list) --* 

                A "contains" operator to match for the filter used to create the rule.

                

              
                - *(string) --* 

                
            
              - **eq** *(list) --* 

                An "equals" operator to match for the filter used to create the rule.

                

              
                - *(string) --* 

                
            
              - **exists** *(boolean) --* 

                An "exists" operator to match for the filter used to create the rule. 

                

              
              - **neq** *(list) --* 

                A "not equals" operator to match for the filter used to create the rule.

                

              
                - *(string) --* 

                
            
            
      
    
        - **ruleName** *(string) --* **[REQUIRED]** 

          The name of the rule.

          

        
      
  
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type tags: dict
    :param tags: 

      The tags to apply to the analyzer.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type type: string
    :param type: **[REQUIRED]** 

      The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported. You can create only one analyzer per account per Region. You can create up to 5 analyzers per organization per Region.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request to create an analyzer.

        
        

        - **arn** *(string) --* 

          The ARN of the analyzer that was created by the request.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ConflictException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: create_archive_rule(**kwargs)

    

    Creates an archive rule for the specified analyzer. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.

     

    To learn about filter keys that you can use to create an archive rule, see `Access Analyzer filter keys <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html>`__ in the **IAM User Guide** .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/CreateArchiveRule>`_    


    **Request Syntax** 
    ::

      response = client.create_archive_rule(
          analyzerName='string',
          clientToken='string',
          filter={
              'string': {
                  'contains': [
                      'string',
                  ],
                  'eq': [
                      'string',
                  ],
                  'exists': True|False,
                  'neq': [
                      'string',
                  ]
              }
          },
          ruleName='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the created analyzer.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type filter: dict
    :param filter: **[REQUIRED]** 

      The criteria for the rule.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          The criteria to use in the filter that defines the archive rule.

          

        
          - **contains** *(list) --* 

            A "contains" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **eq** *(list) --* 

            An "equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **exists** *(boolean) --* 

            An "exists" operator to match for the filter used to create the rule. 

            

          
          - **neq** *(list) --* 

            A "not equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
        
  

    :type ruleName: string
    :param ruleName: **[REQUIRED]** 

      The name of the rule to create.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ConflictException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: delete_analyzer(**kwargs)

    

    Deletes the specified analyzer. When you delete an analyzer, Access Analyzer is disabled for the account or organization in the current or specific Region. All findings that were generated by the analyzer are deleted. You cannot undo this action.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/DeleteAnalyzer>`_    


    **Request Syntax** 
    ::

      response = client.delete_analyzer(
          analyzerName='string',
          clientToken='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer to delete.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: delete_archive_rule(**kwargs)

    

    Deletes the specified archive rule.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/DeleteArchiveRule>`_    


    **Request Syntax** 
    ::

      response = client.delete_archive_rule(
          analyzerName='string',
          clientToken='string',
          ruleName='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer that associated with the archive rule to delete.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type ruleName: string
    :param ruleName: **[REQUIRED]** 

      The name of the rule to delete.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_access_preview(**kwargs)

    

    Retrieves information about an access preview for the specified analyzer.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/GetAccessPreview>`_    


    **Request Syntax** 
    ::

      response = client.get_access_preview(
          accessPreviewId='string',
          analyzerArn='string'
      )
    :type accessPreviewId: string
    :param accessPreviewId: **[REQUIRED]** 

      The unique ID for the access preview.

      

    
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ used to generate the access preview.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'accessPreview': {
                'analyzerArn': 'string',
                'configurations': {
                    'string': {
                        'iamRole': {
                            'trustPolicy': 'string'
                        },
                        'kmsKey': {
                            'grants': [
                                {
                                    'constraints': {
                                        'encryptionContextEquals': {
                                            'string': 'string'
                                        },
                                        'encryptionContextSubset': {
                                            'string': 'string'
                                        }
                                    },
                                    'granteePrincipal': 'string',
                                    'issuingAccount': 'string',
                                    'operations': [
                                        'CreateGrant'|'Decrypt'|'DescribeKey'|'Encrypt'|'GenerateDataKey'|'GenerateDataKeyPair'|'GenerateDataKeyPairWithoutPlaintext'|'GenerateDataKeyWithoutPlaintext'|'GetPublicKey'|'ReEncryptFrom'|'ReEncryptTo'|'RetireGrant'|'Sign'|'Verify',
                                    ],
                                    'retiringPrincipal': 'string'
                                },
                            ],
                            'keyPolicies': {
                                'string': 'string'
                            }
                        },
                        's3Bucket': {
                            'accessPoints': {
                                'string': {
                                    'accessPointPolicy': 'string',
                                    'networkOrigin': {
                                        'internetConfiguration': {},
                                        'vpcConfiguration': {
                                            'vpcId': 'string'
                                        }
                                    },
                                    'publicAccessBlock': {
                                        'ignorePublicAcls': True|False,
                                        'restrictPublicBuckets': True|False
                                    }
                                }
                            },
                            'bucketAclGrants': [
                                {
                                    'grantee': {
                                        'id': 'string',
                                        'uri': 'string'
                                    },
                                    'permission': 'READ'|'WRITE'|'READ_ACP'|'WRITE_ACP'|'FULL_CONTROL'
                                },
                            ],
                            'bucketPolicy': 'string',
                            'bucketPublicAccessBlock': {
                                'ignorePublicAcls': True|False,
                                'restrictPublicBuckets': True|False
                            }
                        },
                        'secretsManagerSecret': {
                            'kmsKeyId': 'string',
                            'secretPolicy': 'string'
                        },
                        'sqsQueue': {
                            'queuePolicy': 'string'
                        }
                    }
                },
                'createdAt': datetime(2015, 1, 1),
                'id': 'string',
                'status': 'COMPLETED'|'CREATING'|'FAILED',
                'statusReason': {
                    'code': 'INTERNAL_ERROR'|'INVALID_CONFIGURATION'
                }
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **accessPreview** *(dict) --* 

          An object that contains information about the access preview.

          
          

          - **analyzerArn** *(string) --* 

            The ARN of the analyzer used to generate the access preview.

            
          

          - **configurations** *(dict) --* 

            A map of resource ARNs for the proposed resource configuration.

            
            

            - *(string) --* 
              

              - *(dict) --* 

                Access control configuration structures for your resource. You specify the configuration as a type-value pair. You can specify only one type of access control configuration.

                
                

                - **iamRole** *(dict) --* 

                  The access control configuration is for an IAM role. 

                  
                  

                  - **trustPolicy** *(string) --* 

                    The proposed trust policy for the IAM role.

                    
              
                

                - **kmsKey** *(dict) --* 

                  The access control configuration is for a KMS key. 

                  
                  

                  - **grants** *(list) --* 

                    A list of proposed grant configurations for the KMS key. If the proposed grant configuration is for an existing key, the access preview uses the proposed list of grant configurations in place of the existing grants. Otherwise, the access preview uses the existing grants for the key.

                    
                    

                    - *(dict) --* 

                      A proposed grant configuration for a KMS key. For more information, see `CreateGrant <https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html>`__ .

                      
                      

                      - **constraints** *(dict) --* 

                        Use this structure to propose allowing `cryptographic operations <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations>`__ in the grant only when the operation request includes the specified `encryption context <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context>`__ .

                        
                        

                        - **encryptionContextEquals** *(dict) --* 

                          A list of key-value pairs that must match the encryption context in the `cryptographic operation <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations>`__ request. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint.

                          
                          

                          - *(string) --* 
                            

                            - *(string) --* 
                      
                    
                        

                        - **encryptionContextSubset** *(dict) --* 

                          A list of key-value pairs that must be included in the encryption context of the `cryptographic operation <https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations>`__ request. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs.

                          
                          

                          - *(string) --* 
                            

                            - *(string) --* 
                      
                    
                    
                      

                      - **granteePrincipal** *(string) --* 

                        The principal that is given permission to perform the operations that the grant permits.

                        
                      

                      - **issuingAccount** *(string) --* 

                        The AWS account under which the grant was issued. The account is used to propose KMS grants issued by accounts other than the owner of the key.

                        
                      

                      - **operations** *(list) --* 

                        A list of operations that the grant permits.

                        
                        

                        - *(string) --* 
                    
                      

                      - **retiringPrincipal** *(string) --* 

                        The principal that is given permission to retire the grant by using `RetireGrant <https://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html>`__ operation.

                        
                  
                
                  

                  - **keyPolicies** *(dict) --* 

                    Resource policy configuration for the KMS key. The only valid value for the name of the key policy is ``default`` . For more information, see `Default key policy <https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default>`__ .

                    
                    

                    - *(string) --* 
                      

                      - *(string) --* 
                
              
              
                

                - **s3Bucket** *(dict) --* 

                  The access control configuration is for an Amazon S3 Bucket. 

                  
                  

                  - **accessPoints** *(dict) --* 

                    The configuration of Amazon S3 access points for the bucket.

                    
                    

                    - *(string) --* 
                      

                      - *(dict) --* 

                        The configuration for an Amazon S3 access point for the bucket. You can propose up to 10 access points per bucket. If the proposed Amazon S3 access point configuration is for an existing bucket, the access preview uses the proposed access point configuration in place of the existing access points. To propose an access point without a policy, you can provide an empty string as the access point policy. For more information, see `Creating access points <https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html>`__ . For more information about access point policy limits, see `Access points restrictions and limitations <https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points-restrictions-limitations.html>`__ .

                        
                        

                        - **accessPointPolicy** *(string) --* 

                          The access point policy.

                          
                        

                        - **networkOrigin** *(dict) --* 

                          The proposed ``Internet`` and ``VpcConfiguration`` to apply to this Amazon S3 access point. If the access preview is for a new resource and neither is specified, the access preview uses ``Internet`` for the network origin. If the access preview is for an existing resource and neither is specified, the access preview uses the exiting network origin.

                          
                          

                          - **internetConfiguration** *(dict) --* 

                            The configuration for the Amazon S3 access point with an ``Internet`` origin.

                            
                        
                          

                          - **vpcConfiguration** *(dict) --* 

                            The proposed virtual private cloud (VPC) configuration for the Amazon S3 access point. For more information, see `VpcConfiguration <https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_VpcConfiguration.html>`__ . 

                            
                            

                            - **vpcId** *(string) --* 

                              If this field is specified, this access point will only allow connections from the specified VPC ID. 

                              
                        
                      
                        

                        - **publicAccessBlock** *(dict) --* 

                          The proposed ``S3PublicAccessBlock`` configuration to apply to this Amazon S3 Access Point.

                          
                          

                          - **ignorePublicAcls** *(boolean) --* 

                            Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. 

                            
                          

                          - **restrictPublicBuckets** *(boolean) --* 

                            Specifies whether Amazon S3 should restrict public bucket policies for this bucket. 

                            
                      
                    
                
              
                  

                  - **bucketAclGrants** *(list) --* 

                    The proposed list of ACL grants for the Amazon S3 bucket. You can propose up to 100 ACL grants per bucket. If the proposed grant configuration is for an existing bucket, the access preview uses the proposed list of grant configurations in place of the existing grants. Otherwise, the access preview uses the existing grants for the bucket.

                    
                    

                    - *(dict) --* 

                      A proposed access control list grant configuration for an Amazon S3 bucket. For more information, see `How to Specify an ACL <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#setting-acls>`__ .

                      
                      

                      - **grantee** *(dict) --* 

                        The grantee to whom you’re assigning access rights.

                        
                        

                        - **id** *(string) --* 

                          The value specified is the canonical user ID of an AWS account.

                          
                        

                        - **uri** *(string) --* 

                          Used for granting permissions to a predefined group.

                          
                    
                      

                      - **permission** *(string) --* 

                        The permissions being granted.

                        
                  
                
                  

                  - **bucketPolicy** *(string) --* 

                    The proposed bucket policy for the Amazon S3 bucket.

                    
                  

                  - **bucketPublicAccessBlock** *(dict) --* 

                    The proposed block public access configuration for the Amazon S3 bucket.

                    
                    

                    - **ignorePublicAcls** *(boolean) --* 

                      Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. 

                      
                    

                    - **restrictPublicBuckets** *(boolean) --* 

                      Specifies whether Amazon S3 should restrict public bucket policies for this bucket. 

                      
                
              
                

                - **secretsManagerSecret** *(dict) --* 

                  The access control configuration is for a Secrets Manager secret.

                  
                  

                  - **kmsKeyId** *(string) --* 

                    The proposed ARN, key ID, or alias of the AWS KMS customer master key (CMK).

                    
                  

                  - **secretPolicy** *(string) --* 

                    The proposed resource policy defining who can access or manage the secret.

                    
              
                

                - **sqsQueue** *(dict) --* 

                  The access control configuration is for an SQS queue. 

                  
                  

                  - **queuePolicy** *(string) --* 

                    The proposed resource policy for the SQS queue. 

                    
              
            
        
      
          

          - **createdAt** *(datetime) --* 

            The time at which the access preview was created.

            
          

          - **id** *(string) --* 

            The unique ID for the access preview.

            
          

          - **status** *(string) --* 

            The status of the access preview.

             

             
            * ``Creating`` - The access preview creation is in progress. 
             
            * ``Completed`` - The access preview is complete. You can preview findings for external access to the resource. 
             
            * ``Failed`` - The access preview creation has failed. 
             

            
          

          - **statusReason** *(dict) --* 

            Provides more details about the current status of the access preview.

             

            For example, if the creation of the access preview fails, a ``Failed`` status is returned. This failure can be due to an internal issue with the analysis or due to an invalid resource configuration.

            
            

            - **code** *(string) --* 

              The reason code for the current status of the access preview.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: get_analyzed_resource(**kwargs)

    

    Retrieves information about a resource that was analyzed.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/GetAnalyzedResource>`_    


    **Request Syntax** 
    ::

      response = client.get_analyzed_resource(
          analyzerArn='string',
          resourceArn='string'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ to retrieve information from.

      

    
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The ARN of the resource to retrieve information about.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'resource': {
                'actions': [
                    'string',
                ],
                'analyzedAt': datetime(2015, 1, 1),
                'createdAt': datetime(2015, 1, 1),
                'error': 'string',
                'isPublic': True|False,
                'resourceArn': 'string',
                'resourceOwnerAccount': 'string',
                'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
                'sharedVia': [
                    'string',
                ],
                'status': 'ACTIVE'|'ARCHIVED'|'RESOLVED',
                'updatedAt': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **resource** *(dict) --* 

          An ``AnalyzedResource`` object that contains information that Access Analyzer found when it analyzed the resource.

          
          

          - **actions** *(list) --* 

            The actions that an external principal is granted permission to use by the policy that generated the finding.

            
            

            - *(string) --* 
        
          

          - **analyzedAt** *(datetime) --* 

            The time at which the resource was analyzed.

            
          

          - **createdAt** *(datetime) --* 

            The time at which the finding was created.

            
          

          - **error** *(string) --* 

            An error message.

            
          

          - **isPublic** *(boolean) --* 

            Indicates whether the policy that generated the finding grants public access to the resource.

            
          

          - **resourceArn** *(string) --* 

            The ARN of the resource that was analyzed.

            
          

          - **resourceOwnerAccount** *(string) --* 

            The AWS account ID that owns the resource.

            
          

          - **resourceType** *(string) --* 

            The type of the resource that was analyzed.

            
          

          - **sharedVia** *(list) --* 

            Indicates how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.

            
            

            - *(string) --* 
        
          

          - **status** *(string) --* 

            The current status of the finding generated from the analyzed resource.

            
          

          - **updatedAt** *(datetime) --* 

            The time at which the finding was updated.

            
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: get_analyzer(**kwargs)

    

    Retrieves information about the specified analyzer.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/GetAnalyzer>`_    


    **Request Syntax** 
    ::

      response = client.get_analyzer(
          analyzerName='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer retrieved.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'analyzer': {
                'arn': 'string',
                'createdAt': datetime(2015, 1, 1),
                'lastResourceAnalyzed': 'string',
                'lastResourceAnalyzedAt': datetime(2015, 1, 1),
                'name': 'string',
                'status': 'ACTIVE'|'CREATING'|'DISABLED'|'FAILED',
                'statusReason': {
                    'code': 'AWS_SERVICE_ACCESS_DISABLED'|'DELEGATED_ADMINISTRATOR_DEREGISTERED'|'ORGANIZATION_DELETED'|'SERVICE_LINKED_ROLE_CREATION_FAILED'
                },
                'tags': {
                    'string': 'string'
                },
                'type': 'ACCOUNT'|'ORGANIZATION'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **analyzer** *(dict) --* 

          An ``AnalyzerSummary`` object that contains information about the analyzer.

          
          

          - **arn** *(string) --* 

            The ARN of the analyzer.

            
          

          - **createdAt** *(datetime) --* 

            A timestamp for the time at which the analyzer was created.

            
          

          - **lastResourceAnalyzed** *(string) --* 

            The resource that was most recently analyzed by the analyzer.

            
          

          - **lastResourceAnalyzedAt** *(datetime) --* 

            The time at which the most recently analyzed resource was analyzed.

            
          

          - **name** *(string) --* 

            The name of the analyzer.

            
          

          - **status** *(string) --* 

            The status of the analyzer. An ``Active`` analyzer successfully monitors supported resources and generates new findings. The analyzer is ``Disabled`` when a user action, such as removing trusted access for AWS IAM Access Analyzer from AWS Organizations, causes the analyzer to stop generating new findings. The status is ``Creating`` when the analyzer creation is in progress and ``Failed`` when the analyzer creation has failed. 

            
          

          - **statusReason** *(dict) --* 

            The ``statusReason`` provides more details about the current status of the analyzer. For example, if the creation for the analyzer fails, a ``Failed`` status is returned. For an analyzer with organization as the type, this failure can be due to an issue with creating the service-linked roles required in the member accounts of the AWS organization.

            
            

            - **code** *(string) --* 

              The reason code for the current status of the analyzer.

              
        
          

          - **tags** *(dict) --* 

            The tags added to the analyzer.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **type** *(string) --* 

            The type of analyzer, which corresponds to the zone of trust chosen for the analyzer.

            
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: get_archive_rule(**kwargs)

    

    Retrieves information about an archive rule.

     

    To learn about filter keys that you can use to create an archive rule, see `Access Analyzer filter keys <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html>`__ in the **IAM User Guide** .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/GetArchiveRule>`_    


    **Request Syntax** 
    ::

      response = client.get_archive_rule(
          analyzerName='string',
          ruleName='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer to retrieve rules from.

      

    
    :type ruleName: string
    :param ruleName: **[REQUIRED]** 

      The name of the rule to retrieve.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'archiveRule': {
                'createdAt': datetime(2015, 1, 1),
                'filter': {
                    'string': {
                        'contains': [
                            'string',
                        ],
                        'eq': [
                            'string',
                        ],
                        'exists': True|False,
                        'neq': [
                            'string',
                        ]
                    }
                },
                'ruleName': 'string',
                'updatedAt': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **archiveRule** *(dict) --* 

          Contains information about an archive rule.

          
          

          - **createdAt** *(datetime) --* 

            The time at which the archive rule was created.

            
          

          - **filter** *(dict) --* 

            A filter used to define the archive rule.

            
            

            - *(string) --* 
              

              - *(dict) --* 

                The criteria to use in the filter that defines the archive rule.

                
                

                - **contains** *(list) --* 

                  A "contains" operator to match for the filter used to create the rule.

                  
                  

                  - *(string) --* 
              
                

                - **eq** *(list) --* 

                  An "equals" operator to match for the filter used to create the rule.

                  
                  

                  - *(string) --* 
              
                

                - **exists** *(boolean) --* 

                  An "exists" operator to match for the filter used to create the rule. 

                  
                

                - **neq** *(list) --* 

                  A "not equals" operator to match for the filter used to create the rule.

                  
                  

                  - *(string) --* 
              
            
        
      
          

          - **ruleName** *(string) --* 

            The name of the archive rule.

            
          

          - **updatedAt** *(datetime) --* 

            The time at which the archive rule was last updated.

            
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: get_finding(**kwargs)

    

    Retrieves information about the specified finding.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/GetFinding>`_    


    **Request Syntax** 
    ::

      response = client.get_finding(
          analyzerArn='string',
          id='string'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ that generated the finding.

      

    
    :type id: string
    :param id: **[REQUIRED]** 

      The ID of the finding to retrieve.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'finding': {
                'action': [
                    'string',
                ],
                'analyzedAt': datetime(2015, 1, 1),
                'condition': {
                    'string': 'string'
                },
                'createdAt': datetime(2015, 1, 1),
                'error': 'string',
                'id': 'string',
                'isPublic': True|False,
                'principal': {
                    'string': 'string'
                },
                'resource': 'string',
                'resourceOwnerAccount': 'string',
                'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
                'sources': [
                    {
                        'detail': {
                            'accessPointArn': 'string'
                        },
                        'type': 'POLICY'|'BUCKET_ACL'|'S3_ACCESS_POINT'
                    },
                ],
                'status': 'ACTIVE'|'ARCHIVED'|'RESOLVED',
                'updatedAt': datetime(2015, 1, 1)
            }
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **finding** *(dict) --* 

          A ``finding`` object that contains finding details.

          
          

          - **action** *(list) --* 

            The action in the analyzed policy statement that an external principal has permission to use.

            
            

            - *(string) --* 
        
          

          - **analyzedAt** *(datetime) --* 

            The time at which the resource was analyzed.

            
          

          - **condition** *(dict) --* 

            The condition in the analyzed policy statement that resulted in a finding.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **createdAt** *(datetime) --* 

            The time at which the finding was generated.

            
          

          - **error** *(string) --* 

            An error.

            
          

          - **id** *(string) --* 

            The ID of the finding.

            
          

          - **isPublic** *(boolean) --* 

            Indicates whether the policy that generated the finding allows public access to the resource.

            
          

          - **principal** *(dict) --* 

            The external principal that access to a resource within the zone of trust.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **resource** *(string) --* 

            The resource that an external principal has access to.

            
          

          - **resourceOwnerAccount** *(string) --* 

            The AWS account ID that owns the resource.

            
          

          - **resourceType** *(string) --* 

            The type of the resource identified in the finding.

            
          

          - **sources** *(list) --* 

            The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

            
            

            - *(dict) --* 

              The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

              
              

              - **detail** *(dict) --* 

                Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.

                
                

                - **accessPointArn** *(string) --* 

                  The ARN of the access point that generated the finding.

                  
            
              

              - **type** *(string) --* 

                Indicates the type of access that generated the finding.

                
          
        
          

          - **status** *(string) --* 

            The current status of the finding.

            
          

          - **updatedAt** *(datetime) --* 

            The time at which the finding was updated.

            
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: get_generated_policy(**kwargs)

    

    Retrieves the policy that was generated using ``StartPolicyGeneration`` . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/GetGeneratedPolicy>`_    


    **Request Syntax** 
    ::

      response = client.get_generated_policy(
          includeResourcePlaceholders=True|False,
          includeServiceLevelTemplate=True|False,
          jobId='string'
      )
    :type includeResourcePlaceholders: boolean
    :param includeResourcePlaceholders: 

      The level of detail that you want to generate. You can specify whether to generate policies with placeholders for resource ARNs for actions that support resource level granularity in policies.

       

      For example, in the resource section of a policy, you can receive a placeholder such as ``"Resource":"arn:aws:s3:::${BucketName}"`` instead of ``"*"`` .

      

    
    :type includeServiceLevelTemplate: boolean
    :param includeServiceLevelTemplate: 

      The level of detail that you want to generate. You can specify whether to generate service-level policies. 

       

      Access Analyzer uses ``iam:servicelastaccessed`` to identify services that have been used recently to create this service-level template.

      

    
    :type jobId: string
    :param jobId: **[REQUIRED]** 

      The ``JobId`` that is returned by the ``StartPolicyGeneration`` operation. The ``JobId`` can be used with ``GetGeneratedPolicy`` to retrieve the generated policies or used with ``CancelPolicyGeneration`` to cancel the policy generation request.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'generatedPolicyResult': {
                'generatedPolicies': [
                    {
                        'policy': 'string'
                    },
                ],
                'properties': {
                    'cloudTrailProperties': {
                        'endTime': datetime(2015, 1, 1),
                        'startTime': datetime(2015, 1, 1),
                        'trailProperties': [
                            {
                                'allRegions': True|False,
                                'cloudTrailArn': 'string',
                                'regions': [
                                    'string',
                                ]
                            },
                        ]
                    },
                    'isComplete': True|False,
                    'principalArn': 'string'
                }
            },
            'jobDetails': {
                'completedOn': datetime(2015, 1, 1),
                'jobError': {
                    'code': 'AUTHORIZATION_ERROR'|'RESOURCE_NOT_FOUND_ERROR'|'SERVICE_QUOTA_EXCEEDED_ERROR'|'SERVICE_ERROR',
                    'message': 'string'
                },
                'jobId': 'string',
                'startedOn': datetime(2015, 1, 1),
                'status': 'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'CANCELED'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **generatedPolicyResult** *(dict) --* 

          A ``GeneratedPolicyResult`` object that contains the generated policies and associated details.

          
          

          - **generatedPolicies** *(list) --* 

            The text to use as the content for the new policy. The policy is created using the `CreatePolicy <https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html>`__ action.

            
            

            - *(dict) --* 

              Contains the text for the generated policy.

              
              

              - **policy** *(string) --* 

                The text to use as the content for the new policy. The policy is created using the `CreatePolicy <https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html>`__ action.

                
          
        
          

          - **properties** *(dict) --* 

            A ``GeneratedPolicyProperties`` object that contains properties of the generated policy.

            
            

            - **cloudTrailProperties** *(dict) --* 

              Lists details about the ``Trail`` used to generated policy.

              
              

              - **endTime** *(datetime) --* 

                The end of the time range for which Access Analyzer reviews your CloudTrail events. Events with a timestamp after this time are not considered to generate a policy. If this is not included in the request, the default value is the current time.

                
              

              - **startTime** *(datetime) --* 

                The start of the time range for which Access Analyzer reviews your CloudTrail events. Events with a timestamp before this time are not considered to generate a policy.

                
              

              - **trailProperties** *(list) --* 

                A ``TrailProperties`` object that contains settings for trail properties.

                
                

                - *(dict) --* 

                  Contains details about the CloudTrail trail being analyzed to generate a policy.

                  
                  

                  - **allRegions** *(boolean) --* 

                    Possible values are ``true`` or ``false`` . If set to ``true`` , Access Analyzer retrieves CloudTrail data from all regions to analyze and generate a policy.

                    
                  

                  - **cloudTrailArn** *(string) --* 

                    Specifies the ARN of the trail. The format of a trail ARN is ``arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail`` .

                    
                  

                  - **regions** *(list) --* 

                    A list of regions to get CloudTrail data from and analyze to generate a policy.

                    
                    

                    - *(string) --* 
                
              
            
          
            

            - **isComplete** *(boolean) --* 

              This value is set to ``true`` if the generated policy contains all possible actions for a service that Access Analyzer identified from the CloudTrail trail that you specified, and ``false`` otherwise.

              
            

            - **principalArn** *(string) --* 

              The ARN of the IAM entity (user or role) for which you are generating a policy.

              
        
      
        

        - **jobDetails** *(dict) --* 

          A ``GeneratedPolicyDetails`` object that contains details about the generated policy.

          
          

          - **completedOn** *(datetime) --* 

            A timestamp of when the job was completed.

            
          

          - **jobError** *(dict) --* 

            Contains the details about the policy generation error.

            
            

            - **code** *(string) --* 

              The job error code.

              
            

            - **message** *(string) --* 

              Specific information about the error. For example, which service quota was exceeded or which resource was not found.

              
        
          

          - **jobId** *(string) --* 

            The ``JobId`` that is returned by the ``StartPolicyGeneration`` operation. The ``JobId`` can be used with ``GetGeneratedPolicy`` to retrieve the generated policies or used with ``CancelPolicyGeneration`` to cancel the policy generation request.

            
          

          - **startedOn** *(datetime) --* 

            A timestamp of when the job was started.

            
          

          - **status** *(string) --* 

            The status of the job request.

            
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_access_preview_findings(**kwargs)

    

    Retrieves a list of access preview findings generated by the specified access preview.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAccessPreviewFindings>`_    


    **Request Syntax** 
    ::

      response = client.list_access_preview_findings(
          accessPreviewId='string',
          analyzerArn='string',
          filter={
              'string': {
                  'contains': [
                      'string',
                  ],
                  'eq': [
                      'string',
                  ],
                  'exists': True|False,
                  'neq': [
                      'string',
                  ]
              }
          },
          maxResults=123,
          nextToken='string'
      )
    :type accessPreviewId: string
    :param accessPreviewId: **[REQUIRED]** 

      The unique ID for the access preview.

      

    
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ used to generate the access.

      

    
    :type filter: dict
    :param filter: 

      Criteria to filter the returned findings.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          The criteria to use in the filter that defines the archive rule.

          

        
          - **contains** *(list) --* 

            A "contains" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **eq** *(list) --* 

            An "equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **exists** *(boolean) --* 

            An "exists" operator to match for the filter used to create the rule. 

            

          
          - **neq** *(list) --* 

            A "not equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
        
  

    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'findings': [
                {
                    'action': [
                        'string',
                    ],
                    'changeType': 'CHANGED'|'NEW'|'UNCHANGED',
                    'condition': {
                        'string': 'string'
                    },
                    'createdAt': datetime(2015, 1, 1),
                    'error': 'string',
                    'existingFindingId': 'string',
                    'existingFindingStatus': 'ACTIVE'|'ARCHIVED'|'RESOLVED',
                    'id': 'string',
                    'isPublic': True|False,
                    'principal': {
                        'string': 'string'
                    },
                    'resource': 'string',
                    'resourceOwnerAccount': 'string',
                    'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
                    'sources': [
                        {
                            'detail': {
                                'accessPointArn': 'string'
                            },
                            'type': 'POLICY'|'BUCKET_ACL'|'S3_ACCESS_POINT'
                        },
                    ],
                    'status': 'ACTIVE'|'ARCHIVED'|'RESOLVED'
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **findings** *(list) --* 

          A list of access preview findings that match the specified filter criteria.

          
          

          - *(dict) --* 

            An access preview finding generated by the access preview.

            
            

            - **action** *(list) --* 

              The action in the analyzed policy statement that an external principal has permission to perform.

              
              

              - *(string) --* 
          
            

            - **changeType** *(string) --* 

              Provides context on how the access preview finding compares to existing access identified in Access Analyzer.

               

               
              * ``New`` - The finding is for newly-introduced access. 
               
              * ``Unchanged`` - The preview finding is an existing finding that would remain unchanged. 
               
              * ``Changed`` - The preview finding is an existing finding with a change in status. 
               

               

              For example, a ``Changed`` finding with preview status ``Resolved`` and existing status ``Active`` indicates the existing ``Active`` finding would become ``Resolved`` as a result of the proposed permissions change.

              
            

            - **condition** *(dict) --* 

              The condition in the analyzed policy statement that resulted in a finding.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **createdAt** *(datetime) --* 

              The time at which the access preview finding was created.

              
            

            - **error** *(string) --* 

              An error.

              
            

            - **existingFindingId** *(string) --* 

              The existing ID of the finding in Access Analyzer, provided only for existing findings.

              
            

            - **existingFindingStatus** *(string) --* 

              The existing status of the finding, provided only for existing findings.

              
            

            - **id** *(string) --* 

              The ID of the access preview finding. This ID uniquely identifies the element in the list of access preview findings and is not related to the finding ID in Access Analyzer.

              
            

            - **isPublic** *(boolean) --* 

              Indicates whether the policy that generated the finding allows public access to the resource.

              
            

            - **principal** *(dict) --* 

              The external principal that has access to a resource within the zone of trust.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **resource** *(string) --* 

              The resource that an external principal has access to. This is the resource associated with the access preview.

              
            

            - **resourceOwnerAccount** *(string) --* 

              The AWS account ID that owns the resource. For most AWS resources, the owning account is the account in which the resource was created.

              
            

            - **resourceType** *(string) --* 

              The type of the resource that can be accessed in the finding.

              
            

            - **sources** *(list) --* 

              The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

              
              

              - *(dict) --* 

                The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

                
                

                - **detail** *(dict) --* 

                  Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.

                  
                  

                  - **accessPointArn** *(string) --* 

                    The ARN of the access point that generated the finding.

                    
              
                

                - **type** *(string) --* 

                  Indicates the type of access that generated the finding.

                  
            
          
            

            - **status** *(string) --* 

              The preview status of the finding. This is what the status of the finding would be after permissions deployment. For example, a ``Changed`` finding with preview status ``Resolved`` and existing status ``Active`` indicates the existing ``Active`` finding would become ``Resolved`` as a result of the proposed permissions change.

              
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ConflictException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_access_previews(**kwargs)

    

    Retrieves a list of access previews for the specified analyzer.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAccessPreviews>`_    


    **Request Syntax** 
    ::

      response = client.list_access_previews(
          analyzerArn='string',
          maxResults=123,
          nextToken='string'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ used to generate the access preview.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'accessPreviews': [
                {
                    'analyzerArn': 'string',
                    'createdAt': datetime(2015, 1, 1),
                    'id': 'string',
                    'status': 'COMPLETED'|'CREATING'|'FAILED',
                    'statusReason': {
                        'code': 'INTERNAL_ERROR'|'INVALID_CONFIGURATION'
                    }
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **accessPreviews** *(list) --* 

          A list of access previews retrieved for the analyzer.

          
          

          - *(dict) --* 

            Contains a summary of information about an access preview.

            
            

            - **analyzerArn** *(string) --* 

              The ARN of the analyzer used to generate the access preview.

              
            

            - **createdAt** *(datetime) --* 

              The time at which the access preview was created.

              
            

            - **id** *(string) --* 

              The unique ID for the access preview.

              
            

            - **status** *(string) --* 

              The status of the access preview.

               

               
              * ``Creating`` - The access preview creation is in progress. 
               
              * ``Completed`` - The access preview is complete and previews the findings for external access to the resource. 
               
              * ``Failed`` - The access preview creation has failed. 
               

              
            

            - **statusReason** *(dict) --* 

              Provides more details about the current status of the access preview. For example, if the creation of the access preview fails, a ``Failed`` status is returned. This failure can be due to an internal issue with the analysis or due to an invalid proposed resource configuration.

              
              

              - **code** *(string) --* 

                The reason code for the current status of the access preview.

                
          
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_analyzed_resources(**kwargs)

    

    Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer..

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAnalyzedResources>`_    


    **Request Syntax** 
    ::

      response = client.list_analyzed_resources(
          analyzerArn='string',
          maxResults=123,
          nextToken='string',
          resourceType='AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ to retrieve a list of analyzed resources from.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    :type resourceType: string
    :param resourceType: 

      The type of resource.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'analyzedResources': [
                {
                    'resourceArn': 'string',
                    'resourceOwnerAccount': 'string',
                    'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret'
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **analyzedResources** *(list) --* 

          A list of resources that were analyzed.

          
          

          - *(dict) --* 

            Contains the ARN of the analyzed resource.

            
            

            - **resourceArn** *(string) --* 

              The ARN of the analyzed resource.

              
            

            - **resourceOwnerAccount** *(string) --* 

              The AWS account ID that owns the resource.

              
            

            - **resourceType** *(string) --* 

              The type of resource that was analyzed.

              
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_analyzers(**kwargs)

    

    Retrieves a list of analyzers.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAnalyzers>`_    


    **Request Syntax** 
    ::

      response = client.list_analyzers(
          maxResults=123,
          nextToken='string',
          type='ACCOUNT'|'ORGANIZATION'
      )
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    :type type: string
    :param type: 

      The type of analyzer.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'analyzers': [
                {
                    'arn': 'string',
                    'createdAt': datetime(2015, 1, 1),
                    'lastResourceAnalyzed': 'string',
                    'lastResourceAnalyzedAt': datetime(2015, 1, 1),
                    'name': 'string',
                    'status': 'ACTIVE'|'CREATING'|'DISABLED'|'FAILED',
                    'statusReason': {
                        'code': 'AWS_SERVICE_ACCESS_DISABLED'|'DELEGATED_ADMINISTRATOR_DEREGISTERED'|'ORGANIZATION_DELETED'|'SERVICE_LINKED_ROLE_CREATION_FAILED'
                    },
                    'tags': {
                        'string': 'string'
                    },
                    'type': 'ACCOUNT'|'ORGANIZATION'
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **analyzers** *(list) --* 

          The analyzers retrieved.

          
          

          - *(dict) --* 

            Contains information about the analyzer.

            
            

            - **arn** *(string) --* 

              The ARN of the analyzer.

              
            

            - **createdAt** *(datetime) --* 

              A timestamp for the time at which the analyzer was created.

              
            

            - **lastResourceAnalyzed** *(string) --* 

              The resource that was most recently analyzed by the analyzer.

              
            

            - **lastResourceAnalyzedAt** *(datetime) --* 

              The time at which the most recently analyzed resource was analyzed.

              
            

            - **name** *(string) --* 

              The name of the analyzer.

              
            

            - **status** *(string) --* 

              The status of the analyzer. An ``Active`` analyzer successfully monitors supported resources and generates new findings. The analyzer is ``Disabled`` when a user action, such as removing trusted access for AWS IAM Access Analyzer from AWS Organizations, causes the analyzer to stop generating new findings. The status is ``Creating`` when the analyzer creation is in progress and ``Failed`` when the analyzer creation has failed. 

              
            

            - **statusReason** *(dict) --* 

              The ``statusReason`` provides more details about the current status of the analyzer. For example, if the creation for the analyzer fails, a ``Failed`` status is returned. For an analyzer with organization as the type, this failure can be due to an issue with creating the service-linked roles required in the member accounts of the AWS organization.

              
              

              - **code** *(string) --* 

                The reason code for the current status of the analyzer.

                
          
            

            - **tags** *(dict) --* 

              The tags added to the analyzer.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **type** *(string) --* 

              The type of analyzer, which corresponds to the zone of trust chosen for the analyzer.

              
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_archive_rules(**kwargs)

    

    Retrieves a list of archive rules created for the specified analyzer.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListArchiveRules>`_    


    **Request Syntax** 
    ::

      response = client.list_archive_rules(
          analyzerName='string',
          maxResults=123,
          nextToken='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer to retrieve rules from.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the request.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'archiveRules': [
                {
                    'createdAt': datetime(2015, 1, 1),
                    'filter': {
                        'string': {
                            'contains': [
                                'string',
                            ],
                            'eq': [
                                'string',
                            ],
                            'exists': True|False,
                            'neq': [
                                'string',
                            ]
                        }
                    },
                    'ruleName': 'string',
                    'updatedAt': datetime(2015, 1, 1)
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **archiveRules** *(list) --* 

          A list of archive rules created for the specified analyzer.

          
          

          - *(dict) --* 

            Contains information about an archive rule.

            
            

            - **createdAt** *(datetime) --* 

              The time at which the archive rule was created.

              
            

            - **filter** *(dict) --* 

              A filter used to define the archive rule.

              
              

              - *(string) --* 
                

                - *(dict) --* 

                  The criteria to use in the filter that defines the archive rule.

                  
                  

                  - **contains** *(list) --* 

                    A "contains" operator to match for the filter used to create the rule.

                    
                    

                    - *(string) --* 
                
                  

                  - **eq** *(list) --* 

                    An "equals" operator to match for the filter used to create the rule.

                    
                    

                    - *(string) --* 
                
                  

                  - **exists** *(boolean) --* 

                    An "exists" operator to match for the filter used to create the rule. 

                    
                  

                  - **neq** *(list) --* 

                    A "not equals" operator to match for the filter used to create the rule.

                    
                    

                    - *(string) --* 
                
              
          
        
            

            - **ruleName** *(string) --* 

              The name of the archive rule.

              
            

            - **updatedAt** *(datetime) --* 

              The time at which the archive rule was last updated.

              
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_findings(**kwargs)

    

    Retrieves a list of findings generated by the specified analyzer.

     

    To learn about filter keys that you can use to retrieve a list of findings, see `Access Analyzer filter keys <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html>`__ in the **IAM User Guide** .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListFindings>`_    


    **Request Syntax** 
    ::

      response = client.list_findings(
          analyzerArn='string',
          filter={
              'string': {
                  'contains': [
                      'string',
                  ],
                  'eq': [
                      'string',
                  ],
                  'exists': True|False,
                  'neq': [
                      'string',
                  ]
              }
          },
          maxResults=123,
          nextToken='string',
          sort={
              'attributeName': 'string',
              'orderBy': 'ASC'|'DESC'
          }
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ to retrieve findings from.

      

    
    :type filter: dict
    :param filter: 

      A filter to match for the findings to return.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          The criteria to use in the filter that defines the archive rule.

          

        
          - **contains** *(list) --* 

            A "contains" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **eq** *(list) --* 

            An "equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **exists** *(boolean) --* 

            An "exists" operator to match for the filter used to create the rule. 

            

          
          - **neq** *(list) --* 

            A "not equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
        
  

    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    :type sort: dict
    :param sort: 

      The sort order for the findings returned.

      

    
      - **attributeName** *(string) --* 

        The name of the attribute to sort on.

        

      
      - **orderBy** *(string) --* 

        The sort order, ascending or descending.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'findings': [
                {
                    'action': [
                        'string',
                    ],
                    'analyzedAt': datetime(2015, 1, 1),
                    'condition': {
                        'string': 'string'
                    },
                    'createdAt': datetime(2015, 1, 1),
                    'error': 'string',
                    'id': 'string',
                    'isPublic': True|False,
                    'principal': {
                        'string': 'string'
                    },
                    'resource': 'string',
                    'resourceOwnerAccount': 'string',
                    'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
                    'sources': [
                        {
                            'detail': {
                                'accessPointArn': 'string'
                            },
                            'type': 'POLICY'|'BUCKET_ACL'|'S3_ACCESS_POINT'
                        },
                    ],
                    'status': 'ACTIVE'|'ARCHIVED'|'RESOLVED',
                    'updatedAt': datetime(2015, 1, 1)
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **findings** *(list) --* 

          A list of findings retrieved from the analyzer that match the filter criteria specified, if any.

          
          

          - *(dict) --* 

            Contains information about a finding.

            
            

            - **action** *(list) --* 

              The action in the analyzed policy statement that an external principal has permission to use.

              
              

              - *(string) --* 
          
            

            - **analyzedAt** *(datetime) --* 

              The time at which the resource-based policy that generated the finding was analyzed.

              
            

            - **condition** *(dict) --* 

              The condition in the analyzed policy statement that resulted in a finding.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **createdAt** *(datetime) --* 

              The time at which the finding was created.

              
            

            - **error** *(string) --* 

              The error that resulted in an Error finding.

              
            

            - **id** *(string) --* 

              The ID of the finding.

              
            

            - **isPublic** *(boolean) --* 

              Indicates whether the finding reports a resource that has a policy that allows public access.

              
            

            - **principal** *(dict) --* 

              The external principal that has access to a resource within the zone of trust.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **resource** *(string) --* 

              The resource that the external principal has access to.

              
            

            - **resourceOwnerAccount** *(string) --* 

              The AWS account ID that owns the resource.

              
            

            - **resourceType** *(string) --* 

              The type of the resource that the external principal has access to.

              
            

            - **sources** *(list) --* 

              The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

              
              

              - *(dict) --* 

                The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

                
                

                - **detail** *(dict) --* 

                  Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.

                  
                  

                  - **accessPointArn** *(string) --* 

                    The ARN of the access point that generated the finding.

                    
              
                

                - **type** *(string) --* 

                  Indicates the type of access that generated the finding.

                  
            
          
            

            - **status** *(string) --* 

              The status of the finding.

              
            

            - **updatedAt** *(datetime) --* 

              The time at which the finding was most recently updated.

              
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_policy_generations(**kwargs)

    

    Lists all of the policy generations requested in the last seven days.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListPolicyGenerations>`_    


    **Request Syntax** 
    ::

      response = client.list_policy_generations(
          maxResults=123,
          nextToken='string',
          principalArn='string'
      )
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    :type principalArn: string
    :param principalArn: 

      The ARN of the IAM entity (user or role) for which you are generating a policy. Use this with ``ListGeneratedPolicies`` to filter the results to only include results for a specific principal.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'nextToken': 'string',
            'policyGenerations': [
                {
                    'completedOn': datetime(2015, 1, 1),
                    'jobId': 'string',
                    'principalArn': 'string',
                    'startedOn': datetime(2015, 1, 1),
                    'status': 'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'CANCELED'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
        

        - **policyGenerations** *(list) --* 

          A ``PolicyGeneration`` object that contains details about the generated policy.

          
          

          - *(dict) --* 

            Contains details about the policy generation status and properties.

            
            

            - **completedOn** *(datetime) --* 

              A timestamp of when the policy generation was completed.

              
            

            - **jobId** *(string) --* 

              The ``JobId`` that is returned by the ``StartPolicyGeneration`` operation. The ``JobId`` can be used with ``GetGeneratedPolicy`` to retrieve the generated policies or used with ``CancelPolicyGeneration`` to cancel the policy generation request.

              
            

            - **principalArn** *(string) --* 

              The ARN of the IAM entity (user or role) for which you are generating a policy.

              
            

            - **startedOn** *(datetime) --* 

              A timestamp of when the policy generation started.

              
            

            - **status** *(string) --* 

              The status of the policy generation request.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_tags_for_resource(**kwargs)

    

    Retrieves a list of tags applied to the specified resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          resourceArn='string'
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The ARN of the resource to retrieve tags from.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **tags** *(dict) --* 

          The tags that are applied to the specified resource.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: start_policy_generation(**kwargs)

    

    Starts the policy generation request.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/StartPolicyGeneration>`_    


    **Request Syntax** 
    ::

      response = client.start_policy_generation(
          clientToken='string',
          cloudTrailDetails={
              'accessRole': 'string',
              'endTime': datetime(2015, 1, 1),
              'startTime': datetime(2015, 1, 1),
              'trails': [
                  {
                      'allRegions': True|False,
                      'cloudTrailArn': 'string',
                      'regions': [
                          'string',
                      ]
                  },
              ]
          },
          policyGenerationDetails={
              'principalArn': 'string'
          }
      )
    :type clientToken: string
    :param clientToken: 

      A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect.

       

      If you do not specify a client token, one is automatically generated by the AWS SDK.

      This field is autopopulated if not provided.

    
    :type cloudTrailDetails: dict
    :param cloudTrailDetails: 

      A ``CloudTrailDetails`` object that contains details about a ``Trail`` that you want to analyze to generate policies.

      

    
      - **accessRole** *(string) --* **[REQUIRED]** 

        The ARN of the service role that Access Analyzer uses to access your CloudTrail trail and service last accessed information.

        

      
      - **endTime** *(datetime) --* 

        The end of the time range for which Access Analyzer reviews your CloudTrail events. Events with a timestamp after this time are not considered to generate a policy. If this is not included in the request, the default value is the current time.

        

      
      - **startTime** *(datetime) --* **[REQUIRED]** 

        The start of the time range for which Access Analyzer reviews your CloudTrail events. Events with a timestamp before this time are not considered to generate a policy.

        

      
      - **trails** *(list) --* **[REQUIRED]** 

        A ``Trail`` object that contains settings for a trail.

        

      
        - *(dict) --* 

          Contains details about the CloudTrail trail being analyzed to generate a policy.

          

        
          - **allRegions** *(boolean) --* 

            Possible values are ``true`` or ``false`` . If set to ``true`` , Access Analyzer retrieves CloudTrail data from all regions to analyze and generate a policy.

            

          
          - **cloudTrailArn** *(string) --* **[REQUIRED]** 

            Specifies the ARN of the trail. The format of a trail ARN is ``arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail`` .

            

          
          - **regions** *(list) --* 

            A list of regions to get CloudTrail data from and analyze to generate a policy.

            

          
            - *(string) --* 

            
        
        
    
    
    :type policyGenerationDetails: dict
    :param policyGenerationDetails: **[REQUIRED]** 

      Contains the ARN of the IAM entity (user or role) for which you are generating a policy.

      

    
      - **principalArn** *(string) --* **[REQUIRED]** 

        The ARN of the IAM entity (user or role) for which you are generating a policy.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'jobId': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **jobId** *(string) --* 

          The ``JobId`` that is returned by the ``StartPolicyGeneration`` operation. The ``JobId`` can be used with ``GetGeneratedPolicy`` to retrieve the generated policies or used with ``CancelPolicyGeneration`` to cancel the policy generation request.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ConflictException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ServiceQuotaExceededException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: start_resource_scan(**kwargs)

    

    Immediately starts a scan of the policies applied to the specified resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/StartResourceScan>`_    


    **Request Syntax** 
    ::

      response = client.start_resource_scan(
          analyzerArn='string',
          resourceArn='string'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ to use to scan the policies applied to the specified resource.

      

    
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The ARN of the resource to scan.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Adds a tag to the specified resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          resourceArn='string',
          tags={
              'string': 'string'
          }
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The ARN of the resource to add the tag to.

      

    
    :type tags: dict
    :param tags: **[REQUIRED]** 

      The tags to add to the resource.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Removes a tag from the specified resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          resourceArn='string',
          tagKeys=[
              'string',
          ]
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      The ARN of the resource to remove the tag from.

      

    
    :type tagKeys: list
    :param tagKeys: **[REQUIRED]** 

      The key for the tag to add.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: update_archive_rule(**kwargs)

    

    Updates the criteria and values for the specified archive rule.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/UpdateArchiveRule>`_    


    **Request Syntax** 
    ::

      response = client.update_archive_rule(
          analyzerName='string',
          clientToken='string',
          filter={
              'string': {
                  'contains': [
                      'string',
                  ],
                  'eq': [
                      'string',
                  ],
                  'exists': True|False,
                  'neq': [
                      'string',
                  ]
              }
          },
          ruleName='string'
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer to update the archive rules for.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type filter: dict
    :param filter: **[REQUIRED]** 

      A filter to match for the rules to update. Only rules that match the filter are updated.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          The criteria to use in the filter that defines the archive rule.

          

        
          - **contains** *(list) --* 

            A "contains" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **eq** *(list) --* 

            An "equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **exists** *(boolean) --* 

            An "exists" operator to match for the filter used to create the rule. 

            

          
          - **neq** *(list) --* 

            A "not equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
        
  

    :type ruleName: string
    :param ruleName: **[REQUIRED]** 

      The name of the rule to update.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: update_findings(**kwargs)

    

    Updates the status for the specified findings.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/UpdateFindings>`_    


    **Request Syntax** 
    ::

      response = client.update_findings(
          analyzerArn='string',
          clientToken='string',
          ids=[
              'string',
          ],
          resourceArn='string',
          status='ACTIVE'|'ARCHIVED'
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ that generated the findings to update.

      

    
    :type clientToken: string
    :param clientToken: 

      A client token.

      This field is autopopulated if not provided.

    
    :type ids: list
    :param ids: 

      The IDs of the findings to update.

      

    
      - *(string) --* 

      
  
    :type resourceArn: string
    :param resourceArn: 

      The ARN of the resource identified in the finding.

      

    
    :type status: string
    :param status: **[REQUIRED]** 

      The state represents the action to take to update the finding Status. Use ``ARCHIVE`` to change an Active finding to an Archived finding. Use ``ACTIVE`` to change an Archived finding to an Active finding.

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

  .. py:method:: validate_policy(**kwargs)

    

    Requests the validation of a policy and returns a list of findings. The findings help you identify issues and provide actionable recommendations to resolve the issue and enable you to author functional policies that meet security best practices. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ValidatePolicy>`_    


    **Request Syntax** 
    ::

      response = client.validate_policy(
          locale='DE'|'EN'|'ES'|'FR'|'IT'|'JA'|'KO'|'PT_BR'|'ZH_CN'|'ZH_TW',
          maxResults=123,
          nextToken='string',
          policyDocument='string',
          policyType='IDENTITY_POLICY'|'RESOURCE_POLICY'|'SERVICE_CONTROL_POLICY'
      )
    :type locale: string
    :param locale: 

      The locale to use for localizing the findings.

      

    
    :type maxResults: integer
    :param maxResults: 

      The maximum number of results to return in the response.

      

    
    :type nextToken: string
    :param nextToken: 

      A token used for pagination of results returned.

      

    
    :type policyDocument: string
    :param policyDocument: **[REQUIRED]** 

      The JSON policy document to use as the content for the policy.

      

    
    :type policyType: string
    :param policyType: **[REQUIRED]** 

      The type of policy to validate. Identity policies grant permissions to IAM principals. Identity policies include managed and inline policies for IAM roles, users, and groups. They also include service-control policies (SCPs) that are attached to an AWS organization, organizational unit (OU), or an account.

       

      Resource policies grant permissions on AWS resources. Resource policies include trust policies for IAM roles and bucket policies for S3 buckets. You can provide a generic input such as identity policy or resource policy or a specific input such as managed policy or S3 bucket policy. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'findings': [
                {
                    'findingDetails': 'string',
                    'findingType': 'ERROR'|'SECURITY_WARNING'|'SUGGESTION'|'WARNING',
                    'issueCode': 'string',
                    'learnMoreLink': 'string',
                    'locations': [
                        {
                            'path': [
                                {
                                    'index': 123,
                                    'key': 'string',
                                    'substring': {
                                        'length': 123,
                                        'start': 123
                                    },
                                    'value': 'string'
                                },
                            ],
                            'span': {
                                'end': {
                                    'column': 123,
                                    'line': 123,
                                    'offset': 123
                                },
                                'start': {
                                    'column': 123,
                                    'line': 123,
                                    'offset': 123
                                }
                            }
                        },
                    ]
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **findings** *(list) --* 

          The list of findings in a policy returned by Access Analyzer based on its suite of policy checks.

          
          

          - *(dict) --* 

            A finding in a policy. Each finding is an actionable recommendation that can be used to improve the policy.

            
            

            - **findingDetails** *(string) --* 

              A localized message that explains the finding and provides guidance on how to address it.

              
            

            - **findingType** *(string) --* 

              The impact of the finding.

               

              Security warnings report when the policy allows access that we consider overly permissive.

               

              Errors report when a part of the policy is not functional.

               

              Warnings report non-security issues when a policy does not conform to policy writing best practices.

               

              Suggestions recommend stylistic improvements in the policy that do not impact access.

              
            

            - **issueCode** *(string) --* 

              The issue code provides an identifier of the issue associated with this finding.

              
            

            - **learnMoreLink** *(string) --* 

              A link to additional documentation about the type of finding.

              
            

            - **locations** *(list) --* 

              The list of locations in the policy document that are related to the finding. The issue code provides a summary of an issue identified by the finding.

              
              

              - *(dict) --* 

                A location in a policy that is represented as a path through the JSON representation and a corresponding span.

                
                

                - **path** *(list) --* 

                  A path in a policy, represented as a sequence of path elements.

                  
                  

                  - *(dict) --* 

                    A single element in a path through the JSON representation of a policy.

                    
                    

                    - **index** *(integer) --* 

                      Refers to an index in a JSON array.

                      
                    

                    - **key** *(string) --* 

                      Refers to a key in a JSON object.

                      
                    

                    - **substring** *(dict) --* 

                      Refers to a substring of a literal string in a JSON object.

                      
                      

                      - **length** *(integer) --* 

                        The length of the substring.

                        
                      

                      - **start** *(integer) --* 

                        The start index of the substring, starting from 0.

                        
                  
                    

                    - **value** *(string) --* 

                      Refers to the value associated with a given key in a JSON object.

                      
                
              
                

                - **span** *(dict) --* 

                  A span in a policy.

                  
                  

                  - **end** *(dict) --* 

                    The end position of the span (exclusive).

                    
                    

                    - **column** *(integer) --* 

                      The column of the position, starting from 0.

                      
                    

                    - **line** *(integer) --* 

                      The line of the position, starting from 1.

                      
                    

                    - **offset** *(integer) --* 

                      The offset within the policy that corresponds to the position, starting from 0.

                      
                
                  

                  - **start** *(dict) --* 

                    The start position of the span (inclusive).

                    
                    

                    - **column** *(integer) --* 

                      The column of the position, starting from 0.

                      
                    

                    - **line** *(integer) --* 

                      The line of the position, starting from 1.

                      
                    

                    - **offset** *(integer) --* 

                      The offset within the policy that corresponds to the position, starting from 0.

                      
                
              
            
          
        
      
        

        - **nextToken** *(string) --* 

          A token used for pagination of results returned.

          
    
    **Exceptions** 
    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ValidationException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.InternalServerException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.ThrottlingException`

    
    *     :py:class:`AccessAnalyzer.Client.exceptions.AccessDeniedException`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`AccessAnalyzer.Paginator.ListAccessPreviewFindings`


* :py:class:`AccessAnalyzer.Paginator.ListAccessPreviews`


* :py:class:`AccessAnalyzer.Paginator.ListAnalyzedResources`


* :py:class:`AccessAnalyzer.Paginator.ListAnalyzers`


* :py:class:`AccessAnalyzer.Paginator.ListArchiveRules`


* :py:class:`AccessAnalyzer.Paginator.ListFindings`


* :py:class:`AccessAnalyzer.Paginator.ListPolicyGenerations`


* :py:class:`AccessAnalyzer.Paginator.ValidatePolicy`



.. py:class:: AccessAnalyzer.Paginator.ListAccessPreviewFindings

  ::

    
    paginator = client.get_paginator('list_access_preview_findings')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_access_preview_findings`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAccessPreviewFindings>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          accessPreviewId='string',
          analyzerArn='string',
          filter={
              'string': {
                  'contains': [
                      'string',
                  ],
                  'eq': [
                      'string',
                  ],
                  'exists': True|False,
                  'neq': [
                      'string',
                  ]
              }
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type accessPreviewId: string
    :param accessPreviewId: **[REQUIRED]** 

      The unique ID for the access preview.

      

    
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ used to generate the access.

      

    
    :type filter: dict
    :param filter: 

      Criteria to filter the returned findings.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          The criteria to use in the filter that defines the archive rule.

          

        
          - **contains** *(list) --* 

            A "contains" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **eq** *(list) --* 

            An "equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **exists** *(boolean) --* 

            An "exists" operator to match for the filter used to create the rule. 

            

          
          - **neq** *(list) --* 

            A "not equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
        
  

    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'findings': [
                {
                    'action': [
                        'string',
                    ],
                    'changeType': 'CHANGED'|'NEW'|'UNCHANGED',
                    'condition': {
                        'string': 'string'
                    },
                    'createdAt': datetime(2015, 1, 1),
                    'error': 'string',
                    'existingFindingId': 'string',
                    'existingFindingStatus': 'ACTIVE'|'ARCHIVED'|'RESOLVED',
                    'id': 'string',
                    'isPublic': True|False,
                    'principal': {
                        'string': 'string'
                    },
                    'resource': 'string',
                    'resourceOwnerAccount': 'string',
                    'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
                    'sources': [
                        {
                            'detail': {
                                'accessPointArn': 'string'
                            },
                            'type': 'POLICY'|'BUCKET_ACL'|'S3_ACCESS_POINT'
                        },
                    ],
                    'status': 'ACTIVE'|'ARCHIVED'|'RESOLVED'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **findings** *(list) --* 

          A list of access preview findings that match the specified filter criteria.

          
          

          - *(dict) --* 

            An access preview finding generated by the access preview.

            
            

            - **action** *(list) --* 

              The action in the analyzed policy statement that an external principal has permission to perform.

              
              

              - *(string) --* 
          
            

            - **changeType** *(string) --* 

              Provides context on how the access preview finding compares to existing access identified in Access Analyzer.

               

               
              * ``New`` - The finding is for newly-introduced access. 
               
              * ``Unchanged`` - The preview finding is an existing finding that would remain unchanged. 
               
              * ``Changed`` - The preview finding is an existing finding with a change in status. 
               

               

              For example, a ``Changed`` finding with preview status ``Resolved`` and existing status ``Active`` indicates the existing ``Active`` finding would become ``Resolved`` as a result of the proposed permissions change.

              
            

            - **condition** *(dict) --* 

              The condition in the analyzed policy statement that resulted in a finding.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **createdAt** *(datetime) --* 

              The time at which the access preview finding was created.

              
            

            - **error** *(string) --* 

              An error.

              
            

            - **existingFindingId** *(string) --* 

              The existing ID of the finding in Access Analyzer, provided only for existing findings.

              
            

            - **existingFindingStatus** *(string) --* 

              The existing status of the finding, provided only for existing findings.

              
            

            - **id** *(string) --* 

              The ID of the access preview finding. This ID uniquely identifies the element in the list of access preview findings and is not related to the finding ID in Access Analyzer.

              
            

            - **isPublic** *(boolean) --* 

              Indicates whether the policy that generated the finding allows public access to the resource.

              
            

            - **principal** *(dict) --* 

              The external principal that has access to a resource within the zone of trust.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **resource** *(string) --* 

              The resource that an external principal has access to. This is the resource associated with the access preview.

              
            

            - **resourceOwnerAccount** *(string) --* 

              The AWS account ID that owns the resource. For most AWS resources, the owning account is the account in which the resource was created.

              
            

            - **resourceType** *(string) --* 

              The type of the resource that can be accessed in the finding.

              
            

            - **sources** *(list) --* 

              The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

              
              

              - *(dict) --* 

                The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

                
                

                - **detail** *(dict) --* 

                  Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.

                  
                  

                  - **accessPointArn** *(string) --* 

                    The ARN of the access point that generated the finding.

                    
              
                

                - **type** *(string) --* 

                  Indicates the type of access that generated the finding.

                  
            
          
            

            - **status** *(string) --* 

              The preview status of the finding. This is what the status of the finding would be after permissions deployment. For example, a ``Changed`` finding with preview status ``Resolved`` and existing status ``Active`` indicates the existing ``Active`` finding would become ``Resolved`` as a result of the proposed permissions change.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ListAccessPreviews

  ::

    
    paginator = client.get_paginator('list_access_previews')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_access_previews`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAccessPreviews>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          analyzerArn='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ used to generate the access preview.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'accessPreviews': [
                {
                    'analyzerArn': 'string',
                    'createdAt': datetime(2015, 1, 1),
                    'id': 'string',
                    'status': 'COMPLETED'|'CREATING'|'FAILED',
                    'statusReason': {
                        'code': 'INTERNAL_ERROR'|'INVALID_CONFIGURATION'
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **accessPreviews** *(list) --* 

          A list of access previews retrieved for the analyzer.

          
          

          - *(dict) --* 

            Contains a summary of information about an access preview.

            
            

            - **analyzerArn** *(string) --* 

              The ARN of the analyzer used to generate the access preview.

              
            

            - **createdAt** *(datetime) --* 

              The time at which the access preview was created.

              
            

            - **id** *(string) --* 

              The unique ID for the access preview.

              
            

            - **status** *(string) --* 

              The status of the access preview.

               

               
              * ``Creating`` - The access preview creation is in progress. 
               
              * ``Completed`` - The access preview is complete and previews the findings for external access to the resource. 
               
              * ``Failed`` - The access preview creation has failed. 
               

              
            

            - **statusReason** *(dict) --* 

              Provides more details about the current status of the access preview. For example, if the creation of the access preview fails, a ``Failed`` status is returned. This failure can be due to an internal issue with the analysis or due to an invalid proposed resource configuration.

              
              

              - **code** *(string) --* 

                The reason code for the current status of the access preview.

                
          
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ListAnalyzedResources

  ::

    
    paginator = client.get_paginator('list_analyzed_resources')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_analyzed_resources`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAnalyzedResources>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          analyzerArn='string',
          resourceType='AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ to retrieve a list of analyzed resources from.

      

    
    :type resourceType: string
    :param resourceType: 

      The type of resource.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'analyzedResources': [
                {
                    'resourceArn': 'string',
                    'resourceOwnerAccount': 'string',
                    'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **analyzedResources** *(list) --* 

          A list of resources that were analyzed.

          
          

          - *(dict) --* 

            Contains the ARN of the analyzed resource.

            
            

            - **resourceArn** *(string) --* 

              The ARN of the analyzed resource.

              
            

            - **resourceOwnerAccount** *(string) --* 

              The AWS account ID that owns the resource.

              
            

            - **resourceType** *(string) --* 

              The type of resource that was analyzed.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ListAnalyzers

  ::

    
    paginator = client.get_paginator('list_analyzers')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_analyzers`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListAnalyzers>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          type='ACCOUNT'|'ORGANIZATION',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type type: string
    :param type: 

      The type of analyzer.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'analyzers': [
                {
                    'arn': 'string',
                    'createdAt': datetime(2015, 1, 1),
                    'lastResourceAnalyzed': 'string',
                    'lastResourceAnalyzedAt': datetime(2015, 1, 1),
                    'name': 'string',
                    'status': 'ACTIVE'|'CREATING'|'DISABLED'|'FAILED',
                    'statusReason': {
                        'code': 'AWS_SERVICE_ACCESS_DISABLED'|'DELEGATED_ADMINISTRATOR_DEREGISTERED'|'ORGANIZATION_DELETED'|'SERVICE_LINKED_ROLE_CREATION_FAILED'
                    },
                    'tags': {
                        'string': 'string'
                    },
                    'type': 'ACCOUNT'|'ORGANIZATION'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **analyzers** *(list) --* 

          The analyzers retrieved.

          
          

          - *(dict) --* 

            Contains information about the analyzer.

            
            

            - **arn** *(string) --* 

              The ARN of the analyzer.

              
            

            - **createdAt** *(datetime) --* 

              A timestamp for the time at which the analyzer was created.

              
            

            - **lastResourceAnalyzed** *(string) --* 

              The resource that was most recently analyzed by the analyzer.

              
            

            - **lastResourceAnalyzedAt** *(datetime) --* 

              The time at which the most recently analyzed resource was analyzed.

              
            

            - **name** *(string) --* 

              The name of the analyzer.

              
            

            - **status** *(string) --* 

              The status of the analyzer. An ``Active`` analyzer successfully monitors supported resources and generates new findings. The analyzer is ``Disabled`` when a user action, such as removing trusted access for AWS IAM Access Analyzer from AWS Organizations, causes the analyzer to stop generating new findings. The status is ``Creating`` when the analyzer creation is in progress and ``Failed`` when the analyzer creation has failed. 

              
            

            - **statusReason** *(dict) --* 

              The ``statusReason`` provides more details about the current status of the analyzer. For example, if the creation for the analyzer fails, a ``Failed`` status is returned. For an analyzer with organization as the type, this failure can be due to an issue with creating the service-linked roles required in the member accounts of the AWS organization.

              
              

              - **code** *(string) --* 

                The reason code for the current status of the analyzer.

                
          
            

            - **tags** *(dict) --* 

              The tags added to the analyzer.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **type** *(string) --* 

              The type of analyzer, which corresponds to the zone of trust chosen for the analyzer.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ListArchiveRules

  ::

    
    paginator = client.get_paginator('list_archive_rules')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_archive_rules`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListArchiveRules>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          analyzerName='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type analyzerName: string
    :param analyzerName: **[REQUIRED]** 

      The name of the analyzer to retrieve rules from.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'archiveRules': [
                {
                    'createdAt': datetime(2015, 1, 1),
                    'filter': {
                        'string': {
                            'contains': [
                                'string',
                            ],
                            'eq': [
                                'string',
                            ],
                            'exists': True|False,
                            'neq': [
                                'string',
                            ]
                        }
                    },
                    'ruleName': 'string',
                    'updatedAt': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **archiveRules** *(list) --* 

          A list of archive rules created for the specified analyzer.

          
          

          - *(dict) --* 

            Contains information about an archive rule.

            
            

            - **createdAt** *(datetime) --* 

              The time at which the archive rule was created.

              
            

            - **filter** *(dict) --* 

              A filter used to define the archive rule.

              
              

              - *(string) --* 
                

                - *(dict) --* 

                  The criteria to use in the filter that defines the archive rule.

                  
                  

                  - **contains** *(list) --* 

                    A "contains" operator to match for the filter used to create the rule.

                    
                    

                    - *(string) --* 
                
                  

                  - **eq** *(list) --* 

                    An "equals" operator to match for the filter used to create the rule.

                    
                    

                    - *(string) --* 
                
                  

                  - **exists** *(boolean) --* 

                    An "exists" operator to match for the filter used to create the rule. 

                    
                  

                  - **neq** *(list) --* 

                    A "not equals" operator to match for the filter used to create the rule.

                    
                    

                    - *(string) --* 
                
              
          
        
            

            - **ruleName** *(string) --* 

              The name of the archive rule.

              
            

            - **updatedAt** *(datetime) --* 

              The time at which the archive rule was last updated.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ListFindings

  ::

    
    paginator = client.get_paginator('list_findings')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_findings`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListFindings>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          analyzerArn='string',
          filter={
              'string': {
                  'contains': [
                      'string',
                  ],
                  'eq': [
                      'string',
                  ],
                  'exists': True|False,
                  'neq': [
                      'string',
                  ]
              }
          },
          sort={
              'attributeName': 'string',
              'orderBy': 'ASC'|'DESC'
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type analyzerArn: string
    :param analyzerArn: **[REQUIRED]** 

      The `ARN of the analyzer <https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources>`__ to retrieve findings from.

      

    
    :type filter: dict
    :param filter: 

      A filter to match for the findings to return.

      

    
      - *(string) --* 

      
        - *(dict) --* 

          The criteria to use in the filter that defines the archive rule.

          

        
          - **contains** *(list) --* 

            A "contains" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **eq** *(list) --* 

            An "equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
          - **exists** *(boolean) --* 

            An "exists" operator to match for the filter used to create the rule. 

            

          
          - **neq** *(list) --* 

            A "not equals" operator to match for the filter used to create the rule.

            

          
            - *(string) --* 

            
        
        
  

    :type sort: dict
    :param sort: 

      The sort order for the findings returned.

      

    
      - **attributeName** *(string) --* 

        The name of the attribute to sort on.

        

      
      - **orderBy** *(string) --* 

        The sort order, ascending or descending.

        

      
    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'findings': [
                {
                    'action': [
                        'string',
                    ],
                    'analyzedAt': datetime(2015, 1, 1),
                    'condition': {
                        'string': 'string'
                    },
                    'createdAt': datetime(2015, 1, 1),
                    'error': 'string',
                    'id': 'string',
                    'isPublic': True|False,
                    'principal': {
                        'string': 'string'
                    },
                    'resource': 'string',
                    'resourceOwnerAccount': 'string',
                    'resourceType': 'AWS::S3::Bucket'|'AWS::IAM::Role'|'AWS::SQS::Queue'|'AWS::Lambda::Function'|'AWS::Lambda::LayerVersion'|'AWS::KMS::Key'|'AWS::SecretsManager::Secret',
                    'sources': [
                        {
                            'detail': {
                                'accessPointArn': 'string'
                            },
                            'type': 'POLICY'|'BUCKET_ACL'|'S3_ACCESS_POINT'
                        },
                    ],
                    'status': 'ACTIVE'|'ARCHIVED'|'RESOLVED',
                    'updatedAt': datetime(2015, 1, 1)
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        The response to the request.

        
        

        - **findings** *(list) --* 

          A list of findings retrieved from the analyzer that match the filter criteria specified, if any.

          
          

          - *(dict) --* 

            Contains information about a finding.

            
            

            - **action** *(list) --* 

              The action in the analyzed policy statement that an external principal has permission to use.

              
              

              - *(string) --* 
          
            

            - **analyzedAt** *(datetime) --* 

              The time at which the resource-based policy that generated the finding was analyzed.

              
            

            - **condition** *(dict) --* 

              The condition in the analyzed policy statement that resulted in a finding.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **createdAt** *(datetime) --* 

              The time at which the finding was created.

              
            

            - **error** *(string) --* 

              The error that resulted in an Error finding.

              
            

            - **id** *(string) --* 

              The ID of the finding.

              
            

            - **isPublic** *(boolean) --* 

              Indicates whether the finding reports a resource that has a policy that allows public access.

              
            

            - **principal** *(dict) --* 

              The external principal that has access to a resource within the zone of trust.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **resource** *(string) --* 

              The resource that the external principal has access to.

              
            

            - **resourceOwnerAccount** *(string) --* 

              The AWS account ID that owns the resource.

              
            

            - **resourceType** *(string) --* 

              The type of the resource that the external principal has access to.

              
            

            - **sources** *(list) --* 

              The sources of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

              
              

              - *(dict) --* 

                The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.

                
                

                - **detail** *(dict) --* 

                  Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.

                  
                  

                  - **accessPointArn** *(string) --* 

                    The ARN of the access point that generated the finding.

                    
              
                

                - **type** *(string) --* 

                  Indicates the type of access that generated the finding.

                  
            
          
            

            - **status** *(string) --* 

              The status of the finding.

              
            

            - **updatedAt** *(datetime) --* 

              The time at which the finding was most recently updated.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ListPolicyGenerations

  ::

    
    paginator = client.get_paginator('list_policy_generations')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.list_policy_generations`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ListPolicyGenerations>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          principalArn='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type principalArn: string
    :param principalArn: 

      The ARN of the IAM entity (user or role) for which you are generating a policy. Use this with ``ListGeneratedPolicies`` to filter the results to only include results for a specific principal.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'policyGenerations': [
                {
                    'completedOn': datetime(2015, 1, 1),
                    'jobId': 'string',
                    'principalArn': 'string',
                    'startedOn': datetime(2015, 1, 1),
                    'status': 'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'CANCELED'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **policyGenerations** *(list) --* 

          A ``PolicyGeneration`` object that contains details about the generated policy.

          
          

          - *(dict) --* 

            Contains details about the policy generation status and properties.

            
            

            - **completedOn** *(datetime) --* 

              A timestamp of when the policy generation was completed.

              
            

            - **jobId** *(string) --* 

              The ``JobId`` that is returned by the ``StartPolicyGeneration`` operation. The ``JobId`` can be used with ``GetGeneratedPolicy`` to retrieve the generated policies or used with ``CancelPolicyGeneration`` to cancel the policy generation request.

              
            

            - **principalArn** *(string) --* 

              The ARN of the IAM entity (user or role) for which you are generating a policy.

              
            

            - **startedOn** *(datetime) --* 

              A timestamp of when the policy generation started.

              
            

            - **status** *(string) --* 

              The status of the policy generation request.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: AccessAnalyzer.Paginator.ValidatePolicy

  ::

    
    paginator = client.get_paginator('validate_policy')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`AccessAnalyzer.Client.validate_policy`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/accessanalyzer-2019-11-01/ValidatePolicy>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          locale='DE'|'EN'|'ES'|'FR'|'IT'|'JA'|'KO'|'PT_BR'|'ZH_CN'|'ZH_TW',
          policyDocument='string',
          policyType='IDENTITY_POLICY'|'RESOURCE_POLICY'|'SERVICE_CONTROL_POLICY',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type locale: string
    :param locale: 

      The locale to use for localizing the findings.

      

    
    :type policyDocument: string
    :param policyDocument: **[REQUIRED]** 

      The JSON policy document to use as the content for the policy.

      

    
    :type policyType: string
    :param policyType: **[REQUIRED]** 

      The type of policy to validate. Identity policies grant permissions to IAM principals. Identity policies include managed and inline policies for IAM roles, users, and groups. They also include service-control policies (SCPs) that are attached to an AWS organization, organizational unit (OU), or an account.

       

      Resource policies grant permissions on AWS resources. Resource policies include trust policies for IAM roles and bucket policies for S3 buckets. You can provide a generic input such as identity policy or resource policy or a specific input such as managed policy or S3 bucket policy. 

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'findings': [
                {
                    'findingDetails': 'string',
                    'findingType': 'ERROR'|'SECURITY_WARNING'|'SUGGESTION'|'WARNING',
                    'issueCode': 'string',
                    'learnMoreLink': 'string',
                    'locations': [
                        {
                            'path': [
                                {
                                    'index': 123,
                                    'key': 'string',
                                    'substring': {
                                        'length': 123,
                                        'start': 123
                                    },
                                    'value': 'string'
                                },
                            ],
                            'span': {
                                'end': {
                                    'column': 123,
                                    'line': 123,
                                    'offset': 123
                                },
                                'start': {
                                    'column': 123,
                                    'line': 123,
                                    'offset': 123
                                }
                            }
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **findings** *(list) --* 

          The list of findings in a policy returned by Access Analyzer based on its suite of policy checks.

          
          

          - *(dict) --* 

            A finding in a policy. Each finding is an actionable recommendation that can be used to improve the policy.

            
            

            - **findingDetails** *(string) --* 

              A localized message that explains the finding and provides guidance on how to address it.

              
            

            - **findingType** *(string) --* 

              The impact of the finding.

               

              Security warnings report when the policy allows access that we consider overly permissive.

               

              Errors report when a part of the policy is not functional.

               

              Warnings report non-security issues when a policy does not conform to policy writing best practices.

               

              Suggestions recommend stylistic improvements in the policy that do not impact access.

              
            

            - **issueCode** *(string) --* 

              The issue code provides an identifier of the issue associated with this finding.

              
            

            - **learnMoreLink** *(string) --* 

              A link to additional documentation about the type of finding.

              
            

            - **locations** *(list) --* 

              The list of locations in the policy document that are related to the finding. The issue code provides a summary of an issue identified by the finding.

              
              

              - *(dict) --* 

                A location in a policy that is represented as a path through the JSON representation and a corresponding span.

                
                

                - **path** *(list) --* 

                  A path in a policy, represented as a sequence of path elements.

                  
                  

                  - *(dict) --* 

                    A single element in a path through the JSON representation of a policy.

                    
                    

                    - **index** *(integer) --* 

                      Refers to an index in a JSON array.

                      
                    

                    - **key** *(string) --* 

                      Refers to a key in a JSON object.

                      
                    

                    - **substring** *(dict) --* 

                      Refers to a substring of a literal string in a JSON object.

                      
                      

                      - **length** *(integer) --* 

                        The length of the substring.

                        
                      

                      - **start** *(integer) --* 

                        The start index of the substring, starting from 0.

                        
                  
                    

                    - **value** *(string) --* 

                      Refers to the value associated with a given key in a JSON object.

                      
                
              
                

                - **span** *(dict) --* 

                  A span in a policy.

                  
                  

                  - **end** *(dict) --* 

                    The end position of the span (exclusive).

                    
                    

                    - **column** *(integer) --* 

                      The column of the position, starting from 0.

                      
                    

                    - **line** *(integer) --* 

                      The line of the position, starting from 1.

                      
                    

                    - **offset** *(integer) --* 

                      The offset within the policy that corresponds to the position, starting from 0.

                      
                
                  

                  - **start** *(dict) --* 

                    The start position of the span (inclusive).

                    
                    

                    - **column** *(integer) --* 

                      The column of the position, starting from 0.

                      
                    

                    - **line** *(integer) --* 

                      The line of the position, starting from 1.

                      
                    

                    - **offset** *(integer) --* 

                      The offset within the policy that corresponds to the position, starting from 0.

                      
                
              
            
          
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    