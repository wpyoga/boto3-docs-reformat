

*****
DocDB
*****

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: DocDB.Client

  A low-level client representing Amazon DocumentDB with MongoDB compatibility (DocDB)
  

  Amazon DocumentDB API documentation

  ::

    
    import boto3
    
    client = boto3.client('docdb')

  
  These are the available methods:
  
  *   :py:meth:`~DocDB.Client.add_source_identifier_to_subscription`

  
  *   :py:meth:`~DocDB.Client.add_tags_to_resource`

  
  *   :py:meth:`~DocDB.Client.apply_pending_maintenance_action`

  
  *   :py:meth:`~DocDB.Client.can_paginate`

  
  *   :py:meth:`~DocDB.Client.copy_db_cluster_parameter_group`

  
  *   :py:meth:`~DocDB.Client.copy_db_cluster_snapshot`

  
  *   :py:meth:`~DocDB.Client.create_db_cluster`

  
  *   :py:meth:`~DocDB.Client.create_db_cluster_parameter_group`

  
  *   :py:meth:`~DocDB.Client.create_db_cluster_snapshot`

  
  *   :py:meth:`~DocDB.Client.create_db_instance`

  
  *   :py:meth:`~DocDB.Client.create_db_subnet_group`

  
  *   :py:meth:`~DocDB.Client.create_event_subscription`

  
  *   :py:meth:`~DocDB.Client.create_global_cluster`

  
  *   :py:meth:`~DocDB.Client.delete_db_cluster`

  
  *   :py:meth:`~DocDB.Client.delete_db_cluster_parameter_group`

  
  *   :py:meth:`~DocDB.Client.delete_db_cluster_snapshot`

  
  *   :py:meth:`~DocDB.Client.delete_db_instance`

  
  *   :py:meth:`~DocDB.Client.delete_db_subnet_group`

  
  *   :py:meth:`~DocDB.Client.delete_event_subscription`

  
  *   :py:meth:`~DocDB.Client.delete_global_cluster`

  
  *   :py:meth:`~DocDB.Client.describe_certificates`

  
  *   :py:meth:`~DocDB.Client.describe_db_cluster_parameter_groups`

  
  *   :py:meth:`~DocDB.Client.describe_db_cluster_parameters`

  
  *   :py:meth:`~DocDB.Client.describe_db_cluster_snapshot_attributes`

  
  *   :py:meth:`~DocDB.Client.describe_db_cluster_snapshots`

  
  *   :py:meth:`~DocDB.Client.describe_db_clusters`

  
  *   :py:meth:`~DocDB.Client.describe_db_engine_versions`

  
  *   :py:meth:`~DocDB.Client.describe_db_instances`

  
  *   :py:meth:`~DocDB.Client.describe_db_subnet_groups`

  
  *   :py:meth:`~DocDB.Client.describe_engine_default_cluster_parameters`

  
  *   :py:meth:`~DocDB.Client.describe_event_categories`

  
  *   :py:meth:`~DocDB.Client.describe_event_subscriptions`

  
  *   :py:meth:`~DocDB.Client.describe_events`

  
  *   :py:meth:`~DocDB.Client.describe_global_clusters`

  
  *   :py:meth:`~DocDB.Client.describe_orderable_db_instance_options`

  
  *   :py:meth:`~DocDB.Client.describe_pending_maintenance_actions`

  
  *   :py:meth:`~DocDB.Client.failover_db_cluster`

  
  *   :py:meth:`~DocDB.Client.generate_presigned_url`

  
  *   :py:meth:`~DocDB.Client.get_paginator`

  
  *   :py:meth:`~DocDB.Client.get_waiter`

  
  *   :py:meth:`~DocDB.Client.list_tags_for_resource`

  
  *   :py:meth:`~DocDB.Client.modify_db_cluster`

  
  *   :py:meth:`~DocDB.Client.modify_db_cluster_parameter_group`

  
  *   :py:meth:`~DocDB.Client.modify_db_cluster_snapshot_attribute`

  
  *   :py:meth:`~DocDB.Client.modify_db_instance`

  
  *   :py:meth:`~DocDB.Client.modify_db_subnet_group`

  
  *   :py:meth:`~DocDB.Client.modify_event_subscription`

  
  *   :py:meth:`~DocDB.Client.modify_global_cluster`

  
  *   :py:meth:`~DocDB.Client.reboot_db_instance`

  
  *   :py:meth:`~DocDB.Client.remove_from_global_cluster`

  
  *   :py:meth:`~DocDB.Client.remove_source_identifier_from_subscription`

  
  *   :py:meth:`~DocDB.Client.remove_tags_from_resource`

  
  *   :py:meth:`~DocDB.Client.reset_db_cluster_parameter_group`

  
  *   :py:meth:`~DocDB.Client.restore_db_cluster_from_snapshot`

  
  *   :py:meth:`~DocDB.Client.restore_db_cluster_to_point_in_time`

  
  *   :py:meth:`~DocDB.Client.start_db_cluster`

  
  *   :py:meth:`~DocDB.Client.stop_db_cluster`

  

  .. py:method:: add_source_identifier_to_subscription(**kwargs)

    

    Adds a source identifier to an existing event notification subscription.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddSourceIdentifierToSubscription>`_    


    **Request Syntax** 
    ::

      response = client.add_source_identifier_to_subscription(
          SubscriptionName='string',
          SourceIdentifier='string'
      )
    :type SubscriptionName: string
    :param SubscriptionName: **[REQUIRED]** 

      The name of the Amazon DocumentDB event notification subscription that you want to add a source identifier to.

      

    
    :type SourceIdentifier: string
    :param SourceIdentifier: **[REQUIRED]** 

      The identifier of the event source to be added:

       

       
      * If the source type is an instance, a ``DBInstanceIdentifier`` must be provided. 
       
      * If the source type is a security group, a ``DBSecurityGroupName`` must be provided. 
       
      * If the source type is a parameter group, a ``DBParameterGroupName`` must be provided. 
       
      * If the source type is a snapshot, a ``DBSnapshotIdentifier`` must be provided. 
       

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventSubscription': {
                'CustomerAwsId': 'string',
                'CustSubscriptionId': 'string',
                'SnsTopicArn': 'string',
                'Status': 'string',
                'SubscriptionCreationTime': 'string',
                'SourceType': 'string',
                'SourceIdsList': [
                    'string',
                ],
                'EventCategoriesList': [
                    'string',
                ],
                'Enabled': True|False,
                'EventSubscriptionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventSubscription** *(dict) --* 

          Detailed information about an event to which you have subscribed.

          
          

          - **CustomerAwsId** *(string) --* 

            The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

            
          

          - **CustSubscriptionId** *(string) --* 

            The Amazon DocumentDB event notification subscription ID.

            
          

          - **SnsTopicArn** *(string) --* 

            The topic ARN of the Amazon DocumentDB event notification subscription.

            
          

          - **Status** *(string) --* 

            The status of the Amazon DocumentDB event notification subscription.

             

            Constraints:

             

            Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

             

            The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

            
          

          - **SubscriptionCreationTime** *(string) --* 

            The time at which the Amazon DocumentDB event notification subscription was created.

            
          

          - **SourceType** *(string) --* 

            The source type for the Amazon DocumentDB event notification subscription.

            
          

          - **SourceIdsList** *(list) --* 

            A list of source IDs for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **EventCategoriesList** *(list) --* 

            A list of event categories for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **Enabled** *(boolean) --* 

            A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

            
          

          - **EventSubscriptionArn** *(string) --* 

            The Amazon Resource Name (ARN) for the event subscription.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SourceNotFoundFault`

    

  .. py:method:: add_tags_to_resource(**kwargs)

    

    Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost allocation reporting to track costs that are associated with Amazon DocumentDB resources or in a ``Condition`` statement in an Identity and Access Management (IAM) policy for Amazon DocumentDB.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddTagsToResource>`_    


    **Request Syntax** 
    ::

      response = client.add_tags_to_resource(
          ResourceName='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type ResourceName: string
    :param ResourceName: **[REQUIRED]** 

      The Amazon DocumentDB resource that the tags are added to. This value is an Amazon Resource Name .

      

    
    :type Tags: list
    :param Tags: **[REQUIRED]** 

      The tags to be assigned to the Amazon DocumentDB resource.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    

  .. py:method:: apply_pending_maintenance_action(**kwargs)

    

    Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB instance).

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ApplyPendingMaintenanceAction>`_    


    **Request Syntax** 
    ::

      response = client.apply_pending_maintenance_action(
          ResourceIdentifier='string',
          ApplyAction='string',
          OptInType='string'
      )
    :type ResourceIdentifier: string
    :param ResourceIdentifier: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to.

      

    
    :type ApplyAction: string
    :param ApplyAction: **[REQUIRED]** 

      The pending maintenance action to apply to this resource.

       

      Valid values: ``system-update`` , ``db-upgrade``  

      

    
    :type OptInType: string
    :param OptInType: **[REQUIRED]** 

      A value that specifies the type of opt-in request or undoes an opt-in request. An opt-in request of type ``immediate`` can't be undone.

       

      Valid values:

       

       
      * ``immediate`` - Apply the maintenance action immediately. 
       
      * ``next-maintenance`` - Apply the maintenance action during the next maintenance window for the resource.  
       
      * ``undo-opt-in`` - Cancel any existing ``next-maintenance`` opt-in requests. 
       

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'ResourcePendingMaintenanceActions': {
                'ResourceIdentifier': 'string',
                'PendingMaintenanceActionDetails': [
                    {
                        'Action': 'string',
                        'AutoAppliedAfterDate': datetime(2015, 1, 1),
                        'ForcedApplyDate': datetime(2015, 1, 1),
                        'OptInStatus': 'string',
                        'CurrentApplyDate': datetime(2015, 1, 1),
                        'Description': 'string'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **ResourcePendingMaintenanceActions** *(dict) --* 

          Represents the output of  ApplyPendingMaintenanceAction . 

          
          

          - **ResourceIdentifier** *(string) --* 

            The Amazon Resource Name (ARN) of the resource that has pending maintenance actions.

            
          

          - **PendingMaintenanceActionDetails** *(list) --* 

            A list that provides details about the pending maintenance actions for the resource.

            
            

            - *(dict) --* 

              Provides information about a pending maintenance action for a resource.

              
              

              - **Action** *(string) --* 

                The type of pending maintenance action that is available for the resource.

                
              

              - **AutoAppliedAfterDate** *(datetime) --* 

                The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any ``next-maintenance`` opt-in requests are ignored.

                
              

              - **ForcedApplyDate** *(datetime) --* 

                The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any ``immediate`` opt-in requests are ignored.

                
              

              - **OptInStatus** *(string) --* 

                Indicates the type of opt-in request that has been received for the resource.

                
              

              - **CurrentApplyDate** *(datetime) --* 

                The effective date when the pending maintenance action is applied to the resource.

                
              

              - **Description** *(string) --* 

                A description providing more detail about the maintenance action.

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.ResourceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: copy_db_cluster_parameter_group(**kwargs)

    

    Copies the specified cluster parameter group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterParameterGroup>`_    


    **Request Syntax** 
    ::

      response = client.copy_db_cluster_parameter_group(
          SourceDBClusterParameterGroupIdentifier='string',
          TargetDBClusterParameterGroupIdentifier='string',
          TargetDBClusterParameterGroupDescription='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type SourceDBClusterParameterGroupIdentifier: string
    :param SourceDBClusterParameterGroupIdentifier: **[REQUIRED]** 

      The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.

       

      Constraints:

       

       
      * Must specify a valid cluster parameter group. 
       
      * If the source cluster parameter group is in the same Region as the copy, specify a valid parameter group identifier; for example, ``my-db-cluster-param-group`` , or a valid ARN. 
       
      * If the source parameter group is in a different Region than the copy, specify a valid cluster parameter group ARN; for example, ``arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group`` . 
       

      

    
    :type TargetDBClusterParameterGroupIdentifier: string
    :param TargetDBClusterParameterGroupIdentifier: **[REQUIRED]** 

      The identifier for the copied cluster parameter group.

       

      Constraints:

       

       
      * Cannot be null, empty, or blank. 
       
      * Must contain from 1 to 255 letters, numbers, or hyphens.  
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens.  
       

       

      Example: ``my-cluster-param-group1``  

      

    
    :type TargetDBClusterParameterGroupDescription: string
    :param TargetDBClusterParameterGroupDescription: **[REQUIRED]** 

      A description for the copied cluster parameter group.

      

    
    :type Tags: list
    :param Tags: 

      The tags that are to be assigned to the parameter group.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterParameterGroup': {
                'DBClusterParameterGroupName': 'string',
                'DBParameterGroupFamily': 'string',
                'Description': 'string',
                'DBClusterParameterGroupArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterParameterGroup** *(dict) --* 

          Detailed information about a cluster parameter group. 

          
          

          - **DBClusterParameterGroupName** *(string) --* 

            Provides the name of the cluster parameter group.

            
          

          - **DBParameterGroupFamily** *(string) --* 

            Provides the name of the parameter group family that this cluster parameter group is compatible with.

            
          

          - **Description** *(string) --* 

            Provides the customer-specified description for this cluster parameter group.

            
          

          - **DBClusterParameterGroupArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster parameter group.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupAlreadyExistsFault`

    

  .. py:method:: copy_db_cluster_snapshot(**kwargs)

    

    Copies a snapshot of a cluster.

     

    To copy a cluster snapshot from a shared manual cluster snapshot, ``SourceDBClusterSnapshotIdentifier`` must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You can only copy a shared DB cluster snapshot, whether encrypted or not, in the same Region.

     

    To cancel the copy operation after it is in progress, delete the target cluster snapshot identified by ``TargetDBClusterSnapshotIdentifier`` while that cluster snapshot is in the *copying* status.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.copy_db_cluster_snapshot(
          SourceDBClusterSnapshotIdentifier='string',
          TargetDBClusterSnapshotIdentifier='string',
          KmsKeyId='string',
          CopyTags=True|False,
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          SourceRegion='string'
      )
    :type SourceDBClusterSnapshotIdentifier: string
    :param SourceDBClusterSnapshotIdentifier: **[REQUIRED]** 

      The identifier of the cluster snapshot to copy. This parameter is not case sensitive.

       

      Constraints:

       

       
      * Must specify a valid system snapshot in the *available* state. 
       
      * If the source snapshot is in the same Region as the copy, specify a valid snapshot identifier. 
       
      * If the source snapshot is in a different Region than the copy, specify a valid cluster snapshot ARN. 
       

       

      Example: ``my-cluster-snapshot1``  

      

    
    :type TargetDBClusterSnapshotIdentifier: string
    :param TargetDBClusterSnapshotIdentifier: **[REQUIRED]** 

      The identifier of the new cluster snapshot to create from the source cluster snapshot. This parameter is not case sensitive.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens.  
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens.  
       

       

      Example: ``my-cluster-snapshot2``  

      

    
    :type KmsKeyId: string
    :param KmsKeyId: 

      The KMS key ID for an encrypted cluster snapshot. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. 

       

      If you copy an encrypted cluster snapshot from your account, you can specify a value for ``KmsKeyId`` to encrypt the copy with a new KMS encryption key. If you don't specify a value for ``KmsKeyId`` , then the copy of the cluster snapshot is encrypted with the same KMS key as the source cluster snapshot.

       

      If you copy an encrypted cluster snapshot that is shared from another account, then you must specify a value for ``KmsKeyId`` .

       

      To copy an encrypted cluster snapshot to another Region, set ``KmsKeyId`` to the KMS key ID that you want to use to encrypt the copy of the cluster snapshot in the destination Region. KMS encryption keys are specific to the Region that they are created in, and you can't use encryption keys from one Region in another Region.

       

      If you copy an unencrypted cluster snapshot and specify a value for the ``KmsKeyId`` parameter, an error is returned.

      

    
    :type PreSignedUrl: string
    :param PreSignedUrl: 

      The URL that contains a Signature Version 4 signed request for the``CopyDBClusterSnapshot`` API action in the Region that contains the source cluster snapshot to copy. You must use the ``PreSignedUrl`` parameter when copying a cluster snapshot from another Region.

       

      If you are using an Amazon Web Services SDK tool or the CLI, you can specify ``SourceRegion`` (or ``--source-region`` for the CLI) instead of specifying ``PreSignedUrl`` manually. Specifying ``SourceRegion`` autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source Region.

       

      The presigned URL must be a valid request for the ``CopyDBClusterSnapshot`` API action that can be executed in the source Region that contains the cluster snapshot to be copied. The presigned URL request must contain the following parameter values:

       

       
      * ``SourceRegion`` - The ID of the region that contains the snapshot to be copied. 
       
      * ``SourceDBClusterSnapshotIdentifier`` - The identifier for the the encrypted cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Region. For example, if you are copying an encrypted cluster snapshot from the us-east-1 Region, then your ``SourceDBClusterSnapshotIdentifier`` looks something like the following: ``arn:aws:rds:us-east-1:12345678012:sample-cluster:sample-cluster-snapshot`` . 
       
      * ``TargetDBClusterSnapshotIdentifier`` - The identifier for the new cluster snapshot to be created. This parameter isn't case sensitive. 
       

            Please note that this parameter is automatically populated if it is not provided. Including this parameter is not required



    
    :type CopyTags: boolean
    :param CopyTags: 

      Set to ``true`` to copy all tags from the source cluster snapshot to the target cluster snapshot, and otherwise ``false`` . The default is ``false`` .

      

    
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the cluster snapshot.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    :type SourceRegion: string
    :param SourceRegion: 

      The ID of the region that contains the snapshot to be copied.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterSnapshot': {
                'AvailabilityZones': [
                    'string',
                ],
                'DBClusterSnapshotIdentifier': 'string',
                'DBClusterIdentifier': 'string',
                'SnapshotCreateTime': datetime(2015, 1, 1),
                'Engine': 'string',
                'Status': 'string',
                'Port': 123,
                'VpcId': 'string',
                'ClusterCreateTime': datetime(2015, 1, 1),
                'MasterUsername': 'string',
                'EngineVersion': 'string',
                'SnapshotType': 'string',
                'PercentProgress': 123,
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DBClusterSnapshotArn': 'string',
                'SourceDBClusterSnapshotArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterSnapshot** *(dict) --* 

          Detailed information about a cluster snapshot. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot can be restored in.

            
            

            - *(string) --* 
        
          

          - **DBClusterSnapshotIdentifier** *(string) --* 

            Specifies the identifier for the cluster snapshot.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Specifies the cluster identifier of the cluster that this cluster snapshot was created from.

            
          

          - **SnapshotCreateTime** *(datetime) --* 

            Provides the time when the snapshot was taken, in UTC.

            
          

          - **Engine** *(string) --* 

            Specifies the name of the database engine.

            
          

          - **Status** *(string) --* 

            Specifies the status of this cluster snapshot.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the cluster was listening on at the time of the snapshot.

            
          

          - **VpcId** *(string) --* 

            Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.

            
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **MasterUsername** *(string) --* 

            Provides the master user name for the cluster snapshot.

            
          

          - **EngineVersion** *(string) --* 

            Provides the version of the database engine for this cluster snapshot.

            
          

          - **SnapshotType** *(string) --* 

            Provides the type of the cluster snapshot.

            
          

          - **PercentProgress** *(integer) --* 

            Specifies the percentage of the estimated data that has been transferred.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster snapshot is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster snapshot.

            
          

          - **DBClusterSnapshotArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster snapshot.

            
          

          - **SourceDBClusterSnapshotArn** *(string) --* 

            If the cluster snapshot was copied from a source cluster snapshot, the ARN for the source cluster snapshot; otherwise, a null value.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.SnapshotQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.KMSKeyNotAccessibleFault`

    

  .. py:method:: create_db_cluster(**kwargs)

    

    Creates a new Amazon DocumentDB cluster.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBCluster>`_    


    **Request Syntax** 
    ::

      response = client.create_db_cluster(
          AvailabilityZones=[
              'string',
          ],
          BackupRetentionPeriod=123,
          DBClusterIdentifier='string',
          DBClusterParameterGroupName='string',
          VpcSecurityGroupIds=[
              'string',
          ],
          DBSubnetGroupName='string',
          Engine='string',
          EngineVersion='string',
          Port=123,
          MasterUsername='string',
          MasterUserPassword='string',
          PreferredBackupWindow='string',
          PreferredMaintenanceWindow='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          StorageEncrypted=True|False,
          KmsKeyId='string',
          EnableCloudwatchLogsExports=[
              'string',
          ],
          DeletionProtection=True|False,
          GlobalClusterIdentifier='string',
          SourceRegion='string'
      )
    :type AvailabilityZones: list
    :param AvailabilityZones: 

      A list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

      

    
      - *(string) --* 

      
  
    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: 

      The number of days for which automated backups are retained. You must specify a minimum value of 1.

       

      Default: 1

       

      Constraints:

       

       
      * Must be a value from 1 to 35. 
       

      

    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The cluster identifier. This parameter is stored as a lowercase string.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens.  
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens.  
       

       

      Example: ``my-cluster``  

      

    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: 

      The name of the cluster parameter group to associate with this cluster.

      

    
    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: 

      A list of EC2 VPC security groups to associate with this cluster. 

      

    
      - *(string) --* 

      
  
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: 

      A subnet group to associate with this cluster.

       

      Constraints: Must match the name of an existing ``DBSubnetGroup`` . Must not be default.

       

      Example: ``mySubnetgroup``  

      

    
    :type Engine: string
    :param Engine: **[REQUIRED]** 

      The name of the database engine to be used for this cluster.

       

      Valid values: ``docdb``  

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The version number of the database engine to use. The ``--engine-version`` will default to the latest major engine version. For production workloads, we recommend explicitly declaring this parameter with the intended major engine version.

      

    
    :type Port: integer
    :param Port: 

      The port number on which the instances in the cluster accept connections.

      

    
    :type MasterUsername: string
    :param MasterUsername: 

      The name of the master user for the cluster.

       

      Constraints:

       

       
      * Must be from 1 to 63 letters or numbers. 
       
      * The first character must be a letter. 
       
      * Cannot be a reserved word for the chosen database engine.  
       

      

    
    :type MasterUserPassword: string
    :param MasterUserPassword: 

      The password for the master database user. This password can contain any printable ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).

       

      Constraints: Must contain from 8 to 100 characters.

      

    
    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: 

      The daily time range during which automated backups are created if automated backups are enabled using the ``BackupRetentionPeriod`` parameter. 

       

      The default is a 30-minute window selected at random from an 8-hour block of time for each Region. 

       

      Constraints:

       

       
      * Must be in the format ``hh24:mi-hh24:mi`` . 
       
      * Must be in Universal Coordinated Time (UTC). 
       
      * Must not conflict with the preferred maintenance window.  
       
      * Must be at least 30 minutes. 
       

      

    
    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: 

      The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

       

      Format: ``ddd:hh24:mi-ddd:hh24:mi``  

       

      The default is a 30-minute window selected at random from an 8-hour block of time for each Region, occurring on a random day of the week.

       

      Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun

       

      Constraints: Minimum 30-minute window.

      

    
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the cluster.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    :type StorageEncrypted: boolean
    :param StorageEncrypted: 

      Specifies whether the cluster is encrypted.

      

    
    :type KmsKeyId: string
    :param KmsKeyId: 

      The KMS key identifier for an encrypted cluster.

       

      The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same account that owns the KMS encryption key that is used to encrypt the new cluster, you can use the KMS key alias instead of the ARN for the KMS encryption key.

       

      If an encryption key is not specified in ``KmsKeyId`` : 

       

       
      * If the ``StorageEncrypted`` parameter is ``true`` , Amazon DocumentDB uses your default encryption key.  
       

       

      KMS creates the default encryption key for your account. Your account has a different default encryption key for each Regions.

      

    
    :type PreSignedUrl: string
    :param PreSignedUrl: 

      Not currently supported. 

            Please note that this parameter is automatically populated if it is not provided. Including this parameter is not required



    
    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: 

      A list of log types that need to be enabled for exporting to Amazon CloudWatch Logs. You can enable audit logs or profiler logs. For more information, see `Auditing Amazon DocumentDB Events <https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html>`__ and `Profiling Amazon DocumentDB Operations <https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html>`__ . 

      

    
      - *(string) --* 

      
  
    :type DeletionProtection: boolean
    :param DeletionProtection: 

      Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

      

    
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: 

      The cluster identifier of the new global cluster.

      

    
    :type SourceRegion: string
    :param SourceRegion: 

      The ID of the region that contains the source for the db cluster.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientStorageClusterCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidVPCNetworkStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSubnetGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterParameterGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.KMSKeyNotAccessibleFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs`

    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidGlobalClusterStateFault`

    

  .. py:method:: create_db_cluster_parameter_group(**kwargs)

    

    Creates a new cluster parameter group.

     

    Parameters in a cluster parameter group apply to all of the instances in a cluster.

     

    A cluster parameter group is initially created with the default parameters for the database engine used by instances in the cluster. In Amazon DocumentDB, you cannot make modifications directly to the ``default.docdb3.6`` cluster parameter group. If your Amazon DocumentDB cluster is using the default cluster parameter group and you want to modify a value in it, you must first `create a new parameter group <https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html>`__ or `copy an existing parameter group <https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html>`__ , modify it, and then apply the modified parameter group to your cluster. For the new cluster parameter group and associated settings to take effect, you must then reboot the instances in the cluster without failover. For more information, see `Modifying Amazon DocumentDB Cluster Parameter Groups <https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html>`__ . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterParameterGroup>`_    


    **Request Syntax** 
    ::

      response = client.create_db_cluster_parameter_group(
          DBClusterParameterGroupName='string',
          DBParameterGroupFamily='string',
          Description='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: **[REQUIRED]** 

      The name of the cluster parameter group.

       

      Constraints:

       

       
      * Must not match the name of an existing ``DBClusterParameterGroup`` . 
       

       

      .. note::

         

        This value is stored as a lowercase string.

         

      

    
    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: **[REQUIRED]** 

      The cluster parameter group family name.

      

    
    :type Description: string
    :param Description: **[REQUIRED]** 

      The description for the cluster parameter group.

      

    
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the cluster parameter group.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterParameterGroup': {
                'DBClusterParameterGroupName': 'string',
                'DBParameterGroupFamily': 'string',
                'Description': 'string',
                'DBClusterParameterGroupArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterParameterGroup** *(dict) --* 

          Detailed information about a cluster parameter group. 

          
          

          - **DBClusterParameterGroupName** *(string) --* 

            Provides the name of the cluster parameter group.

            
          

          - **DBParameterGroupFamily** *(string) --* 

            Provides the name of the parameter group family that this cluster parameter group is compatible with.

            
          

          - **Description** *(string) --* 

            Provides the customer-specified description for this cluster parameter group.

            
          

          - **DBClusterParameterGroupArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster parameter group.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupAlreadyExistsFault`

    

  .. py:method:: create_db_cluster_snapshot(**kwargs)

    

    Creates a snapshot of a cluster. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.create_db_cluster_snapshot(
          DBClusterSnapshotIdentifier='string',
          DBClusterIdentifier='string',
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: **[REQUIRED]** 

      The identifier of the cluster snapshot. This parameter is stored as a lowercase string.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens.  
       

       

      Example: ``my-cluster-snapshot1``  

      

    
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The identifier of the cluster to create a snapshot for. This parameter is not case sensitive.

       

      Constraints:

       

       
      * Must match the identifier of an existing ``DBCluster`` . 
       

       

      Example: ``my-cluster``  

      

    
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the cluster snapshot.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterSnapshot': {
                'AvailabilityZones': [
                    'string',
                ],
                'DBClusterSnapshotIdentifier': 'string',
                'DBClusterIdentifier': 'string',
                'SnapshotCreateTime': datetime(2015, 1, 1),
                'Engine': 'string',
                'Status': 'string',
                'Port': 123,
                'VpcId': 'string',
                'ClusterCreateTime': datetime(2015, 1, 1),
                'MasterUsername': 'string',
                'EngineVersion': 'string',
                'SnapshotType': 'string',
                'PercentProgress': 123,
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DBClusterSnapshotArn': 'string',
                'SourceDBClusterSnapshotArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterSnapshot** *(dict) --* 

          Detailed information about a cluster snapshot. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot can be restored in.

            
            

            - *(string) --* 
        
          

          - **DBClusterSnapshotIdentifier** *(string) --* 

            Specifies the identifier for the cluster snapshot.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Specifies the cluster identifier of the cluster that this cluster snapshot was created from.

            
          

          - **SnapshotCreateTime** *(datetime) --* 

            Provides the time when the snapshot was taken, in UTC.

            
          

          - **Engine** *(string) --* 

            Specifies the name of the database engine.

            
          

          - **Status** *(string) --* 

            Specifies the status of this cluster snapshot.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the cluster was listening on at the time of the snapshot.

            
          

          - **VpcId** *(string) --* 

            Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.

            
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **MasterUsername** *(string) --* 

            Provides the master user name for the cluster snapshot.

            
          

          - **EngineVersion** *(string) --* 

            Provides the version of the database engine for this cluster snapshot.

            
          

          - **SnapshotType** *(string) --* 

            Provides the type of the cluster snapshot.

            
          

          - **PercentProgress** *(integer) --* 

            Specifies the percentage of the estimated data that has been transferred.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster snapshot is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster snapshot.

            
          

          - **DBClusterSnapshotArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster snapshot.

            
          

          - **SourceDBClusterSnapshotArn** *(string) --* 

            If the cluster snapshot was copied from a source cluster snapshot, the ARN for the source cluster snapshot; otherwise, a null value.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SnapshotQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    

  .. py:method:: create_db_instance(**kwargs)

    

    Creates a new instance.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBInstance>`_    


    **Request Syntax** 
    ::

      response = client.create_db_instance(
          DBInstanceIdentifier='string',
          DBInstanceClass='string',
          Engine='string',
          AvailabilityZone='string',
          PreferredMaintenanceWindow='string',
          AutoMinorVersionUpgrade=True|False,
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          DBClusterIdentifier='string',
          PromotionTier=123
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: **[REQUIRED]** 

      The instance identifier. This parameter is stored as a lowercase string.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

       

      Example: ``mydbinstance``  

      

    
    :type DBInstanceClass: string
    :param DBInstanceClass: **[REQUIRED]** 

      The compute and memory capacity of the instance; for example, ``db.r5.large`` . 

      

    
    :type Engine: string
    :param Engine: **[REQUIRED]** 

      The name of the database engine to be used for this instance.

       

      Valid value: ``docdb``  

      

    
    :type AvailabilityZone: string
    :param AvailabilityZone: 

      The Amazon EC2 Availability Zone that the instance is created in. 

       

      Default: A random, system-chosen Availability Zone in the endpoint's Region.

       

      Example: ``us-east-1d``  

      

    
    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: 

      The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC).

       

      Format: ``ddd:hh24:mi-ddd:hh24:mi``  

       

      The default is a 30-minute window selected at random from an 8-hour block of time for each Region, occurring on a random day of the week. 

       

      Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun

       

      Constraints: Minimum 30-minute window.

      

    
    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: 

      This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

       

      Default: ``false``  

      

    
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the instance. You can assign up to 10 tags to an instance.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The identifier of the cluster that the instance will belong to.

      

    
    :type PromotionTier: integer
    :param PromotionTier: 

      A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

       

      Default: 1

       

      Valid values: 0-15

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBInstance': {
                'DBInstanceIdentifier': 'string',
                'DBInstanceClass': 'string',
                'Engine': 'string',
                'DBInstanceStatus': 'string',
                'Endpoint': {
                    'Address': 'string',
                    'Port': 123,
                    'HostedZoneId': 'string'
                },
                'InstanceCreateTime': datetime(2015, 1, 1),
                'PreferredBackupWindow': 'string',
                'BackupRetentionPeriod': 123,
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'AvailabilityZone': 'string',
                'DBSubnetGroup': {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
                'PreferredMaintenanceWindow': 'string',
                'PendingModifiedValues': {
                    'DBInstanceClass': 'string',
                    'AllocatedStorage': 123,
                    'MasterUserPassword': 'string',
                    'Port': 123,
                    'BackupRetentionPeriod': 123,
                    'MultiAZ': True|False,
                    'EngineVersion': 'string',
                    'LicenseModel': 'string',
                    'Iops': 123,
                    'DBInstanceIdentifier': 'string',
                    'StorageType': 'string',
                    'CACertificateIdentifier': 'string',
                    'DBSubnetGroupName': 'string',
                    'PendingCloudwatchLogsExports': {
                        'LogTypesToEnable': [
                            'string',
                        ],
                        'LogTypesToDisable': [
                            'string',
                        ]
                    }
                },
                'LatestRestorableTime': datetime(2015, 1, 1),
                'EngineVersion': 'string',
                'AutoMinorVersionUpgrade': True|False,
                'PubliclyAccessible': True|False,
                'StatusInfos': [
                    {
                        'StatusType': 'string',
                        'Normal': True|False,
                        'Status': 'string',
                        'Message': 'string'
                    },
                ],
                'DBClusterIdentifier': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbiResourceId': 'string',
                'CACertificateIdentifier': 'string',
                'PromotionTier': 123,
                'DBInstanceArn': 'string',
                'EnabledCloudwatchLogsExports': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBInstance** *(dict) --* 

          Detailed information about an instance. 

          
          

          - **DBInstanceIdentifier** *(string) --* 

            Contains a user-provided database identifier. This identifier is the unique key that identifies an instance.

            
          

          - **DBInstanceClass** *(string) --* 

            Contains the name of the compute and memory capacity class of the instance.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this instance.

            
          

          - **DBInstanceStatus** *(string) --* 

            Specifies the current state of this database.

            
          

          - **Endpoint** *(dict) --* 

            Specifies the connection endpoint.

            
            

            - **Address** *(string) --* 

              Specifies the DNS address of the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the database engine is listening on.

              
            

            - **HostedZoneId** *(string) --* 

              Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

              
        
          

          - **InstanceCreateTime** *(datetime) --* 

            Provides the date and time that the instance was created.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of VPC security group elements that the instance belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **AvailabilityZone** *(string) --* 

            Specifies the name of the Availability Zone that the instance is located in.

            
          

          - **DBSubnetGroup** *(dict) --* 

            Specifies information on the subnet group that is associated with the instance, including the name, description, and subnets in the subnet group.

            
            

            - **DBSubnetGroupName** *(string) --* 

              The name of the subnet group.

              
            

            - **DBSubnetGroupDescription** *(string) --* 

              Provides the description of the subnet group.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID of the subnet group.

              
            

            - **SubnetGroupStatus** *(string) --* 

              Provides the status of the subnet group.

              
            

            - **Subnets** *(list) --* 

              Detailed information about one or more subnets within a subnet group.

              
              

              - *(dict) --* 

                Detailed information about a subnet. 

                
                

                - **SubnetIdentifier** *(string) --* 

                  Specifies the identifier of the subnet.

                  
                

                - **SubnetAvailabilityZone** *(dict) --* 

                  Specifies the Availability Zone for the subnet.

                  
                  

                  - **Name** *(string) --* 

                    The name of the Availability Zone.

                    
              
                

                - **SubnetStatus** *(string) --* 

                  Specifies the status of the subnet.

                  
            
          
            

            - **DBSubnetGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the DB subnet group.

              
        
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **PendingModifiedValues** *(dict) --* 

            Specifies that changes to the instance are pending. This element is included only when changes are pending. Specific changes are identified by subelements.

            
            

            - **DBInstanceClass** *(string) --* 

              Contains the new ``DBInstanceClass`` for the instance that will be applied or is currently being applied. 

              
            

            - **AllocatedStorage** *(integer) --* 

              Contains the new ``AllocatedStorage`` size for then instance that will be applied or is currently being applied. 

              
            

            - **MasterUserPassword** *(string) --* 

              Contains the pending or currently in-progress change of the master credentials for the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the pending port for the instance.

              
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the pending number of days for which automated backups are retained.

              
            

            - **MultiAZ** *(boolean) --* 

              Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **LicenseModel** *(string) --* 

              The license model for the instance.

               

              Valid values: ``license-included`` , ``bring-your-own-license`` , ``general-public-license``  

              
            

            - **Iops** *(integer) --* 

              Specifies the new Provisioned IOPS value for the instance that will be applied or is currently being applied.

              
            

            - **DBInstanceIdentifier** *(string) --* 

              Contains the new ``DBInstanceIdentifier`` for the instance that will be applied or is currently being applied. 

              
            

            - **StorageType** *(string) --* 

              Specifies the storage type to be associated with the instance.

              
            

            - **CACertificateIdentifier** *(string) --* 

              Specifies the identifier of the certificate authority (CA) certificate for the DB instance.

              
            

            - **DBSubnetGroupName** *(string) --* 

              The new subnet group for the instance. 

              
            

            - **PendingCloudwatchLogsExports** *(dict) --* 

              A list of the log types whose configuration is still pending. These log types are in the process of being activated or deactivated.

              
              

              - **LogTypesToEnable** *(list) --* 

                Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.

                
                

                - *(string) --* 
            
              

              - **LogTypesToDisable** *(list) --* 

                Log types that are in the process of being enabled. After they are enabled, these log types are exported to Amazon CloudWatch Logs.

                
                

                - *(string) --* 
            
          
        
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **AutoMinorVersionUpgrade** *(boolean) --* 

            Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

            
          

          - **PubliclyAccessible** *(boolean) --* 

            Not supported. Amazon DocumentDB does not currently support public endpoints. The value of ``PubliclyAccessible`` is always ``false`` .

            
          

          - **StatusInfos** *(list) --* 

            The status of a read replica. If the instance is not a read replica, this is blank.

            
            

            - *(dict) --* 

              Provides a list of status information for an instance.

              
              

              - **StatusType** *(string) --* 

                This value is currently "``read replication`` ."

                
              

              - **Normal** *(boolean) --* 

                A Boolean value that is ``true`` if the instance is operating normally, or ``false`` if the instance is in an error state.

                
              

              - **Status** *(string) --* 

                Status of the instance. For a ``StatusType`` of read replica, the values can be ``replicating`` , error, ``stopped`` , or ``terminated`` .

                
              

              - **Message** *(string) --* 

                Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.

                
          
        
          

          - **DBClusterIdentifier** *(string) --* 

            Contains the name of the cluster that the instance is a member of if the instance is a member of a cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether or not the instance is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted instance. 

            
          

          - **DbiResourceId** *(string) --* 

            The Region-unique, immutable identifier for the instance. This identifier is found in CloudTrail log entries whenever the KMS key for the instance is accessed.

            
          

          - **CACertificateIdentifier** *(string) --* 

            The identifier of the CA certificate for this DB instance.

            
          

          - **PromotionTier** *(integer) --* 

            A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

            
          

          - **DBInstanceArn** *(string) --* 

            The Amazon Resource Name (ARN) for the instance.

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this instance is configured to export to CloudWatch Logs.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientDBInstanceCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSecurityGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InstanceQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidVPCNetworkStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageTypeNotSupportedFault`

    
    *     :py:class:`DocDB.Client.exceptions.AuthorizationNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.KMSKeyNotAccessibleFault`

    

  .. py:method:: create_db_subnet_group(**kwargs)

    

    Creates a new subnet group. subnet groups must contain at least one subnet in at least two Availability Zones in the Region.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBSubnetGroup>`_    


    **Request Syntax** 
    ::

      response = client.create_db_subnet_group(
          DBSubnetGroupName='string',
          DBSubnetGroupDescription='string',
          SubnetIds=[
              'string',
          ],
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: **[REQUIRED]** 

      The name for the subnet group. This value is stored as a lowercase string.

       

      Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default.

       

      Example: ``mySubnetgroup``  

      

    
    :type DBSubnetGroupDescription: string
    :param DBSubnetGroupDescription: **[REQUIRED]** 

      The description for the subnet group.

      

    
    :type SubnetIds: list
    :param SubnetIds: **[REQUIRED]** 

      The Amazon EC2 subnet IDs for the subnet group.

      

    
      - *(string) --* 

      
  
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the subnet group.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBSubnetGroup** *(dict) --* 

          Detailed information about a subnet group. 

          
          

          - **DBSubnetGroupName** *(string) --* 

            The name of the subnet group.

            
          

          - **DBSubnetGroupDescription** *(string) --* 

            Provides the description of the subnet group.

            
          

          - **VpcId** *(string) --* 

            Provides the virtual private cloud (VPC) ID of the subnet group.

            
          

          - **SubnetGroupStatus** *(string) --* 

            Provides the status of the subnet group.

            
          

          - **Subnets** *(list) --* 

            Detailed information about one or more subnets within a subnet group.

            
            

            - *(dict) --* 

              Detailed information about a subnet. 

              
              

              - **SubnetIdentifier** *(string) --* 

                Specifies the identifier of the subnet.

                
              

              - **SubnetAvailabilityZone** *(dict) --* 

                Specifies the Availability Zone for the subnet.

                
                

                - **Name** *(string) --* 

                  The name of the Availability Zone.

                  
            
              

              - **SubnetStatus** *(string) --* 

                Specifies the status of the subnet.

                
          
        
          

          - **DBSubnetGroupArn** *(string) --* 

            The Amazon Resource Name (ARN) for the DB subnet group.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    

  .. py:method:: create_event_subscription(**kwargs)

    

    Creates an Amazon DocumentDB event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by using the Amazon DocumentDB console, the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the Amazon SNS console.

     

    You can specify the type of source (``SourceType`` ) that you want to be notified of. You can also provide a list of Amazon DocumentDB sources (``SourceIds`` ) that trigger the events, and you can provide a list of event categories (``EventCategories`` ) for events that you want to be notified of. For example, you can specify ``SourceType = db-instance`` , ``SourceIds = mydbinstance1, mydbinstance2`` and ``EventCategories = Availability, Backup`` .

     

    If you specify both the ``SourceType`` and ``SourceIds`` (such as ``SourceType = db-instance`` and ``SourceIdentifier = myDBInstance1`` ), you are notified of all the ``db-instance`` events for the specified source. If you specify a ``SourceType`` but do not specify a ``SourceIdentifier`` , you receive notice of the events for that source type for all your Amazon DocumentDB sources. If you do not specify either the ``SourceType`` or the ``SourceIdentifier`` , you are notified of events generated from all Amazon DocumentDB sources belonging to your customer account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateEventSubscription>`_    


    **Request Syntax** 
    ::

      response = client.create_event_subscription(
          SubscriptionName='string',
          SnsTopicArn='string',
          SourceType='string',
          EventCategories=[
              'string',
          ],
          SourceIds=[
              'string',
          ],
          Enabled=True|False,
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ]
      )
    :type SubscriptionName: string
    :param SubscriptionName: **[REQUIRED]** 

      The name of the subscription.

       

      Constraints: The name must be fewer than 255 characters.

      

    
    :type SnsTopicArn: string
    :param SnsTopicArn: **[REQUIRED]** 

      The Amazon Resource Name (ARN) of the SNS topic created for event notification. Amazon SNS creates the ARN when you create a topic and subscribe to it.

      

    
    :type SourceType: string
    :param SourceType: 

      The type of source that is generating the events. For example, if you want to be notified of events generated by an instance, you would set this parameter to ``db-instance`` . If this value is not specified, all events are returned.

       

      Valid values: ``db-instance`` , ``db-cluster`` , ``db-parameter-group`` , ``db-security-group`` , ``db-cluster-snapshot``  

      

    
    :type EventCategories: list
    :param EventCategories: 

      A list of event categories for a ``SourceType`` that you want to subscribe to. 

      

    
      - *(string) --* 

      
  
    :type SourceIds: list
    :param SourceIds: 

      The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.

       

      Constraints:

       

       
      * If ``SourceIds`` are provided, ``SourceType`` must also be provided. 
       
      * If the source type is an instance, a ``DBInstanceIdentifier`` must be provided. 
       
      * If the source type is a security group, a ``DBSecurityGroupName`` must be provided. 
       
      * If the source type is a parameter group, a ``DBParameterGroupName`` must be provided. 
       
      * If the source type is a snapshot, a ``DBSnapshotIdentifier`` must be provided. 
       

      

    
      - *(string) --* 

      
  
    :type Enabled: boolean
    :param Enabled: 

      A Boolean value; set to ``true`` to activate the subscription, set to ``false`` to create the subscription but not active it. 

      

    
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the event subscription.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventSubscription': {
                'CustomerAwsId': 'string',
                'CustSubscriptionId': 'string',
                'SnsTopicArn': 'string',
                'Status': 'string',
                'SubscriptionCreationTime': 'string',
                'SourceType': 'string',
                'SourceIdsList': [
                    'string',
                ],
                'EventCategoriesList': [
                    'string',
                ],
                'Enabled': True|False,
                'EventSubscriptionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventSubscription** *(dict) --* 

          Detailed information about an event to which you have subscribed.

          
          

          - **CustomerAwsId** *(string) --* 

            The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

            
          

          - **CustSubscriptionId** *(string) --* 

            The Amazon DocumentDB event notification subscription ID.

            
          

          - **SnsTopicArn** *(string) --* 

            The topic ARN of the Amazon DocumentDB event notification subscription.

            
          

          - **Status** *(string) --* 

            The status of the Amazon DocumentDB event notification subscription.

             

            Constraints:

             

            Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

             

            The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

            
          

          - **SubscriptionCreationTime** *(string) --* 

            The time at which the Amazon DocumentDB event notification subscription was created.

            
          

          - **SourceType** *(string) --* 

            The source type for the Amazon DocumentDB event notification subscription.

            
          

          - **SourceIdsList** *(list) --* 

            A list of source IDs for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **EventCategoriesList** *(list) --* 

            A list of event categories for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **Enabled** *(boolean) --* 

            A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

            
          

          - **EventSubscriptionArn** *(string) --* 

            The Amazon Resource Name (ARN) for the event subscription.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.EventSubscriptionQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionAlreadyExistFault`

    
    *     :py:class:`DocDB.Client.exceptions.SNSInvalidTopicFault`

    
    *     :py:class:`DocDB.Client.exceptions.SNSNoAuthorizationFault`

    
    *     :py:class:`DocDB.Client.exceptions.SNSTopicArnNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionCategoryNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SourceNotFoundFault`

    

  .. py:method:: create_global_cluster(**kwargs)

    

    Creates an Amazon DocumentDB global cluster that can span multiple multiple Regions. The global cluster contains one primary cluster with read-write capability, and up-to give read-only secondary clusters. Global clusters uses storage-based fast replication across regions with latencies less than one second, using dedicated infrastructure with no impact to your workload’s performance.

     

    

     

    You can create a global cluster that is initially empty, and then add a primary and a secondary to it. Or you can specify an existing cluster during the create operation, and this cluster becomes the primary of the global cluster. 

     

    .. note::

       

      This action only applies to Amazon DocumentDB clusters.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateGlobalCluster>`_    


    **Request Syntax** 
    ::

      response = client.create_global_cluster(
          GlobalClusterIdentifier='string',
          SourceDBClusterIdentifier='string',
          Engine='string',
          EngineVersion='string',
          DeletionProtection=True|False,
          DatabaseName='string',
          StorageEncrypted=True|False
      )
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: **[REQUIRED]** 

      The cluster identifier of the new global cluster.

      

    
    :type SourceDBClusterIdentifier: string
    :param SourceDBClusterIdentifier: 

      The Amazon Resource Name (ARN) to use as the primary cluster of the global cluster. This parameter is optional.

      

    
    :type Engine: string
    :param Engine: 

      The name of the database engine to be used for this cluster.

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The engine version of the global cluster.

      

    
    :type DeletionProtection: boolean
    :param DeletionProtection: 

      The deletion protection setting for the new global cluster. The global cluster can't be deleted when deletion protection is enabled. 

      

    
    :type DatabaseName: string
    :param DatabaseName: 

      The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon DocumentDB will not create a database in the global cluster you are creating.

      

    
    :type StorageEncrypted: boolean
    :param StorageEncrypted: 

      The storage encryption setting for the new global cluster. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GlobalCluster': {
                'GlobalClusterIdentifier': 'string',
                'GlobalClusterResourceId': 'string',
                'GlobalClusterArn': 'string',
                'Status': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'DatabaseName': 'string',
                'StorageEncrypted': True|False,
                'DeletionProtection': True|False,
                'GlobalClusterMembers': [
                    {
                        'DBClusterArn': 'string',
                        'Readers': [
                            'string',
                        ],
                        'IsWriter': True|False
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GlobalCluster** *(dict) --* 

          A data type representing an Amazon DocumentDB global cluster.

          
          

          - **GlobalClusterIdentifier** *(string) --* 

            Contains a user-supplied global cluster identifier. This identifier is the unique key that identifies a global cluster. 

            
          

          - **GlobalClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the cluster is accessed. 

            
          

          - **GlobalClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the global cluster.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this global cluster.

            
          

          - **Engine** *(string) --* 

            The Amazon DocumentDB database engine used by the global cluster. 

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **DatabaseName** *(string) --* 

            The default database name within the new global cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            The storage encryption setting for the global cluster.

            
          

          - **DeletionProtection** *(boolean) --* 

            The deletion protection setting for the new global cluster.

            
          

          - **GlobalClusterMembers** *(list) --* 

            The list of cluster IDs for secondary clusters within the global cluster. Currently limited to one item. 

            
            

            - *(dict) --* 

              A data structure with information about any primary and secondary clusters associated with an Amazon DocumentDB global clusters. 

              
              

              - **DBClusterArn** *(string) --* 

                The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.

                
              

              - **Readers** *(list) --* 

                The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global cluster.

                
                

                - *(string) --* 
            
              

              - **IsWriter** *(boolean) --* 

                Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is, has read-write capability) for the Amazon DocumentDB global cluster with which it is associated. 

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    

  .. py:method:: delete_db_cluster(**kwargs)

    

    Deletes a previously provisioned cluster. When you delete a cluster, all automated backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots of the specified cluster are not deleted.

     

    

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBCluster>`_    


    **Request Syntax** 
    ::

      response = client.delete_db_cluster(
          DBClusterIdentifier='string',
          SkipFinalSnapshot=True|False,
          FinalDBSnapshotIdentifier='string'
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The cluster identifier for the cluster to be deleted. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * Must match an existing ``DBClusterIdentifier`` . 
       

      

    
    :type SkipFinalSnapshot: boolean
    :param SkipFinalSnapshot: 

      Determines whether a final cluster snapshot is created before the cluster is deleted. If ``true`` is specified, no cluster snapshot is created. If ``false`` is specified, a cluster snapshot is created before the DB cluster is deleted. 

       

      .. note::

         

        If ``SkipFinalSnapshot`` is ``false`` , you must specify a ``FinalDBSnapshotIdentifier`` parameter.

         

       

      Default: ``false``  

      

    
    :type FinalDBSnapshotIdentifier: string
    :param FinalDBSnapshotIdentifier: 

      The cluster snapshot identifier of the new cluster snapshot created when ``SkipFinalSnapshot`` is set to ``false`` . 

       

      .. note::

         

        Specifying this parameter and also setting the ``SkipFinalShapshot`` parameter to ``true`` results in an error. 

         

       

      Constraints:

       

       
      * Must be from 1 to 255 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.SnapshotQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    

  .. py:method:: delete_db_cluster_parameter_group(**kwargs)

    

    Deletes a specified cluster parameter group. The cluster parameter group to be deleted can't be associated with any clusters.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterParameterGroup>`_    


    **Request Syntax** 
    ::

      response = client.delete_db_cluster_parameter_group(
          DBClusterParameterGroupName='string'
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: **[REQUIRED]** 

      The name of the cluster parameter group.

       

      Constraints:

       

       
      * Must be the name of an existing cluster parameter group. 
       
      * You can't delete a default cluster parameter group. 
       
      * Cannot be associated with any clusters. 
       

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBParameterGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    

  .. py:method:: delete_db_cluster_snapshot(**kwargs)

    

    Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is terminated.

     

    .. note::

       

      The cluster snapshot must be in the ``available`` state to be deleted.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.delete_db_cluster_snapshot(
          DBClusterSnapshotIdentifier='string'
      )
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: **[REQUIRED]** 

      The identifier of the cluster snapshot to delete.

       

      Constraints: Must be the name of an existing cluster snapshot in the ``available`` state.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterSnapshot': {
                'AvailabilityZones': [
                    'string',
                ],
                'DBClusterSnapshotIdentifier': 'string',
                'DBClusterIdentifier': 'string',
                'SnapshotCreateTime': datetime(2015, 1, 1),
                'Engine': 'string',
                'Status': 'string',
                'Port': 123,
                'VpcId': 'string',
                'ClusterCreateTime': datetime(2015, 1, 1),
                'MasterUsername': 'string',
                'EngineVersion': 'string',
                'SnapshotType': 'string',
                'PercentProgress': 123,
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DBClusterSnapshotArn': 'string',
                'SourceDBClusterSnapshotArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterSnapshot** *(dict) --* 

          Detailed information about a cluster snapshot. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot can be restored in.

            
            

            - *(string) --* 
        
          

          - **DBClusterSnapshotIdentifier** *(string) --* 

            Specifies the identifier for the cluster snapshot.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Specifies the cluster identifier of the cluster that this cluster snapshot was created from.

            
          

          - **SnapshotCreateTime** *(datetime) --* 

            Provides the time when the snapshot was taken, in UTC.

            
          

          - **Engine** *(string) --* 

            Specifies the name of the database engine.

            
          

          - **Status** *(string) --* 

            Specifies the status of this cluster snapshot.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the cluster was listening on at the time of the snapshot.

            
          

          - **VpcId** *(string) --* 

            Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.

            
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **MasterUsername** *(string) --* 

            Provides the master user name for the cluster snapshot.

            
          

          - **EngineVersion** *(string) --* 

            Provides the version of the database engine for this cluster snapshot.

            
          

          - **SnapshotType** *(string) --* 

            Provides the type of the cluster snapshot.

            
          

          - **PercentProgress** *(integer) --* 

            Specifies the percentage of the estimated data that has been transferred.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster snapshot is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster snapshot.

            
          

          - **DBClusterSnapshotArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster snapshot.

            
          

          - **SourceDBClusterSnapshotArn** *(string) --* 

            If the cluster snapshot was copied from a source cluster snapshot, the ARN for the source cluster snapshot; otherwise, a null value.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    

  .. py:method:: delete_db_instance(**kwargs)

    

    Deletes a previously provisioned instance.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBInstance>`_    


    **Request Syntax** 
    ::

      response = client.delete_db_instance(
          DBInstanceIdentifier='string'
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: **[REQUIRED]** 

      The instance identifier for the instance to be deleted. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * Must match the name of an existing instance. 
       

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBInstance': {
                'DBInstanceIdentifier': 'string',
                'DBInstanceClass': 'string',
                'Engine': 'string',
                'DBInstanceStatus': 'string',
                'Endpoint': {
                    'Address': 'string',
                    'Port': 123,
                    'HostedZoneId': 'string'
                },
                'InstanceCreateTime': datetime(2015, 1, 1),
                'PreferredBackupWindow': 'string',
                'BackupRetentionPeriod': 123,
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'AvailabilityZone': 'string',
                'DBSubnetGroup': {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
                'PreferredMaintenanceWindow': 'string',
                'PendingModifiedValues': {
                    'DBInstanceClass': 'string',
                    'AllocatedStorage': 123,
                    'MasterUserPassword': 'string',
                    'Port': 123,
                    'BackupRetentionPeriod': 123,
                    'MultiAZ': True|False,
                    'EngineVersion': 'string',
                    'LicenseModel': 'string',
                    'Iops': 123,
                    'DBInstanceIdentifier': 'string',
                    'StorageType': 'string',
                    'CACertificateIdentifier': 'string',
                    'DBSubnetGroupName': 'string',
                    'PendingCloudwatchLogsExports': {
                        'LogTypesToEnable': [
                            'string',
                        ],
                        'LogTypesToDisable': [
                            'string',
                        ]
                    }
                },
                'LatestRestorableTime': datetime(2015, 1, 1),
                'EngineVersion': 'string',
                'AutoMinorVersionUpgrade': True|False,
                'PubliclyAccessible': True|False,
                'StatusInfos': [
                    {
                        'StatusType': 'string',
                        'Normal': True|False,
                        'Status': 'string',
                        'Message': 'string'
                    },
                ],
                'DBClusterIdentifier': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbiResourceId': 'string',
                'CACertificateIdentifier': 'string',
                'PromotionTier': 123,
                'DBInstanceArn': 'string',
                'EnabledCloudwatchLogsExports': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBInstance** *(dict) --* 

          Detailed information about an instance. 

          
          

          - **DBInstanceIdentifier** *(string) --* 

            Contains a user-provided database identifier. This identifier is the unique key that identifies an instance.

            
          

          - **DBInstanceClass** *(string) --* 

            Contains the name of the compute and memory capacity class of the instance.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this instance.

            
          

          - **DBInstanceStatus** *(string) --* 

            Specifies the current state of this database.

            
          

          - **Endpoint** *(dict) --* 

            Specifies the connection endpoint.

            
            

            - **Address** *(string) --* 

              Specifies the DNS address of the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the database engine is listening on.

              
            

            - **HostedZoneId** *(string) --* 

              Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

              
        
          

          - **InstanceCreateTime** *(datetime) --* 

            Provides the date and time that the instance was created.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of VPC security group elements that the instance belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **AvailabilityZone** *(string) --* 

            Specifies the name of the Availability Zone that the instance is located in.

            
          

          - **DBSubnetGroup** *(dict) --* 

            Specifies information on the subnet group that is associated with the instance, including the name, description, and subnets in the subnet group.

            
            

            - **DBSubnetGroupName** *(string) --* 

              The name of the subnet group.

              
            

            - **DBSubnetGroupDescription** *(string) --* 

              Provides the description of the subnet group.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID of the subnet group.

              
            

            - **SubnetGroupStatus** *(string) --* 

              Provides the status of the subnet group.

              
            

            - **Subnets** *(list) --* 

              Detailed information about one or more subnets within a subnet group.

              
              

              - *(dict) --* 

                Detailed information about a subnet. 

                
                

                - **SubnetIdentifier** *(string) --* 

                  Specifies the identifier of the subnet.

                  
                

                - **SubnetAvailabilityZone** *(dict) --* 

                  Specifies the Availability Zone for the subnet.

                  
                  

                  - **Name** *(string) --* 

                    The name of the Availability Zone.

                    
              
                

                - **SubnetStatus** *(string) --* 

                  Specifies the status of the subnet.

                  
            
          
            

            - **DBSubnetGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the DB subnet group.

              
        
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **PendingModifiedValues** *(dict) --* 

            Specifies that changes to the instance are pending. This element is included only when changes are pending. Specific changes are identified by subelements.

            
            

            - **DBInstanceClass** *(string) --* 

              Contains the new ``DBInstanceClass`` for the instance that will be applied or is currently being applied. 

              
            

            - **AllocatedStorage** *(integer) --* 

              Contains the new ``AllocatedStorage`` size for then instance that will be applied or is currently being applied. 

              
            

            - **MasterUserPassword** *(string) --* 

              Contains the pending or currently in-progress change of the master credentials for the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the pending port for the instance.

              
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the pending number of days for which automated backups are retained.

              
            

            - **MultiAZ** *(boolean) --* 

              Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **LicenseModel** *(string) --* 

              The license model for the instance.

               

              Valid values: ``license-included`` , ``bring-your-own-license`` , ``general-public-license``  

              
            

            - **Iops** *(integer) --* 

              Specifies the new Provisioned IOPS value for the instance that will be applied or is currently being applied.

              
            

            - **DBInstanceIdentifier** *(string) --* 

              Contains the new ``DBInstanceIdentifier`` for the instance that will be applied or is currently being applied. 

              
            

            - **StorageType** *(string) --* 

              Specifies the storage type to be associated with the instance.

              
            

            - **CACertificateIdentifier** *(string) --* 

              Specifies the identifier of the certificate authority (CA) certificate for the DB instance.

              
            

            - **DBSubnetGroupName** *(string) --* 

              The new subnet group for the instance. 

              
            

            - **PendingCloudwatchLogsExports** *(dict) --* 

              A list of the log types whose configuration is still pending. These log types are in the process of being activated or deactivated.

              
              

              - **LogTypesToEnable** *(list) --* 

                Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.

                
                

                - *(string) --* 
            
              

              - **LogTypesToDisable** *(list) --* 

                Log types that are in the process of being enabled. After they are enabled, these log types are exported to Amazon CloudWatch Logs.

                
                

                - *(string) --* 
            
          
        
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **AutoMinorVersionUpgrade** *(boolean) --* 

            Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

            
          

          - **PubliclyAccessible** *(boolean) --* 

            Not supported. Amazon DocumentDB does not currently support public endpoints. The value of ``PubliclyAccessible`` is always ``false`` .

            
          

          - **StatusInfos** *(list) --* 

            The status of a read replica. If the instance is not a read replica, this is blank.

            
            

            - *(dict) --* 

              Provides a list of status information for an instance.

              
              

              - **StatusType** *(string) --* 

                This value is currently "``read replication`` ."

                
              

              - **Normal** *(boolean) --* 

                A Boolean value that is ``true`` if the instance is operating normally, or ``false`` if the instance is in an error state.

                
              

              - **Status** *(string) --* 

                Status of the instance. For a ``StatusType`` of read replica, the values can be ``replicating`` , error, ``stopped`` , or ``terminated`` .

                
              

              - **Message** *(string) --* 

                Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.

                
          
        
          

          - **DBClusterIdentifier** *(string) --* 

            Contains the name of the cluster that the instance is a member of if the instance is a member of a cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether or not the instance is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted instance. 

            
          

          - **DbiResourceId** *(string) --* 

            The Region-unique, immutable identifier for the instance. This identifier is found in CloudTrail log entries whenever the KMS key for the instance is accessed.

            
          

          - **CACertificateIdentifier** *(string) --* 

            The identifier of the CA certificate for this DB instance.

            
          

          - **PromotionTier** *(integer) --* 

            A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

            
          

          - **DBInstanceArn** *(string) --* 

            The Amazon Resource Name (ARN) for the instance.

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this instance is configured to export to CloudWatch Logs.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSnapshotAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.SnapshotQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    

  .. py:method:: delete_db_subnet_group(**kwargs)

    

    Deletes a subnet group.

     

    .. note::

       

      The specified database subnet group must not be associated with any DB instances.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBSubnetGroup>`_    


    **Request Syntax** 
    ::

      response = client.delete_db_subnet_group(
          DBSubnetGroupName='string'
      )
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: **[REQUIRED]** 

      The name of the database subnet group to delete.

       

      .. note::

         

        You can't delete the default subnet group.

         

       

      Constraints:

       

      Must match the name of an existing ``DBSubnetGroup`` . Must not be default.

       

      Example: ``mySubnetgroup``  

      

    
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSubnetGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSubnetStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    

  .. py:method:: delete_event_subscription(**kwargs)

    

    Deletes an Amazon DocumentDB event notification subscription.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteEventSubscription>`_    


    **Request Syntax** 
    ::

      response = client.delete_event_subscription(
          SubscriptionName='string'
      )
    :type SubscriptionName: string
    :param SubscriptionName: **[REQUIRED]** 

      The name of the Amazon DocumentDB event notification subscription that you want to delete.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventSubscription': {
                'CustomerAwsId': 'string',
                'CustSubscriptionId': 'string',
                'SnsTopicArn': 'string',
                'Status': 'string',
                'SubscriptionCreationTime': 'string',
                'SourceType': 'string',
                'SourceIdsList': [
                    'string',
                ],
                'EventCategoriesList': [
                    'string',
                ],
                'Enabled': True|False,
                'EventSubscriptionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventSubscription** *(dict) --* 

          Detailed information about an event to which you have subscribed.

          
          

          - **CustomerAwsId** *(string) --* 

            The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

            
          

          - **CustSubscriptionId** *(string) --* 

            The Amazon DocumentDB event notification subscription ID.

            
          

          - **SnsTopicArn** *(string) --* 

            The topic ARN of the Amazon DocumentDB event notification subscription.

            
          

          - **Status** *(string) --* 

            The status of the Amazon DocumentDB event notification subscription.

             

            Constraints:

             

            Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

             

            The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

            
          

          - **SubscriptionCreationTime** *(string) --* 

            The time at which the Amazon DocumentDB event notification subscription was created.

            
          

          - **SourceType** *(string) --* 

            The source type for the Amazon DocumentDB event notification subscription.

            
          

          - **SourceIdsList** *(list) --* 

            A list of source IDs for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **EventCategoriesList** *(list) --* 

            A list of event categories for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **Enabled** *(boolean) --* 

            A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

            
          

          - **EventSubscriptionArn** *(string) --* 

            The Amazon Resource Name (ARN) for the event subscription.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidEventSubscriptionStateFault`

    

  .. py:method:: delete_global_cluster(**kwargs)

    

    Deletes a global cluster. The primary and secondary clusters must already be detached or deleted before attempting to delete a global cluster.

     

    .. note::

       

      This action only applies to Amazon DocumentDB clusters.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteGlobalCluster>`_    


    **Request Syntax** 
    ::

      response = client.delete_global_cluster(
          GlobalClusterIdentifier='string'
      )
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: **[REQUIRED]** 

      The cluster identifier of the global cluster being deleted.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GlobalCluster': {
                'GlobalClusterIdentifier': 'string',
                'GlobalClusterResourceId': 'string',
                'GlobalClusterArn': 'string',
                'Status': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'DatabaseName': 'string',
                'StorageEncrypted': True|False,
                'DeletionProtection': True|False,
                'GlobalClusterMembers': [
                    {
                        'DBClusterArn': 'string',
                        'Readers': [
                            'string',
                        ],
                        'IsWriter': True|False
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GlobalCluster** *(dict) --* 

          A data type representing an Amazon DocumentDB global cluster.

          
          

          - **GlobalClusterIdentifier** *(string) --* 

            Contains a user-supplied global cluster identifier. This identifier is the unique key that identifies a global cluster. 

            
          

          - **GlobalClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the cluster is accessed. 

            
          

          - **GlobalClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the global cluster.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this global cluster.

            
          

          - **Engine** *(string) --* 

            The Amazon DocumentDB database engine used by the global cluster. 

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **DatabaseName** *(string) --* 

            The default database name within the new global cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            The storage encryption setting for the global cluster.

            
          

          - **DeletionProtection** *(boolean) --* 

            The deletion protection setting for the new global cluster.

            
          

          - **GlobalClusterMembers** *(list) --* 

            The list of cluster IDs for secondary clusters within the global cluster. Currently limited to one item. 

            
            

            - *(dict) --* 

              A data structure with information about any primary and secondary clusters associated with an Amazon DocumentDB global clusters. 

              
              

              - **DBClusterArn** *(string) --* 

                The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.

                
              

              - **Readers** *(list) --* 

                The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global cluster.

                
                

                - *(string) --* 
            
              

              - **IsWriter** *(boolean) --* 

                Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is, has read-write capability) for the Amazon DocumentDB global cluster with which it is associated. 

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidGlobalClusterStateFault`

    

  .. py:method:: describe_certificates(**kwargs)

    

    Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB for this account.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeCertificates>`_    


    **Request Syntax** 
    ::

      response = client.describe_certificates(
          CertificateIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type CertificateIdentifier: string
    :param CertificateIdentifier: 

      The user-supplied certificate identifier. If this parameter is specified, information for only the specified certificate is returned. If this parameter is omitted, a list of up to ``MaxRecords`` certificates is returned. This parameter is not case sensitive.

       

      Constraints

       

       
      * Must match an existing ``CertificateIdentifier`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints:

       

       
      * Minimum: 20 
       
      * Maximum: 100 
       

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous ``DescribeCertificates`` request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Certificates': [
                {
                    'CertificateIdentifier': 'string',
                    'CertificateType': 'string',
                    'Thumbprint': 'string',
                    'ValidFrom': datetime(2015, 1, 1),
                    'ValidTill': datetime(2015, 1, 1),
                    'CertificateArn': 'string'
                },
            ],
            'Marker': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Certificates** *(list) --* 

          A list of certificates for this account.

          
          

          - *(dict) --* 

            A certificate authority (CA) certificate for an account.

            
            

            - **CertificateIdentifier** *(string) --* 

              The unique key that identifies a certificate.

               

              Example: ``rds-ca-2019``  

              
            

            - **CertificateType** *(string) --* 

              The type of the certificate.

               

              Example: ``CA``  

              
            

            - **Thumbprint** *(string) --* 

              The thumbprint of the certificate.

              
            

            - **ValidFrom** *(datetime) --* 

              The starting date-time from which the certificate is valid.

               

              Example: ``2019-07-31T17:57:09Z``  

              
            

            - **ValidTill** *(datetime) --* 

              The date-time after which the certificate is no longer valid.

               

              Example: ``2024-07-31T17:57:09Z``  

              
            

            - **CertificateArn** *(string) --* 

              The Amazon Resource Name (ARN) for the certificate.

               

              Example: ``arn:aws:rds:us-east-1::cert:rds-ca-2019``  

              
        
      
        

        - **Marker** *(string) --* 

          An optional pagination token provided if the number of records retrieved is greater than ``MaxRecords`` . If this parameter is specified, the marker specifies the next record in the list. Including the value of ``Marker`` in the next call to ``DescribeCertificates`` results in the next page of certificates.

          
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.CertificateNotFoundFault`

    

  .. py:method:: describe_db_cluster_parameter_groups(**kwargs)

    

    Returns a list of ``DBClusterParameterGroup`` descriptions. If a ``DBClusterParameterGroupName`` parameter is specified, the list contains only the description of the specified cluster parameter group. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameterGroups>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_cluster_parameter_groups(
          DBClusterParameterGroupName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: 

      The name of a specific cluster parameter group to return details for.

       

      Constraints:

       

       
      * If provided, must match the name of an existing ``DBClusterParameterGroup`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'DBClusterParameterGroups': [
                {
                    'DBClusterParameterGroupName': 'string',
                    'DBParameterGroupFamily': 'string',
                    'Description': 'string',
                    'DBClusterParameterGroupArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DBClusterParameterGroups .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **DBClusterParameterGroups** *(list) --* 

          A list of cluster parameter groups.

          
          

          - *(dict) --* 

            Detailed information about a cluster parameter group. 

            
            

            - **DBClusterParameterGroupName** *(string) --* 

              Provides the name of the cluster parameter group.

              
            

            - **DBParameterGroupFamily** *(string) --* 

              Provides the name of the parameter group family that this cluster parameter group is compatible with.

              
            

            - **Description** *(string) --* 

              Provides the customer-specified description for this cluster parameter group.

              
            

            - **DBClusterParameterGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the cluster parameter group.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    

  .. py:method:: describe_db_cluster_parameters(**kwargs)

    

    Returns the detailed parameter list for a particular cluster parameter group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameters>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_cluster_parameters(
          DBClusterParameterGroupName='string',
          Source='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: **[REQUIRED]** 

      The name of a specific cluster parameter group to return parameter details for.

       

      Constraints:

       

       
      * If provided, must match the name of an existing ``DBClusterParameterGroup`` . 
       

      

    
    :type Source: string
    :param Source: 

      A value that indicates to return only parameters for a specific source. Parameter sources can be ``engine`` , ``service`` , or ``customer`` . 

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Parameters': [
                {
                    'ParameterName': 'string',
                    'ParameterValue': 'string',
                    'Description': 'string',
                    'Source': 'string',
                    'ApplyType': 'string',
                    'DataType': 'string',
                    'AllowedValues': 'string',
                    'IsModifiable': True|False,
                    'MinimumEngineVersion': 'string',
                    'ApplyMethod': 'immediate'|'pending-reboot'
                },
            ],
            'Marker': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DBClusterParameterGroup .

        
        

        - **Parameters** *(list) --* 

          Provides a list of parameters for the cluster parameter group.

          
          

          - *(dict) --* 

            Detailed information about an individual parameter.

            
            

            - **ParameterName** *(string) --* 

              Specifies the name of the parameter.

              
            

            - **ParameterValue** *(string) --* 

              Specifies the value of the parameter.

              
            

            - **Description** *(string) --* 

              Provides a description of the parameter.

              
            

            - **Source** *(string) --* 

              Indicates the source of the parameter value.

              
            

            - **ApplyType** *(string) --* 

              Specifies the engine-specific parameters type.

              
            

            - **DataType** *(string) --* 

              Specifies the valid data type for the parameter.

              
            

            - **AllowedValues** *(string) --* 

              Specifies the valid range of values for the parameter.

              
            

            - **IsModifiable** *(boolean) --* 

              Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. 

              
            

            - **MinimumEngineVersion** *(string) --* 

              The earliest engine version to which the parameter can apply.

              
            

            - **ApplyMethod** *(string) --* 

              Indicates when to apply parameter updates.

              
        
      
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    

  .. py:method:: describe_db_cluster_snapshot_attributes(**kwargs)

    

    Returns a list of cluster snapshot attribute names and values for a manual DB cluster snapshot.

     

    When you share snapshots with other accounts, ``DescribeDBClusterSnapshotAttributes`` returns the ``restore`` attribute and a list of IDs for the accounts that are authorized to copy or restore the manual cluster snapshot. If ``all`` is included in the list of values for the ``restore`` attribute, then the manual cluster snapshot is public and can be copied or restored by all accounts.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshotAttributes>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_cluster_snapshot_attributes(
          DBClusterSnapshotIdentifier='string'
      )
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: **[REQUIRED]** 

      The identifier for the cluster snapshot to describe the attributes for.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterSnapshotAttributesResult': {
                'DBClusterSnapshotIdentifier': 'string',
                'DBClusterSnapshotAttributes': [
                    {
                        'AttributeName': 'string',
                        'AttributeValues': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterSnapshotAttributesResult** *(dict) --* 

          Detailed information about the attributes that are associated with a cluster snapshot.

          
          

          - **DBClusterSnapshotIdentifier** *(string) --* 

            The identifier of the cluster snapshot that the attributes apply to.

            
          

          - **DBClusterSnapshotAttributes** *(list) --* 

            The list of attributes and values for the cluster snapshot.

            
            

            - *(dict) --* 

              Contains the name and values of a manual cluster snapshot attribute.

               

              Manual cluster snapshot attributes are used to authorize other accounts to restore a manual cluster snapshot.

              
              

              - **AttributeName** *(string) --* 

                The name of the manual cluster snapshot attribute.

                 

                The attribute named ``restore`` refers to the list of accounts that have permission to copy or restore the manual cluster snapshot.

                
              

              - **AttributeValues** *(list) --* 

                The values for the manual cluster snapshot attribute.

                 

                If the ``AttributeName`` field is set to ``restore`` , then this element returns a list of IDs of the accounts that are authorized to copy or restore the manual cluster snapshot. If a value of ``all`` is in the list, then the manual cluster snapshot is public and available for any account to copy or restore.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    

  .. py:method:: describe_db_cluster_snapshots(**kwargs)

    

    Returns information about cluster snapshots. This API operation supports pagination.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshots>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_cluster_snapshots(
          DBClusterIdentifier='string',
          DBClusterSnapshotIdentifier='string',
          SnapshotType='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string',
          IncludeShared=True|False,
          IncludePublic=True|False
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: 

      The ID of the cluster to retrieve the list of cluster snapshots for. This parameter can't be used with the ``DBClusterSnapshotIdentifier`` parameter. This parameter is not case sensitive. 

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBCluster`` . 
       

      

    
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: 

      A specific cluster snapshot identifier to describe. This parameter can't be used with the ``DBClusterIdentifier`` parameter. This value is stored as a lowercase string. 

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBClusterSnapshot`` . 
       
      * If this identifier is for an automated snapshot, the ``SnapshotType`` parameter must also be specified. 
       

      

    
    :type SnapshotType: string
    :param SnapshotType: 

      The type of cluster snapshots to be returned. You can specify one of the following values:

       

       
      * ``automated`` - Return all cluster snapshots that Amazon DocumentDB has automatically created for your account. 
       
      * ``manual`` - Return all cluster snapshots that you have manually created for your account. 
       
      * ``shared`` - Return all manual cluster snapshots that have been shared to your account. 
       
      * ``public`` - Return all cluster snapshots that have been marked as public. 
       

       

      If you don't specify a ``SnapshotType`` value, then both automated and manual cluster snapshots are returned. You can include shared cluster snapshots with these results by setting the ``IncludeShared`` parameter to ``true`` . You can include public cluster snapshots with these results by setting the``IncludePublic`` parameter to ``true`` .

       

      The ``IncludeShared`` and ``IncludePublic`` parameters don't apply for ``SnapshotType`` values of ``manual`` or ``automated`` . The ``IncludePublic`` parameter doesn't apply when ``SnapshotType`` is set to ``shared`` . The ``IncludeShared`` parameter doesn't apply when ``SnapshotType`` is set to ``public`` .

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    :type IncludeShared: boolean
    :param IncludeShared: 

      Set to ``true`` to include shared manual cluster snapshots from other accounts that this account has been given permission to copy or restore, and otherwise ``false`` . The default is ``false`` .

      

    
    :type IncludePublic: boolean
    :param IncludePublic: 

      Set to ``true`` to include manual cluster snapshots that are public and can be copied or restored by any account, and otherwise ``false`` . The default is ``false`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'DBClusterSnapshots': [
                {
                    'AvailabilityZones': [
                        'string',
                    ],
                    'DBClusterSnapshotIdentifier': 'string',
                    'DBClusterIdentifier': 'string',
                    'SnapshotCreateTime': datetime(2015, 1, 1),
                    'Engine': 'string',
                    'Status': 'string',
                    'Port': 123,
                    'VpcId': 'string',
                    'ClusterCreateTime': datetime(2015, 1, 1),
                    'MasterUsername': 'string',
                    'EngineVersion': 'string',
                    'SnapshotType': 'string',
                    'PercentProgress': 123,
                    'StorageEncrypted': True|False,
                    'KmsKeyId': 'string',
                    'DBClusterSnapshotArn': 'string',
                    'SourceDBClusterSnapshotArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBClusterSnapshots .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **DBClusterSnapshots** *(list) --* 

          Provides a list of cluster snapshots.

          
          

          - *(dict) --* 

            Detailed information about a cluster snapshot. 

            
            

            - **AvailabilityZones** *(list) --* 

              Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot can be restored in.

              
              

              - *(string) --* 
          
            

            - **DBClusterSnapshotIdentifier** *(string) --* 

              Specifies the identifier for the cluster snapshot.

              
            

            - **DBClusterIdentifier** *(string) --* 

              Specifies the cluster identifier of the cluster that this cluster snapshot was created from.

              
            

            - **SnapshotCreateTime** *(datetime) --* 

              Provides the time when the snapshot was taken, in UTC.

              
            

            - **Engine** *(string) --* 

              Specifies the name of the database engine.

              
            

            - **Status** *(string) --* 

              Specifies the status of this cluster snapshot.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the cluster was listening on at the time of the snapshot.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.

              
            

            - **ClusterCreateTime** *(datetime) --* 

              Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

              
            

            - **MasterUsername** *(string) --* 

              Provides the master user name for the cluster snapshot.

              
            

            - **EngineVersion** *(string) --* 

              Provides the version of the database engine for this cluster snapshot.

              
            

            - **SnapshotType** *(string) --* 

              Provides the type of the cluster snapshot.

              
            

            - **PercentProgress** *(integer) --* 

              Specifies the percentage of the estimated data that has been transferred.

              
            

            - **StorageEncrypted** *(boolean) --* 

              Specifies whether the cluster snapshot is encrypted.

              
            

            - **KmsKeyId** *(string) --* 

              If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster snapshot.

              
            

            - **DBClusterSnapshotArn** *(string) --* 

              The Amazon Resource Name (ARN) for the cluster snapshot.

              
            

            - **SourceDBClusterSnapshotArn** *(string) --* 

              If the cluster snapshot was copied from a source cluster snapshot, the ARN for the source cluster snapshot; otherwise, a null value.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    

  .. py:method:: describe_db_clusters(**kwargs)

    

    Returns information about provisioned Amazon DocumentDB clusters. This API operation supports pagination. For certain management features such as cluster and instance lifecycle management, Amazon DocumentDB leverages operational technology that is shared with Amazon RDS and Amazon Neptune. Use the ``filterName=engine,Values=docdb`` filter parameter to return only Amazon DocumentDB clusters.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusters>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_clusters(
          DBClusterIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: 

      The user-provided cluster identifier. If this parameter is specified, information from only the specific cluster is returned. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * If provided, must match an existing ``DBClusterIdentifier`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more clusters to describe.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list only includes information about the clusters identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'DBClusters': [
                {
                    'AvailabilityZones': [
                        'string',
                    ],
                    'BackupRetentionPeriod': 123,
                    'DBClusterIdentifier': 'string',
                    'DBClusterParameterGroup': 'string',
                    'DBSubnetGroup': 'string',
                    'Status': 'string',
                    'PercentProgress': 'string',
                    'EarliestRestorableTime': datetime(2015, 1, 1),
                    'Endpoint': 'string',
                    'ReaderEndpoint': 'string',
                    'MultiAZ': True|False,
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'LatestRestorableTime': datetime(2015, 1, 1),
                    'Port': 123,
                    'MasterUsername': 'string',
                    'PreferredBackupWindow': 'string',
                    'PreferredMaintenanceWindow': 'string',
                    'ReplicationSourceIdentifier': 'string',
                    'ReadReplicaIdentifiers': [
                        'string',
                    ],
                    'DBClusterMembers': [
                        {
                            'DBInstanceIdentifier': 'string',
                            'IsClusterWriter': True|False,
                            'DBClusterParameterGroupStatus': 'string',
                            'PromotionTier': 123
                        },
                    ],
                    'VpcSecurityGroups': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ],
                    'HostedZoneId': 'string',
                    'StorageEncrypted': True|False,
                    'KmsKeyId': 'string',
                    'DbClusterResourceId': 'string',
                    'DBClusterArn': 'string',
                    'AssociatedRoles': [
                        {
                            'RoleArn': 'string',
                            'Status': 'string'
                        },
                    ],
                    'ClusterCreateTime': datetime(2015, 1, 1),
                    'EnabledCloudwatchLogsExports': [
                        'string',
                    ],
                    'DeletionProtection': True|False
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBClusters .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **DBClusters** *(list) --* 

          A list of clusters.

          
          

          - *(dict) --* 

            Detailed information about a cluster. 

            
            

            - **AvailabilityZones** *(list) --* 

              Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

              
              

              - *(string) --* 
          
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the number of days for which automatic snapshots are retained.

              
            

            - **DBClusterIdentifier** *(string) --* 

              Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

              
            

            - **DBClusterParameterGroup** *(string) --* 

              Specifies the name of the cluster parameter group for the cluster.

              
            

            - **DBSubnetGroup** *(string) --* 

              Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

              
            

            - **Status** *(string) --* 

              Specifies the current state of this cluster.

              
            

            - **PercentProgress** *(string) --* 

              Specifies the progress of the operation as a percentage.

              
            

            - **EarliestRestorableTime** *(datetime) --* 

              The earliest time to which a database can be restored with point-in-time restore.

              
            

            - **Endpoint** *(string) --* 

              Specifies the connection endpoint for the primary instance of the cluster.

              
            

            - **ReaderEndpoint** *(string) --* 

              The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

               

              If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

              
            

            - **MultiAZ** *(boolean) --* 

              Specifies whether the cluster has instances in multiple Availability Zones.

              
            

            - **Engine** *(string) --* 

              Provides the name of the database engine to be used for this cluster.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **LatestRestorableTime** *(datetime) --* 

              Specifies the latest time to which a database can be restored with point-in-time restore.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the database engine is listening on.

              
            

            - **MasterUsername** *(string) --* 

              Contains the master user name for the cluster.

              
            

            - **PreferredBackupWindow** *(string) --* 

              Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

              
            

            - **PreferredMaintenanceWindow** *(string) --* 

              Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

              
            

            - **ReplicationSourceIdentifier** *(string) --* 

              Contains the identifier of the source cluster if this cluster is a secondary cluster.

              
            

            - **ReadReplicaIdentifiers** *(list) --* 

              Contains one or more identifiers of the secondary clusters that are associated with this cluster.

              
              

              - *(string) --* 
          
            

            - **DBClusterMembers** *(list) --* 

              Provides the list of instances that make up the cluster.

              
              

              - *(dict) --* 

                Contains information about an instance that is part of a cluster.

                
                

                - **DBInstanceIdentifier** *(string) --* 

                  Specifies the instance identifier for this member of the cluster.

                  
                

                - **IsClusterWriter** *(boolean) --* 

                  A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                  
                

                - **DBClusterParameterGroupStatus** *(string) --* 

                  Specifies the status of the cluster parameter group for this member of the DB cluster.

                  
                

                - **PromotionTier** *(integer) --* 

                  A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                  
            
          
            

            - **VpcSecurityGroups** *(list) --* 

              Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

              
              

              - *(dict) --* 

                Used as a response element for queries on virtual private cloud (VPC) security group membership.

                
                

                - **VpcSecurityGroupId** *(string) --* 

                  The name of the VPC security group.

                  
                

                - **Status** *(string) --* 

                  The status of the VPC security group.

                  
            
          
            

            - **HostedZoneId** *(string) --* 

              Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

              
            

            - **StorageEncrypted** *(boolean) --* 

              Specifies whether the cluster is encrypted.

              
            

            - **KmsKeyId** *(string) --* 

              If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

              
            

            - **DbClusterResourceId** *(string) --* 

              The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

              
            

            - **DBClusterArn** *(string) --* 

              The Amazon Resource Name (ARN) for the cluster.

              
            

            - **AssociatedRoles** *(list) --* 

              Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

              
              

              - *(dict) --* 

                Describes an Identity and Access Management (IAM) role that is associated with a cluster.

                
                

                - **RoleArn** *(string) --* 

                  The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                  
                

                - **Status** *(string) --* 

                  Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                   

                   
                  * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                   
                  * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                   
                  * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                   

                  
            
          
            

            - **ClusterCreateTime** *(datetime) --* 

              Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

              
            

            - **EnabledCloudwatchLogsExports** *(list) --* 

              A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

              
              

              - *(string) --* 
          
            

            - **DeletionProtection** *(boolean) --* 

              Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    

  .. py:method:: describe_db_engine_versions(**kwargs)

    

    Returns a list of the available engines.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBEngineVersions>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_engine_versions(
          Engine='string',
          EngineVersion='string',
          DBParameterGroupFamily='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string',
          DefaultOnly=True|False,
          ListSupportedCharacterSets=True|False,
          ListSupportedTimezones=True|False
      )
    :type Engine: string
    :param Engine: 

      The database engine to return.

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The database engine version to return.

       

      Example: ``3.6.0``  

      

    
    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: 

      The name of a specific parameter group family to return details for.

       

      Constraints:

       

       
      * If provided, must match an existing ``DBParameterGroupFamily`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    :type DefaultOnly: boolean
    :param DefaultOnly: 

      Indicates that only the default version of the specified engine or engine and major version combination is returned.

      

    
    :type ListSupportedCharacterSets: boolean
    :param ListSupportedCharacterSets: 

      If this parameter is specified and the requested engine supports the ``CharacterSetName`` parameter for ``CreateDBInstance`` , the response includes a list of supported character sets for each engine version. 

      

    
    :type ListSupportedTimezones: boolean
    :param ListSupportedTimezones: 

      If this parameter is specified and the requested engine supports the ``TimeZone`` parameter for ``CreateDBInstance`` , the response includes a list of supported time zones for each engine version. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'DBEngineVersions': [
                {
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'DBParameterGroupFamily': 'string',
                    'DBEngineDescription': 'string',
                    'DBEngineVersionDescription': 'string',
                    'ValidUpgradeTarget': [
                        {
                            'Engine': 'string',
                            'EngineVersion': 'string',
                            'Description': 'string',
                            'AutoUpgrade': True|False,
                            'IsMajorVersionUpgrade': True|False
                        },
                    ],
                    'ExportableLogTypes': [
                        'string',
                    ],
                    'SupportsLogExportsToCloudwatchLogs': True|False
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBEngineVersions .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **DBEngineVersions** *(list) --* 

          Detailed information about one or more engine versions.

          
          

          - *(dict) --* 

            Detailed information about an engine version. 

            
            

            - **Engine** *(string) --* 

              The name of the database engine.

              
            

            - **EngineVersion** *(string) --* 

              The version number of the database engine.

              
            

            - **DBParameterGroupFamily** *(string) --* 

              The name of the parameter group family for the database engine.

              
            

            - **DBEngineDescription** *(string) --* 

              The description of the database engine.

              
            

            - **DBEngineVersionDescription** *(string) --* 

              The description of the database engine version.

              
            

            - **ValidUpgradeTarget** *(list) --* 

              A list of engine versions that this database engine version can be upgraded to.

              
              

              - *(dict) --* 

                The version of the database engine that an instance can be upgraded to.

                
                

                - **Engine** *(string) --* 

                  The name of the upgrade target database engine.

                  
                

                - **EngineVersion** *(string) --* 

                  The version number of the upgrade target database engine.

                  
                

                - **Description** *(string) --* 

                  The version of the database engine that an instance can be upgraded to.

                  
                

                - **AutoUpgrade** *(boolean) --* 

                  A value that indicates whether the target version is applied to any source DB instances that have ``AutoMinorVersionUpgrade`` set to ``true`` .

                  
                

                - **IsMajorVersionUpgrade** *(boolean) --* 

                  A value that indicates whether a database engine is upgraded to a major version.

                  
            
          
            

            - **ExportableLogTypes** *(list) --* 

              The types of logs that the database engine has available for export to Amazon CloudWatch Logs.

              
              

              - *(string) --* 
          
            

            - **SupportsLogExportsToCloudwatchLogs** *(boolean) --* 

              A value that indicates whether the engine version supports exporting the log types specified by ``ExportableLogTypes`` to CloudWatch Logs.

              
        
      
    

  .. py:method:: describe_db_instances(**kwargs)

    

    Returns information about provisioned Amazon DocumentDB instances. This API supports pagination.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_instances(
          DBInstanceIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: 

      The user-provided instance identifier. If this parameter is specified, information from only the specific instance is returned. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBInstance`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more instances to describe.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only the information about the instances that are associated with the clusters that are identified by these ARNs. 
       
      * ``db-instance-id`` - Accepts instance identifiers and instance ARNs. The results list includes only the information about the instances that are identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'DBInstances': [
                {
                    'DBInstanceIdentifier': 'string',
                    'DBInstanceClass': 'string',
                    'Engine': 'string',
                    'DBInstanceStatus': 'string',
                    'Endpoint': {
                        'Address': 'string',
                        'Port': 123,
                        'HostedZoneId': 'string'
                    },
                    'InstanceCreateTime': datetime(2015, 1, 1),
                    'PreferredBackupWindow': 'string',
                    'BackupRetentionPeriod': 123,
                    'VpcSecurityGroups': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ],
                    'AvailabilityZone': 'string',
                    'DBSubnetGroup': {
                        'DBSubnetGroupName': 'string',
                        'DBSubnetGroupDescription': 'string',
                        'VpcId': 'string',
                        'SubnetGroupStatus': 'string',
                        'Subnets': [
                            {
                                'SubnetIdentifier': 'string',
                                'SubnetAvailabilityZone': {
                                    'Name': 'string'
                                },
                                'SubnetStatus': 'string'
                            },
                        ],
                        'DBSubnetGroupArn': 'string'
                    },
                    'PreferredMaintenanceWindow': 'string',
                    'PendingModifiedValues': {
                        'DBInstanceClass': 'string',
                        'AllocatedStorage': 123,
                        'MasterUserPassword': 'string',
                        'Port': 123,
                        'BackupRetentionPeriod': 123,
                        'MultiAZ': True|False,
                        'EngineVersion': 'string',
                        'LicenseModel': 'string',
                        'Iops': 123,
                        'DBInstanceIdentifier': 'string',
                        'StorageType': 'string',
                        'CACertificateIdentifier': 'string',
                        'DBSubnetGroupName': 'string',
                        'PendingCloudwatchLogsExports': {
                            'LogTypesToEnable': [
                                'string',
                            ],
                            'LogTypesToDisable': [
                                'string',
                            ]
                        }
                    },
                    'LatestRestorableTime': datetime(2015, 1, 1),
                    'EngineVersion': 'string',
                    'AutoMinorVersionUpgrade': True|False,
                    'PubliclyAccessible': True|False,
                    'StatusInfos': [
                        {
                            'StatusType': 'string',
                            'Normal': True|False,
                            'Status': 'string',
                            'Message': 'string'
                        },
                    ],
                    'DBClusterIdentifier': 'string',
                    'StorageEncrypted': True|False,
                    'KmsKeyId': 'string',
                    'DbiResourceId': 'string',
                    'CACertificateIdentifier': 'string',
                    'PromotionTier': 123,
                    'DBInstanceArn': 'string',
                    'EnabledCloudwatchLogsExports': [
                        'string',
                    ]
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBInstances .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **DBInstances** *(list) --* 

          Detailed information about one or more instances. 

          
          

          - *(dict) --* 

            Detailed information about an instance. 

            
            

            - **DBInstanceIdentifier** *(string) --* 

              Contains a user-provided database identifier. This identifier is the unique key that identifies an instance.

              
            

            - **DBInstanceClass** *(string) --* 

              Contains the name of the compute and memory capacity class of the instance.

              
            

            - **Engine** *(string) --* 

              Provides the name of the database engine to be used for this instance.

              
            

            - **DBInstanceStatus** *(string) --* 

              Specifies the current state of this database.

              
            

            - **Endpoint** *(dict) --* 

              Specifies the connection endpoint.

              
              

              - **Address** *(string) --* 

                Specifies the DNS address of the instance.

                
              

              - **Port** *(integer) --* 

                Specifies the port that the database engine is listening on.

                
              

              - **HostedZoneId** *(string) --* 

                Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

                
          
            

            - **InstanceCreateTime** *(datetime) --* 

              Provides the date and time that the instance was created.

              
            

            - **PreferredBackupWindow** *(string) --* 

              Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

              
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the number of days for which automatic snapshots are retained.

              
            

            - **VpcSecurityGroups** *(list) --* 

              Provides a list of VPC security group elements that the instance belongs to.

              
              

              - *(dict) --* 

                Used as a response element for queries on virtual private cloud (VPC) security group membership.

                
                

                - **VpcSecurityGroupId** *(string) --* 

                  The name of the VPC security group.

                  
                

                - **Status** *(string) --* 

                  The status of the VPC security group.

                  
            
          
            

            - **AvailabilityZone** *(string) --* 

              Specifies the name of the Availability Zone that the instance is located in.

              
            

            - **DBSubnetGroup** *(dict) --* 

              Specifies information on the subnet group that is associated with the instance, including the name, description, and subnets in the subnet group.

              
              

              - **DBSubnetGroupName** *(string) --* 

                The name of the subnet group.

                
              

              - **DBSubnetGroupDescription** *(string) --* 

                Provides the description of the subnet group.

                
              

              - **VpcId** *(string) --* 

                Provides the virtual private cloud (VPC) ID of the subnet group.

                
              

              - **SubnetGroupStatus** *(string) --* 

                Provides the status of the subnet group.

                
              

              - **Subnets** *(list) --* 

                Detailed information about one or more subnets within a subnet group.

                
                

                - *(dict) --* 

                  Detailed information about a subnet. 

                  
                  

                  - **SubnetIdentifier** *(string) --* 

                    Specifies the identifier of the subnet.

                    
                  

                  - **SubnetAvailabilityZone** *(dict) --* 

                    Specifies the Availability Zone for the subnet.

                    
                    

                    - **Name** *(string) --* 

                      The name of the Availability Zone.

                      
                
                  

                  - **SubnetStatus** *(string) --* 

                    Specifies the status of the subnet.

                    
              
            
              

              - **DBSubnetGroupArn** *(string) --* 

                The Amazon Resource Name (ARN) for the DB subnet group.

                
          
            

            - **PreferredMaintenanceWindow** *(string) --* 

              Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

              
            

            - **PendingModifiedValues** *(dict) --* 

              Specifies that changes to the instance are pending. This element is included only when changes are pending. Specific changes are identified by subelements.

              
              

              - **DBInstanceClass** *(string) --* 

                Contains the new ``DBInstanceClass`` for the instance that will be applied or is currently being applied. 

                
              

              - **AllocatedStorage** *(integer) --* 

                Contains the new ``AllocatedStorage`` size for then instance that will be applied or is currently being applied. 

                
              

              - **MasterUserPassword** *(string) --* 

                Contains the pending or currently in-progress change of the master credentials for the instance.

                
              

              - **Port** *(integer) --* 

                Specifies the pending port for the instance.

                
              

              - **BackupRetentionPeriod** *(integer) --* 

                Specifies the pending number of days for which automated backups are retained.

                
              

              - **MultiAZ** *(boolean) --* 

                Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.

                
              

              - **EngineVersion** *(string) --* 

                Indicates the database engine version.

                
              

              - **LicenseModel** *(string) --* 

                The license model for the instance.

                 

                Valid values: ``license-included`` , ``bring-your-own-license`` , ``general-public-license``  

                
              

              - **Iops** *(integer) --* 

                Specifies the new Provisioned IOPS value for the instance that will be applied or is currently being applied.

                
              

              - **DBInstanceIdentifier** *(string) --* 

                Contains the new ``DBInstanceIdentifier`` for the instance that will be applied or is currently being applied. 

                
              

              - **StorageType** *(string) --* 

                Specifies the storage type to be associated with the instance.

                
              

              - **CACertificateIdentifier** *(string) --* 

                Specifies the identifier of the certificate authority (CA) certificate for the DB instance.

                
              

              - **DBSubnetGroupName** *(string) --* 

                The new subnet group for the instance. 

                
              

              - **PendingCloudwatchLogsExports** *(dict) --* 

                A list of the log types whose configuration is still pending. These log types are in the process of being activated or deactivated.

                
                

                - **LogTypesToEnable** *(list) --* 

                  Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.

                  
                  

                  - *(string) --* 
              
                

                - **LogTypesToDisable** *(list) --* 

                  Log types that are in the process of being enabled. After they are enabled, these log types are exported to Amazon CloudWatch Logs.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **LatestRestorableTime** *(datetime) --* 

              Specifies the latest time to which a database can be restored with point-in-time restore.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **AutoMinorVersionUpgrade** *(boolean) --* 

              Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

              
            

            - **PubliclyAccessible** *(boolean) --* 

              Not supported. Amazon DocumentDB does not currently support public endpoints. The value of ``PubliclyAccessible`` is always ``false`` .

              
            

            - **StatusInfos** *(list) --* 

              The status of a read replica. If the instance is not a read replica, this is blank.

              
              

              - *(dict) --* 

                Provides a list of status information for an instance.

                
                

                - **StatusType** *(string) --* 

                  This value is currently "``read replication`` ."

                  
                

                - **Normal** *(boolean) --* 

                  A Boolean value that is ``true`` if the instance is operating normally, or ``false`` if the instance is in an error state.

                  
                

                - **Status** *(string) --* 

                  Status of the instance. For a ``StatusType`` of read replica, the values can be ``replicating`` , error, ``stopped`` , or ``terminated`` .

                  
                

                - **Message** *(string) --* 

                  Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.

                  
            
          
            

            - **DBClusterIdentifier** *(string) --* 

              Contains the name of the cluster that the instance is a member of if the instance is a member of a cluster.

              
            

            - **StorageEncrypted** *(boolean) --* 

              Specifies whether or not the instance is encrypted.

              
            

            - **KmsKeyId** *(string) --* 

              If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted instance. 

              
            

            - **DbiResourceId** *(string) --* 

              The Region-unique, immutable identifier for the instance. This identifier is found in CloudTrail log entries whenever the KMS key for the instance is accessed.

              
            

            - **CACertificateIdentifier** *(string) --* 

              The identifier of the CA certificate for this DB instance.

              
            

            - **PromotionTier** *(integer) --* 

              A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

              
            

            - **DBInstanceArn** *(string) --* 

              The Amazon Resource Name (ARN) for the instance.

              
            

            - **EnabledCloudwatchLogsExports** *(list) --* 

              A list of log types that this instance is configured to export to CloudWatch Logs.

              
              

              - *(string) --* 
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    

  .. py:method:: describe_db_subnet_groups(**kwargs)

    

    Returns a list of ``DBSubnetGroup`` descriptions. If a ``DBSubnetGroupName`` is specified, the list will contain only the descriptions of the specified ``DBSubnetGroup`` .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBSubnetGroups>`_    


    **Request Syntax** 
    ::

      response = client.describe_db_subnet_groups(
          DBSubnetGroupName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: 

      The name of the subnet group to return details for.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'DBSubnetGroups': [
                {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBSubnetGroups .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **DBSubnetGroups** *(list) --* 

          Detailed information about one or more subnet groups.

          
          

          - *(dict) --* 

            Detailed information about a subnet group. 

            
            

            - **DBSubnetGroupName** *(string) --* 

              The name of the subnet group.

              
            

            - **DBSubnetGroupDescription** *(string) --* 

              Provides the description of the subnet group.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID of the subnet group.

              
            

            - **SubnetGroupStatus** *(string) --* 

              Provides the status of the subnet group.

              
            

            - **Subnets** *(list) --* 

              Detailed information about one or more subnets within a subnet group.

              
              

              - *(dict) --* 

                Detailed information about a subnet. 

                
                

                - **SubnetIdentifier** *(string) --* 

                  Specifies the identifier of the subnet.

                  
                

                - **SubnetAvailabilityZone** *(dict) --* 

                  Specifies the Availability Zone for the subnet.

                  
                  

                  - **Name** *(string) --* 

                    The name of the Availability Zone.

                    
              
                

                - **SubnetStatus** *(string) --* 

                  Specifies the status of the subnet.

                  
            
          
            

            - **DBSubnetGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the DB subnet group.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    

  .. py:method:: describe_engine_default_cluster_parameters(**kwargs)

    

    Returns the default engine and system parameter information for the cluster database engine.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEngineDefaultClusterParameters>`_    


    **Request Syntax** 
    ::

      response = client.describe_engine_default_cluster_parameters(
          DBParameterGroupFamily='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: **[REQUIRED]** 

      The name of the cluster parameter group family to return the engine parameter information for.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EngineDefaults': {
                'DBParameterGroupFamily': 'string',
                'Marker': 'string',
                'Parameters': [
                    {
                        'ParameterName': 'string',
                        'ParameterValue': 'string',
                        'Description': 'string',
                        'Source': 'string',
                        'ApplyType': 'string',
                        'DataType': 'string',
                        'AllowedValues': 'string',
                        'IsModifiable': True|False,
                        'MinimumEngineVersion': 'string',
                        'ApplyMethod': 'immediate'|'pending-reboot'
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EngineDefaults** *(dict) --* 

          Contains the result of a successful invocation of the ``DescribeEngineDefaultClusterParameters`` operation. 

          
          

          - **DBParameterGroupFamily** *(string) --* 

            The name of the cluster parameter group family to return the engine parameter information for.

            
          

          - **Marker** *(string) --* 

            An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

            
          

          - **Parameters** *(list) --* 

            The parameters of a particular cluster parameter group family.

            
            

            - *(dict) --* 

              Detailed information about an individual parameter.

              
              

              - **ParameterName** *(string) --* 

                Specifies the name of the parameter.

                
              

              - **ParameterValue** *(string) --* 

                Specifies the value of the parameter.

                
              

              - **Description** *(string) --* 

                Provides a description of the parameter.

                
              

              - **Source** *(string) --* 

                Indicates the source of the parameter value.

                
              

              - **ApplyType** *(string) --* 

                Specifies the engine-specific parameters type.

                
              

              - **DataType** *(string) --* 

                Specifies the valid data type for the parameter.

                
              

              - **AllowedValues** *(string) --* 

                Specifies the valid range of values for the parameter.

                
              

              - **IsModifiable** *(boolean) --* 

                Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. 

                
              

              - **MinimumEngineVersion** *(string) --* 

                The earliest engine version to which the parameter can apply.

                
              

              - **ApplyMethod** *(string) --* 

                Indicates when to apply parameter updates.

                
          
        
      
    

  .. py:method:: describe_event_categories(**kwargs)

    

    Displays a list of categories for all event source types, or, if specified, for a specified source type. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventCategories>`_    


    **Request Syntax** 
    ::

      response = client.describe_event_categories(
          SourceType='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ]
      )
    :type SourceType: string
    :param SourceType: 

      The type of source that is generating the events.

       

      Valid values: ``db-instance`` , ``db-parameter-group`` , ``db-security-group``  

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventCategoriesMapList': [
                {
                    'SourceType': 'string',
                    'EventCategories': [
                        'string',
                    ]
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeEventCategories .

        
        

        - **EventCategoriesMapList** *(list) --* 

          A list of event category maps.

          
          

          - *(dict) --* 

            An event source type, accompanied by one or more event category names.

            
            

            - **SourceType** *(string) --* 

              The source type that the returned categories belong to.

              
            

            - **EventCategories** *(list) --* 

              The event categories for the specified source type.

              
              

              - *(string) --* 
          
        
      
    

  .. py:method:: describe_event_subscriptions(**kwargs)

    

    Lists all the subscription descriptions for a customer account. The description for a subscription includes ``SubscriptionName`` , ``SNSTopicARN`` , ``CustomerID`` , ``SourceType`` , ``SourceID`` , ``CreationTime`` , and ``Status`` .

     

    If you specify a ``SubscriptionName`` , lists the description for that subscription.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventSubscriptions>`_    


    **Request Syntax** 
    ::

      response = client.describe_event_subscriptions(
          SubscriptionName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type SubscriptionName: string
    :param SubscriptionName: 

      The name of the Amazon DocumentDB event notification subscription that you want to describe.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'EventSubscriptionsList': [
                {
                    'CustomerAwsId': 'string',
                    'CustSubscriptionId': 'string',
                    'SnsTopicArn': 'string',
                    'Status': 'string',
                    'SubscriptionCreationTime': 'string',
                    'SourceType': 'string',
                    'SourceIdsList': [
                        'string',
                    ],
                    'EventCategoriesList': [
                        'string',
                    ],
                    'Enabled': True|False,
                    'EventSubscriptionArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeEventSubscriptions .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **EventSubscriptionsList** *(list) --* 

          A list of event subscriptions.

          
          

          - *(dict) --* 

            Detailed information about an event to which you have subscribed.

            
            

            - **CustomerAwsId** *(string) --* 

              The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

              
            

            - **CustSubscriptionId** *(string) --* 

              The Amazon DocumentDB event notification subscription ID.

              
            

            - **SnsTopicArn** *(string) --* 

              The topic ARN of the Amazon DocumentDB event notification subscription.

              
            

            - **Status** *(string) --* 

              The status of the Amazon DocumentDB event notification subscription.

               

              Constraints:

               

              Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

               

              The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

              
            

            - **SubscriptionCreationTime** *(string) --* 

              The time at which the Amazon DocumentDB event notification subscription was created.

              
            

            - **SourceType** *(string) --* 

              The source type for the Amazon DocumentDB event notification subscription.

              
            

            - **SourceIdsList** *(list) --* 

              A list of source IDs for the Amazon DocumentDB event notification subscription.

              
              

              - *(string) --* 
          
            

            - **EventCategoriesList** *(list) --* 

              A list of event categories for the Amazon DocumentDB event notification subscription.

              
              

              - *(string) --* 
          
            

            - **Enabled** *(boolean) --* 

              A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

              
            

            - **EventSubscriptionArn** *(string) --* 

              The Amazon Resource Name (ARN) for the event subscription.

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionNotFoundFault`

    

  .. py:method:: describe_events(**kwargs)

    

    Returns events related to instances, security groups, snapshots, and DB parameter groups for the past 14 days. You can obtain events specific to a particular DB instance, security group, snapshot, or parameter group by providing the name as a parameter. By default, the events of the past hour are returned.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEvents>`_    


    **Request Syntax** 
    ::

      response = client.describe_events(
          SourceIdentifier='string',
          SourceType='db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
          StartTime=datetime(2015, 1, 1),
          EndTime=datetime(2015, 1, 1),
          Duration=123,
          EventCategories=[
              'string',
          ],
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type SourceIdentifier: string
    :param SourceIdentifier: 

      The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.

       

      Constraints:

       

       
      * If ``SourceIdentifier`` is provided, ``SourceType`` must also be provided. 
       
      * If the source type is ``DBInstance`` , a ``DBInstanceIdentifier`` must be provided. 
       
      * If the source type is ``DBSecurityGroup`` , a ``DBSecurityGroupName`` must be provided. 
       
      * If the source type is ``DBParameterGroup`` , a ``DBParameterGroupName`` must be provided. 
       
      * If the source type is ``DBSnapshot`` , a ``DBSnapshotIdentifier`` must be provided. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

      

    
    :type SourceType: string
    :param SourceType: 

      The event source to retrieve events for. If no value is specified, all events are returned.

      

    
    :type StartTime: datetime
    :param StartTime: 

      The beginning of the time interval to retrieve events for, specified in ISO 8601 format. 

       

      Example: 2009-07-08T18:00Z

      

    
    :type EndTime: datetime
    :param EndTime: 

      The end of the time interval for which to retrieve events, specified in ISO 8601 format. 

       

      Example: 2009-07-08T18:00Z

      

    
    :type Duration: integer
    :param Duration: 

      The number of minutes to retrieve events for.

       

      Default: 60

      

    
    :type EventCategories: list
    :param EventCategories: 

      A list of event categories that trigger notifications for an event notification subscription.

      

    
      - *(string) --* 

      
  
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'Events': [
                {
                    'SourceIdentifier': 'string',
                    'SourceType': 'db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
                    'Message': 'string',
                    'EventCategories': [
                        'string',
                    ],
                    'Date': datetime(2015, 1, 1),
                    'SourceArn': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeEvents .

        
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
        

        - **Events** *(list) --* 

          Detailed information about one or more events. 

          
          

          - *(dict) --* 

            Detailed information about an event.

            
            

            - **SourceIdentifier** *(string) --* 

              Provides the identifier for the source of the event.

              
            

            - **SourceType** *(string) --* 

              Specifies the source type for this event.

              
            

            - **Message** *(string) --* 

              Provides the text of this event.

              
            

            - **EventCategories** *(list) --* 

              Specifies the category for the event.

              
              

              - *(string) --* 
          
            

            - **Date** *(datetime) --* 

              Specifies the date and time of the event.

              
            

            - **SourceArn** *(string) --* 

              The Amazon Resource Name (ARN) for the event.

              
        
      
    

  .. py:method:: describe_global_clusters(**kwargs)

    

    Returns information about Amazon DocumentDB global clusters. This API supports pagination.

     

    .. note::

       

      This action only applies to Amazon DocumentDB clusters.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeGlobalClusters>`_    


    **Request Syntax** 
    ::

      response = client.describe_global_clusters(
          GlobalClusterIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: 

      The user-supplied cluster identifier. If this parameter is specified, information from only the specific cluster is returned. This parameter isn't case-sensitive.

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more global DB clusters to describe.

       

      Supported filters: ``db-cluster-id`` accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list will only include information about the clusters identified by these ARNs.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token called a marker is included in the response so that you can retrieve the remaining results. 

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous ``DescribeGlobalClusters`` request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Marker': 'string',
            'GlobalClusters': [
                {
                    'GlobalClusterIdentifier': 'string',
                    'GlobalClusterResourceId': 'string',
                    'GlobalClusterArn': 'string',
                    'Status': 'string',
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'DatabaseName': 'string',
                    'StorageEncrypted': True|False,
                    'DeletionProtection': True|False,
                    'GlobalClusterMembers': [
                        {
                            'DBClusterArn': 'string',
                            'Readers': [
                                'string',
                            ],
                            'IsWriter': True|False
                        },
                    ]
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Marker** *(string) --* 

          

          
        

        - **GlobalClusters** *(list) --* 

          

          
          

          - *(dict) --* 

            A data type representing an Amazon DocumentDB global cluster.

            
            

            - **GlobalClusterIdentifier** *(string) --* 

              Contains a user-supplied global cluster identifier. This identifier is the unique key that identifies a global cluster. 

              
            

            - **GlobalClusterResourceId** *(string) --* 

              The Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the cluster is accessed. 

              
            

            - **GlobalClusterArn** *(string) --* 

              The Amazon Resource Name (ARN) for the global cluster.

              
            

            - **Status** *(string) --* 

              Specifies the current state of this global cluster.

              
            

            - **Engine** *(string) --* 

              The Amazon DocumentDB database engine used by the global cluster. 

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **DatabaseName** *(string) --* 

              The default database name within the new global cluster.

              
            

            - **StorageEncrypted** *(boolean) --* 

              The storage encryption setting for the global cluster.

              
            

            - **DeletionProtection** *(boolean) --* 

              The deletion protection setting for the new global cluster.

              
            

            - **GlobalClusterMembers** *(list) --* 

              The list of cluster IDs for secondary clusters within the global cluster. Currently limited to one item. 

              
              

              - *(dict) --* 

                A data structure with information about any primary and secondary clusters associated with an Amazon DocumentDB global clusters. 

                
                

                - **DBClusterArn** *(string) --* 

                  The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.

                  
                

                - **Readers** *(list) --* 

                  The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global cluster.

                  
                  

                  - *(string) --* 
              
                

                - **IsWriter** *(boolean) --* 

                  Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is, has read-write capability) for the Amazon DocumentDB global cluster with which it is associated. 

                  
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterNotFoundFault`

    

  .. py:method:: describe_orderable_db_instance_options(**kwargs)

    

    Returns a list of orderable instance options for the specified engine.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeOrderableDBInstanceOptions>`_    


    **Request Syntax** 
    ::

      response = client.describe_orderable_db_instance_options(
          Engine='string',
          EngineVersion='string',
          DBInstanceClass='string',
          LicenseModel='string',
          Vpc=True|False,
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string'
      )
    :type Engine: string
    :param Engine: **[REQUIRED]** 

      The name of the engine to retrieve instance options for.

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The engine version filter value. Specify this parameter to show only the available offerings that match the specified engine version.

      

    
    :type DBInstanceClass: string
    :param DBInstanceClass: 

      The instance class filter value. Specify this parameter to show only the available offerings that match the specified instance class.

      

    
    :type LicenseModel: string
    :param LicenseModel: 

      The license model filter value. Specify this parameter to show only the available offerings that match the specified license model.

      

    
    :type Vpc: boolean
    :param Vpc: 

      The virtual private cloud (VPC) filter value. Specify this parameter to show only the available VPC or non-VPC offerings.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'OrderableDBInstanceOptions': [
                {
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'DBInstanceClass': 'string',
                    'LicenseModel': 'string',
                    'AvailabilityZones': [
                        {
                            'Name': 'string'
                        },
                    ],
                    'Vpc': True|False
                },
            ],
            'Marker': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeOrderableDBInstanceOptions .

        
        

        - **OrderableDBInstanceOptions** *(list) --* 

          The options that are available for a particular orderable instance.

          
          

          - *(dict) --* 

            The options that are available for an instance.

            
            

            - **Engine** *(string) --* 

              The engine type of an instance.

              
            

            - **EngineVersion** *(string) --* 

              The engine version of an instance.

              
            

            - **DBInstanceClass** *(string) --* 

              The instance class for an instance.

              
            

            - **LicenseModel** *(string) --* 

              The license model for an instance.

              
            

            - **AvailabilityZones** *(list) --* 

              A list of Availability Zones for an instance.

              
              

              - *(dict) --* 

                Information about an Availability Zone.

                
                

                - **Name** *(string) --* 

                  The name of the Availability Zone.

                  
            
          
            

            - **Vpc** *(boolean) --* 

              Indicates whether an instance is in a virtual private cloud (VPC).

              
        
      
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
    

  .. py:method:: describe_pending_maintenance_actions(**kwargs)

    

    Returns a list of resources (for example, instances) that have at least one pending maintenance action.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribePendingMaintenanceActions>`_    


    **Request Syntax** 
    ::

      response = client.describe_pending_maintenance_actions(
          ResourceIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          Marker='string',
          MaxRecords=123
      )
    :type ResourceIdentifier: string
    :param ResourceIdentifier: 

      The ARN of a resource to return pending maintenance actions for.

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more resources to return pending maintenance actions for.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only pending maintenance actions for the clusters identified by these ARNs. 
       
      * ``db-instance-id`` - Accepts instance identifiers and instance ARNs. The results list includes only pending maintenance actions for the DB instances identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PendingMaintenanceActions': [
                {
                    'ResourceIdentifier': 'string',
                    'PendingMaintenanceActionDetails': [
                        {
                            'Action': 'string',
                            'AutoAppliedAfterDate': datetime(2015, 1, 1),
                            'ForcedApplyDate': datetime(2015, 1, 1),
                            'OptInStatus': 'string',
                            'CurrentApplyDate': datetime(2015, 1, 1),
                            'Description': 'string'
                        },
                    ]
                },
            ],
            'Marker': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribePendingMaintenanceActions .

        
        

        - **PendingMaintenanceActions** *(list) --* 

          The maintenance actions to be applied.

          
          

          - *(dict) --* 

            Represents the output of  ApplyPendingMaintenanceAction . 

            
            

            - **ResourceIdentifier** *(string) --* 

              The Amazon Resource Name (ARN) of the resource that has pending maintenance actions.

              
            

            - **PendingMaintenanceActionDetails** *(list) --* 

              A list that provides details about the pending maintenance actions for the resource.

              
              

              - *(dict) --* 

                Provides information about a pending maintenance action for a resource.

                
                

                - **Action** *(string) --* 

                  The type of pending maintenance action that is available for the resource.

                  
                

                - **AutoAppliedAfterDate** *(datetime) --* 

                  The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any ``next-maintenance`` opt-in requests are ignored.

                  
                

                - **ForcedApplyDate** *(datetime) --* 

                  The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any ``immediate`` opt-in requests are ignored.

                  
                

                - **OptInStatus** *(string) --* 

                  Indicates the type of opt-in request that has been received for the resource.

                  
                

                - **CurrentApplyDate** *(datetime) --* 

                  The effective date when the pending maintenance action is applied to the resource.

                  
                

                - **Description** *(string) --* 

                  A description providing more detail about the maintenance action.

                  
            
          
        
      
        

        - **Marker** *(string) --* 

          An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

          
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.ResourceNotFoundFault`

    

  .. py:method:: failover_db_cluster(**kwargs)

    

    Forces a failover for a cluster.

     

    A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only instances) in the cluster to be the primary instance (the cluster writer).

     

    If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon DocumentDB replica, if one exists. You can force a failover when you want to simulate a failure of a primary instance for testing.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/FailoverDBCluster>`_    


    **Request Syntax** 
    ::

      response = client.failover_db_cluster(
          DBClusterIdentifier='string',
          TargetDBInstanceIdentifier='string'
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: 

      A cluster identifier to force a failover for. This parameter is not case sensitive.

       

      Constraints:

       

       
      * Must match the identifier of an existing ``DBCluster`` . 
       

      

    
    :type TargetDBInstanceIdentifier: string
    :param TargetDBInstanceIdentifier: 

      The name of the instance to promote to the primary instance.

       

      You must specify the instance identifier for an Amazon DocumentDB replica in the cluster. For example, ``mydbcluster-replica1`` .

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: list_tags_for_resource(**kwargs)

    

    Lists all tags on an Amazon DocumentDB resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          ResourceName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ]
      )
    :type ResourceName: string
    :param ResourceName: **[REQUIRED]** 

      The Amazon DocumentDB resource with tags to be listed. This value is an Amazon Resource Name (ARN).

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'TagList': [
                {
                    'Key': 'string',
                    'Value': 'string'
                },
            ]
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  ListTagsForResource .

        
        

        - **TagList** *(list) --* 

          A list of one or more tags.

          
          

          - *(dict) --* 

            Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

            
            

            - **Key** *(string) --* 

              The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

              
            

            - **Value** *(string) --* 

              The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

              
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    

  .. py:method:: modify_db_cluster(**kwargs)

    

    Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBCluster>`_    


    **Request Syntax** 
    ::

      response = client.modify_db_cluster(
          DBClusterIdentifier='string',
          NewDBClusterIdentifier='string',
          ApplyImmediately=True|False,
          BackupRetentionPeriod=123,
          DBClusterParameterGroupName='string',
          VpcSecurityGroupIds=[
              'string',
          ],
          Port=123,
          MasterUserPassword='string',
          PreferredBackupWindow='string',
          PreferredMaintenanceWindow='string',
          CloudwatchLogsExportConfiguration={
              'EnableLogTypes': [
                  'string',
              ],
              'DisableLogTypes': [
                  'string',
              ]
          },
          EngineVersion='string',
          DeletionProtection=True|False
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The cluster identifier for the cluster that is being modified. This parameter is not case sensitive.

       

      Constraints:

       

       
      * Must match the identifier of an existing ``DBCluster`` . 
       

      

    
    :type NewDBClusterIdentifier: string
    :param NewDBClusterIdentifier: 

      The new cluster identifier for the cluster when renaming a cluster. This value is stored as a lowercase string.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

       

      Example: ``my-cluster2``  

      

    
    :type ApplyImmediately: boolean
    :param ApplyImmediately: 

      A value that specifies whether the changes in this request and any pending changes are asynchronously applied as soon as possible, regardless of the ``PreferredMaintenanceWindow`` setting for the cluster. If this parameter is set to ``false`` , changes to the cluster are applied during the next maintenance window.

       

      The ``ApplyImmediately`` parameter affects only the ``NewDBClusterIdentifier`` and ``MasterUserPassword`` values. If you set this parameter value to ``false`` , the changes to the ``NewDBClusterIdentifier`` and ``MasterUserPassword`` values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the ``ApplyImmediately`` parameter.

       

      Default: ``false``  

      

    
    :type BackupRetentionPeriod: integer
    :param BackupRetentionPeriod: 

      The number of days for which automated backups are retained. You must specify a minimum value of 1.

       

      Default: 1

       

      Constraints:

       

       
      * Must be a value from 1 to 35. 
       

      

    
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: 

      The name of the cluster parameter group to use for the cluster.

      

    
    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: 

      A list of virtual private cloud (VPC) security groups that the cluster will belong to.

      

    
      - *(string) --* 

      
  
    :type Port: integer
    :param Port: 

      The port number on which the cluster accepts connections.

       

      Constraints: Must be a value from ``1150`` to ``65535`` . 

       

      Default: The same port as the original cluster.

      

    
    :type MasterUserPassword: string
    :param MasterUserPassword: 

      The password for the master database user. This password can contain any printable ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).

       

      Constraints: Must contain from 8 to 100 characters.

      

    
    :type PreferredBackupWindow: string
    :param PreferredBackupWindow: 

      The daily time range during which automated backups are created if automated backups are enabled, using the ``BackupRetentionPeriod`` parameter. 

       

      The default is a 30-minute window selected at random from an 8-hour block of time for each Region. 

       

      Constraints:

       

       
      * Must be in the format ``hh24:mi-hh24:mi`` . 
       
      * Must be in Universal Coordinated Time (UTC). 
       
      * Must not conflict with the preferred maintenance window. 
       
      * Must be at least 30 minutes. 
       

      

    
    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: 

      The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

       

      Format: ``ddd:hh24:mi-ddd:hh24:mi``  

       

      The default is a 30-minute window selected at random from an 8-hour block of time for each Region, occurring on a random day of the week. 

       

      Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun

       

      Constraints: Minimum 30-minute window.

      

    
    :type CloudwatchLogsExportConfiguration: dict
    :param CloudwatchLogsExportConfiguration: 

      The configuration setting for the log types to be enabled for export to Amazon CloudWatch Logs for a specific instance or cluster. The ``EnableLogTypes`` and ``DisableLogTypes`` arrays determine which logs are exported (or not exported) to CloudWatch Logs.

      

    
      - **EnableLogTypes** *(list) --* 

        The list of log types to enable.

        

      
        - *(string) --* 

        
    
      - **DisableLogTypes** *(list) --* 

        The list of log types to disable.

        

      
        - *(string) --* 

        
    
    
    :type EngineVersion: string
    :param EngineVersion: 

      The version number of the database engine to which you want to upgrade. Modifying engine version is not supported on Amazon DocumentDB.

      

    
    :type DeletionProtection: boolean
    :param DeletionProtection: 

      Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidVPCNetworkStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSubnetGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterParameterGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSecurityGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterAlreadyExistsFault`

    

  .. py:method:: modify_db_cluster_parameter_group(**kwargs)

    

    Modifies the parameters of a cluster parameter group. To modify more than one parameter, submit a list of the following: ``ParameterName`` , ``ParameterValue`` , and ``ApplyMethod`` . A maximum of 20 parameters can be modified in a single request. 

     

    .. note::

       

      Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot or maintenance window before the change can take effect.

       

     

    .. warning::

       

      After you create a cluster parameter group, you should wait at least 5 minutes before creating your first cluster that uses that cluster parameter group as the default parameter group. This allows Amazon DocumentDB to fully complete the create action before the parameter group is used as the default for a new cluster. This step is especially important for parameters that are critical when creating the default database for a cluster, such as the character set for the default database defined by the ``character_set_database`` parameter.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterParameterGroup>`_    


    **Request Syntax** 
    ::

      response = client.modify_db_cluster_parameter_group(
          DBClusterParameterGroupName='string',
          Parameters=[
              {
                  'ParameterName': 'string',
                  'ParameterValue': 'string',
                  'Description': 'string',
                  'Source': 'string',
                  'ApplyType': 'string',
                  'DataType': 'string',
                  'AllowedValues': 'string',
                  'IsModifiable': True|False,
                  'MinimumEngineVersion': 'string',
                  'ApplyMethod': 'immediate'|'pending-reboot'
              },
          ]
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: **[REQUIRED]** 

      The name of the cluster parameter group to modify.

      

    
    :type Parameters: list
    :param Parameters: **[REQUIRED]** 

      A list of parameters in the cluster parameter group to modify.

      

    
      - *(dict) --* 

        Detailed information about an individual parameter.

        

      
        - **ParameterName** *(string) --* 

          Specifies the name of the parameter.

          

        
        - **ParameterValue** *(string) --* 

          Specifies the value of the parameter.

          

        
        - **Description** *(string) --* 

          Provides a description of the parameter.

          

        
        - **Source** *(string) --* 

          Indicates the source of the parameter value.

          

        
        - **ApplyType** *(string) --* 

          Specifies the engine-specific parameters type.

          

        
        - **DataType** *(string) --* 

          Specifies the valid data type for the parameter.

          

        
        - **AllowedValues** *(string) --* 

          Specifies the valid range of values for the parameter.

          

        
        - **IsModifiable** *(boolean) --* 

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. 

          

        
        - **MinimumEngineVersion** *(string) --* 

          The earliest engine version to which the parameter can apply.

          

        
        - **ApplyMethod** *(string) --* 

          Indicates when to apply parameter updates.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterParameterGroupName': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Contains the name of a cluster parameter group.

        
        

        - **DBClusterParameterGroupName** *(string) --* 

          The name of a cluster parameter group.

           

          Constraints:

           

           
          * Must be from 1 to 255 letters or numbers. 
           
          * The first character must be a letter. 
           
          * Cannot end with a hyphen or contain two consecutive hyphens. 
           

           

          .. note::

             

            This value is stored as a lowercase string.

             

          
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBParameterGroupStateFault`

    

  .. py:method:: modify_db_cluster_snapshot_attribute(**kwargs)

    

    Adds an attribute and values to, or removes an attribute and values from, a manual cluster snapshot.

     

    To share a manual cluster snapshot with other accounts, specify ``restore`` as the ``AttributeName`` , and use the ``ValuesToAdd`` parameter to add a list of IDs of the accounts that are authorized to restore the manual cluster snapshot. Use the value ``all`` to make the manual cluster snapshot public, which means that it can be copied or restored by all accounts. Do not add the ``all`` value for any manual cluster snapshots that contain private information that you don't want available to all accounts. If a manual cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized account IDs for the ``ValuesToAdd`` parameter. You can't use ``all`` as a value for that parameter in this case.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterSnapshotAttribute>`_    


    **Request Syntax** 
    ::

      response = client.modify_db_cluster_snapshot_attribute(
          DBClusterSnapshotIdentifier='string',
          AttributeName='string',
          ValuesToAdd=[
              'string',
          ],
          ValuesToRemove=[
              'string',
          ]
      )
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: **[REQUIRED]** 

      The identifier for the cluster snapshot to modify the attributes for.

      

    
    :type AttributeName: string
    :param AttributeName: **[REQUIRED]** 

      The name of the cluster snapshot attribute to modify.

       

      To manage authorization for other accounts to copy or restore a manual cluster snapshot, set this value to ``restore`` .

      

    
    :type ValuesToAdd: list
    :param ValuesToAdd: 

      A list of cluster snapshot attributes to add to the attribute specified by ``AttributeName`` .

       

      To authorize other accounts to copy or restore a manual cluster snapshot, set this list to include one or more account IDs. To make the manual cluster snapshot restorable by any account, set it to ``all`` . Do not add the ``all`` value for any manual cluster snapshots that contain private information that you don't want to be available to all accounts.

      

    
      - *(string) --* 

      
  
    :type ValuesToRemove: list
    :param ValuesToRemove: 

      A list of cluster snapshot attributes to remove from the attribute specified by ``AttributeName`` .

       

      To remove authorization for other accounts to copy or restore a manual cluster snapshot, set this list to include one or more account identifiers. To remove authorization for any account to copy or restore the cluster snapshot, set it to ``all`` . If you specify ``all`` , an account whose account ID is explicitly added to the ``restore`` attribute can still copy or restore a manual cluster snapshot.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterSnapshotAttributesResult': {
                'DBClusterSnapshotIdentifier': 'string',
                'DBClusterSnapshotAttributes': [
                    {
                        'AttributeName': 'string',
                        'AttributeValues': [
                            'string',
                        ]
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBClusterSnapshotAttributesResult** *(dict) --* 

          Detailed information about the attributes that are associated with a cluster snapshot.

          
          

          - **DBClusterSnapshotIdentifier** *(string) --* 

            The identifier of the cluster snapshot that the attributes apply to.

            
          

          - **DBClusterSnapshotAttributes** *(list) --* 

            The list of attributes and values for the cluster snapshot.

            
            

            - *(dict) --* 

              Contains the name and values of a manual cluster snapshot attribute.

               

              Manual cluster snapshot attributes are used to authorize other accounts to restore a manual cluster snapshot.

              
              

              - **AttributeName** *(string) --* 

                The name of the manual cluster snapshot attribute.

                 

                The attribute named ``restore`` refers to the list of accounts that have permission to copy or restore the manual cluster snapshot.

                
              

              - **AttributeValues** *(list) --* 

                The values for the manual cluster snapshot attribute.

                 

                If the ``AttributeName`` field is set to ``restore`` , then this element returns a list of IDs of the accounts that are authorized to copy or restore the manual cluster snapshot. If a value of ``all`` is in the list, then the manual cluster snapshot is public and available for any account to copy or restore.

                
                

                - *(string) --* 
            
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.SharedSnapshotQuotaExceededFault`

    

  .. py:method:: modify_db_instance(**kwargs)

    

    Modifies settings for an instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBInstance>`_    


    **Request Syntax** 
    ::

      response = client.modify_db_instance(
          DBInstanceIdentifier='string',
          DBInstanceClass='string',
          ApplyImmediately=True|False,
          PreferredMaintenanceWindow='string',
          AutoMinorVersionUpgrade=True|False,
          NewDBInstanceIdentifier='string',
          CACertificateIdentifier='string',
          PromotionTier=123
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: **[REQUIRED]** 

      The instance identifier. This value is stored as a lowercase string.

       

      Constraints:

       

       
      * Must match the identifier of an existing ``DBInstance`` . 
       

      

    
    :type DBInstanceClass: string
    :param DBInstanceClass: 

      The new compute and memory capacity of the instance; for example, ``db.r5.large`` . Not all instance classes are available in all Regions. 

       

      If you modify the instance class, an outage occurs during the change. The change is applied during the next maintenance window, unless ``ApplyImmediately`` is specified as ``true`` for this request. 

       

      Default: Uses existing setting.

      

    
    :type ApplyImmediately: boolean
    :param ApplyImmediately: 

      Specifies whether the modifications in this request and any pending modifications are asynchronously applied as soon as possible, regardless of the ``PreferredMaintenanceWindow`` setting for the instance. 

       

      If this parameter is set to ``false`` , changes to the instance are applied during the next maintenance window. Some parameter changes can cause an outage and are applied on the next reboot.

       

      Default: ``false``  

      

    
    :type PreferredMaintenanceWindow: string
    :param PreferredMaintenanceWindow: 

      The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter doesn't result in an outage except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, changing this parameter causes a reboot of the instance. If you are moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure that pending changes are applied.

       

      Default: Uses existing setting.

       

      Format: ``ddd:hh24:mi-ddd:hh24:mi``  

       

      Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun

       

      Constraints: Must be at least 30 minutes.

      

    
    :type AutoMinorVersionUpgrade: boolean
    :param AutoMinorVersionUpgrade: 

      This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

      

    
    :type NewDBInstanceIdentifier: string
    :param NewDBInstanceIdentifier: 

      The new instance identifier for the instance when renaming an instance. When you change the instance identifier, an instance reboot occurs immediately if you set ``Apply Immediately`` to ``true`` . It occurs during the next maintenance window if you set ``Apply Immediately`` to ``false`` . This value is stored as a lowercase string. 

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

       

      Example: ``mydbinstance``  

      

    
    :type CACertificateIdentifier: string
    :param CACertificateIdentifier: 

      Indicates the certificate that needs to be associated with the instance.

      

    
    :type PromotionTier: integer
    :param PromotionTier: 

      A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

       

      Default: 1

       

      Valid values: 0-15

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBInstance': {
                'DBInstanceIdentifier': 'string',
                'DBInstanceClass': 'string',
                'Engine': 'string',
                'DBInstanceStatus': 'string',
                'Endpoint': {
                    'Address': 'string',
                    'Port': 123,
                    'HostedZoneId': 'string'
                },
                'InstanceCreateTime': datetime(2015, 1, 1),
                'PreferredBackupWindow': 'string',
                'BackupRetentionPeriod': 123,
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'AvailabilityZone': 'string',
                'DBSubnetGroup': {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
                'PreferredMaintenanceWindow': 'string',
                'PendingModifiedValues': {
                    'DBInstanceClass': 'string',
                    'AllocatedStorage': 123,
                    'MasterUserPassword': 'string',
                    'Port': 123,
                    'BackupRetentionPeriod': 123,
                    'MultiAZ': True|False,
                    'EngineVersion': 'string',
                    'LicenseModel': 'string',
                    'Iops': 123,
                    'DBInstanceIdentifier': 'string',
                    'StorageType': 'string',
                    'CACertificateIdentifier': 'string',
                    'DBSubnetGroupName': 'string',
                    'PendingCloudwatchLogsExports': {
                        'LogTypesToEnable': [
                            'string',
                        ],
                        'LogTypesToDisable': [
                            'string',
                        ]
                    }
                },
                'LatestRestorableTime': datetime(2015, 1, 1),
                'EngineVersion': 'string',
                'AutoMinorVersionUpgrade': True|False,
                'PubliclyAccessible': True|False,
                'StatusInfos': [
                    {
                        'StatusType': 'string',
                        'Normal': True|False,
                        'Status': 'string',
                        'Message': 'string'
                    },
                ],
                'DBClusterIdentifier': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbiResourceId': 'string',
                'CACertificateIdentifier': 'string',
                'PromotionTier': 123,
                'DBInstanceArn': 'string',
                'EnabledCloudwatchLogsExports': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBInstance** *(dict) --* 

          Detailed information about an instance. 

          
          

          - **DBInstanceIdentifier** *(string) --* 

            Contains a user-provided database identifier. This identifier is the unique key that identifies an instance.

            
          

          - **DBInstanceClass** *(string) --* 

            Contains the name of the compute and memory capacity class of the instance.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this instance.

            
          

          - **DBInstanceStatus** *(string) --* 

            Specifies the current state of this database.

            
          

          - **Endpoint** *(dict) --* 

            Specifies the connection endpoint.

            
            

            - **Address** *(string) --* 

              Specifies the DNS address of the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the database engine is listening on.

              
            

            - **HostedZoneId** *(string) --* 

              Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

              
        
          

          - **InstanceCreateTime** *(datetime) --* 

            Provides the date and time that the instance was created.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of VPC security group elements that the instance belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **AvailabilityZone** *(string) --* 

            Specifies the name of the Availability Zone that the instance is located in.

            
          

          - **DBSubnetGroup** *(dict) --* 

            Specifies information on the subnet group that is associated with the instance, including the name, description, and subnets in the subnet group.

            
            

            - **DBSubnetGroupName** *(string) --* 

              The name of the subnet group.

              
            

            - **DBSubnetGroupDescription** *(string) --* 

              Provides the description of the subnet group.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID of the subnet group.

              
            

            - **SubnetGroupStatus** *(string) --* 

              Provides the status of the subnet group.

              
            

            - **Subnets** *(list) --* 

              Detailed information about one or more subnets within a subnet group.

              
              

              - *(dict) --* 

                Detailed information about a subnet. 

                
                

                - **SubnetIdentifier** *(string) --* 

                  Specifies the identifier of the subnet.

                  
                

                - **SubnetAvailabilityZone** *(dict) --* 

                  Specifies the Availability Zone for the subnet.

                  
                  

                  - **Name** *(string) --* 

                    The name of the Availability Zone.

                    
              
                

                - **SubnetStatus** *(string) --* 

                  Specifies the status of the subnet.

                  
            
          
            

            - **DBSubnetGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the DB subnet group.

              
        
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **PendingModifiedValues** *(dict) --* 

            Specifies that changes to the instance are pending. This element is included only when changes are pending. Specific changes are identified by subelements.

            
            

            - **DBInstanceClass** *(string) --* 

              Contains the new ``DBInstanceClass`` for the instance that will be applied or is currently being applied. 

              
            

            - **AllocatedStorage** *(integer) --* 

              Contains the new ``AllocatedStorage`` size for then instance that will be applied or is currently being applied. 

              
            

            - **MasterUserPassword** *(string) --* 

              Contains the pending or currently in-progress change of the master credentials for the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the pending port for the instance.

              
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the pending number of days for which automated backups are retained.

              
            

            - **MultiAZ** *(boolean) --* 

              Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **LicenseModel** *(string) --* 

              The license model for the instance.

               

              Valid values: ``license-included`` , ``bring-your-own-license`` , ``general-public-license``  

              
            

            - **Iops** *(integer) --* 

              Specifies the new Provisioned IOPS value for the instance that will be applied or is currently being applied.

              
            

            - **DBInstanceIdentifier** *(string) --* 

              Contains the new ``DBInstanceIdentifier`` for the instance that will be applied or is currently being applied. 

              
            

            - **StorageType** *(string) --* 

              Specifies the storage type to be associated with the instance.

              
            

            - **CACertificateIdentifier** *(string) --* 

              Specifies the identifier of the certificate authority (CA) certificate for the DB instance.

              
            

            - **DBSubnetGroupName** *(string) --* 

              The new subnet group for the instance. 

              
            

            - **PendingCloudwatchLogsExports** *(dict) --* 

              A list of the log types whose configuration is still pending. These log types are in the process of being activated or deactivated.

              
              

              - **LogTypesToEnable** *(list) --* 

                Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.

                
                

                - *(string) --* 
            
              

              - **LogTypesToDisable** *(list) --* 

                Log types that are in the process of being enabled. After they are enabled, these log types are exported to Amazon CloudWatch Logs.

                
                

                - *(string) --* 
            
          
        
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **AutoMinorVersionUpgrade** *(boolean) --* 

            Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

            
          

          - **PubliclyAccessible** *(boolean) --* 

            Not supported. Amazon DocumentDB does not currently support public endpoints. The value of ``PubliclyAccessible`` is always ``false`` .

            
          

          - **StatusInfos** *(list) --* 

            The status of a read replica. If the instance is not a read replica, this is blank.

            
            

            - *(dict) --* 

              Provides a list of status information for an instance.

              
              

              - **StatusType** *(string) --* 

                This value is currently "``read replication`` ."

                
              

              - **Normal** *(boolean) --* 

                A Boolean value that is ``true`` if the instance is operating normally, or ``false`` if the instance is in an error state.

                
              

              - **Status** *(string) --* 

                Status of the instance. For a ``StatusType`` of read replica, the values can be ``replicating`` , error, ``stopped`` , or ``terminated`` .

                
              

              - **Message** *(string) --* 

                Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.

                
          
        
          

          - **DBClusterIdentifier** *(string) --* 

            Contains the name of the cluster that the instance is a member of if the instance is a member of a cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether or not the instance is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted instance. 

            
          

          - **DbiResourceId** *(string) --* 

            The Region-unique, immutable identifier for the instance. This identifier is found in CloudTrail log entries whenever the KMS key for the instance is accessed.

            
          

          - **CACertificateIdentifier** *(string) --* 

            The identifier of the CA certificate for this DB instance.

            
          

          - **PromotionTier** *(integer) --* 

            A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

            
          

          - **DBInstanceArn** *(string) --* 

            The Amazon Resource Name (ARN) for the instance.

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this instance is configured to export to CloudWatch Logs.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSecurityGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSecurityGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientDBInstanceCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidVPCNetworkStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBUpgradeDependencyFailureFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageTypeNotSupportedFault`

    
    *     :py:class:`DocDB.Client.exceptions.AuthorizationNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.CertificateNotFoundFault`

    

  .. py:method:: modify_db_subnet_group(**kwargs)

    

    Modifies an existing subnet group. subnet groups must contain at least one subnet in at least two Availability Zones in the Region.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBSubnetGroup>`_    


    **Request Syntax** 
    ::

      response = client.modify_db_subnet_group(
          DBSubnetGroupName='string',
          DBSubnetGroupDescription='string',
          SubnetIds=[
              'string',
          ]
      )
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: **[REQUIRED]** 

      The name for the subnet group. This value is stored as a lowercase string. You can't modify the default subnet group. 

       

      Constraints: Must match the name of an existing ``DBSubnetGroup`` . Must not be default.

       

      Example: ``mySubnetgroup``  

      

    
    :type DBSubnetGroupDescription: string
    :param DBSubnetGroupDescription: 

      The description for the subnet group.

      

    
    :type SubnetIds: list
    :param SubnetIds: **[REQUIRED]** 

      The Amazon EC2 subnet IDs for the subnet group.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBSubnetGroup': {
                'DBSubnetGroupName': 'string',
                'DBSubnetGroupDescription': 'string',
                'VpcId': 'string',
                'SubnetGroupStatus': 'string',
                'Subnets': [
                    {
                        'SubnetIdentifier': 'string',
                        'SubnetAvailabilityZone': {
                            'Name': 'string'
                        },
                        'SubnetStatus': 'string'
                    },
                ],
                'DBSubnetGroupArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBSubnetGroup** *(dict) --* 

          Detailed information about a subnet group. 

          
          

          - **DBSubnetGroupName** *(string) --* 

            The name of the subnet group.

            
          

          - **DBSubnetGroupDescription** *(string) --* 

            Provides the description of the subnet group.

            
          

          - **VpcId** *(string) --* 

            Provides the virtual private cloud (VPC) ID of the subnet group.

            
          

          - **SubnetGroupStatus** *(string) --* 

            Provides the status of the subnet group.

            
          

          - **Subnets** *(list) --* 

            Detailed information about one or more subnets within a subnet group.

            
            

            - *(dict) --* 

              Detailed information about a subnet. 

              
              

              - **SubnetIdentifier** *(string) --* 

                Specifies the identifier of the subnet.

                
              

              - **SubnetAvailabilityZone** *(dict) --* 

                Specifies the Availability Zone for the subnet.

                
                

                - **Name** *(string) --* 

                  The name of the Availability Zone.

                  
            
              

              - **SubnetStatus** *(string) --* 

                Specifies the status of the subnet.

                
          
        
          

          - **DBSubnetGroupArn** *(string) --* 

            The Amazon Resource Name (ARN) for the DB subnet group.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.SubnetAlreadyInUse`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupDoesNotCoverEnoughAZs`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    

  .. py:method:: modify_event_subscription(**kwargs)

    

    Modifies an existing Amazon DocumentDB event notification subscription.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyEventSubscription>`_    


    **Request Syntax** 
    ::

      response = client.modify_event_subscription(
          SubscriptionName='string',
          SnsTopicArn='string',
          SourceType='string',
          EventCategories=[
              'string',
          ],
          Enabled=True|False
      )
    :type SubscriptionName: string
    :param SubscriptionName: **[REQUIRED]** 

      The name of the Amazon DocumentDB event notification subscription.

      

    
    :type SnsTopicArn: string
    :param SnsTopicArn: 

      The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.

      

    
    :type SourceType: string
    :param SourceType: 

      The type of source that is generating the events. For example, if you want to be notified of events generated by an instance, set this parameter to ``db-instance`` . If this value is not specified, all events are returned.

       

      Valid values: ``db-instance`` , ``db-parameter-group`` , ``db-security-group``  

      

    
    :type EventCategories: list
    :param EventCategories: 

      A list of event categories for a ``SourceType`` that you want to subscribe to.

      

    
      - *(string) --* 

      
  
    :type Enabled: boolean
    :param Enabled: 

      A Boolean value; set to ``true`` to activate the subscription. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventSubscription': {
                'CustomerAwsId': 'string',
                'CustSubscriptionId': 'string',
                'SnsTopicArn': 'string',
                'Status': 'string',
                'SubscriptionCreationTime': 'string',
                'SourceType': 'string',
                'SourceIdsList': [
                    'string',
                ],
                'EventCategoriesList': [
                    'string',
                ],
                'Enabled': True|False,
                'EventSubscriptionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventSubscription** *(dict) --* 

          Detailed information about an event to which you have subscribed.

          
          

          - **CustomerAwsId** *(string) --* 

            The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

            
          

          - **CustSubscriptionId** *(string) --* 

            The Amazon DocumentDB event notification subscription ID.

            
          

          - **SnsTopicArn** *(string) --* 

            The topic ARN of the Amazon DocumentDB event notification subscription.

            
          

          - **Status** *(string) --* 

            The status of the Amazon DocumentDB event notification subscription.

             

            Constraints:

             

            Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

             

            The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

            
          

          - **SubscriptionCreationTime** *(string) --* 

            The time at which the Amazon DocumentDB event notification subscription was created.

            
          

          - **SourceType** *(string) --* 

            The source type for the Amazon DocumentDB event notification subscription.

            
          

          - **SourceIdsList** *(list) --* 

            A list of source IDs for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **EventCategoriesList** *(list) --* 

            A list of event categories for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **Enabled** *(boolean) --* 

            A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

            
          

          - **EventSubscriptionArn** *(string) --* 

            The Amazon Resource Name (ARN) for the event subscription.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.EventSubscriptionQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SNSInvalidTopicFault`

    
    *     :py:class:`DocDB.Client.exceptions.SNSNoAuthorizationFault`

    
    *     :py:class:`DocDB.Client.exceptions.SNSTopicArnNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionCategoryNotFoundFault`

    

  .. py:method:: modify_global_cluster(**kwargs)

    

    Modify a setting for an Amazon DocumentDB global cluster. You can change one or more configuration parameters (for example: deletion protection), or the global cluster identifier by specifying these parameters and the new values in the request.

     

    .. note::

       

      This action only applies to Amazon DocumentDB clusters.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyGlobalCluster>`_    


    **Request Syntax** 
    ::

      response = client.modify_global_cluster(
          GlobalClusterIdentifier='string',
          NewGlobalClusterIdentifier='string',
          DeletionProtection=True|False
      )
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: **[REQUIRED]** 

      The identifier for the global cluster being modified. This parameter isn't case-sensitive.

       

      Constraints:

       

       
      * Must match the identifier of an existing global cluster. 
       

      

    
    :type NewGlobalClusterIdentifier: string
    :param NewGlobalClusterIdentifier: 

      The new identifier for a global cluster when you modify a global cluster. This value is stored as a lowercase string.

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens The first character must be a letter Can't end with a hyphen or contain two consecutive hyphens 
       

       

      Example: ``my-cluster2``  

      

    
    :type DeletionProtection: boolean
    :param DeletionProtection: 

      Indicates if the global cluster has deletion protection enabled. The global cluster can't be deleted when deletion protection is enabled. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GlobalCluster': {
                'GlobalClusterIdentifier': 'string',
                'GlobalClusterResourceId': 'string',
                'GlobalClusterArn': 'string',
                'Status': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'DatabaseName': 'string',
                'StorageEncrypted': True|False,
                'DeletionProtection': True|False,
                'GlobalClusterMembers': [
                    {
                        'DBClusterArn': 'string',
                        'Readers': [
                            'string',
                        ],
                        'IsWriter': True|False
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GlobalCluster** *(dict) --* 

          A data type representing an Amazon DocumentDB global cluster.

          
          

          - **GlobalClusterIdentifier** *(string) --* 

            Contains a user-supplied global cluster identifier. This identifier is the unique key that identifies a global cluster. 

            
          

          - **GlobalClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the cluster is accessed. 

            
          

          - **GlobalClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the global cluster.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this global cluster.

            
          

          - **Engine** *(string) --* 

            The Amazon DocumentDB database engine used by the global cluster. 

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **DatabaseName** *(string) --* 

            The default database name within the new global cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            The storage encryption setting for the global cluster.

            
          

          - **DeletionProtection** *(boolean) --* 

            The deletion protection setting for the new global cluster.

            
          

          - **GlobalClusterMembers** *(list) --* 

            The list of cluster IDs for secondary clusters within the global cluster. Currently limited to one item. 

            
            

            - *(dict) --* 

              A data structure with information about any primary and secondary clusters associated with an Amazon DocumentDB global clusters. 

              
              

              - **DBClusterArn** *(string) --* 

                The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.

                
              

              - **Readers** *(list) --* 

                The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global cluster.

                
                

                - *(string) --* 
            
              

              - **IsWriter** *(boolean) --* 

                Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is, has read-write capability) for the Amazon DocumentDB global cluster with which it is associated. 

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidGlobalClusterStateFault`

    

  .. py:method:: reboot_db_instance(**kwargs)

    

    You might need to reboot your instance, usually for maintenance reasons. For example, if you make certain changes, or if you change the cluster parameter group that is associated with the instance, you must reboot the instance for the changes to take effect. 

     

    Rebooting an instance restarts the database engine service. Rebooting an instance results in a momentary outage, during which the instance status is set to *rebooting* . 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RebootDBInstance>`_    


    **Request Syntax** 
    ::

      response = client.reboot_db_instance(
          DBInstanceIdentifier='string',
          ForceFailover=True|False
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: **[REQUIRED]** 

      The instance identifier. This parameter is stored as a lowercase string.

       

      Constraints:

       

       
      * Must match the identifier of an existing ``DBInstance`` . 
       

      

    
    :type ForceFailover: boolean
    :param ForceFailover: 

      When ``true`` , the reboot is conducted through a Multi-AZ failover. 

       

      Constraint: You can't specify ``true`` if the instance is not configured for Multi-AZ.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBInstance': {
                'DBInstanceIdentifier': 'string',
                'DBInstanceClass': 'string',
                'Engine': 'string',
                'DBInstanceStatus': 'string',
                'Endpoint': {
                    'Address': 'string',
                    'Port': 123,
                    'HostedZoneId': 'string'
                },
                'InstanceCreateTime': datetime(2015, 1, 1),
                'PreferredBackupWindow': 'string',
                'BackupRetentionPeriod': 123,
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'AvailabilityZone': 'string',
                'DBSubnetGroup': {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
                'PreferredMaintenanceWindow': 'string',
                'PendingModifiedValues': {
                    'DBInstanceClass': 'string',
                    'AllocatedStorage': 123,
                    'MasterUserPassword': 'string',
                    'Port': 123,
                    'BackupRetentionPeriod': 123,
                    'MultiAZ': True|False,
                    'EngineVersion': 'string',
                    'LicenseModel': 'string',
                    'Iops': 123,
                    'DBInstanceIdentifier': 'string',
                    'StorageType': 'string',
                    'CACertificateIdentifier': 'string',
                    'DBSubnetGroupName': 'string',
                    'PendingCloudwatchLogsExports': {
                        'LogTypesToEnable': [
                            'string',
                        ],
                        'LogTypesToDisable': [
                            'string',
                        ]
                    }
                },
                'LatestRestorableTime': datetime(2015, 1, 1),
                'EngineVersion': 'string',
                'AutoMinorVersionUpgrade': True|False,
                'PubliclyAccessible': True|False,
                'StatusInfos': [
                    {
                        'StatusType': 'string',
                        'Normal': True|False,
                        'Status': 'string',
                        'Message': 'string'
                    },
                ],
                'DBClusterIdentifier': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbiResourceId': 'string',
                'CACertificateIdentifier': 'string',
                'PromotionTier': 123,
                'DBInstanceArn': 'string',
                'EnabledCloudwatchLogsExports': [
                    'string',
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBInstance** *(dict) --* 

          Detailed information about an instance. 

          
          

          - **DBInstanceIdentifier** *(string) --* 

            Contains a user-provided database identifier. This identifier is the unique key that identifies an instance.

            
          

          - **DBInstanceClass** *(string) --* 

            Contains the name of the compute and memory capacity class of the instance.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this instance.

            
          

          - **DBInstanceStatus** *(string) --* 

            Specifies the current state of this database.

            
          

          - **Endpoint** *(dict) --* 

            Specifies the connection endpoint.

            
            

            - **Address** *(string) --* 

              Specifies the DNS address of the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the database engine is listening on.

              
            

            - **HostedZoneId** *(string) --* 

              Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

              
        
          

          - **InstanceCreateTime** *(datetime) --* 

            Provides the date and time that the instance was created.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of VPC security group elements that the instance belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **AvailabilityZone** *(string) --* 

            Specifies the name of the Availability Zone that the instance is located in.

            
          

          - **DBSubnetGroup** *(dict) --* 

            Specifies information on the subnet group that is associated with the instance, including the name, description, and subnets in the subnet group.

            
            

            - **DBSubnetGroupName** *(string) --* 

              The name of the subnet group.

              
            

            - **DBSubnetGroupDescription** *(string) --* 

              Provides the description of the subnet group.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID of the subnet group.

              
            

            - **SubnetGroupStatus** *(string) --* 

              Provides the status of the subnet group.

              
            

            - **Subnets** *(list) --* 

              Detailed information about one or more subnets within a subnet group.

              
              

              - *(dict) --* 

                Detailed information about a subnet. 

                
                

                - **SubnetIdentifier** *(string) --* 

                  Specifies the identifier of the subnet.

                  
                

                - **SubnetAvailabilityZone** *(dict) --* 

                  Specifies the Availability Zone for the subnet.

                  
                  

                  - **Name** *(string) --* 

                    The name of the Availability Zone.

                    
              
                

                - **SubnetStatus** *(string) --* 

                  Specifies the status of the subnet.

                  
            
          
            

            - **DBSubnetGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the DB subnet group.

              
        
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **PendingModifiedValues** *(dict) --* 

            Specifies that changes to the instance are pending. This element is included only when changes are pending. Specific changes are identified by subelements.

            
            

            - **DBInstanceClass** *(string) --* 

              Contains the new ``DBInstanceClass`` for the instance that will be applied or is currently being applied. 

              
            

            - **AllocatedStorage** *(integer) --* 

              Contains the new ``AllocatedStorage`` size for then instance that will be applied or is currently being applied. 

              
            

            - **MasterUserPassword** *(string) --* 

              Contains the pending or currently in-progress change of the master credentials for the instance.

              
            

            - **Port** *(integer) --* 

              Specifies the pending port for the instance.

              
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the pending number of days for which automated backups are retained.

              
            

            - **MultiAZ** *(boolean) --* 

              Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **LicenseModel** *(string) --* 

              The license model for the instance.

               

              Valid values: ``license-included`` , ``bring-your-own-license`` , ``general-public-license``  

              
            

            - **Iops** *(integer) --* 

              Specifies the new Provisioned IOPS value for the instance that will be applied or is currently being applied.

              
            

            - **DBInstanceIdentifier** *(string) --* 

              Contains the new ``DBInstanceIdentifier`` for the instance that will be applied or is currently being applied. 

              
            

            - **StorageType** *(string) --* 

              Specifies the storage type to be associated with the instance.

              
            

            - **CACertificateIdentifier** *(string) --* 

              Specifies the identifier of the certificate authority (CA) certificate for the DB instance.

              
            

            - **DBSubnetGroupName** *(string) --* 

              The new subnet group for the instance. 

              
            

            - **PendingCloudwatchLogsExports** *(dict) --* 

              A list of the log types whose configuration is still pending. These log types are in the process of being activated or deactivated.

              
              

              - **LogTypesToEnable** *(list) --* 

                Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.

                
                

                - *(string) --* 
            
              

              - **LogTypesToDisable** *(list) --* 

                Log types that are in the process of being enabled. After they are enabled, these log types are exported to Amazon CloudWatch Logs.

                
                

                - *(string) --* 
            
          
        
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **AutoMinorVersionUpgrade** *(boolean) --* 

            Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

            
          

          - **PubliclyAccessible** *(boolean) --* 

            Not supported. Amazon DocumentDB does not currently support public endpoints. The value of ``PubliclyAccessible`` is always ``false`` .

            
          

          - **StatusInfos** *(list) --* 

            The status of a read replica. If the instance is not a read replica, this is blank.

            
            

            - *(dict) --* 

              Provides a list of status information for an instance.

              
              

              - **StatusType** *(string) --* 

                This value is currently "``read replication`` ."

                
              

              - **Normal** *(boolean) --* 

                A Boolean value that is ``true`` if the instance is operating normally, or ``false`` if the instance is in an error state.

                
              

              - **Status** *(string) --* 

                Status of the instance. For a ``StatusType`` of read replica, the values can be ``replicating`` , error, ``stopped`` , or ``terminated`` .

                
              

              - **Message** *(string) --* 

                Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.

                
          
        
          

          - **DBClusterIdentifier** *(string) --* 

            Contains the name of the cluster that the instance is a member of if the instance is a member of a cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether or not the instance is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted instance. 

            
          

          - **DbiResourceId** *(string) --* 

            The Region-unique, immutable identifier for the instance. This identifier is found in CloudTrail log entries whenever the KMS key for the instance is accessed.

            
          

          - **CACertificateIdentifier** *(string) --* 

            The identifier of the CA certificate for this DB instance.

            
          

          - **PromotionTier** *(integer) --* 

            A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

            
          

          - **DBInstanceArn** *(string) --* 

            The Amazon Resource Name (ARN) for the instance.

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this instance is configured to export to CloudWatch Logs.

            
            

            - *(string) --* 
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    

  .. py:method:: remove_from_global_cluster(**kwargs)

    

    Detaches an Amazon DocumentDB secondary cluster from a global cluster. The cluster becomes a standalone cluster with read-write capability instead of being read-only and receiving data from a primary in a different region. 

     

    .. note::

       

      This action only applies to Amazon DocumentDB clusters.

       

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveFromGlobalCluster>`_    


    **Request Syntax** 
    ::

      response = client.remove_from_global_cluster(
          GlobalClusterIdentifier='string',
          DbClusterIdentifier='string'
      )
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: **[REQUIRED]** 

      The cluster identifier to detach from the Amazon DocumentDB global cluster. 

      

    
    :type DbClusterIdentifier: string
    :param DbClusterIdentifier: **[REQUIRED]** 

      The Amazon Resource Name (ARN) identifying the cluster that was detached from the Amazon DocumentDB global cluster. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GlobalCluster': {
                'GlobalClusterIdentifier': 'string',
                'GlobalClusterResourceId': 'string',
                'GlobalClusterArn': 'string',
                'Status': 'string',
                'Engine': 'string',
                'EngineVersion': 'string',
                'DatabaseName': 'string',
                'StorageEncrypted': True|False,
                'DeletionProtection': True|False,
                'GlobalClusterMembers': [
                    {
                        'DBClusterArn': 'string',
                        'Readers': [
                            'string',
                        ],
                        'IsWriter': True|False
                    },
                ]
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GlobalCluster** *(dict) --* 

          A data type representing an Amazon DocumentDB global cluster.

          
          

          - **GlobalClusterIdentifier** *(string) --* 

            Contains a user-supplied global cluster identifier. This identifier is the unique key that identifies a global cluster. 

            
          

          - **GlobalClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the cluster is accessed. 

            
          

          - **GlobalClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the global cluster.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this global cluster.

            
          

          - **Engine** *(string) --* 

            The Amazon DocumentDB database engine used by the global cluster. 

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **DatabaseName** *(string) --* 

            The default database name within the new global cluster.

            
          

          - **StorageEncrypted** *(boolean) --* 

            The storage encryption setting for the global cluster.

            
          

          - **DeletionProtection** *(boolean) --* 

            The deletion protection setting for the new global cluster.

            
          

          - **GlobalClusterMembers** *(list) --* 

            The list of cluster IDs for secondary clusters within the global cluster. Currently limited to one item. 

            
            

            - *(dict) --* 

              A data structure with information about any primary and secondary clusters associated with an Amazon DocumentDB global clusters. 

              
              

              - **DBClusterArn** *(string) --* 

                The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.

                
              

              - **Readers** *(list) --* 

                The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global cluster.

                
                

                - *(string) --* 
            
              

              - **IsWriter** *(boolean) --* 

                Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is, has read-write capability) for the Amazon DocumentDB global cluster with which it is associated. 

                
          
        
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.GlobalClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidGlobalClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    

  .. py:method:: remove_source_identifier_from_subscription(**kwargs)

    

    Removes a source identifier from an existing Amazon DocumentDB event notification subscription.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveSourceIdentifierFromSubscription>`_    


    **Request Syntax** 
    ::

      response = client.remove_source_identifier_from_subscription(
          SubscriptionName='string',
          SourceIdentifier='string'
      )
    :type SubscriptionName: string
    :param SubscriptionName: **[REQUIRED]** 

      The name of the Amazon DocumentDB event notification subscription that you want to remove a source identifier from.

      

    
    :type SourceIdentifier: string
    :param SourceIdentifier: **[REQUIRED]** 

      The source identifier to be removed from the subscription, such as the instance identifier for an instance, or the name of a security group. 

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventSubscription': {
                'CustomerAwsId': 'string',
                'CustSubscriptionId': 'string',
                'SnsTopicArn': 'string',
                'Status': 'string',
                'SubscriptionCreationTime': 'string',
                'SourceType': 'string',
                'SourceIdsList': [
                    'string',
                ],
                'EventCategoriesList': [
                    'string',
                ],
                'Enabled': True|False,
                'EventSubscriptionArn': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **EventSubscription** *(dict) --* 

          Detailed information about an event to which you have subscribed.

          
          

          - **CustomerAwsId** *(string) --* 

            The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

            
          

          - **CustSubscriptionId** *(string) --* 

            The Amazon DocumentDB event notification subscription ID.

            
          

          - **SnsTopicArn** *(string) --* 

            The topic ARN of the Amazon DocumentDB event notification subscription.

            
          

          - **Status** *(string) --* 

            The status of the Amazon DocumentDB event notification subscription.

             

            Constraints:

             

            Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

             

            The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

            
          

          - **SubscriptionCreationTime** *(string) --* 

            The time at which the Amazon DocumentDB event notification subscription was created.

            
          

          - **SourceType** *(string) --* 

            The source type for the Amazon DocumentDB event notification subscription.

            
          

          - **SourceIdsList** *(list) --* 

            A list of source IDs for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **EventCategoriesList** *(list) --* 

            A list of event categories for the Amazon DocumentDB event notification subscription.

            
            

            - *(string) --* 
        
          

          - **Enabled** *(boolean) --* 

            A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

            
          

          - **EventSubscriptionArn** *(string) --* 

            The Amazon Resource Name (ARN) for the event subscription.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.SubscriptionNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.SourceNotFoundFault`

    

  .. py:method:: remove_tags_from_resource(**kwargs)

    

    Removes metadata tags from an Amazon DocumentDB resource.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveTagsFromResource>`_    


    **Request Syntax** 
    ::

      response = client.remove_tags_from_resource(
          ResourceName='string',
          TagKeys=[
              'string',
          ]
      )
    :type ResourceName: string
    :param ResourceName: **[REQUIRED]** 

      The Amazon DocumentDB resource that the tags are removed from. This value is an Amazon Resource Name (ARN).

      

    
    :type TagKeys: list
    :param TagKeys: **[REQUIRED]** 

      The tag key (name) of the tag to be removed.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBInstanceNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    

  .. py:method:: reset_db_cluster_parameter_group(**kwargs)

    

    Modifies the parameters of a cluster parameter group to the default value. To reset specific parameters, submit a list of the following: ``ParameterName`` and ``ApplyMethod`` . To reset the entire cluster parameter group, specify the ``DBClusterParameterGroupName`` and ``ResetAllParameters`` parameters. 

     

    When you reset the entire group, dynamic parameters are updated immediately and static parameters are set to ``pending-reboot`` to take effect on the next DB instance reboot.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ResetDBClusterParameterGroup>`_    


    **Request Syntax** 
    ::

      response = client.reset_db_cluster_parameter_group(
          DBClusterParameterGroupName='string',
          ResetAllParameters=True|False,
          Parameters=[
              {
                  'ParameterName': 'string',
                  'ParameterValue': 'string',
                  'Description': 'string',
                  'Source': 'string',
                  'ApplyType': 'string',
                  'DataType': 'string',
                  'AllowedValues': 'string',
                  'IsModifiable': True|False,
                  'MinimumEngineVersion': 'string',
                  'ApplyMethod': 'immediate'|'pending-reboot'
              },
          ]
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: **[REQUIRED]** 

      The name of the cluster parameter group to reset.

      

    
    :type ResetAllParameters: boolean
    :param ResetAllParameters: 

      A value that is set to ``true`` to reset all parameters in the cluster parameter group to their default values, and ``false`` otherwise. You can't use this parameter if there is a list of parameter names specified for the ``Parameters`` parameter.

      

    
    :type Parameters: list
    :param Parameters: 

      A list of parameter names in the cluster parameter group to reset to the default values. You can't use this parameter if the ``ResetAllParameters`` parameter is set to ``true`` .

      

    
      - *(dict) --* 

        Detailed information about an individual parameter.

        

      
        - **ParameterName** *(string) --* 

          Specifies the name of the parameter.

          

        
        - **ParameterValue** *(string) --* 

          Specifies the value of the parameter.

          

        
        - **Description** *(string) --* 

          Provides a description of the parameter.

          

        
        - **Source** *(string) --* 

          Indicates the source of the parameter value.

          

        
        - **ApplyType** *(string) --* 

          Specifies the engine-specific parameters type.

          

        
        - **DataType** *(string) --* 

          Specifies the valid data type for the parameter.

          

        
        - **AllowedValues** *(string) --* 

          Specifies the valid range of values for the parameter.

          

        
        - **IsModifiable** *(boolean) --* 

          Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. 

          

        
        - **MinimumEngineVersion** *(string) --* 

          The earliest engine version to which the parameter can apply.

          

        
        - **ApplyMethod** *(string) --* 

          Indicates when to apply parameter updates.

          

        
      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterParameterGroupName': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Contains the name of a cluster parameter group.

        
        

        - **DBClusterParameterGroupName** *(string) --* 

          The name of a cluster parameter group.

           

          Constraints:

           

           
          * Must be from 1 to 255 letters or numbers. 
           
          * The first character must be a letter. 
           
          * Cannot end with a hyphen or contain two consecutive hyphens. 
           

           

          .. note::

             

            This value is stored as a lowercase string.

             

          
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBParameterGroupStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBParameterGroupNotFoundFault`

    

  .. py:method:: restore_db_cluster_from_snapshot(**kwargs)

    

    Creates a new cluster from a snapshot or cluster snapshot.

     

    If a snapshot is specified, the target cluster is created from the source DB snapshot with a default configuration and default security group.

     

    If a cluster snapshot is specified, the target cluster is created from the source cluster restore point with the same configuration as the original source DB cluster, except that the new cluster is created with the default security group.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterFromSnapshot>`_    


    **Request Syntax** 
    ::

      response = client.restore_db_cluster_from_snapshot(
          AvailabilityZones=[
              'string',
          ],
          DBClusterIdentifier='string',
          SnapshotIdentifier='string',
          Engine='string',
          EngineVersion='string',
          Port=123,
          DBSubnetGroupName='string',
          VpcSecurityGroupIds=[
              'string',
          ],
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          KmsKeyId='string',
          EnableCloudwatchLogsExports=[
              'string',
          ],
          DeletionProtection=True|False
      )
    :type AvailabilityZones: list
    :param AvailabilityZones: 

      Provides the list of Amazon EC2 Availability Zones that instances in the restored DB cluster can be created in.

      

    
      - *(string) --* 

      
  
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The name of the cluster to create from the snapshot or cluster snapshot. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

       

      Example: ``my-snapshot-id``  

      

    
    :type SnapshotIdentifier: string
    :param SnapshotIdentifier: **[REQUIRED]** 

      The identifier for the snapshot or cluster snapshot to restore from.

       

      You can use either the name or the Amazon Resource Name (ARN) to specify a cluster snapshot. However, you can use only the ARN to specify a snapshot.

       

      Constraints:

       

       
      * Must match the identifier of an existing snapshot. 
       

      

    
    :type Engine: string
    :param Engine: **[REQUIRED]** 

      The database engine to use for the new cluster.

       

      Default: The same as source.

       

      Constraint: Must be compatible with the engine of the source.

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The version of the database engine to use for the new cluster.

      

    
    :type Port: integer
    :param Port: 

      The port number on which the new cluster accepts connections.

       

      Constraints: Must be a value from ``1150`` to ``65535`` .

       

      Default: The same port as the original cluster.

      

    
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: 

      The name of the subnet group to use for the new cluster.

       

      Constraints: If provided, must match the name of an existing ``DBSubnetGroup`` .

       

      Example: ``mySubnetgroup``  

      

    
    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: 

      A list of virtual private cloud (VPC) security groups that the new cluster will belong to.

      

    
      - *(string) --* 

      
  
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the restored cluster.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    :type KmsKeyId: string
    :param KmsKeyId: 

      The KMS key identifier to use when restoring an encrypted cluster from a DB snapshot or cluster snapshot.

       

      The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a cluster with the same account that owns the KMS encryption key used to encrypt the new cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.

       

      If you do not specify a value for the ``KmsKeyId`` parameter, then the following occurs:

       

       
      * If the snapshot or cluster snapshot in ``SnapshotIdentifier`` is encrypted, then the restored cluster is encrypted using the KMS key that was used to encrypt the snapshot or the cluster snapshot. 
       
      * If the snapshot or the cluster snapshot in ``SnapshotIdentifier`` is not encrypted, then the restored DB cluster is not encrypted. 
       

      

    
    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: 

      A list of log types that must be enabled for exporting to Amazon CloudWatch Logs.

      

    
      - *(string) --* 

      
  
    :type DeletionProtection: boolean
    :param DeletionProtection: 

      Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientDBClusterCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientStorageClusterCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidVPCNetworkStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidRestoreFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    
    *     :py:class:`DocDB.Client.exceptions.KMSKeyNotAccessibleFault`

    

  .. py:method:: restore_db_cluster_to_point_in_time(**kwargs)

    

    Restores a cluster to an arbitrary point in time. Users can restore to any point in time before ``LatestRestorableTime`` for up to ``BackupRetentionPeriod`` days. The target cluster is created from the source cluster with the same configuration as the original cluster, except that the new cluster is created with the default security group. 

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterToPointInTime>`_    


    **Request Syntax** 
    ::

      response = client.restore_db_cluster_to_point_in_time(
          DBClusterIdentifier='string',
          SourceDBClusterIdentifier='string',
          RestoreToTime=datetime(2015, 1, 1),
          UseLatestRestorableTime=True|False,
          Port=123,
          DBSubnetGroupName='string',
          VpcSecurityGroupIds=[
              'string',
          ],
          Tags=[
              {
                  'Key': 'string',
                  'Value': 'string'
              },
          ],
          KmsKeyId='string',
          EnableCloudwatchLogsExports=[
              'string',
          ],
          DeletionProtection=True|False
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The name of the new cluster to be created.

       

      Constraints:

       

       
      * Must contain from 1 to 63 letters, numbers, or hyphens. 
       
      * The first character must be a letter. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

      

    
    :type SourceDBClusterIdentifier: string
    :param SourceDBClusterIdentifier: **[REQUIRED]** 

      The identifier of the source cluster from which to restore.

       

      Constraints:

       

       
      * Must match the identifier of an existing ``DBCluster`` . 
       

      

    
    :type RestoreToTime: datetime
    :param RestoreToTime: 

      The date and time to restore the cluster to.

       

      Valid values: A time in Universal Coordinated Time (UTC) format.

       

      Constraints:

       

       
      * Must be before the latest restorable time for the instance. 
       
      * Must be specified if the ``UseLatestRestorableTime`` parameter is not provided. 
       
      * Cannot be specified if the ``UseLatestRestorableTime`` parameter is ``true`` . 
       
      * Cannot be specified if the ``RestoreType`` parameter is ``copy-on-write`` . 
       

       

      Example: ``2015-03-07T23:45:00Z``  

      

    
    :type UseLatestRestorableTime: boolean
    :param UseLatestRestorableTime: 

      A value that is set to ``true`` to restore the cluster to the latest restorable backup time, and ``false`` otherwise. 

       

      Default: ``false``  

       

      Constraints: Cannot be specified if the ``RestoreToTime`` parameter is provided.

      

    
    :type Port: integer
    :param Port: 

      The port number on which the new cluster accepts connections.

       

      Constraints: Must be a value from ``1150`` to ``65535`` . 

       

      Default: The default port for the engine.

      

    
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: 

      The subnet group name to use for the new cluster.

       

      Constraints: If provided, must match the name of an existing ``DBSubnetGroup`` .

       

      Example: ``mySubnetgroup``  

      

    
    :type VpcSecurityGroupIds: list
    :param VpcSecurityGroupIds: 

      A list of VPC security groups that the new cluster belongs to.

      

    
      - *(string) --* 

      
  
    :type Tags: list
    :param Tags: 

      The tags to be assigned to the restored cluster.

      

    
      - *(dict) --* 

        Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.

        

      
        - **Key** *(string) --* 

          The required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
        - **Value** *(string) --* 

          The optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "``aws:`` " or "``rds:`` ". The string can contain only the set of Unicode letters, digits, white space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").

          

        
      
  
    :type KmsKeyId: string
    :param KmsKeyId: 

      The KMS key identifier to use when restoring an encrypted cluster from an encrypted cluster.

       

      The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a cluster with the same account that owns the KMS encryption key used to encrypt the new cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.

       

      You can restore to a new cluster and encrypt the new cluster with an KMS key that is different from the KMS key used to encrypt the source cluster. The new DB cluster is encrypted with the KMS key identified by the ``KmsKeyId`` parameter.

       

      If you do not specify a value for the ``KmsKeyId`` parameter, then the following occurs:

       

       
      * If the cluster is encrypted, then the restored cluster is encrypted using the KMS key that was used to encrypt the source cluster. 
       
      * If the cluster is not encrypted, then the restored cluster is not encrypted. 
       

       

      If ``DBClusterIdentifier`` refers to a cluster that is not encrypted, then the restore request is rejected.

      

    
    :type EnableCloudwatchLogsExports: list
    :param EnableCloudwatchLogsExports: 

      A list of log types that must be enabled for exporting to Amazon CloudWatch Logs.

      

    
      - *(string) --* 

      
  
    :type DeletionProtection: boolean
    :param DeletionProtection: 

      Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterAlreadyExistsFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterQuotaExceededFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBClusterSnapshotNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.DBSubnetGroupNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientDBClusterCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.InsufficientStorageClusterCapacityFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBSnapshotStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidRestoreFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidSubnet`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidVPCNetworkStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.KMSKeyNotAccessibleFault`

    
    *     :py:class:`DocDB.Client.exceptions.StorageQuotaExceededFault`

    

  .. py:method:: start_db_cluster(**kwargs)

    

    Restarts the stopped cluster that is specified by ``DBClusterIdentifier`` . For more information, see `Stopping and Starting an Amazon DocumentDB Cluster <https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StartDBCluster>`_    


    **Request Syntax** 
    ::

      response = client.start_db_cluster(
          DBClusterIdentifier='string'
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The identifier of the cluster to restart. Example: ``docdb-2019-05-28-15-24-52``  

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    

  .. py:method:: stop_db_cluster(**kwargs)

    

    Stops the running cluster that is specified by ``DBClusterIdentifier`` . The cluster must be in the *available* state. For more information, see `Stopping and Starting an Amazon DocumentDB Cluster <https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html>`__ .

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StopDBCluster>`_    


    **Request Syntax** 
    ::

      response = client.stop_db_cluster(
          DBClusterIdentifier='string'
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: **[REQUIRED]** 

      The identifier of the cluster to stop. Example: ``docdb-2019-05-28-15-24-52``  

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBCluster': {
                'AvailabilityZones': [
                    'string',
                ],
                'BackupRetentionPeriod': 123,
                'DBClusterIdentifier': 'string',
                'DBClusterParameterGroup': 'string',
                'DBSubnetGroup': 'string',
                'Status': 'string',
                'PercentProgress': 'string',
                'EarliestRestorableTime': datetime(2015, 1, 1),
                'Endpoint': 'string',
                'ReaderEndpoint': 'string',
                'MultiAZ': True|False,
                'Engine': 'string',
                'EngineVersion': 'string',
                'LatestRestorableTime': datetime(2015, 1, 1),
                'Port': 123,
                'MasterUsername': 'string',
                'PreferredBackupWindow': 'string',
                'PreferredMaintenanceWindow': 'string',
                'ReplicationSourceIdentifier': 'string',
                'ReadReplicaIdentifiers': [
                    'string',
                ],
                'DBClusterMembers': [
                    {
                        'DBInstanceIdentifier': 'string',
                        'IsClusterWriter': True|False,
                        'DBClusterParameterGroupStatus': 'string',
                        'PromotionTier': 123
                    },
                ],
                'VpcSecurityGroups': [
                    {
                        'VpcSecurityGroupId': 'string',
                        'Status': 'string'
                    },
                ],
                'HostedZoneId': 'string',
                'StorageEncrypted': True|False,
                'KmsKeyId': 'string',
                'DbClusterResourceId': 'string',
                'DBClusterArn': 'string',
                'AssociatedRoles': [
                    {
                        'RoleArn': 'string',
                        'Status': 'string'
                    },
                ],
                'ClusterCreateTime': datetime(2015, 1, 1),
                'EnabledCloudwatchLogsExports': [
                    'string',
                ],
                'DeletionProtection': True|False
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **DBCluster** *(dict) --* 

          Detailed information about a cluster. 

          
          

          - **AvailabilityZones** *(list) --* 

            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

            
            

            - *(string) --* 
        
          

          - **BackupRetentionPeriod** *(integer) --* 

            Specifies the number of days for which automatic snapshots are retained.

            
          

          - **DBClusterIdentifier** *(string) --* 

            Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

            
          

          - **DBClusterParameterGroup** *(string) --* 

            Specifies the name of the cluster parameter group for the cluster.

            
          

          - **DBSubnetGroup** *(string) --* 

            Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

            
          

          - **Status** *(string) --* 

            Specifies the current state of this cluster.

            
          

          - **PercentProgress** *(string) --* 

            Specifies the progress of the operation as a percentage.

            
          

          - **EarliestRestorableTime** *(datetime) --* 

            The earliest time to which a database can be restored with point-in-time restore.

            
          

          - **Endpoint** *(string) --* 

            Specifies the connection endpoint for the primary instance of the cluster.

            
          

          - **ReaderEndpoint** *(string) --* 

            The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

             

            If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

            
          

          - **MultiAZ** *(boolean) --* 

            Specifies whether the cluster has instances in multiple Availability Zones.

            
          

          - **Engine** *(string) --* 

            Provides the name of the database engine to be used for this cluster.

            
          

          - **EngineVersion** *(string) --* 

            Indicates the database engine version.

            
          

          - **LatestRestorableTime** *(datetime) --* 

            Specifies the latest time to which a database can be restored with point-in-time restore.

            
          

          - **Port** *(integer) --* 

            Specifies the port that the database engine is listening on.

            
          

          - **MasterUsername** *(string) --* 

            Contains the master user name for the cluster.

            
          

          - **PreferredBackupWindow** *(string) --* 

            Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

            
          

          - **PreferredMaintenanceWindow** *(string) --* 

            Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

            
          

          - **ReplicationSourceIdentifier** *(string) --* 

            Contains the identifier of the source cluster if this cluster is a secondary cluster.

            
          

          - **ReadReplicaIdentifiers** *(list) --* 

            Contains one or more identifiers of the secondary clusters that are associated with this cluster.

            
            

            - *(string) --* 
        
          

          - **DBClusterMembers** *(list) --* 

            Provides the list of instances that make up the cluster.

            
            

            - *(dict) --* 

              Contains information about an instance that is part of a cluster.

              
              

              - **DBInstanceIdentifier** *(string) --* 

                Specifies the instance identifier for this member of the cluster.

                
              

              - **IsClusterWriter** *(boolean) --* 

                A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                
              

              - **DBClusterParameterGroupStatus** *(string) --* 

                Specifies the status of the cluster parameter group for this member of the DB cluster.

                
              

              - **PromotionTier** *(integer) --* 

                A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                
          
        
          

          - **VpcSecurityGroups** *(list) --* 

            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

            
            

            - *(dict) --* 

              Used as a response element for queries on virtual private cloud (VPC) security group membership.

              
              

              - **VpcSecurityGroupId** *(string) --* 

                The name of the VPC security group.

                
              

              - **Status** *(string) --* 

                The status of the VPC security group.

                
          
        
          

          - **HostedZoneId** *(string) --* 

            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

            
          

          - **StorageEncrypted** *(boolean) --* 

            Specifies whether the cluster is encrypted.

            
          

          - **KmsKeyId** *(string) --* 

            If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

            
          

          - **DbClusterResourceId** *(string) --* 

            The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

            
          

          - **DBClusterArn** *(string) --* 

            The Amazon Resource Name (ARN) for the cluster.

            
          

          - **AssociatedRoles** *(list) --* 

            Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

            
            

            - *(dict) --* 

              Describes an Identity and Access Management (IAM) role that is associated with a cluster.

              
              

              - **RoleArn** *(string) --* 

                The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                
              

              - **Status** *(string) --* 

                Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                 

                 
                * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                 
                * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                 
                * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                 

                
          
        
          

          - **ClusterCreateTime** *(datetime) --* 

            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

            
          

          - **EnabledCloudwatchLogsExports** *(list) --* 

            A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

            
            

            - *(string) --* 
        
          

          - **DeletionProtection** *(boolean) --* 

            Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

            
      
    
    **Exceptions** 
    
    *     :py:class:`DocDB.Client.exceptions.DBClusterNotFoundFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBClusterStateFault`

    
    *     :py:class:`DocDB.Client.exceptions.InvalidDBInstanceStateFault`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`DocDB.Paginator.DescribeCertificates`


* :py:class:`DocDB.Paginator.DescribeDBClusterParameterGroups`


* :py:class:`DocDB.Paginator.DescribeDBClusterParameters`


* :py:class:`DocDB.Paginator.DescribeDBClusterSnapshots`


* :py:class:`DocDB.Paginator.DescribeDBClusters`


* :py:class:`DocDB.Paginator.DescribeDBEngineVersions`


* :py:class:`DocDB.Paginator.DescribeDBInstances`


* :py:class:`DocDB.Paginator.DescribeDBSubnetGroups`


* :py:class:`DocDB.Paginator.DescribeEventSubscriptions`


* :py:class:`DocDB.Paginator.DescribeEvents`


* :py:class:`DocDB.Paginator.DescribeGlobalClusters`


* :py:class:`DocDB.Paginator.DescribeOrderableDBInstanceOptions`


* :py:class:`DocDB.Paginator.DescribePendingMaintenanceActions`



.. py:class:: DocDB.Paginator.DescribeCertificates

  ::

    
    paginator = client.get_paginator('describe_certificates')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_certificates`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeCertificates>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          CertificateIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type CertificateIdentifier: string
    :param CertificateIdentifier: 

      The user-supplied certificate identifier. If this parameter is specified, information for only the specified certificate is returned. If this parameter is omitted, a list of up to ``MaxRecords`` certificates is returned. This parameter is not case sensitive.

       

      Constraints

       

       
      * Must match an existing ``CertificateIdentifier`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Certificates': [
                {
                    'CertificateIdentifier': 'string',
                    'CertificateType': 'string',
                    'Thumbprint': 'string',
                    'ValidFrom': datetime(2015, 1, 1),
                    'ValidTill': datetime(2015, 1, 1),
                    'CertificateArn': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **Certificates** *(list) --* 

          A list of certificates for this account.

          
          

          - *(dict) --* 

            A certificate authority (CA) certificate for an account.

            
            

            - **CertificateIdentifier** *(string) --* 

              The unique key that identifies a certificate.

               

              Example: ``rds-ca-2019``  

              
            

            - **CertificateType** *(string) --* 

              The type of the certificate.

               

              Example: ``CA``  

              
            

            - **Thumbprint** *(string) --* 

              The thumbprint of the certificate.

              
            

            - **ValidFrom** *(datetime) --* 

              The starting date-time from which the certificate is valid.

               

              Example: ``2019-07-31T17:57:09Z``  

              
            

            - **ValidTill** *(datetime) --* 

              The date-time after which the certificate is no longer valid.

               

              Example: ``2024-07-31T17:57:09Z``  

              
            

            - **CertificateArn** *(string) --* 

              The Amazon Resource Name (ARN) for the certificate.

               

              Example: ``arn:aws:rds:us-east-1::cert:rds-ca-2019``  

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBClusterParameterGroups

  ::

    
    paginator = client.get_paginator('describe_db_cluster_parameter_groups')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_cluster_parameter_groups`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameterGroups>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          DBClusterParameterGroupName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: 

      The name of a specific cluster parameter group to return details for.

       

      Constraints:

       

       
      * If provided, must match the name of an existing ``DBClusterParameterGroup`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterParameterGroups': [
                {
                    'DBClusterParameterGroupName': 'string',
                    'DBParameterGroupFamily': 'string',
                    'Description': 'string',
                    'DBClusterParameterGroupArn': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DBClusterParameterGroups .

        
        

        - **DBClusterParameterGroups** *(list) --* 

          A list of cluster parameter groups.

          
          

          - *(dict) --* 

            Detailed information about a cluster parameter group. 

            
            

            - **DBClusterParameterGroupName** *(string) --* 

              Provides the name of the cluster parameter group.

              
            

            - **DBParameterGroupFamily** *(string) --* 

              Provides the name of the parameter group family that this cluster parameter group is compatible with.

              
            

            - **Description** *(string) --* 

              Provides the customer-specified description for this cluster parameter group.

              
            

            - **DBClusterParameterGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the cluster parameter group.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBClusterParameters

  ::

    
    paginator = client.get_paginator('describe_db_cluster_parameters')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_cluster_parameters`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameters>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          DBClusterParameterGroupName='string',
          Source='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type DBClusterParameterGroupName: string
    :param DBClusterParameterGroupName: **[REQUIRED]** 

      The name of a specific cluster parameter group to return parameter details for.

       

      Constraints:

       

       
      * If provided, must match the name of an existing ``DBClusterParameterGroup`` . 
       

      

    
    :type Source: string
    :param Source: 

      A value that indicates to return only parameters for a specific source. Parameter sources can be ``engine`` , ``service`` , or ``customer`` . 

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Parameters': [
                {
                    'ParameterName': 'string',
                    'ParameterValue': 'string',
                    'Description': 'string',
                    'Source': 'string',
                    'ApplyType': 'string',
                    'DataType': 'string',
                    'AllowedValues': 'string',
                    'IsModifiable': True|False,
                    'MinimumEngineVersion': 'string',
                    'ApplyMethod': 'immediate'|'pending-reboot'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DBClusterParameterGroup .

        
        

        - **Parameters** *(list) --* 

          Provides a list of parameters for the cluster parameter group.

          
          

          - *(dict) --* 

            Detailed information about an individual parameter.

            
            

            - **ParameterName** *(string) --* 

              Specifies the name of the parameter.

              
            

            - **ParameterValue** *(string) --* 

              Specifies the value of the parameter.

              
            

            - **Description** *(string) --* 

              Provides a description of the parameter.

              
            

            - **Source** *(string) --* 

              Indicates the source of the parameter value.

              
            

            - **ApplyType** *(string) --* 

              Specifies the engine-specific parameters type.

              
            

            - **DataType** *(string) --* 

              Specifies the valid data type for the parameter.

              
            

            - **AllowedValues** *(string) --* 

              Specifies the valid range of values for the parameter.

              
            

            - **IsModifiable** *(boolean) --* 

              Indicates whether (``true`` ) or not (``false`` ) the parameter can be modified. Some parameters have security or operational implications that prevent them from being changed. 

              
            

            - **MinimumEngineVersion** *(string) --* 

              The earliest engine version to which the parameter can apply.

              
            

            - **ApplyMethod** *(string) --* 

              Indicates when to apply parameter updates.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBClusterSnapshots

  ::

    
    paginator = client.get_paginator('describe_db_cluster_snapshots')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_cluster_snapshots`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshots>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          DBClusterIdentifier='string',
          DBClusterSnapshotIdentifier='string',
          SnapshotType='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          IncludeShared=True|False,
          IncludePublic=True|False,
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: 

      The ID of the cluster to retrieve the list of cluster snapshots for. This parameter can't be used with the ``DBClusterSnapshotIdentifier`` parameter. This parameter is not case sensitive. 

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBCluster`` . 
       

      

    
    :type DBClusterSnapshotIdentifier: string
    :param DBClusterSnapshotIdentifier: 

      A specific cluster snapshot identifier to describe. This parameter can't be used with the ``DBClusterIdentifier`` parameter. This value is stored as a lowercase string. 

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBClusterSnapshot`` . 
       
      * If this identifier is for an automated snapshot, the ``SnapshotType`` parameter must also be specified. 
       

      

    
    :type SnapshotType: string
    :param SnapshotType: 

      The type of cluster snapshots to be returned. You can specify one of the following values:

       

       
      * ``automated`` - Return all cluster snapshots that Amazon DocumentDB has automatically created for your account. 
       
      * ``manual`` - Return all cluster snapshots that you have manually created for your account. 
       
      * ``shared`` - Return all manual cluster snapshots that have been shared to your account. 
       
      * ``public`` - Return all cluster snapshots that have been marked as public. 
       

       

      If you don't specify a ``SnapshotType`` value, then both automated and manual cluster snapshots are returned. You can include shared cluster snapshots with these results by setting the ``IncludeShared`` parameter to ``true`` . You can include public cluster snapshots with these results by setting the``IncludePublic`` parameter to ``true`` .

       

      The ``IncludeShared`` and ``IncludePublic`` parameters don't apply for ``SnapshotType`` values of ``manual`` or ``automated`` . The ``IncludePublic`` parameter doesn't apply when ``SnapshotType`` is set to ``shared`` . The ``IncludeShared`` parameter doesn't apply when ``SnapshotType`` is set to ``public`` .

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type IncludeShared: boolean
    :param IncludeShared: 

      Set to ``true`` to include shared manual cluster snapshots from other accounts that this account has been given permission to copy or restore, and otherwise ``false`` . The default is ``false`` .

      

    
    :type IncludePublic: boolean
    :param IncludePublic: 

      Set to ``true`` to include manual cluster snapshots that are public and can be copied or restored by any account, and otherwise ``false`` . The default is ``false`` .

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusterSnapshots': [
                {
                    'AvailabilityZones': [
                        'string',
                    ],
                    'DBClusterSnapshotIdentifier': 'string',
                    'DBClusterIdentifier': 'string',
                    'SnapshotCreateTime': datetime(2015, 1, 1),
                    'Engine': 'string',
                    'Status': 'string',
                    'Port': 123,
                    'VpcId': 'string',
                    'ClusterCreateTime': datetime(2015, 1, 1),
                    'MasterUsername': 'string',
                    'EngineVersion': 'string',
                    'SnapshotType': 'string',
                    'PercentProgress': 123,
                    'StorageEncrypted': True|False,
                    'KmsKeyId': 'string',
                    'DBClusterSnapshotArn': 'string',
                    'SourceDBClusterSnapshotArn': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBClusterSnapshots .

        
        

        - **DBClusterSnapshots** *(list) --* 

          Provides a list of cluster snapshots.

          
          

          - *(dict) --* 

            Detailed information about a cluster snapshot. 

            
            

            - **AvailabilityZones** *(list) --* 

              Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot can be restored in.

              
              

              - *(string) --* 
          
            

            - **DBClusterSnapshotIdentifier** *(string) --* 

              Specifies the identifier for the cluster snapshot.

              
            

            - **DBClusterIdentifier** *(string) --* 

              Specifies the cluster identifier of the cluster that this cluster snapshot was created from.

              
            

            - **SnapshotCreateTime** *(datetime) --* 

              Provides the time when the snapshot was taken, in UTC.

              
            

            - **Engine** *(string) --* 

              Specifies the name of the database engine.

              
            

            - **Status** *(string) --* 

              Specifies the status of this cluster snapshot.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the cluster was listening on at the time of the snapshot.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.

              
            

            - **ClusterCreateTime** *(datetime) --* 

              Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

              
            

            - **MasterUsername** *(string) --* 

              Provides the master user name for the cluster snapshot.

              
            

            - **EngineVersion** *(string) --* 

              Provides the version of the database engine for this cluster snapshot.

              
            

            - **SnapshotType** *(string) --* 

              Provides the type of the cluster snapshot.

              
            

            - **PercentProgress** *(integer) --* 

              Specifies the percentage of the estimated data that has been transferred.

              
            

            - **StorageEncrypted** *(boolean) --* 

              Specifies whether the cluster snapshot is encrypted.

              
            

            - **KmsKeyId** *(string) --* 

              If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster snapshot.

              
            

            - **DBClusterSnapshotArn** *(string) --* 

              The Amazon Resource Name (ARN) for the cluster snapshot.

              
            

            - **SourceDBClusterSnapshotArn** *(string) --* 

              If the cluster snapshot was copied from a source cluster snapshot, the ARN for the source cluster snapshot; otherwise, a null value.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBClusters

  ::

    
    paginator = client.get_paginator('describe_db_clusters')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_clusters`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusters>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          DBClusterIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type DBClusterIdentifier: string
    :param DBClusterIdentifier: 

      The user-provided cluster identifier. If this parameter is specified, information from only the specific cluster is returned. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * If provided, must match an existing ``DBClusterIdentifier`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more clusters to describe.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list only includes information about the clusters identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBClusters': [
                {
                    'AvailabilityZones': [
                        'string',
                    ],
                    'BackupRetentionPeriod': 123,
                    'DBClusterIdentifier': 'string',
                    'DBClusterParameterGroup': 'string',
                    'DBSubnetGroup': 'string',
                    'Status': 'string',
                    'PercentProgress': 'string',
                    'EarliestRestorableTime': datetime(2015, 1, 1),
                    'Endpoint': 'string',
                    'ReaderEndpoint': 'string',
                    'MultiAZ': True|False,
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'LatestRestorableTime': datetime(2015, 1, 1),
                    'Port': 123,
                    'MasterUsername': 'string',
                    'PreferredBackupWindow': 'string',
                    'PreferredMaintenanceWindow': 'string',
                    'ReplicationSourceIdentifier': 'string',
                    'ReadReplicaIdentifiers': [
                        'string',
                    ],
                    'DBClusterMembers': [
                        {
                            'DBInstanceIdentifier': 'string',
                            'IsClusterWriter': True|False,
                            'DBClusterParameterGroupStatus': 'string',
                            'PromotionTier': 123
                        },
                    ],
                    'VpcSecurityGroups': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ],
                    'HostedZoneId': 'string',
                    'StorageEncrypted': True|False,
                    'KmsKeyId': 'string',
                    'DbClusterResourceId': 'string',
                    'DBClusterArn': 'string',
                    'AssociatedRoles': [
                        {
                            'RoleArn': 'string',
                            'Status': 'string'
                        },
                    ],
                    'ClusterCreateTime': datetime(2015, 1, 1),
                    'EnabledCloudwatchLogsExports': [
                        'string',
                    ],
                    'DeletionProtection': True|False
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBClusters .

        
        

        - **DBClusters** *(list) --* 

          A list of clusters.

          
          

          - *(dict) --* 

            Detailed information about a cluster. 

            
            

            - **AvailabilityZones** *(list) --* 

              Provides the list of Amazon EC2 Availability Zones that instances in the cluster can be created in.

              
              

              - *(string) --* 
          
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the number of days for which automatic snapshots are retained.

              
            

            - **DBClusterIdentifier** *(string) --* 

              Contains a user-supplied cluster identifier. This identifier is the unique key that identifies a cluster.

              
            

            - **DBClusterParameterGroup** *(string) --* 

              Specifies the name of the cluster parameter group for the cluster.

              
            

            - **DBSubnetGroup** *(string) --* 

              Specifies information on the subnet group that is associated with the cluster, including the name, description, and subnets in the subnet group.

              
            

            - **Status** *(string) --* 

              Specifies the current state of this cluster.

              
            

            - **PercentProgress** *(string) --* 

              Specifies the progress of the operation as a percentage.

              
            

            - **EarliestRestorableTime** *(datetime) --* 

              The earliest time to which a database can be restored with point-in-time restore.

              
            

            - **Endpoint** *(string) --* 

              Specifies the connection endpoint for the primary instance of the cluster.

              
            

            - **ReaderEndpoint** *(string) --* 

              The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. 

               

              If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.

              
            

            - **MultiAZ** *(boolean) --* 

              Specifies whether the cluster has instances in multiple Availability Zones.

              
            

            - **Engine** *(string) --* 

              Provides the name of the database engine to be used for this cluster.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **LatestRestorableTime** *(datetime) --* 

              Specifies the latest time to which a database can be restored with point-in-time restore.

              
            

            - **Port** *(integer) --* 

              Specifies the port that the database engine is listening on.

              
            

            - **MasterUsername** *(string) --* 

              Contains the master user name for the cluster.

              
            

            - **PreferredBackupWindow** *(string) --* 

              Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

              
            

            - **PreferredMaintenanceWindow** *(string) --* 

              Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

              
            

            - **ReplicationSourceIdentifier** *(string) --* 

              Contains the identifier of the source cluster if this cluster is a secondary cluster.

              
            

            - **ReadReplicaIdentifiers** *(list) --* 

              Contains one or more identifiers of the secondary clusters that are associated with this cluster.

              
              

              - *(string) --* 
          
            

            - **DBClusterMembers** *(list) --* 

              Provides the list of instances that make up the cluster.

              
              

              - *(dict) --* 

                Contains information about an instance that is part of a cluster.

                
                

                - **DBInstanceIdentifier** *(string) --* 

                  Specifies the instance identifier for this member of the cluster.

                  
                

                - **IsClusterWriter** *(boolean) --* 

                  A value that is ``true`` if the cluster member is the primary instance for the cluster and ``false`` otherwise.

                  
                

                - **DBClusterParameterGroupStatus** *(string) --* 

                  Specifies the status of the cluster parameter group for this member of the DB cluster.

                  
                

                - **PromotionTier** *(integer) --* 

                  A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance. 

                  
            
          
            

            - **VpcSecurityGroups** *(list) --* 

              Provides a list of virtual private cloud (VPC) security groups that the cluster belongs to.

              
              

              - *(dict) --* 

                Used as a response element for queries on virtual private cloud (VPC) security group membership.

                
                

                - **VpcSecurityGroupId** *(string) --* 

                  The name of the VPC security group.

                  
                

                - **Status** *(string) --* 

                  The status of the VPC security group.

                  
            
          
            

            - **HostedZoneId** *(string) --* 

              Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

              
            

            - **StorageEncrypted** *(boolean) --* 

              Specifies whether the cluster is encrypted.

              
            

            - **KmsKeyId** *(string) --* 

              If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted cluster.

              
            

            - **DbClusterResourceId** *(string) --* 

              The Region-unique, immutable identifier for the cluster. This identifier is found in CloudTrail log entries whenever the KMS key for the cluster is accessed.

              
            

            - **DBClusterArn** *(string) --* 

              The Amazon Resource Name (ARN) for the cluster.

              
            

            - **AssociatedRoles** *(list) --* 

              Provides a list of the Identity and Access Management (IAM) roles that are associated with the cluster. (IAM) roles that are associated with a cluster grant permission for the cluster to access other Amazon Web Services services on your behalf.

              
              

              - *(dict) --* 

                Describes an Identity and Access Management (IAM) role that is associated with a cluster.

                
                

                - **RoleArn** *(string) --* 

                  The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.

                  
                

                - **Status** *(string) --* 

                  Describes the state of association between the IAMrole and the cluster. The ``Status`` property returns one of the following values:

                   

                   
                  * ``ACTIVE`` - The IAMrole ARN is associated with the cluster and can be used to access other Amazon Web Services services on your behalf. 
                   
                  * ``PENDING`` - The IAMrole ARN is being associated with the cluster. 
                   
                  * ``INVALID`` - The IAMrole ARN is associated with the cluster, but the cluster cannot assume the IAMrole to access other Amazon Web Services services on your behalf. 
                   

                  
            
          
            

            - **ClusterCreateTime** *(datetime) --* 

              Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).

              
            

            - **EnabledCloudwatchLogsExports** *(list) --* 

              A list of log types that this cluster is configured to export to Amazon CloudWatch Logs.

              
              

              - *(string) --* 
          
            

            - **DeletionProtection** *(boolean) --* 

              Specifies whether this cluster can be deleted. If ``DeletionProtection`` is enabled, the cluster cannot be deleted unless it is modified and ``DeletionProtection`` is disabled. ``DeletionProtection`` protects clusters from being accidentally deleted.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBEngineVersions

  ::

    
    paginator = client.get_paginator('describe_db_engine_versions')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_engine_versions`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBEngineVersions>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          Engine='string',
          EngineVersion='string',
          DBParameterGroupFamily='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          DefaultOnly=True|False,
          ListSupportedCharacterSets=True|False,
          ListSupportedTimezones=True|False,
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type Engine: string
    :param Engine: 

      The database engine to return.

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The database engine version to return.

       

      Example: ``3.6.0``  

      

    
    :type DBParameterGroupFamily: string
    :param DBParameterGroupFamily: 

      The name of a specific parameter group family to return details for.

       

      Constraints:

       

       
      * If provided, must match an existing ``DBParameterGroupFamily`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type DefaultOnly: boolean
    :param DefaultOnly: 

      Indicates that only the default version of the specified engine or engine and major version combination is returned.

      

    
    :type ListSupportedCharacterSets: boolean
    :param ListSupportedCharacterSets: 

      If this parameter is specified and the requested engine supports the ``CharacterSetName`` parameter for ``CreateDBInstance`` , the response includes a list of supported character sets for each engine version. 

      

    
    :type ListSupportedTimezones: boolean
    :param ListSupportedTimezones: 

      If this parameter is specified and the requested engine supports the ``TimeZone`` parameter for ``CreateDBInstance`` , the response includes a list of supported time zones for each engine version. 

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBEngineVersions': [
                {
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'DBParameterGroupFamily': 'string',
                    'DBEngineDescription': 'string',
                    'DBEngineVersionDescription': 'string',
                    'ValidUpgradeTarget': [
                        {
                            'Engine': 'string',
                            'EngineVersion': 'string',
                            'Description': 'string',
                            'AutoUpgrade': True|False,
                            'IsMajorVersionUpgrade': True|False
                        },
                    ],
                    'ExportableLogTypes': [
                        'string',
                    ],
                    'SupportsLogExportsToCloudwatchLogs': True|False
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBEngineVersions .

        
        

        - **DBEngineVersions** *(list) --* 

          Detailed information about one or more engine versions.

          
          

          - *(dict) --* 

            Detailed information about an engine version. 

            
            

            - **Engine** *(string) --* 

              The name of the database engine.

              
            

            - **EngineVersion** *(string) --* 

              The version number of the database engine.

              
            

            - **DBParameterGroupFamily** *(string) --* 

              The name of the parameter group family for the database engine.

              
            

            - **DBEngineDescription** *(string) --* 

              The description of the database engine.

              
            

            - **DBEngineVersionDescription** *(string) --* 

              The description of the database engine version.

              
            

            - **ValidUpgradeTarget** *(list) --* 

              A list of engine versions that this database engine version can be upgraded to.

              
              

              - *(dict) --* 

                The version of the database engine that an instance can be upgraded to.

                
                

                - **Engine** *(string) --* 

                  The name of the upgrade target database engine.

                  
                

                - **EngineVersion** *(string) --* 

                  The version number of the upgrade target database engine.

                  
                

                - **Description** *(string) --* 

                  The version of the database engine that an instance can be upgraded to.

                  
                

                - **AutoUpgrade** *(boolean) --* 

                  A value that indicates whether the target version is applied to any source DB instances that have ``AutoMinorVersionUpgrade`` set to ``true`` .

                  
                

                - **IsMajorVersionUpgrade** *(boolean) --* 

                  A value that indicates whether a database engine is upgraded to a major version.

                  
            
          
            

            - **ExportableLogTypes** *(list) --* 

              The types of logs that the database engine has available for export to Amazon CloudWatch Logs.

              
              

              - *(string) --* 
          
            

            - **SupportsLogExportsToCloudwatchLogs** *(boolean) --* 

              A value that indicates whether the engine version supports exporting the log types specified by ``ExportableLogTypes`` to CloudWatch Logs.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBInstances

  ::

    
    paginator = client.get_paginator('describe_db_instances')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_instances`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          DBInstanceIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: 

      The user-provided instance identifier. If this parameter is specified, information from only the specific instance is returned. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBInstance`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more instances to describe.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only the information about the instances that are associated with the clusters that are identified by these ARNs. 
       
      * ``db-instance-id`` - Accepts instance identifiers and instance ARNs. The results list includes only the information about the instances that are identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBInstances': [
                {
                    'DBInstanceIdentifier': 'string',
                    'DBInstanceClass': 'string',
                    'Engine': 'string',
                    'DBInstanceStatus': 'string',
                    'Endpoint': {
                        'Address': 'string',
                        'Port': 123,
                        'HostedZoneId': 'string'
                    },
                    'InstanceCreateTime': datetime(2015, 1, 1),
                    'PreferredBackupWindow': 'string',
                    'BackupRetentionPeriod': 123,
                    'VpcSecurityGroups': [
                        {
                            'VpcSecurityGroupId': 'string',
                            'Status': 'string'
                        },
                    ],
                    'AvailabilityZone': 'string',
                    'DBSubnetGroup': {
                        'DBSubnetGroupName': 'string',
                        'DBSubnetGroupDescription': 'string',
                        'VpcId': 'string',
                        'SubnetGroupStatus': 'string',
                        'Subnets': [
                            {
                                'SubnetIdentifier': 'string',
                                'SubnetAvailabilityZone': {
                                    'Name': 'string'
                                },
                                'SubnetStatus': 'string'
                            },
                        ],
                        'DBSubnetGroupArn': 'string'
                    },
                    'PreferredMaintenanceWindow': 'string',
                    'PendingModifiedValues': {
                        'DBInstanceClass': 'string',
                        'AllocatedStorage': 123,
                        'MasterUserPassword': 'string',
                        'Port': 123,
                        'BackupRetentionPeriod': 123,
                        'MultiAZ': True|False,
                        'EngineVersion': 'string',
                        'LicenseModel': 'string',
                        'Iops': 123,
                        'DBInstanceIdentifier': 'string',
                        'StorageType': 'string',
                        'CACertificateIdentifier': 'string',
                        'DBSubnetGroupName': 'string',
                        'PendingCloudwatchLogsExports': {
                            'LogTypesToEnable': [
                                'string',
                            ],
                            'LogTypesToDisable': [
                                'string',
                            ]
                        }
                    },
                    'LatestRestorableTime': datetime(2015, 1, 1),
                    'EngineVersion': 'string',
                    'AutoMinorVersionUpgrade': True|False,
                    'PubliclyAccessible': True|False,
                    'StatusInfos': [
                        {
                            'StatusType': 'string',
                            'Normal': True|False,
                            'Status': 'string',
                            'Message': 'string'
                        },
                    ],
                    'DBClusterIdentifier': 'string',
                    'StorageEncrypted': True|False,
                    'KmsKeyId': 'string',
                    'DbiResourceId': 'string',
                    'CACertificateIdentifier': 'string',
                    'PromotionTier': 123,
                    'DBInstanceArn': 'string',
                    'EnabledCloudwatchLogsExports': [
                        'string',
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBInstances .

        
        

        - **DBInstances** *(list) --* 

          Detailed information about one or more instances. 

          
          

          - *(dict) --* 

            Detailed information about an instance. 

            
            

            - **DBInstanceIdentifier** *(string) --* 

              Contains a user-provided database identifier. This identifier is the unique key that identifies an instance.

              
            

            - **DBInstanceClass** *(string) --* 

              Contains the name of the compute and memory capacity class of the instance.

              
            

            - **Engine** *(string) --* 

              Provides the name of the database engine to be used for this instance.

              
            

            - **DBInstanceStatus** *(string) --* 

              Specifies the current state of this database.

              
            

            - **Endpoint** *(dict) --* 

              Specifies the connection endpoint.

              
              

              - **Address** *(string) --* 

                Specifies the DNS address of the instance.

                
              

              - **Port** *(integer) --* 

                Specifies the port that the database engine is listening on.

                
              

              - **HostedZoneId** *(string) --* 

                Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.

                
          
            

            - **InstanceCreateTime** *(datetime) --* 

              Provides the date and time that the instance was created.

              
            

            - **PreferredBackupWindow** *(string) --* 

              Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the ``BackupRetentionPeriod`` . 

              
            

            - **BackupRetentionPeriod** *(integer) --* 

              Specifies the number of days for which automatic snapshots are retained.

              
            

            - **VpcSecurityGroups** *(list) --* 

              Provides a list of VPC security group elements that the instance belongs to.

              
              

              - *(dict) --* 

                Used as a response element for queries on virtual private cloud (VPC) security group membership.

                
                

                - **VpcSecurityGroupId** *(string) --* 

                  The name of the VPC security group.

                  
                

                - **Status** *(string) --* 

                  The status of the VPC security group.

                  
            
          
            

            - **AvailabilityZone** *(string) --* 

              Specifies the name of the Availability Zone that the instance is located in.

              
            

            - **DBSubnetGroup** *(dict) --* 

              Specifies information on the subnet group that is associated with the instance, including the name, description, and subnets in the subnet group.

              
              

              - **DBSubnetGroupName** *(string) --* 

                The name of the subnet group.

                
              

              - **DBSubnetGroupDescription** *(string) --* 

                Provides the description of the subnet group.

                
              

              - **VpcId** *(string) --* 

                Provides the virtual private cloud (VPC) ID of the subnet group.

                
              

              - **SubnetGroupStatus** *(string) --* 

                Provides the status of the subnet group.

                
              

              - **Subnets** *(list) --* 

                Detailed information about one or more subnets within a subnet group.

                
                

                - *(dict) --* 

                  Detailed information about a subnet. 

                  
                  

                  - **SubnetIdentifier** *(string) --* 

                    Specifies the identifier of the subnet.

                    
                  

                  - **SubnetAvailabilityZone** *(dict) --* 

                    Specifies the Availability Zone for the subnet.

                    
                    

                    - **Name** *(string) --* 

                      The name of the Availability Zone.

                      
                
                  

                  - **SubnetStatus** *(string) --* 

                    Specifies the status of the subnet.

                    
              
            
              

              - **DBSubnetGroupArn** *(string) --* 

                The Amazon Resource Name (ARN) for the DB subnet group.

                
          
            

            - **PreferredMaintenanceWindow** *(string) --* 

              Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

              
            

            - **PendingModifiedValues** *(dict) --* 

              Specifies that changes to the instance are pending. This element is included only when changes are pending. Specific changes are identified by subelements.

              
              

              - **DBInstanceClass** *(string) --* 

                Contains the new ``DBInstanceClass`` for the instance that will be applied or is currently being applied. 

                
              

              - **AllocatedStorage** *(integer) --* 

                Contains the new ``AllocatedStorage`` size for then instance that will be applied or is currently being applied. 

                
              

              - **MasterUserPassword** *(string) --* 

                Contains the pending or currently in-progress change of the master credentials for the instance.

                
              

              - **Port** *(integer) --* 

                Specifies the pending port for the instance.

                
              

              - **BackupRetentionPeriod** *(integer) --* 

                Specifies the pending number of days for which automated backups are retained.

                
              

              - **MultiAZ** *(boolean) --* 

                Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.

                
              

              - **EngineVersion** *(string) --* 

                Indicates the database engine version.

                
              

              - **LicenseModel** *(string) --* 

                The license model for the instance.

                 

                Valid values: ``license-included`` , ``bring-your-own-license`` , ``general-public-license``  

                
              

              - **Iops** *(integer) --* 

                Specifies the new Provisioned IOPS value for the instance that will be applied or is currently being applied.

                
              

              - **DBInstanceIdentifier** *(string) --* 

                Contains the new ``DBInstanceIdentifier`` for the instance that will be applied or is currently being applied. 

                
              

              - **StorageType** *(string) --* 

                Specifies the storage type to be associated with the instance.

                
              

              - **CACertificateIdentifier** *(string) --* 

                Specifies the identifier of the certificate authority (CA) certificate for the DB instance.

                
              

              - **DBSubnetGroupName** *(string) --* 

                The new subnet group for the instance. 

                
              

              - **PendingCloudwatchLogsExports** *(dict) --* 

                A list of the log types whose configuration is still pending. These log types are in the process of being activated or deactivated.

                
                

                - **LogTypesToEnable** *(list) --* 

                  Log types that are in the process of being deactivated. After they are deactivated, these log types aren't exported to CloudWatch Logs.

                  
                  

                  - *(string) --* 
              
                

                - **LogTypesToDisable** *(list) --* 

                  Log types that are in the process of being enabled. After they are enabled, these log types are exported to Amazon CloudWatch Logs.

                  
                  

                  - *(string) --* 
              
            
          
            

            - **LatestRestorableTime** *(datetime) --* 

              Specifies the latest time to which a database can be restored with point-in-time restore.

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **AutoMinorVersionUpgrade** *(boolean) --* 

              Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform minor version upgrades regardless of the value set.

              
            

            - **PubliclyAccessible** *(boolean) --* 

              Not supported. Amazon DocumentDB does not currently support public endpoints. The value of ``PubliclyAccessible`` is always ``false`` .

              
            

            - **StatusInfos** *(list) --* 

              The status of a read replica. If the instance is not a read replica, this is blank.

              
              

              - *(dict) --* 

                Provides a list of status information for an instance.

                
                

                - **StatusType** *(string) --* 

                  This value is currently "``read replication`` ."

                  
                

                - **Normal** *(boolean) --* 

                  A Boolean value that is ``true`` if the instance is operating normally, or ``false`` if the instance is in an error state.

                  
                

                - **Status** *(string) --* 

                  Status of the instance. For a ``StatusType`` of read replica, the values can be ``replicating`` , error, ``stopped`` , or ``terminated`` .

                  
                

                - **Message** *(string) --* 

                  Details of the error if there is an error for the instance. If the instance is not in an error state, this value is blank.

                  
            
          
            

            - **DBClusterIdentifier** *(string) --* 

              Contains the name of the cluster that the instance is a member of if the instance is a member of a cluster.

              
            

            - **StorageEncrypted** *(boolean) --* 

              Specifies whether or not the instance is encrypted.

              
            

            - **KmsKeyId** *(string) --* 

              If ``StorageEncrypted`` is ``true`` , the KMS key identifier for the encrypted instance. 

              
            

            - **DbiResourceId** *(string) --* 

              The Region-unique, immutable identifier for the instance. This identifier is found in CloudTrail log entries whenever the KMS key for the instance is accessed.

              
            

            - **CACertificateIdentifier** *(string) --* 

              The identifier of the CA certificate for this DB instance.

              
            

            - **PromotionTier** *(integer) --* 

              A value that specifies the order in which an Amazon DocumentDB replica is promoted to the primary instance after a failure of the existing primary instance.

              
            

            - **DBInstanceArn** *(string) --* 

              The Amazon Resource Name (ARN) for the instance.

              
            

            - **EnabledCloudwatchLogsExports** *(list) --* 

              A list of log types that this instance is configured to export to CloudWatch Logs.

              
              

              - *(string) --* 
          
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeDBSubnetGroups

  ::

    
    paginator = client.get_paginator('describe_db_subnet_groups')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_db_subnet_groups`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBSubnetGroups>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          DBSubnetGroupName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type DBSubnetGroupName: string
    :param DBSubnetGroupName: 

      The name of the subnet group to return details for.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'DBSubnetGroups': [
                {
                    'DBSubnetGroupName': 'string',
                    'DBSubnetGroupDescription': 'string',
                    'VpcId': 'string',
                    'SubnetGroupStatus': 'string',
                    'Subnets': [
                        {
                            'SubnetIdentifier': 'string',
                            'SubnetAvailabilityZone': {
                                'Name': 'string'
                            },
                            'SubnetStatus': 'string'
                        },
                    ],
                    'DBSubnetGroupArn': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeDBSubnetGroups .

        
        

        - **DBSubnetGroups** *(list) --* 

          Detailed information about one or more subnet groups.

          
          

          - *(dict) --* 

            Detailed information about a subnet group. 

            
            

            - **DBSubnetGroupName** *(string) --* 

              The name of the subnet group.

              
            

            - **DBSubnetGroupDescription** *(string) --* 

              Provides the description of the subnet group.

              
            

            - **VpcId** *(string) --* 

              Provides the virtual private cloud (VPC) ID of the subnet group.

              
            

            - **SubnetGroupStatus** *(string) --* 

              Provides the status of the subnet group.

              
            

            - **Subnets** *(list) --* 

              Detailed information about one or more subnets within a subnet group.

              
              

              - *(dict) --* 

                Detailed information about a subnet. 

                
                

                - **SubnetIdentifier** *(string) --* 

                  Specifies the identifier of the subnet.

                  
                

                - **SubnetAvailabilityZone** *(dict) --* 

                  Specifies the Availability Zone for the subnet.

                  
                  

                  - **Name** *(string) --* 

                    The name of the Availability Zone.

                    
              
                

                - **SubnetStatus** *(string) --* 

                  Specifies the status of the subnet.

                  
            
          
            

            - **DBSubnetGroupArn** *(string) --* 

              The Amazon Resource Name (ARN) for the DB subnet group.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeEventSubscriptions

  ::

    
    paginator = client.get_paginator('describe_event_subscriptions')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_event_subscriptions`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventSubscriptions>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          SubscriptionName='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type SubscriptionName: string
    :param SubscriptionName: 

      The name of the Amazon DocumentDB event notification subscription that you want to describe.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'EventSubscriptionsList': [
                {
                    'CustomerAwsId': 'string',
                    'CustSubscriptionId': 'string',
                    'SnsTopicArn': 'string',
                    'Status': 'string',
                    'SubscriptionCreationTime': 'string',
                    'SourceType': 'string',
                    'SourceIdsList': [
                        'string',
                    ],
                    'EventCategoriesList': [
                        'string',
                    ],
                    'Enabled': True|False,
                    'EventSubscriptionArn': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeEventSubscriptions .

        
        

        - **EventSubscriptionsList** *(list) --* 

          A list of event subscriptions.

          
          

          - *(dict) --* 

            Detailed information about an event to which you have subscribed.

            
            

            - **CustomerAwsId** *(string) --* 

              The Amazon Web Services customer account that is associated with the Amazon DocumentDB event notification subscription.

              
            

            - **CustSubscriptionId** *(string) --* 

              The Amazon DocumentDB event notification subscription ID.

              
            

            - **SnsTopicArn** *(string) --* 

              The topic ARN of the Amazon DocumentDB event notification subscription.

              
            

            - **Status** *(string) --* 

              The status of the Amazon DocumentDB event notification subscription.

               

              Constraints:

               

              Can be one of the following: ``creating`` , ``modifying`` , ``deleting`` , ``active`` , ``no-permission`` , ``topic-not-exist``  

               

              The ``no-permission`` status indicates that Amazon DocumentDB no longer has permission to post to the SNS topic. The ``topic-not-exist`` status indicates that the topic was deleted after the subscription was created.

              
            

            - **SubscriptionCreationTime** *(string) --* 

              The time at which the Amazon DocumentDB event notification subscription was created.

              
            

            - **SourceType** *(string) --* 

              The source type for the Amazon DocumentDB event notification subscription.

              
            

            - **SourceIdsList** *(list) --* 

              A list of source IDs for the Amazon DocumentDB event notification subscription.

              
              

              - *(string) --* 
          
            

            - **EventCategoriesList** *(list) --* 

              A list of event categories for the Amazon DocumentDB event notification subscription.

              
              

              - *(string) --* 
          
            

            - **Enabled** *(boolean) --* 

              A Boolean value indicating whether the subscription is enabled. A value of ``true`` indicates that the subscription is enabled.

              
            

            - **EventSubscriptionArn** *(string) --* 

              The Amazon Resource Name (ARN) for the event subscription.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeEvents

  ::

    
    paginator = client.get_paginator('describe_events')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_events`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEvents>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          SourceIdentifier='string',
          SourceType='db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
          StartTime=datetime(2015, 1, 1),
          EndTime=datetime(2015, 1, 1),
          Duration=123,
          EventCategories=[
              'string',
          ],
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type SourceIdentifier: string
    :param SourceIdentifier: 

      The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.

       

      Constraints:

       

       
      * If ``SourceIdentifier`` is provided, ``SourceType`` must also be provided. 
       
      * If the source type is ``DBInstance`` , a ``DBInstanceIdentifier`` must be provided. 
       
      * If the source type is ``DBSecurityGroup`` , a ``DBSecurityGroupName`` must be provided. 
       
      * If the source type is ``DBParameterGroup`` , a ``DBParameterGroupName`` must be provided. 
       
      * If the source type is ``DBSnapshot`` , a ``DBSnapshotIdentifier`` must be provided. 
       
      * Cannot end with a hyphen or contain two consecutive hyphens. 
       

      

    
    :type SourceType: string
    :param SourceType: 

      The event source to retrieve events for. If no value is specified, all events are returned.

      

    
    :type StartTime: datetime
    :param StartTime: 

      The beginning of the time interval to retrieve events for, specified in ISO 8601 format. 

       

      Example: 2009-07-08T18:00Z

      

    
    :type EndTime: datetime
    :param EndTime: 

      The end of the time interval for which to retrieve events, specified in ISO 8601 format. 

       

      Example: 2009-07-08T18:00Z

      

    
    :type Duration: integer
    :param Duration: 

      The number of minutes to retrieve events for.

       

      Default: 60

      

    
    :type EventCategories: list
    :param EventCategories: 

      A list of event categories that trigger notifications for an event notification subscription.

      

    
      - *(string) --* 

      
  
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'Events': [
                {
                    'SourceIdentifier': 'string',
                    'SourceType': 'db-instance'|'db-parameter-group'|'db-security-group'|'db-snapshot'|'db-cluster'|'db-cluster-snapshot',
                    'Message': 'string',
                    'EventCategories': [
                        'string',
                    ],
                    'Date': datetime(2015, 1, 1),
                    'SourceArn': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeEvents .

        
        

        - **Events** *(list) --* 

          Detailed information about one or more events. 

          
          

          - *(dict) --* 

            Detailed information about an event.

            
            

            - **SourceIdentifier** *(string) --* 

              Provides the identifier for the source of the event.

              
            

            - **SourceType** *(string) --* 

              Specifies the source type for this event.

              
            

            - **Message** *(string) --* 

              Provides the text of this event.

              
            

            - **EventCategories** *(list) --* 

              Specifies the category for the event.

              
              

              - *(string) --* 
          
            

            - **Date** *(datetime) --* 

              Specifies the date and time of the event.

              
            

            - **SourceArn** *(string) --* 

              The Amazon Resource Name (ARN) for the event.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeGlobalClusters

  ::

    
    paginator = client.get_paginator('describe_global_clusters')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_global_clusters`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeGlobalClusters>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          GlobalClusterIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type GlobalClusterIdentifier: string
    :param GlobalClusterIdentifier: 

      The user-supplied cluster identifier. If this parameter is specified, information from only the specific cluster is returned. This parameter isn't case-sensitive.

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more global DB clusters to describe.

       

      Supported filters: ``db-cluster-id`` accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list will only include information about the clusters identified by these ARNs.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'GlobalClusters': [
                {
                    'GlobalClusterIdentifier': 'string',
                    'GlobalClusterResourceId': 'string',
                    'GlobalClusterArn': 'string',
                    'Status': 'string',
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'DatabaseName': 'string',
                    'StorageEncrypted': True|False,
                    'DeletionProtection': True|False,
                    'GlobalClusterMembers': [
                        {
                            'DBClusterArn': 'string',
                            'Readers': [
                                'string',
                            ],
                            'IsWriter': True|False
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **GlobalClusters** *(list) --* 

          

          
          

          - *(dict) --* 

            A data type representing an Amazon DocumentDB global cluster.

            
            

            - **GlobalClusterIdentifier** *(string) --* 

              Contains a user-supplied global cluster identifier. This identifier is the unique key that identifies a global cluster. 

              
            

            - **GlobalClusterResourceId** *(string) --* 

              The Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the cluster is accessed. 

              
            

            - **GlobalClusterArn** *(string) --* 

              The Amazon Resource Name (ARN) for the global cluster.

              
            

            - **Status** *(string) --* 

              Specifies the current state of this global cluster.

              
            

            - **Engine** *(string) --* 

              The Amazon DocumentDB database engine used by the global cluster. 

              
            

            - **EngineVersion** *(string) --* 

              Indicates the database engine version.

              
            

            - **DatabaseName** *(string) --* 

              The default database name within the new global cluster.

              
            

            - **StorageEncrypted** *(boolean) --* 

              The storage encryption setting for the global cluster.

              
            

            - **DeletionProtection** *(boolean) --* 

              The deletion protection setting for the new global cluster.

              
            

            - **GlobalClusterMembers** *(list) --* 

              The list of cluster IDs for secondary clusters within the global cluster. Currently limited to one item. 

              
              

              - *(dict) --* 

                A data structure with information about any primary and secondary clusters associated with an Amazon DocumentDB global clusters. 

                
                

                - **DBClusterArn** *(string) --* 

                  The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.

                  
                

                - **Readers** *(list) --* 

                  The Amazon Resource Name (ARN) for each read-only secondary cluster associated with the Aurora global cluster.

                  
                  

                  - *(string) --* 
              
                

                - **IsWriter** *(boolean) --* 

                  Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is, has read-write capability) for the Amazon DocumentDB global cluster with which it is associated. 

                  
            
          
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribeOrderableDBInstanceOptions

  ::

    
    paginator = client.get_paginator('describe_orderable_db_instance_options')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_orderable_db_instance_options`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeOrderableDBInstanceOptions>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          Engine='string',
          EngineVersion='string',
          DBInstanceClass='string',
          LicenseModel='string',
          Vpc=True|False,
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type Engine: string
    :param Engine: **[REQUIRED]** 

      The name of the engine to retrieve instance options for.

      

    
    :type EngineVersion: string
    :param EngineVersion: 

      The engine version filter value. Specify this parameter to show only the available offerings that match the specified engine version.

      

    
    :type DBInstanceClass: string
    :param DBInstanceClass: 

      The instance class filter value. Specify this parameter to show only the available offerings that match the specified instance class.

      

    
    :type LicenseModel: string
    :param LicenseModel: 

      The license model filter value. Specify this parameter to show only the available offerings that match the specified license model.

      

    
    :type Vpc: boolean
    :param Vpc: 

      The virtual private cloud (VPC) filter value. Specify this parameter to show only the available VPC or non-VPC offerings.

      

    
    :type Filters: list
    :param Filters: 

      This parameter is not currently supported.

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'OrderableDBInstanceOptions': [
                {
                    'Engine': 'string',
                    'EngineVersion': 'string',
                    'DBInstanceClass': 'string',
                    'LicenseModel': 'string',
                    'AvailabilityZones': [
                        {
                            'Name': 'string'
                        },
                    ],
                    'Vpc': True|False
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribeOrderableDBInstanceOptions .

        
        

        - **OrderableDBInstanceOptions** *(list) --* 

          The options that are available for a particular orderable instance.

          
          

          - *(dict) --* 

            The options that are available for an instance.

            
            

            - **Engine** *(string) --* 

              The engine type of an instance.

              
            

            - **EngineVersion** *(string) --* 

              The engine version of an instance.

              
            

            - **DBInstanceClass** *(string) --* 

              The instance class for an instance.

              
            

            - **LicenseModel** *(string) --* 

              The license model for an instance.

              
            

            - **AvailabilityZones** *(list) --* 

              A list of Availability Zones for an instance.

              
              

              - *(dict) --* 

                Information about an Availability Zone.

                
                

                - **Name** *(string) --* 

                  The name of the Availability Zone.

                  
            
          
            

            - **Vpc** *(boolean) --* 

              Indicates whether an instance is in a virtual private cloud (VPC).

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: DocDB.Paginator.DescribePendingMaintenanceActions

  ::

    
    paginator = client.get_paginator('describe_pending_maintenance_actions')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`DocDB.Client.describe_pending_maintenance_actions`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribePendingMaintenanceActions>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          ResourceIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type ResourceIdentifier: string
    :param ResourceIdentifier: 

      The ARN of a resource to return pending maintenance actions for.

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more resources to return pending maintenance actions for.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only pending maintenance actions for the clusters identified by these ARNs. 
       
      * ``db-instance-id`` - Accepts instance identifiers and instance ARNs. The results list includes only pending maintenance actions for the DB instances identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'PendingMaintenanceActions': [
                {
                    'ResourceIdentifier': 'string',
                    'PendingMaintenanceActionDetails': [
                        {
                            'Action': 'string',
                            'AutoAppliedAfterDate': datetime(2015, 1, 1),
                            'ForcedApplyDate': datetime(2015, 1, 1),
                            'OptInStatus': 'string',
                            'CurrentApplyDate': datetime(2015, 1, 1),
                            'Description': 'string'
                        },
                    ]
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 

        Represents the output of  DescribePendingMaintenanceActions .

        
        

        - **PendingMaintenanceActions** *(list) --* 

          The maintenance actions to be applied.

          
          

          - *(dict) --* 

            Represents the output of  ApplyPendingMaintenanceAction . 

            
            

            - **ResourceIdentifier** *(string) --* 

              The Amazon Resource Name (ARN) of the resource that has pending maintenance actions.

              
            

            - **PendingMaintenanceActionDetails** *(list) --* 

              A list that provides details about the pending maintenance actions for the resource.

              
              

              - *(dict) --* 

                Provides information about a pending maintenance action for a resource.

                
                

                - **Action** *(string) --* 

                  The type of pending maintenance action that is available for the resource.

                  
                

                - **AutoAppliedAfterDate** *(datetime) --* 

                  The date of the maintenance window when the action is applied. The maintenance action is applied to the resource during its first maintenance window after this date. If this date is specified, any ``next-maintenance`` opt-in requests are ignored.

                  
                

                - **ForcedApplyDate** *(datetime) --* 

                  The date when the maintenance action is automatically applied. The maintenance action is applied to the resource on this date regardless of the maintenance window for the resource. If this date is specified, any ``immediate`` opt-in requests are ignored.

                  
                

                - **OptInStatus** *(string) --* 

                  Indicates the type of opt-in request that has been received for the resource.

                  
                

                - **CurrentApplyDate** *(datetime) --* 

                  The effective date when the pending maintenance action is applied to the resource.

                  
                

                - **Description** *(string) --* 

                  A description providing more detail about the maintenance action.

                  
            
          
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

=======
Waiters
=======


The available waiters are:

* :py:class:`DocDB.Waiter.DBInstanceAvailable`


* :py:class:`DocDB.Waiter.DBInstanceDeleted`



.. py:class:: DocDB.Waiter.DBInstanceAvailable

  ::

    
    waiter = client.get_waiter('db_instance_available')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`DocDB.Client.describe_db_instances` every 30 seconds until a successful state is reached. An error is returned after 60 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          DBInstanceIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: 

      The user-provided instance identifier. If this parameter is specified, information from only the specific instance is returned. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBInstance`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more instances to describe.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only the information about the instances that are associated with the clusters that are identified by these ARNs. 
       
      * ``db-instance-id`` - Accepts instance identifiers and instance ARNs. The results list includes only the information about the instances that are identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 60

        

      
    
    
    :returns: None

.. py:class:: DocDB.Waiter.DBInstanceDeleted

  ::

    
    waiter = client.get_waiter('db_instance_deleted')

  
  

  .. py:method:: wait(**kwargs)

    Polls :py:meth:`DocDB.Client.describe_db_instances` every 30 seconds until a successful state is reached. An error is returned after 60 failed checks.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances>`_    


    **Request Syntax** 
    ::

      waiter.wait(
          DBInstanceIdentifier='string',
          Filters=[
              {
                  'Name': 'string',
                  'Values': [
                      'string',
                  ]
              },
          ],
          MaxRecords=123,
          Marker='string',
          WaiterConfig={
              'Delay': 123,
              'MaxAttempts': 123
          }
      )
    :type DBInstanceIdentifier: string
    :param DBInstanceIdentifier: 

      The user-provided instance identifier. If this parameter is specified, information from only the specific instance is returned. This parameter isn't case sensitive.

       

      Constraints:

       

       
      * If provided, must match the identifier of an existing ``DBInstance`` . 
       

      

    
    :type Filters: list
    :param Filters: 

      A filter that specifies one or more instances to describe.

       

      Supported filters:

       

       
      * ``db-cluster-id`` - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only the information about the instances that are associated with the clusters that are identified by these ARNs. 
       
      * ``db-instance-id`` - Accepts instance identifiers and instance ARNs. The results list includes only the information about the instances that are identified by these ARNs. 
       

      

    
      - *(dict) --* 

        A named set of filter values, used to return a more specific list of results. You can use a filter to match a set of resources by specific criteria, such as IDs.

         

        Wildcards are not supported in filters.

        

      
        - **Name** *(string) --* **[REQUIRED]** 

          The name of the filter. Filter names are case sensitive.

          

        
        - **Values** *(list) --* **[REQUIRED]** 

          One or more filter values. Filter values are case sensitive.

          

        
          - *(string) --* 

          
      
      
  
    :type MaxRecords: integer
    :param MaxRecords: 

      The maximum number of records to include in the response. If more records exist than the specified ``MaxRecords`` value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.

       

      Default: 100

       

      Constraints: Minimum 20, maximum 100.

      

    
    :type Marker: string
    :param Marker: 

      An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by ``MaxRecords`` .

      

    
    :type WaiterConfig: dict
    :param WaiterConfig: 

      A dictionary that provides parameters to control waiting behavior.

      

    
      - **Delay** *(integer) --* 

        The amount of time in seconds to wait between attempts. Default: 30

        

      
      - **MaxAttempts** *(integer) --* 

        The maximum number of attempts to be made. Default: 60

        

      
    
    
    :returns: None