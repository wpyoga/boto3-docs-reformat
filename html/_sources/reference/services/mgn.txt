

***
mgn
***

.. contents:: Table of Contents
   :depth: 2


======
Client
======



.. py:class:: mgn.Client

  A low-level client representing Application Migration Service (mgn)
  

  The Application Migration Service service.

  ::

    
    import boto3
    
    client = boto3.client('mgn')

  
  These are the available methods:
  
  *   :py:meth:`~mgn.Client.can_paginate`

  
  *   :py:meth:`~mgn.Client.change_server_life_cycle_state`

  
  *   :py:meth:`~mgn.Client.create_replication_configuration_template`

  
  *   :py:meth:`~mgn.Client.delete_job`

  
  *   :py:meth:`~mgn.Client.delete_replication_configuration_template`

  
  *   :py:meth:`~mgn.Client.delete_source_server`

  
  *   :py:meth:`~mgn.Client.describe_job_log_items`

  
  *   :py:meth:`~mgn.Client.describe_jobs`

  
  *   :py:meth:`~mgn.Client.describe_replication_configuration_templates`

  
  *   :py:meth:`~mgn.Client.describe_source_servers`

  
  *   :py:meth:`~mgn.Client.disconnect_from_service`

  
  *   :py:meth:`~mgn.Client.finalize_cutover`

  
  *   :py:meth:`~mgn.Client.generate_presigned_url`

  
  *   :py:meth:`~mgn.Client.get_launch_configuration`

  
  *   :py:meth:`~mgn.Client.get_paginator`

  
  *   :py:meth:`~mgn.Client.get_replication_configuration`

  
  *   :py:meth:`~mgn.Client.get_waiter`

  
  *   :py:meth:`~mgn.Client.initialize_service`

  
  *   :py:meth:`~mgn.Client.list_tags_for_resource`

  
  *   :py:meth:`~mgn.Client.mark_as_archived`

  
  *   :py:meth:`~mgn.Client.retry_data_replication`

  
  *   :py:meth:`~mgn.Client.start_cutover`

  
  *   :py:meth:`~mgn.Client.start_test`

  
  *   :py:meth:`~mgn.Client.tag_resource`

  
  *   :py:meth:`~mgn.Client.terminate_target_instances`

  
  *   :py:meth:`~mgn.Client.untag_resource`

  
  *   :py:meth:`~mgn.Client.update_launch_configuration`

  
  *   :py:meth:`~mgn.Client.update_replication_configuration`

  
  *   :py:meth:`~mgn.Client.update_replication_configuration_template`

  

  .. py:method:: can_paginate(operation_name)

        
    Check if an operation can be paginated.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :return: ``True`` if the operation can be paginated,
        ``False`` otherwise.


  .. py:method:: change_server_life_cycle_state(**kwargs)

    

    Allows the user to set the SourceServer.LifeCycle.state property for specific Source Server IDs to one of the following: READY_FOR_TEST or READY_FOR_CUTOVER. This command only works if the Source Server is already launchable (dataReplicationInfo.lagDuration is not null.)

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/ChangeServerLifeCycleState>`_    


    **Request Syntax** 
    ::

      response = client.change_server_life_cycle_state(
          lifeCycle={
              'state': 'READY_FOR_TEST'|'READY_FOR_CUTOVER'|'CUTOVER'
          },
          sourceServerID='string'
      )
    :type lifeCycle: dict
    :param lifeCycle: **[REQUIRED]** 

      The request to change the source server migration lifecycle state.

      

    
      - **state** *(string) --* **[REQUIRED]** 

        The request to change the source server migration lifecycle state.

        

      
    
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      The request to change the source server migration lifecycle state by source server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'dataReplicationInfo': {
                'dataReplicationError': {
                    'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                    'rawError': 'string'
                },
                'dataReplicationInitiation': {
                    'nextAttemptDateTime': 'string',
                    'startDateTime': 'string',
                    'steps': [
                        {
                            'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                            'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                        },
                    ]
                },
                'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                'etaDateTime': 'string',
                'lagDuration': 'string',
                'replicatedDisks': [
                    {
                        'backloggedStorageBytes': 123,
                        'deviceName': 'string',
                        'replicatedStorageBytes': 123,
                        'rescannedStorageBytes': 123,
                        'totalStorageBytes': 123
                    },
                ]
            },
            'isArchived': True|False,
            'launchedInstance': {
                'ec2InstanceID': 'string',
                'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                'jobID': 'string'
            },
            'lifeCycle': {
                'addedToServiceDateTime': 'string',
                'elapsedReplicationDuration': 'string',
                'firstByteDateTime': 'string',
                'lastCutover': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'lastSeenByServiceDateTime': 'string',
                'lastTest': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
            },
            'sourceProperties': {
                'cpus': [
                    {
                        'cores': 123,
                        'modelName': 'string'
                    },
                ],
                'disks': [
                    {
                        'bytes': 123,
                        'deviceName': 'string'
                    },
                ],
                'identificationHints': {
                    'awsInstanceID': 'string',
                    'fqdn': 'string',
                    'hostname': 'string',
                    'vmWareUuid': 'string'
                },
                'lastUpdatedDateTime': 'string',
                'networkInterfaces': [
                    {
                        'ips': [
                            'string',
                        ],
                        'isPrimary': True|False,
                        'macAddress': 'string'
                    },
                ],
                'os': {
                    'fullString': 'string'
                },
                'ramBytes': 123,
                'recommendedInstanceType': 'string'
            },
            'sourceServerID': 'string',
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Source server ARN.

          
        

        - **dataReplicationInfo** *(dict) --* 

          Source server data replication info.

          
          

          - **dataReplicationError** *(dict) --* 

            Error in obtaining data replication info.

            
            

            - **error** *(string) --* 

              Error in data replication.

              
            

            - **rawError** *(string) --* 

              Error in data replication.

              
        
          

          - **dataReplicationInitiation** *(dict) --* 

            Request to query whether data replication has been initiated.

            
            

            - **nextAttemptDateTime** *(string) --* 

              Request to query next data initiation date and time.

              
            

            - **startDateTime** *(string) --* 

              Request to query data initiation start date and time.

              
            

            - **steps** *(list) --* 

              Request to query data initiation steps.

              
              

              - *(dict) --* 

                Data replication intiation step.

                
                

                - **name** *(string) --* 

                  Request to query data initiation step name.

                  
                

                - **status** *(string) --* 

                  Request to query data initiation status.

                  
            
          
        
          

          - **dataReplicationState** *(string) --* 

            Request to query the data replication state.

            
          

          - **etaDateTime** *(string) --* 

            Request to query the time when data replication will be complete.

            
          

          - **lagDuration** *(string) --* 

            Request to query data replication lag durating.

            
          

          - **replicatedDisks** *(list) --* 

            Request to query disks replicated.

            
            

            - *(dict) --* 

              Request to query disks replicated.

              
              

              - **backloggedStorageBytes** *(integer) --* 

                Request to query data replication backlog size in bytes.

                
              

              - **deviceName** *(string) --* 

                Request to query device name.

                
              

              - **replicatedStorageBytes** *(integer) --* 

                Request to query amount of data replicated in bytes.

                
              

              - **rescannedStorageBytes** *(integer) --* 

                Request to query amount of data rescanned in bytes.

                
              

              - **totalStorageBytes** *(integer) --* 

                Request to query total amount of data replicated in bytes.

                
          
        
      
        

        - **isArchived** *(boolean) --* 

          Source server archived status.

          
        

        - **launchedInstance** *(dict) --* 

          Source server launched instance.

          
          

          - **ec2InstanceID** *(string) --* 

            Configure launced instance EC2 ID.

            
          

          - **firstBoot** *(string) --* 

            Configure launced instance first boot.

            
          

          - **jobID** *(string) --* 

            Configure launced instance Job ID.

            
      
        

        - **lifeCycle** *(dict) --* 

          Source server lifecycle state.

          
          

          - **addedToServiceDateTime** *(string) --* 

            Lifecycle added to service data and time.

            
          

          - **elapsedReplicationDuration** *(string) --* 

            Lifecycle elapsed time and duration.

            
          

          - **firstByteDateTime** *(string) --* 

            Lifecycle replication initiation date and time.

            
          

          - **lastCutover** *(dict) --* 

            Lifecycle last Cutover.

            
            

            - **finalized** *(dict) --* 

              Lifecycle Cutover finalized date and time.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Cutover finalized date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Cutover initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                

                
              

              - **jobID** *(string) --* 

                Lifecycle last Cutover initiated by Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Cutover reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Cutover reverted API call date time.

                
          
        
          

          - **lastSeenByServiceDateTime** *(string) --* 

            Lifecycle last seen date and time.

            
          

          - **lastTest** *(dict) --* 

            Lifecycle last Test.

            
            

            - **finalized** *(dict) --* 

              Lifecycle last Test finlized.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Test failed API call date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Test initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test initiated API call date and time.

                
              

              - **jobID** *(string) --* 

                Lifecycle last Test initiated Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Test reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test reverted API call date and time.

                
          
        
          

          - **state** *(string) --* 

            Lifecycle state.

            
      
        

        - **sourceProperties** *(dict) --* 

          Source server properties.

          
          

          - **cpus** *(list) --* 

            Source Server CPUs.

            
            

            - *(dict) --* 

              Source server CPU information.

              
              

              - **cores** *(integer) --* 

                The number of CPU cores on the source server.

                
              

              - **modelName** *(string) --* 

                The source server's CPU model name.

                
          
        
          

          - **disks** *(list) --* 

            Source Server disks.

            
            

            - *(dict) --* 

              The disk identifier.

              
              

              - **bytes** *(integer) --* 

                The amount of storage on the disk in bytes.

                
              

              - **deviceName** *(string) --* 

                The disk or device name.

                
          
        
          

          - **identificationHints** *(dict) --* 

            Source server identification hints.

            
            

            - **awsInstanceID** *(string) --* 

              AWS Instance ID identification hint.

              
            

            - **fqdn** *(string) --* 

              FQDN address identification hint.

              
            

            - **hostname** *(string) --* 

              Hostname identification hint.

              
            

            - **vmWareUuid** *(string) --* 

              vmWare UUID identification hint.

              
        
          

          - **lastUpdatedDateTime** *(string) --* 

            Source server last update date and time.

            
          

          - **networkInterfaces** *(list) --* 

            Source server network interfaces.

            
            

            - *(dict) --* 

              Network interface.

              
              

              - **ips** *(list) --* 

                Network interface IPs.

                
                

                - *(string) --* 
            
              

              - **isPrimary** *(boolean) --* 

                Network interface primary IP.

                
              

              - **macAddress** *(string) --* 

                Network interface Mac address.

                
          
        
          

          - **os** *(dict) --* 

            Source server OS.

            
            

            - **fullString** *(string) --* 

              OS full string.

              
        
          

          - **ramBytes** *(integer) --* 

            Source server RAM in bytes.

            
          

          - **recommendedInstanceType** *(string) --* 

            Source server recommended instance type.

            
      
        

        - **sourceServerID** *(string) --* 

          Source server ID.

          
        

        - **tags** *(dict) --* 

          Source server Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: create_replication_configuration_template(**kwargs)

    

    Creates a new ReplicationConfigurationTemplate.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/CreateReplicationConfigurationTemplate>`_    


    **Request Syntax** 
    ::

      response = client.create_replication_configuration_template(
          associateDefaultSecurityGroup=True|False,
          bandwidthThrottling=123,
          createPublicIP=True|False,
          dataPlaneRouting='PRIVATE_IP'|'PUBLIC_IP',
          defaultLargeStagingDiskType='GP2'|'ST1',
          ebsEncryption='DEFAULT'|'CUSTOM',
          ebsEncryptionKeyArn='string',
          replicationServerInstanceType='string',
          replicationServersSecurityGroupsIDs=[
              'string',
          ],
          stagingAreaSubnetId='string',
          stagingAreaTags={
              'string': 'string'
          },
          tags={
              'string': 'string'
          },
          useDedicatedReplicationServer=True|False
      )
    :type associateDefaultSecurityGroup: boolean
    :param associateDefaultSecurityGroup: **[REQUIRED]** 

      Request to associate the default Application Migration Service Security group with the Replication Settings template.

      

    
    :type bandwidthThrottling: integer
    :param bandwidthThrottling: **[REQUIRED]** 

      Request to configure bandwidth throttling during Replication Settings template creation.

      

    
    :type createPublicIP: boolean
    :param createPublicIP: **[REQUIRED]** 

      Request to create Public IP during Replication Settings template creation.

      

    
    :type dataPlaneRouting: string
    :param dataPlaneRouting: **[REQUIRED]** 

      Request to configure data plane routing during Replication Settings template creation.

      

    
    :type defaultLargeStagingDiskType: string
    :param defaultLargeStagingDiskType: **[REQUIRED]** 

      Request to configure the Staging Disk EBS volume type to "gp2" during Replication Settings template creation.

      

    
    :type ebsEncryption: string
    :param ebsEncryption: **[REQUIRED]** 

      Request to configure EBS enryption during Replication Settings template creation.

      

    
    :type ebsEncryptionKeyArn: string
    :param ebsEncryptionKeyArn: 

      Request to configure an EBS enryption key during Replication Settings template creation.

      

    
    :type replicationServerInstanceType: string
    :param replicationServerInstanceType: **[REQUIRED]** 

      Request to configure the Replication Server instance type during Replication Settings template creation.

      

    
    :type replicationServersSecurityGroupsIDs: list
    :param replicationServersSecurityGroupsIDs: **[REQUIRED]** 

      Request to configure the Replication Server Secuirity group ID during Replication Settings template creation.

      

    
      - *(string) --* 

      
  
    :type stagingAreaSubnetId: string
    :param stagingAreaSubnetId: **[REQUIRED]** 

      Request to configure the Staging Area subnet ID during Replication Settings template creation.

      

    
    :type stagingAreaTags: dict
    :param stagingAreaTags: **[REQUIRED]** 

      Request to configure Staiging Area tags during Replication Settings template creation.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type tags: dict
    :param tags: 

      Request to configure tags during Replication Settings template creation.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type useDedicatedReplicationServer: boolean
    :param useDedicatedReplicationServer: **[REQUIRED]** 

      Request to use Dedicated Replication Servers during Replication Settings template creation.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'associateDefaultSecurityGroup': True|False,
            'bandwidthThrottling': 123,
            'createPublicIP': True|False,
            'dataPlaneRouting': 'PRIVATE_IP'|'PUBLIC_IP',
            'defaultLargeStagingDiskType': 'GP2'|'ST1',
            'ebsEncryption': 'DEFAULT'|'CUSTOM',
            'ebsEncryptionKeyArn': 'string',
            'replicationConfigurationTemplateID': 'string',
            'replicationServerInstanceType': 'string',
            'replicationServersSecurityGroupsIDs': [
                'string',
            ],
            'stagingAreaSubnetId': 'string',
            'stagingAreaTags': {
                'string': 'string'
            },
            'tags': {
                'string': 'string'
            },
            'useDedicatedReplicationServer': True|False
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Replication Configuration template ARN.

          
        

        - **associateDefaultSecurityGroup** *(boolean) --* 

          Replication Configuration template associate default Application Migration Service Security group.

          
        

        - **bandwidthThrottling** *(integer) --* 

          Replication Configuration template bandwidth throtting.

          
        

        - **createPublicIP** *(boolean) --* 

          Replication Configuration template create Public IP.

          
        

        - **dataPlaneRouting** *(string) --* 

          Replication Configuration template data plane routing.

          
        

        - **defaultLargeStagingDiskType** *(string) --* 

          Replication Configuration template use dedault large Staging Disk type.

          
        

        - **ebsEncryption** *(string) --* 

          Replication Configuration template EBS encryption.

          
        

        - **ebsEncryptionKeyArn** *(string) --* 

          Replication Configuration template EBS encryption key ARN.

          
        

        - **replicationConfigurationTemplateID** *(string) --* 

          Replication Configuration template template ID.

          
        

        - **replicationServerInstanceType** *(string) --* 

          Replication Configuration template server instance type.

          
        

        - **replicationServersSecurityGroupsIDs** *(list) --* 

          Replication Configuration template server Security Groups IDs.

          
          

          - *(string) --* 
      
        

        - **stagingAreaSubnetId** *(string) --* 

          Replication Configuration template Staging Area subnet ID.

          
        

        - **stagingAreaTags** *(dict) --* 

          Replication Configuration template Staging Area Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **tags** *(dict) --* 

          Replication Configuration template Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **useDedicatedReplicationServer** *(boolean) --* 

          Replication Configuration template use Dedicated Replication Server.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    

  .. py:method:: delete_job(**kwargs)

    

    Deletes a single Job by ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DeleteJob>`_    


    **Request Syntax** 
    ::

      response = client.delete_job(
          jobID='string'
      )
    :type jobID: string
    :param jobID: **[REQUIRED]** 

      Request to delete Job from service by Job ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: delete_replication_configuration_template(**kwargs)

    

    Deletes a single Replication Configuration Template by ID

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DeleteReplicationConfigurationTemplate>`_    


    **Request Syntax** 
    ::

      response = client.delete_replication_configuration_template(
          replicationConfigurationTemplateID='string'
      )
    :type replicationConfigurationTemplateID: string
    :param replicationConfigurationTemplateID: **[REQUIRED]** 

      Request to delete Replication Configuration Template from service by Replication Configuration Template ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: delete_source_server(**kwargs)

    

    Deletes a single source server by ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DeleteSourceServer>`_    


    **Request Syntax** 
    ::

      response = client.delete_source_server(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Request to delete Source Server from service by Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: describe_job_log_items(**kwargs)

    

    Retrieves detailed Job log with paging.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeJobLogItems>`_    


    **Request Syntax** 
    ::

      response = client.describe_job_log_items(
          jobID='string',
          maxResults=123,
          nextToken='string'
      )
    :type jobID: string
    :param jobID: **[REQUIRED]** 

      Request to describe Job log job ID.

      

    
    :type maxResults: integer
    :param maxResults: 

      Request to describe Job log item maximum results.

      

    
    :type nextToken: string
    :param nextToken: 

      Request to describe Job log next token.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'event': 'JOB_START'|'SERVER_SKIPPED'|'CLEANUP_START'|'CLEANUP_END'|'CLEANUP_FAIL'|'SNAPSHOT_START'|'SNAPSHOT_END'|'SNAPSHOT_FAIL'|'USING_PREVIOUS_SNAPSHOT'|'CONVERSION_START'|'CONVERSION_END'|'CONVERSION_FAIL'|'LAUNCH_START'|'LAUNCH_FAILED'|'JOB_CANCEL'|'JOB_END',
                    'eventData': {
                        'conversionServerID': 'string',
                        'rawError': 'string',
                        'sourceServerID': 'string',
                        'targetInstanceID': 'string'
                    },
                    'logDateTime': 'string'
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to describe Job log response items.

          
          

          - *(dict) --* 

            Job log.

            
            

            - **event** *(string) --* 

              Job log event.

              
            

            - **eventData** *(dict) --* 

              Job event data

              
              

              - **conversionServerID** *(string) --* 

                Job Event conversion Server ID.

                
              

              - **rawError** *(string) --* 

                Job error.

                
              

              - **sourceServerID** *(string) --* 

                Job Event Source Server ID.

                
              

              - **targetInstanceID** *(string) --* 

                Job Event Target instance ID.

                
          
            

            - **logDateTime** *(string) --* 

              Job log event date and time.

              
        
      
        

        - **nextToken** *(string) --* 

          Request to describe Job log response next token.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    

  .. py:method:: describe_jobs(**kwargs)

    

    Returns a list of Jobs. Use the JobsID and fromDate and toData filters to limit which jobs are returned. The response is sorted by creationDataTime - latest date first. Jobs are normaly created by the StartTest, StartCutover, and TerminateTargetInstances APIs. Jobs are also created by DiagnosticLaunch and TerminateDiagnosticInstances, which are APIs available only to *Support* and only used in response to relevant support tickets.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeJobs>`_    


    **Request Syntax** 
    ::

      response = client.describe_jobs(
          filters={
              'fromDate': 'string',
              'jobIDs': [
                  'string',
              ],
              'toDate': 'string'
          },
          maxResults=123,
          nextToken='string'
      )
    :type filters: dict
    :param filters: **[REQUIRED]** 

      Request to describe Job log filters.

      

    
      - **fromDate** *(string) --* 

        Request to describe Job log filters by date.

        

      
      - **jobIDs** *(list) --* 

        Request to describe Job log filters by job ID.

        

      
        - *(string) --* 

        
    
      - **toDate** *(string) --* 

        Request to describe Job log by last date.

        

      
    
    :type maxResults: integer
    :param maxResults: 

      Request to describe Job log by max results.

      

    
    :type nextToken: string
    :param nextToken: 

      Request to describe Job logby next token.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'arn': 'string',
                    'creationDateTime': 'string',
                    'endDateTime': 'string',
                    'initiatedBy': 'START_TEST'|'START_CUTOVER'|'DIAGNOSTIC'|'TERMINATE',
                    'jobID': 'string',
                    'participatingServers': [
                        {
                            'launchStatus': 'PENDING'|'IN_PROGRESS'|'LAUNCHED'|'FAILED'|'TERMINATED',
                            'sourceServerID': 'string'
                        },
                    ],
                    'status': 'PENDING'|'STARTED'|'COMPLETED',
                    'tags': {
                        'string': 'string'
                    },
                    'type': 'LAUNCH'|'TERMINATE'
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to describe Job log items.

          
          

          - *(dict) --* 

            Job.

            
            

            - **arn** *(string) --* 

              the ARN of the specific Job.

              
            

            - **creationDateTime** *(string) --* 

              Job creation time.

              
            

            - **endDateTime** *(string) --* 

              Job end time.

              
            

            - **initiatedBy** *(string) --* 

              Job initiated by field.

              
            

            - **jobID** *(string) --* 

              Job ID.

              
            

            - **participatingServers** *(list) --* 

              Servers participating in a specific Job.

              
              

              - *(dict) --* 

                Server participating in Job.

                
                

                - **launchStatus** *(string) --* 

                  Participating server launch status.

                  
                

                - **sourceServerID** *(string) --* 

                  Participating server Source Server ID.

                  
            
          
            

            - **status** *(string) --* 

              Job status.

              
            

            - **tags** *(dict) --* 

              Tags associated with spcific Job.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **type** *(string) --* 

              Job type.

              
        
      
        

        - **nextToken** *(string) --* 

          Request to describe Job response by next token.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    

  .. py:method:: describe_replication_configuration_templates(**kwargs)

    

    Lists all ReplicationConfigurationTemplates, filtered by Source Server IDs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeReplicationConfigurationTemplates>`_    


    **Request Syntax** 
    ::

      response = client.describe_replication_configuration_templates(
          maxResults=123,
          nextToken='string',
          replicationConfigurationTemplateIDs=[
              'string',
          ]
      )
    :type maxResults: integer
    :param maxResults: 

      Request to describe Replication Configuration template by max results.

      

    
    :type nextToken: string
    :param nextToken: 

      Request to describe Replication Configuration template by next token.

      

    
    :type replicationConfigurationTemplateIDs: list
    :param replicationConfigurationTemplateIDs: **[REQUIRED]** 

      Request to describe Replication Configuration template by template IDs.

      

    
      - *(string) --* 

      
  
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'arn': 'string',
                    'associateDefaultSecurityGroup': True|False,
                    'bandwidthThrottling': 123,
                    'createPublicIP': True|False,
                    'dataPlaneRouting': 'PRIVATE_IP'|'PUBLIC_IP',
                    'defaultLargeStagingDiskType': 'GP2'|'ST1',
                    'ebsEncryption': 'DEFAULT'|'CUSTOM',
                    'ebsEncryptionKeyArn': 'string',
                    'replicationConfigurationTemplateID': 'string',
                    'replicationServerInstanceType': 'string',
                    'replicationServersSecurityGroupsIDs': [
                        'string',
                    ],
                    'stagingAreaSubnetId': 'string',
                    'stagingAreaTags': {
                        'string': 'string'
                    },
                    'tags': {
                        'string': 'string'
                    },
                    'useDedicatedReplicationServer': True|False
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to describe Replication Configuration template by items.

          
          

          - *(dict) --* 
            

            - **arn** *(string) --* 

              Replication Configuration template ARN.

              
            

            - **associateDefaultSecurityGroup** *(boolean) --* 

              Replication Configuration template associate default Application Migration Service Security group.

              
            

            - **bandwidthThrottling** *(integer) --* 

              Replication Configuration template bandwidth throtting.

              
            

            - **createPublicIP** *(boolean) --* 

              Replication Configuration template create Public IP.

              
            

            - **dataPlaneRouting** *(string) --* 

              Replication Configuration template data plane routing.

              
            

            - **defaultLargeStagingDiskType** *(string) --* 

              Replication Configuration template use dedault large Staging Disk type.

              
            

            - **ebsEncryption** *(string) --* 

              Replication Configuration template EBS encryption.

              
            

            - **ebsEncryptionKeyArn** *(string) --* 

              Replication Configuration template EBS encryption key ARN.

              
            

            - **replicationConfigurationTemplateID** *(string) --* 

              Replication Configuration template template ID.

              
            

            - **replicationServerInstanceType** *(string) --* 

              Replication Configuration template server instance type.

              
            

            - **replicationServersSecurityGroupsIDs** *(list) --* 

              Replication Configuration template server Security Groups IDs.

              
              

              - *(string) --* 
          
            

            - **stagingAreaSubnetId** *(string) --* 

              Replication Configuration template Staging Area subnet ID.

              
            

            - **stagingAreaTags** *(dict) --* 

              Replication Configuration template Staging Area Tags.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **tags** *(dict) --* 

              Replication Configuration template Tags.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **useDedicatedReplicationServer** *(boolean) --* 

              Replication Configuration template use Dedicated Replication Server.

              
        
      
        

        - **nextToken** *(string) --* 

          Request to describe Replication Configuration template by next token.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    

  .. py:method:: describe_source_servers(**kwargs)

    

    Retrieves all SourceServers or multiple SourceServers by ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeSourceServers>`_    


    **Request Syntax** 
    ::

      response = client.describe_source_servers(
          filters={
              'isArchived': True|False,
              'sourceServerIDs': [
                  'string',
              ]
          },
          maxResults=123,
          nextToken='string'
      )
    :type filters: dict
    :param filters: **[REQUIRED]** 

      Request to filter Source Servers list.

      

    
      - **isArchived** *(boolean) --* 

        Request to filter Source Servers list by archived.

        

      
      - **sourceServerIDs** *(list) --* 

        Request to filter Source Servers list by Source Server ID.

        

      
        - *(string) --* 

        
    
    
    :type maxResults: integer
    :param maxResults: 

      Request to filter Source Servers list by maximum results.

      

    
    :type nextToken: string
    :param nextToken: 

      Request to filter Source Servers list by next token.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'arn': 'string',
                    'dataReplicationInfo': {
                        'dataReplicationError': {
                            'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                            'rawError': 'string'
                        },
                        'dataReplicationInitiation': {
                            'nextAttemptDateTime': 'string',
                            'startDateTime': 'string',
                            'steps': [
                                {
                                    'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                                    'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                                },
                            ]
                        },
                        'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                        'etaDateTime': 'string',
                        'lagDuration': 'string',
                        'replicatedDisks': [
                            {
                                'backloggedStorageBytes': 123,
                                'deviceName': 'string',
                                'replicatedStorageBytes': 123,
                                'rescannedStorageBytes': 123,
                                'totalStorageBytes': 123
                            },
                        ]
                    },
                    'isArchived': True|False,
                    'launchedInstance': {
                        'ec2InstanceID': 'string',
                        'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                        'jobID': 'string'
                    },
                    'lifeCycle': {
                        'addedToServiceDateTime': 'string',
                        'elapsedReplicationDuration': 'string',
                        'firstByteDateTime': 'string',
                        'lastCutover': {
                            'finalized': {
                                'apiCallDateTime': 'string'
                            },
                            'initiated': {
                                'apiCallDateTime': 'string',
                                'jobID': 'string'
                            },
                            'reverted': {
                                'apiCallDateTime': 'string'
                            }
                        },
                        'lastSeenByServiceDateTime': 'string',
                        'lastTest': {
                            'finalized': {
                                'apiCallDateTime': 'string'
                            },
                            'initiated': {
                                'apiCallDateTime': 'string',
                                'jobID': 'string'
                            },
                            'reverted': {
                                'apiCallDateTime': 'string'
                            }
                        },
                        'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
                    },
                    'sourceProperties': {
                        'cpus': [
                            {
                                'cores': 123,
                                'modelName': 'string'
                            },
                        ],
                        'disks': [
                            {
                                'bytes': 123,
                                'deviceName': 'string'
                            },
                        ],
                        'identificationHints': {
                            'awsInstanceID': 'string',
                            'fqdn': 'string',
                            'hostname': 'string',
                            'vmWareUuid': 'string'
                        },
                        'lastUpdatedDateTime': 'string',
                        'networkInterfaces': [
                            {
                                'ips': [
                                    'string',
                                ],
                                'isPrimary': True|False,
                                'macAddress': 'string'
                            },
                        ],
                        'os': {
                            'fullString': 'string'
                        },
                        'ramBytes': 123,
                        'recommendedInstanceType': 'string'
                    },
                    'sourceServerID': 'string',
                    'tags': {
                        'string': 'string'
                    }
                },
            ],
            'nextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to filter Source Servers list by item.

          
          

          - *(dict) --* 
            

            - **arn** *(string) --* 

              Source server ARN.

              
            

            - **dataReplicationInfo** *(dict) --* 

              Source server data replication info.

              
              

              - **dataReplicationError** *(dict) --* 

                Error in obtaining data replication info.

                
                

                - **error** *(string) --* 

                  Error in data replication.

                  
                

                - **rawError** *(string) --* 

                  Error in data replication.

                  
            
              

              - **dataReplicationInitiation** *(dict) --* 

                Request to query whether data replication has been initiated.

                
                

                - **nextAttemptDateTime** *(string) --* 

                  Request to query next data initiation date and time.

                  
                

                - **startDateTime** *(string) --* 

                  Request to query data initiation start date and time.

                  
                

                - **steps** *(list) --* 

                  Request to query data initiation steps.

                  
                  

                  - *(dict) --* 

                    Data replication intiation step.

                    
                    

                    - **name** *(string) --* 

                      Request to query data initiation step name.

                      
                    

                    - **status** *(string) --* 

                      Request to query data initiation status.

                      
                
              
            
              

              - **dataReplicationState** *(string) --* 

                Request to query the data replication state.

                
              

              - **etaDateTime** *(string) --* 

                Request to query the time when data replication will be complete.

                
              

              - **lagDuration** *(string) --* 

                Request to query data replication lag durating.

                
              

              - **replicatedDisks** *(list) --* 

                Request to query disks replicated.

                
                

                - *(dict) --* 

                  Request to query disks replicated.

                  
                  

                  - **backloggedStorageBytes** *(integer) --* 

                    Request to query data replication backlog size in bytes.

                    
                  

                  - **deviceName** *(string) --* 

                    Request to query device name.

                    
                  

                  - **replicatedStorageBytes** *(integer) --* 

                    Request to query amount of data replicated in bytes.

                    
                  

                  - **rescannedStorageBytes** *(integer) --* 

                    Request to query amount of data rescanned in bytes.

                    
                  

                  - **totalStorageBytes** *(integer) --* 

                    Request to query total amount of data replicated in bytes.

                    
              
            
          
            

            - **isArchived** *(boolean) --* 

              Source server archived status.

              
            

            - **launchedInstance** *(dict) --* 

              Source server launched instance.

              
              

              - **ec2InstanceID** *(string) --* 

                Configure launced instance EC2 ID.

                
              

              - **firstBoot** *(string) --* 

                Configure launced instance first boot.

                
              

              - **jobID** *(string) --* 

                Configure launced instance Job ID.

                
          
            

            - **lifeCycle** *(dict) --* 

              Source server lifecycle state.

              
              

              - **addedToServiceDateTime** *(string) --* 

                Lifecycle added to service data and time.

                
              

              - **elapsedReplicationDuration** *(string) --* 

                Lifecycle elapsed time and duration.

                
              

              - **firstByteDateTime** *(string) --* 

                Lifecycle replication initiation date and time.

                
              

              - **lastCutover** *(dict) --* 

                Lifecycle last Cutover.

                
                

                - **finalized** *(dict) --* 

                  Lifecycle Cutover finalized date and time.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle Cutover finalized date and time.

                    
              
                

                - **initiated** *(dict) --* 

                  Lifecycle last Cutover initiated.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    

                    
                  

                  - **jobID** *(string) --* 

                    Lifecycle last Cutover initiated by Job ID.

                    
              
                

                - **reverted** *(dict) --* 

                  Lifecycle last Cutover reverted.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle last Cutover reverted API call date time.

                    
              
            
              

              - **lastSeenByServiceDateTime** *(string) --* 

                Lifecycle last seen date and time.

                
              

              - **lastTest** *(dict) --* 

                Lifecycle last Test.

                
                

                - **finalized** *(dict) --* 

                  Lifecycle last Test finlized.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle Test failed API call date and time.

                    
              
                

                - **initiated** *(dict) --* 

                  Lifecycle last Test initiated.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle last Test initiated API call date and time.

                    
                  

                  - **jobID** *(string) --* 

                    Lifecycle last Test initiated Job ID.

                    
              
                

                - **reverted** *(dict) --* 

                  Lifecycle last Test reverted.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle last Test reverted API call date and time.

                    
              
            
              

              - **state** *(string) --* 

                Lifecycle state.

                
          
            

            - **sourceProperties** *(dict) --* 

              Source server properties.

              
              

              - **cpus** *(list) --* 

                Source Server CPUs.

                
                

                - *(dict) --* 

                  Source server CPU information.

                  
                  

                  - **cores** *(integer) --* 

                    The number of CPU cores on the source server.

                    
                  

                  - **modelName** *(string) --* 

                    The source server's CPU model name.

                    
              
            
              

              - **disks** *(list) --* 

                Source Server disks.

                
                

                - *(dict) --* 

                  The disk identifier.

                  
                  

                  - **bytes** *(integer) --* 

                    The amount of storage on the disk in bytes.

                    
                  

                  - **deviceName** *(string) --* 

                    The disk or device name.

                    
              
            
              

              - **identificationHints** *(dict) --* 

                Source server identification hints.

                
                

                - **awsInstanceID** *(string) --* 

                  AWS Instance ID identification hint.

                  
                

                - **fqdn** *(string) --* 

                  FQDN address identification hint.

                  
                

                - **hostname** *(string) --* 

                  Hostname identification hint.

                  
                

                - **vmWareUuid** *(string) --* 

                  vmWare UUID identification hint.

                  
            
              

              - **lastUpdatedDateTime** *(string) --* 

                Source server last update date and time.

                
              

              - **networkInterfaces** *(list) --* 

                Source server network interfaces.

                
                

                - *(dict) --* 

                  Network interface.

                  
                  

                  - **ips** *(list) --* 

                    Network interface IPs.

                    
                    

                    - *(string) --* 
                
                  

                  - **isPrimary** *(boolean) --* 

                    Network interface primary IP.

                    
                  

                  - **macAddress** *(string) --* 

                    Network interface Mac address.

                    
              
            
              

              - **os** *(dict) --* 

                Source server OS.

                
                

                - **fullString** *(string) --* 

                  OS full string.

                  
            
              

              - **ramBytes** *(integer) --* 

                Source server RAM in bytes.

                
              

              - **recommendedInstanceType** *(string) --* 

                Source server recommended instance type.

                
          
            

            - **sourceServerID** *(string) --* 

              Source server ID.

              
            

            - **tags** *(dict) --* 

              Source server Tags.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
        
      
        

        - **nextToken** *(string) --* 

          Request to filter Source Servers next token.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    

  .. py:method:: disconnect_from_service(**kwargs)

    

    Disconnects specific Source Servers from Application Migration Service. Data replication is stopped immediately. All AWS resources created by Application Migration Service for enabling the replication of these source servers will be terminated / deleted within 90 minutes. Launched Test or Cutover instances will NOT be terminated. If the agent on the source server has not been prevented from communciating with the Application Migration Service service, then it will receive a command to uninstall itself (within approximately 10 minutes). The following properties of the SourceServer will be changed immediately: dataReplicationInfo.dataReplicationState will be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDurationwill be nullified.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DisconnectFromService>`_    


    **Request Syntax** 
    ::

      response = client.disconnect_from_service(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Request to disconnect Source Server from service by Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'dataReplicationInfo': {
                'dataReplicationError': {
                    'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                    'rawError': 'string'
                },
                'dataReplicationInitiation': {
                    'nextAttemptDateTime': 'string',
                    'startDateTime': 'string',
                    'steps': [
                        {
                            'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                            'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                        },
                    ]
                },
                'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                'etaDateTime': 'string',
                'lagDuration': 'string',
                'replicatedDisks': [
                    {
                        'backloggedStorageBytes': 123,
                        'deviceName': 'string',
                        'replicatedStorageBytes': 123,
                        'rescannedStorageBytes': 123,
                        'totalStorageBytes': 123
                    },
                ]
            },
            'isArchived': True|False,
            'launchedInstance': {
                'ec2InstanceID': 'string',
                'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                'jobID': 'string'
            },
            'lifeCycle': {
                'addedToServiceDateTime': 'string',
                'elapsedReplicationDuration': 'string',
                'firstByteDateTime': 'string',
                'lastCutover': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'lastSeenByServiceDateTime': 'string',
                'lastTest': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
            },
            'sourceProperties': {
                'cpus': [
                    {
                        'cores': 123,
                        'modelName': 'string'
                    },
                ],
                'disks': [
                    {
                        'bytes': 123,
                        'deviceName': 'string'
                    },
                ],
                'identificationHints': {
                    'awsInstanceID': 'string',
                    'fqdn': 'string',
                    'hostname': 'string',
                    'vmWareUuid': 'string'
                },
                'lastUpdatedDateTime': 'string',
                'networkInterfaces': [
                    {
                        'ips': [
                            'string',
                        ],
                        'isPrimary': True|False,
                        'macAddress': 'string'
                    },
                ],
                'os': {
                    'fullString': 'string'
                },
                'ramBytes': 123,
                'recommendedInstanceType': 'string'
            },
            'sourceServerID': 'string',
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Source server ARN.

          
        

        - **dataReplicationInfo** *(dict) --* 

          Source server data replication info.

          
          

          - **dataReplicationError** *(dict) --* 

            Error in obtaining data replication info.

            
            

            - **error** *(string) --* 

              Error in data replication.

              
            

            - **rawError** *(string) --* 

              Error in data replication.

              
        
          

          - **dataReplicationInitiation** *(dict) --* 

            Request to query whether data replication has been initiated.

            
            

            - **nextAttemptDateTime** *(string) --* 

              Request to query next data initiation date and time.

              
            

            - **startDateTime** *(string) --* 

              Request to query data initiation start date and time.

              
            

            - **steps** *(list) --* 

              Request to query data initiation steps.

              
              

              - *(dict) --* 

                Data replication intiation step.

                
                

                - **name** *(string) --* 

                  Request to query data initiation step name.

                  
                

                - **status** *(string) --* 

                  Request to query data initiation status.

                  
            
          
        
          

          - **dataReplicationState** *(string) --* 

            Request to query the data replication state.

            
          

          - **etaDateTime** *(string) --* 

            Request to query the time when data replication will be complete.

            
          

          - **lagDuration** *(string) --* 

            Request to query data replication lag durating.

            
          

          - **replicatedDisks** *(list) --* 

            Request to query disks replicated.

            
            

            - *(dict) --* 

              Request to query disks replicated.

              
              

              - **backloggedStorageBytes** *(integer) --* 

                Request to query data replication backlog size in bytes.

                
              

              - **deviceName** *(string) --* 

                Request to query device name.

                
              

              - **replicatedStorageBytes** *(integer) --* 

                Request to query amount of data replicated in bytes.

                
              

              - **rescannedStorageBytes** *(integer) --* 

                Request to query amount of data rescanned in bytes.

                
              

              - **totalStorageBytes** *(integer) --* 

                Request to query total amount of data replicated in bytes.

                
          
        
      
        

        - **isArchived** *(boolean) --* 

          Source server archived status.

          
        

        - **launchedInstance** *(dict) --* 

          Source server launched instance.

          
          

          - **ec2InstanceID** *(string) --* 

            Configure launced instance EC2 ID.

            
          

          - **firstBoot** *(string) --* 

            Configure launced instance first boot.

            
          

          - **jobID** *(string) --* 

            Configure launced instance Job ID.

            
      
        

        - **lifeCycle** *(dict) --* 

          Source server lifecycle state.

          
          

          - **addedToServiceDateTime** *(string) --* 

            Lifecycle added to service data and time.

            
          

          - **elapsedReplicationDuration** *(string) --* 

            Lifecycle elapsed time and duration.

            
          

          - **firstByteDateTime** *(string) --* 

            Lifecycle replication initiation date and time.

            
          

          - **lastCutover** *(dict) --* 

            Lifecycle last Cutover.

            
            

            - **finalized** *(dict) --* 

              Lifecycle Cutover finalized date and time.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Cutover finalized date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Cutover initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                

                
              

              - **jobID** *(string) --* 

                Lifecycle last Cutover initiated by Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Cutover reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Cutover reverted API call date time.

                
          
        
          

          - **lastSeenByServiceDateTime** *(string) --* 

            Lifecycle last seen date and time.

            
          

          - **lastTest** *(dict) --* 

            Lifecycle last Test.

            
            

            - **finalized** *(dict) --* 

              Lifecycle last Test finlized.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Test failed API call date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Test initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test initiated API call date and time.

                
              

              - **jobID** *(string) --* 

                Lifecycle last Test initiated Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Test reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test reverted API call date and time.

                
          
        
          

          - **state** *(string) --* 

            Lifecycle state.

            
      
        

        - **sourceProperties** *(dict) --* 

          Source server properties.

          
          

          - **cpus** *(list) --* 

            Source Server CPUs.

            
            

            - *(dict) --* 

              Source server CPU information.

              
              

              - **cores** *(integer) --* 

                The number of CPU cores on the source server.

                
              

              - **modelName** *(string) --* 

                The source server's CPU model name.

                
          
        
          

          - **disks** *(list) --* 

            Source Server disks.

            
            

            - *(dict) --* 

              The disk identifier.

              
              

              - **bytes** *(integer) --* 

                The amount of storage on the disk in bytes.

                
              

              - **deviceName** *(string) --* 

                The disk or device name.

                
          
        
          

          - **identificationHints** *(dict) --* 

            Source server identification hints.

            
            

            - **awsInstanceID** *(string) --* 

              AWS Instance ID identification hint.

              
            

            - **fqdn** *(string) --* 

              FQDN address identification hint.

              
            

            - **hostname** *(string) --* 

              Hostname identification hint.

              
            

            - **vmWareUuid** *(string) --* 

              vmWare UUID identification hint.

              
        
          

          - **lastUpdatedDateTime** *(string) --* 

            Source server last update date and time.

            
          

          - **networkInterfaces** *(list) --* 

            Source server network interfaces.

            
            

            - *(dict) --* 

              Network interface.

              
              

              - **ips** *(list) --* 

                Network interface IPs.

                
                

                - *(string) --* 
            
              

              - **isPrimary** *(boolean) --* 

                Network interface primary IP.

                
              

              - **macAddress** *(string) --* 

                Network interface Mac address.

                
          
        
          

          - **os** *(dict) --* 

            Source server OS.

            
            

            - **fullString** *(string) --* 

              OS full string.

              
        
          

          - **ramBytes** *(integer) --* 

            Source server RAM in bytes.

            
          

          - **recommendedInstanceType** *(string) --* 

            Source server recommended instance type.

            
      
        

        - **sourceServerID** *(string) --* 

          Source server ID.

          
        

        - **tags** *(dict) --* 

          Source server Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: finalize_cutover(**kwargs)

    

    Finalizes the cutover immediately for specific Source Servers. All AWS resources created by Application Migration Service for enabling the replication of these source servers will be terminated / deleted within 90 minutes. Launched Test or Cutover instances will NOT be terminated. The AWS Replication Agent will receive a command to uninstall itself (within 10 minutes). The following properties of the SourceServer will be changed immediately: dataReplicationInfo.dataReplicationState will be to DISCONNECTED; The SourceServer.lifeCycle.state will be changed to CUTOVER; The totalStorageBytes property fo each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDurationwill be nullified.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/FinalizeCutover>`_    


    **Request Syntax** 
    ::

      response = client.finalize_cutover(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Request to finalize Cutover by Soure Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'dataReplicationInfo': {
                'dataReplicationError': {
                    'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                    'rawError': 'string'
                },
                'dataReplicationInitiation': {
                    'nextAttemptDateTime': 'string',
                    'startDateTime': 'string',
                    'steps': [
                        {
                            'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                            'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                        },
                    ]
                },
                'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                'etaDateTime': 'string',
                'lagDuration': 'string',
                'replicatedDisks': [
                    {
                        'backloggedStorageBytes': 123,
                        'deviceName': 'string',
                        'replicatedStorageBytes': 123,
                        'rescannedStorageBytes': 123,
                        'totalStorageBytes': 123
                    },
                ]
            },
            'isArchived': True|False,
            'launchedInstance': {
                'ec2InstanceID': 'string',
                'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                'jobID': 'string'
            },
            'lifeCycle': {
                'addedToServiceDateTime': 'string',
                'elapsedReplicationDuration': 'string',
                'firstByteDateTime': 'string',
                'lastCutover': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'lastSeenByServiceDateTime': 'string',
                'lastTest': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
            },
            'sourceProperties': {
                'cpus': [
                    {
                        'cores': 123,
                        'modelName': 'string'
                    },
                ],
                'disks': [
                    {
                        'bytes': 123,
                        'deviceName': 'string'
                    },
                ],
                'identificationHints': {
                    'awsInstanceID': 'string',
                    'fqdn': 'string',
                    'hostname': 'string',
                    'vmWareUuid': 'string'
                },
                'lastUpdatedDateTime': 'string',
                'networkInterfaces': [
                    {
                        'ips': [
                            'string',
                        ],
                        'isPrimary': True|False,
                        'macAddress': 'string'
                    },
                ],
                'os': {
                    'fullString': 'string'
                },
                'ramBytes': 123,
                'recommendedInstanceType': 'string'
            },
            'sourceServerID': 'string',
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Source server ARN.

          
        

        - **dataReplicationInfo** *(dict) --* 

          Source server data replication info.

          
          

          - **dataReplicationError** *(dict) --* 

            Error in obtaining data replication info.

            
            

            - **error** *(string) --* 

              Error in data replication.

              
            

            - **rawError** *(string) --* 

              Error in data replication.

              
        
          

          - **dataReplicationInitiation** *(dict) --* 

            Request to query whether data replication has been initiated.

            
            

            - **nextAttemptDateTime** *(string) --* 

              Request to query next data initiation date and time.

              
            

            - **startDateTime** *(string) --* 

              Request to query data initiation start date and time.

              
            

            - **steps** *(list) --* 

              Request to query data initiation steps.

              
              

              - *(dict) --* 

                Data replication intiation step.

                
                

                - **name** *(string) --* 

                  Request to query data initiation step name.

                  
                

                - **status** *(string) --* 

                  Request to query data initiation status.

                  
            
          
        
          

          - **dataReplicationState** *(string) --* 

            Request to query the data replication state.

            
          

          - **etaDateTime** *(string) --* 

            Request to query the time when data replication will be complete.

            
          

          - **lagDuration** *(string) --* 

            Request to query data replication lag durating.

            
          

          - **replicatedDisks** *(list) --* 

            Request to query disks replicated.

            
            

            - *(dict) --* 

              Request to query disks replicated.

              
              

              - **backloggedStorageBytes** *(integer) --* 

                Request to query data replication backlog size in bytes.

                
              

              - **deviceName** *(string) --* 

                Request to query device name.

                
              

              - **replicatedStorageBytes** *(integer) --* 

                Request to query amount of data replicated in bytes.

                
              

              - **rescannedStorageBytes** *(integer) --* 

                Request to query amount of data rescanned in bytes.

                
              

              - **totalStorageBytes** *(integer) --* 

                Request to query total amount of data replicated in bytes.

                
          
        
      
        

        - **isArchived** *(boolean) --* 

          Source server archived status.

          
        

        - **launchedInstance** *(dict) --* 

          Source server launched instance.

          
          

          - **ec2InstanceID** *(string) --* 

            Configure launced instance EC2 ID.

            
          

          - **firstBoot** *(string) --* 

            Configure launced instance first boot.

            
          

          - **jobID** *(string) --* 

            Configure launced instance Job ID.

            
      
        

        - **lifeCycle** *(dict) --* 

          Source server lifecycle state.

          
          

          - **addedToServiceDateTime** *(string) --* 

            Lifecycle added to service data and time.

            
          

          - **elapsedReplicationDuration** *(string) --* 

            Lifecycle elapsed time and duration.

            
          

          - **firstByteDateTime** *(string) --* 

            Lifecycle replication initiation date and time.

            
          

          - **lastCutover** *(dict) --* 

            Lifecycle last Cutover.

            
            

            - **finalized** *(dict) --* 

              Lifecycle Cutover finalized date and time.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Cutover finalized date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Cutover initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                

                
              

              - **jobID** *(string) --* 

                Lifecycle last Cutover initiated by Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Cutover reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Cutover reverted API call date time.

                
          
        
          

          - **lastSeenByServiceDateTime** *(string) --* 

            Lifecycle last seen date and time.

            
          

          - **lastTest** *(dict) --* 

            Lifecycle last Test.

            
            

            - **finalized** *(dict) --* 

              Lifecycle last Test finlized.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Test failed API call date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Test initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test initiated API call date and time.

                
              

              - **jobID** *(string) --* 

                Lifecycle last Test initiated Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Test reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test reverted API call date and time.

                
          
        
          

          - **state** *(string) --* 

            Lifecycle state.

            
      
        

        - **sourceProperties** *(dict) --* 

          Source server properties.

          
          

          - **cpus** *(list) --* 

            Source Server CPUs.

            
            

            - *(dict) --* 

              Source server CPU information.

              
              

              - **cores** *(integer) --* 

                The number of CPU cores on the source server.

                
              

              - **modelName** *(string) --* 

                The source server's CPU model name.

                
          
        
          

          - **disks** *(list) --* 

            Source Server disks.

            
            

            - *(dict) --* 

              The disk identifier.

              
              

              - **bytes** *(integer) --* 

                The amount of storage on the disk in bytes.

                
              

              - **deviceName** *(string) --* 

                The disk or device name.

                
          
        
          

          - **identificationHints** *(dict) --* 

            Source server identification hints.

            
            

            - **awsInstanceID** *(string) --* 

              AWS Instance ID identification hint.

              
            

            - **fqdn** *(string) --* 

              FQDN address identification hint.

              
            

            - **hostname** *(string) --* 

              Hostname identification hint.

              
            

            - **vmWareUuid** *(string) --* 

              vmWare UUID identification hint.

              
        
          

          - **lastUpdatedDateTime** *(string) --* 

            Source server last update date and time.

            
          

          - **networkInterfaces** *(list) --* 

            Source server network interfaces.

            
            

            - *(dict) --* 

              Network interface.

              
              

              - **ips** *(list) --* 

                Network interface IPs.

                
                

                - *(string) --* 
            
              

              - **isPrimary** *(boolean) --* 

                Network interface primary IP.

                
              

              - **macAddress** *(string) --* 

                Network interface Mac address.

                
          
        
          

          - **os** *(dict) --* 

            Source server OS.

            
            

            - **fullString** *(string) --* 

              OS full string.

              
        
          

          - **ramBytes** *(integer) --* 

            Source server RAM in bytes.

            
          

          - **recommendedInstanceType** *(string) --* 

            Source server recommended instance type.

            
      
        

        - **sourceServerID** *(string) --* 

          Source server ID.

          
        

        - **tags** *(dict) --* 

          Source server Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: generate_presigned_url(ClientMethod, Params=None, ExpiresIn=3600, HttpMethod=None)

        
    Generate a presigned url given a client, its method, and arguments
    
    :type ClientMethod: string
    :param ClientMethod: The client method to presign for
    
    :type Params: dict
    :param Params: The parameters normally passed to
        ``ClientMethod``.
    
    :type ExpiresIn: int
    :param ExpiresIn: The number of seconds the presigned url is valid
        for. By default it expires in an hour (3600 seconds)
    
    :type HttpMethod: string
    :param HttpMethod: The http method to use on the generated url. By
        default, the http method is whatever is used in the method's model.
    
    :returns: The presigned url


  .. py:method:: get_launch_configuration(**kwargs)

    

    Lists all LaunchConfigurations available, filtered by Source Server IDs.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/GetLaunchConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_launch_configuration(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Request to get Launch Configuration information by Source Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'copyPrivateIp': True|False,
            'copyTags': True|False,
            'ec2LaunchTemplateID': 'string',
            'launchDisposition': 'STOPPED'|'STARTED',
            'licensing': {
                'osByol': True|False
            },
            'name': 'string',
            'sourceServerID': 'string',
            'targetInstanceTypeRightSizingMethod': 'NONE'|'BASIC'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **copyPrivateIp** *(boolean) --* 

          Copy Private IP during Launch Configuration.

          
        

        - **copyTags** *(boolean) --* 

          Copy Tags during Launch Configuration.

          
        

        - **ec2LaunchTemplateID** *(string) --* 

          Configure EC2 lauch configuration template ID.

          
        

        - **launchDisposition** *(string) --* 

          Configure launch dispostion for launch configuration.

          
        

        - **licensing** *(dict) --* 

          Configure launch configuration OS licensing.

          
          

          - **osByol** *(boolean) --* 

            Configure BYOL OS licensing.

            
      
        

        - **name** *(string) --* 

          Configure launch configuration name.

          
        

        - **sourceServerID** *(string) --* 

          Configure launch configuration Source Server ID.

          
        

        - **targetInstanceTypeRightSizingMethod** *(string) --* 

          Configure launch configuration Target instance type right sizing method.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: get_paginator(operation_name)

        
    Create a paginator for an operation.
    
    :type operation_name: string
    :param operation_name: The operation name.  This is the same name
        as the method name on the client.  For example, if the
        method name is ``create_foo``, and you'd normally invoke the
        operation as ``client.create_foo(**kwargs)``, if the
        ``create_foo`` operation can be paginated, you can use the
        call ``client.get_paginator("create_foo")``.
    
    :raise OperationNotPageableError: Raised if the operation is not
        pageable.  You can use the ``client.can_paginate`` method to
        check if an operation is pageable.
    
    :rtype: L{botocore.paginate.Paginator}
    :return: A paginator object.


  .. py:method:: get_replication_configuration(**kwargs)

    

    Lists all ReplicationConfigurations, filtered by Source Server ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/GetReplicationConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.get_replication_configuration(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Request to get Replication Configuaration by Source Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'associateDefaultSecurityGroup': True|False,
            'bandwidthThrottling': 123,
            'createPublicIP': True|False,
            'dataPlaneRouting': 'PRIVATE_IP'|'PUBLIC_IP',
            'defaultLargeStagingDiskType': 'GP2'|'ST1',
            'ebsEncryption': 'DEFAULT'|'CUSTOM',
            'ebsEncryptionKeyArn': 'string',
            'name': 'string',
            'replicatedDisks': [
                {
                    'deviceName': 'string',
                    'iops': 123,
                    'isBootDisk': True|False,
                    'stagingDiskType': 'AUTO'|'GP2'|'IO1'|'SC1'|'ST1'|'STANDARD'
                },
            ],
            'replicationServerInstanceType': 'string',
            'replicationServersSecurityGroupsIDs': [
                'string',
            ],
            'sourceServerID': 'string',
            'stagingAreaSubnetId': 'string',
            'stagingAreaTags': {
                'string': 'string'
            },
            'useDedicatedReplicationServer': True|False
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **associateDefaultSecurityGroup** *(boolean) --* 

          Replication Configuration associate default Application Migration Service Security Group.

          
        

        - **bandwidthThrottling** *(integer) --* 

          Replication Configuration set bandwidth throttling.

          
        

        - **createPublicIP** *(boolean) --* 

          Replication Configuration create Public IP.

          
        

        - **dataPlaneRouting** *(string) --* 

          Replication Configuration data plane routing.

          
        

        - **defaultLargeStagingDiskType** *(string) --* 

          Replication Configuration use default large Staging Disks.

          
        

        - **ebsEncryption** *(string) --* 

          Replication Configuration EBS encryption.

          
        

        - **ebsEncryptionKeyArn** *(string) --* 

          Replication Configuration EBS encryption key ARN.

          
        

        - **name** *(string) --* 

          Replication Configuration name.

          
        

        - **replicatedDisks** *(list) --* 

          Replication Configuration replicated disks.

          
          

          - *(dict) --* 

            Replication Configuration replicated disk.

            
            

            - **deviceName** *(string) --* 

              Replication Configuration replicated disk device name.

              
            

            - **iops** *(integer) --* 

              Replication Configuration replicated disk IOPs.

              
            

            - **isBootDisk** *(boolean) --* 

              Replication Configuration replicated disk boot disk.

              
            

            - **stagingDiskType** *(string) --* 

              Replication Configuration replicated disk staging disk type.

              
        
      
        

        - **replicationServerInstanceType** *(string) --* 

          Replication Configuration Replication Server instance type.

          
        

        - **replicationServersSecurityGroupsIDs** *(list) --* 

          Replication Configuration Replication Server Security Group IDs.

          
          

          - *(string) --* 
      
        

        - **sourceServerID** *(string) --* 

          Replication Configuration Source Server ID.

          
        

        - **stagingAreaSubnetId** *(string) --* 

          Replication Configuration Staging Area subnet ID.

          
        

        - **stagingAreaTags** *(dict) --* 

          Replication Configuration Staging Area tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **useDedicatedReplicationServer** *(boolean) --* 

          Replication Configuration use Dedicated Replication Server.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    

  .. py:method:: get_waiter(waiter_name)

        
    Returns an object that can wait for some condition.
    
    :type waiter_name: str
    :param waiter_name: The name of the waiter to get. See the waiters
        section of the service docs for a list of available waiters.
    
    :returns: The specified waiter object.
    :rtype: botocore.waiter.Waiter


  .. py:method:: initialize_service()

    

    Initialize Application Migration Service.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/InitializeService>`_    


    **Request Syntax** 
    ::

      response = client.initialize_service()
      
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {}
      **Response Structure** 

      

      - *(dict) --* 
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    

  .. py:method:: list_tags_for_resource(**kwargs)

    

    List all tags for your Application Migration Service resources.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/ListTagsForResource>`_    


    **Request Syntax** 
    ::

      response = client.list_tags_for_resource(
          resourceArn='string'
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      List tags for resource request by ARN.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **tags** *(dict) --* 

          List tags for resource response.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ThrottlingException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`mgn.Client.exceptions.InternalServerException`

    

  .. py:method:: mark_as_archived(**kwargs)

    

    Archives specific Source Servers by setting the SourceServer.isArchived property to true for specified SourceServers by ID. This command only works for SourceServers with a lifecycle.state which equals DISCONNECTED or CUTOVER.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/MarkAsArchived>`_    


    **Request Syntax** 
    ::

      response = client.mark_as_archived(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Mark as archived by Source Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'dataReplicationInfo': {
                'dataReplicationError': {
                    'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                    'rawError': 'string'
                },
                'dataReplicationInitiation': {
                    'nextAttemptDateTime': 'string',
                    'startDateTime': 'string',
                    'steps': [
                        {
                            'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                            'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                        },
                    ]
                },
                'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                'etaDateTime': 'string',
                'lagDuration': 'string',
                'replicatedDisks': [
                    {
                        'backloggedStorageBytes': 123,
                        'deviceName': 'string',
                        'replicatedStorageBytes': 123,
                        'rescannedStorageBytes': 123,
                        'totalStorageBytes': 123
                    },
                ]
            },
            'isArchived': True|False,
            'launchedInstance': {
                'ec2InstanceID': 'string',
                'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                'jobID': 'string'
            },
            'lifeCycle': {
                'addedToServiceDateTime': 'string',
                'elapsedReplicationDuration': 'string',
                'firstByteDateTime': 'string',
                'lastCutover': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'lastSeenByServiceDateTime': 'string',
                'lastTest': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
            },
            'sourceProperties': {
                'cpus': [
                    {
                        'cores': 123,
                        'modelName': 'string'
                    },
                ],
                'disks': [
                    {
                        'bytes': 123,
                        'deviceName': 'string'
                    },
                ],
                'identificationHints': {
                    'awsInstanceID': 'string',
                    'fqdn': 'string',
                    'hostname': 'string',
                    'vmWareUuid': 'string'
                },
                'lastUpdatedDateTime': 'string',
                'networkInterfaces': [
                    {
                        'ips': [
                            'string',
                        ],
                        'isPrimary': True|False,
                        'macAddress': 'string'
                    },
                ],
                'os': {
                    'fullString': 'string'
                },
                'ramBytes': 123,
                'recommendedInstanceType': 'string'
            },
            'sourceServerID': 'string',
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Source server ARN.

          
        

        - **dataReplicationInfo** *(dict) --* 

          Source server data replication info.

          
          

          - **dataReplicationError** *(dict) --* 

            Error in obtaining data replication info.

            
            

            - **error** *(string) --* 

              Error in data replication.

              
            

            - **rawError** *(string) --* 

              Error in data replication.

              
        
          

          - **dataReplicationInitiation** *(dict) --* 

            Request to query whether data replication has been initiated.

            
            

            - **nextAttemptDateTime** *(string) --* 

              Request to query next data initiation date and time.

              
            

            - **startDateTime** *(string) --* 

              Request to query data initiation start date and time.

              
            

            - **steps** *(list) --* 

              Request to query data initiation steps.

              
              

              - *(dict) --* 

                Data replication intiation step.

                
                

                - **name** *(string) --* 

                  Request to query data initiation step name.

                  
                

                - **status** *(string) --* 

                  Request to query data initiation status.

                  
            
          
        
          

          - **dataReplicationState** *(string) --* 

            Request to query the data replication state.

            
          

          - **etaDateTime** *(string) --* 

            Request to query the time when data replication will be complete.

            
          

          - **lagDuration** *(string) --* 

            Request to query data replication lag durating.

            
          

          - **replicatedDisks** *(list) --* 

            Request to query disks replicated.

            
            

            - *(dict) --* 

              Request to query disks replicated.

              
              

              - **backloggedStorageBytes** *(integer) --* 

                Request to query data replication backlog size in bytes.

                
              

              - **deviceName** *(string) --* 

                Request to query device name.

                
              

              - **replicatedStorageBytes** *(integer) --* 

                Request to query amount of data replicated in bytes.

                
              

              - **rescannedStorageBytes** *(integer) --* 

                Request to query amount of data rescanned in bytes.

                
              

              - **totalStorageBytes** *(integer) --* 

                Request to query total amount of data replicated in bytes.

                
          
        
      
        

        - **isArchived** *(boolean) --* 

          Source server archived status.

          
        

        - **launchedInstance** *(dict) --* 

          Source server launched instance.

          
          

          - **ec2InstanceID** *(string) --* 

            Configure launced instance EC2 ID.

            
          

          - **firstBoot** *(string) --* 

            Configure launced instance first boot.

            
          

          - **jobID** *(string) --* 

            Configure launced instance Job ID.

            
      
        

        - **lifeCycle** *(dict) --* 

          Source server lifecycle state.

          
          

          - **addedToServiceDateTime** *(string) --* 

            Lifecycle added to service data and time.

            
          

          - **elapsedReplicationDuration** *(string) --* 

            Lifecycle elapsed time and duration.

            
          

          - **firstByteDateTime** *(string) --* 

            Lifecycle replication initiation date and time.

            
          

          - **lastCutover** *(dict) --* 

            Lifecycle last Cutover.

            
            

            - **finalized** *(dict) --* 

              Lifecycle Cutover finalized date and time.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Cutover finalized date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Cutover initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                

                
              

              - **jobID** *(string) --* 

                Lifecycle last Cutover initiated by Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Cutover reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Cutover reverted API call date time.

                
          
        
          

          - **lastSeenByServiceDateTime** *(string) --* 

            Lifecycle last seen date and time.

            
          

          - **lastTest** *(dict) --* 

            Lifecycle last Test.

            
            

            - **finalized** *(dict) --* 

              Lifecycle last Test finlized.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Test failed API call date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Test initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test initiated API call date and time.

                
              

              - **jobID** *(string) --* 

                Lifecycle last Test initiated Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Test reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test reverted API call date and time.

                
          
        
          

          - **state** *(string) --* 

            Lifecycle state.

            
      
        

        - **sourceProperties** *(dict) --* 

          Source server properties.

          
          

          - **cpus** *(list) --* 

            Source Server CPUs.

            
            

            - *(dict) --* 

              Source server CPU information.

              
              

              - **cores** *(integer) --* 

                The number of CPU cores on the source server.

                
              

              - **modelName** *(string) --* 

                The source server's CPU model name.

                
          
        
          

          - **disks** *(list) --* 

            Source Server disks.

            
            

            - *(dict) --* 

              The disk identifier.

              
              

              - **bytes** *(integer) --* 

                The amount of storage on the disk in bytes.

                
              

              - **deviceName** *(string) --* 

                The disk or device name.

                
          
        
          

          - **identificationHints** *(dict) --* 

            Source server identification hints.

            
            

            - **awsInstanceID** *(string) --* 

              AWS Instance ID identification hint.

              
            

            - **fqdn** *(string) --* 

              FQDN address identification hint.

              
            

            - **hostname** *(string) --* 

              Hostname identification hint.

              
            

            - **vmWareUuid** *(string) --* 

              vmWare UUID identification hint.

              
        
          

          - **lastUpdatedDateTime** *(string) --* 

            Source server last update date and time.

            
          

          - **networkInterfaces** *(list) --* 

            Source server network interfaces.

            
            

            - *(dict) --* 

              Network interface.

              
              

              - **ips** *(list) --* 

                Network interface IPs.

                
                

                - *(string) --* 
            
              

              - **isPrimary** *(boolean) --* 

                Network interface primary IP.

                
              

              - **macAddress** *(string) --* 

                Network interface Mac address.

                
          
        
          

          - **os** *(dict) --* 

            Source server OS.

            
            

            - **fullString** *(string) --* 

              OS full string.

              
        
          

          - **ramBytes** *(integer) --* 

            Source server RAM in bytes.

            
          

          - **recommendedInstanceType** *(string) --* 

            Source server recommended instance type.

            
      
        

        - **sourceServerID** *(string) --* 

          Source server ID.

          
        

        - **tags** *(dict) --* 

          Source server Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: retry_data_replication(**kwargs)

    

    Causes the data replication initiation sequence to begin immediately upon next Handshake for specified SourceServer IDs, regardless of when the previous initiation started. This command will not work if the SourceServer is not stalled or is in a DISCONNECTED or STOPPED state.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/RetryDataReplication>`_    


    **Request Syntax** 
    ::

      response = client.retry_data_replication(
          sourceServerID='string'
      )
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Retry data replication for Source Server ID.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'dataReplicationInfo': {
                'dataReplicationError': {
                    'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                    'rawError': 'string'
                },
                'dataReplicationInitiation': {
                    'nextAttemptDateTime': 'string',
                    'startDateTime': 'string',
                    'steps': [
                        {
                            'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                            'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                        },
                    ]
                },
                'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                'etaDateTime': 'string',
                'lagDuration': 'string',
                'replicatedDisks': [
                    {
                        'backloggedStorageBytes': 123,
                        'deviceName': 'string',
                        'replicatedStorageBytes': 123,
                        'rescannedStorageBytes': 123,
                        'totalStorageBytes': 123
                    },
                ]
            },
            'isArchived': True|False,
            'launchedInstance': {
                'ec2InstanceID': 'string',
                'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                'jobID': 'string'
            },
            'lifeCycle': {
                'addedToServiceDateTime': 'string',
                'elapsedReplicationDuration': 'string',
                'firstByteDateTime': 'string',
                'lastCutover': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'lastSeenByServiceDateTime': 'string',
                'lastTest': {
                    'finalized': {
                        'apiCallDateTime': 'string'
                    },
                    'initiated': {
                        'apiCallDateTime': 'string',
                        'jobID': 'string'
                    },
                    'reverted': {
                        'apiCallDateTime': 'string'
                    }
                },
                'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
            },
            'sourceProperties': {
                'cpus': [
                    {
                        'cores': 123,
                        'modelName': 'string'
                    },
                ],
                'disks': [
                    {
                        'bytes': 123,
                        'deviceName': 'string'
                    },
                ],
                'identificationHints': {
                    'awsInstanceID': 'string',
                    'fqdn': 'string',
                    'hostname': 'string',
                    'vmWareUuid': 'string'
                },
                'lastUpdatedDateTime': 'string',
                'networkInterfaces': [
                    {
                        'ips': [
                            'string',
                        ],
                        'isPrimary': True|False,
                        'macAddress': 'string'
                    },
                ],
                'os': {
                    'fullString': 'string'
                },
                'ramBytes': 123,
                'recommendedInstanceType': 'string'
            },
            'sourceServerID': 'string',
            'tags': {
                'string': 'string'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Source server ARN.

          
        

        - **dataReplicationInfo** *(dict) --* 

          Source server data replication info.

          
          

          - **dataReplicationError** *(dict) --* 

            Error in obtaining data replication info.

            
            

            - **error** *(string) --* 

              Error in data replication.

              
            

            - **rawError** *(string) --* 

              Error in data replication.

              
        
          

          - **dataReplicationInitiation** *(dict) --* 

            Request to query whether data replication has been initiated.

            
            

            - **nextAttemptDateTime** *(string) --* 

              Request to query next data initiation date and time.

              
            

            - **startDateTime** *(string) --* 

              Request to query data initiation start date and time.

              
            

            - **steps** *(list) --* 

              Request to query data initiation steps.

              
              

              - *(dict) --* 

                Data replication intiation step.

                
                

                - **name** *(string) --* 

                  Request to query data initiation step name.

                  
                

                - **status** *(string) --* 

                  Request to query data initiation status.

                  
            
          
        
          

          - **dataReplicationState** *(string) --* 

            Request to query the data replication state.

            
          

          - **etaDateTime** *(string) --* 

            Request to query the time when data replication will be complete.

            
          

          - **lagDuration** *(string) --* 

            Request to query data replication lag durating.

            
          

          - **replicatedDisks** *(list) --* 

            Request to query disks replicated.

            
            

            - *(dict) --* 

              Request to query disks replicated.

              
              

              - **backloggedStorageBytes** *(integer) --* 

                Request to query data replication backlog size in bytes.

                
              

              - **deviceName** *(string) --* 

                Request to query device name.

                
              

              - **replicatedStorageBytes** *(integer) --* 

                Request to query amount of data replicated in bytes.

                
              

              - **rescannedStorageBytes** *(integer) --* 

                Request to query amount of data rescanned in bytes.

                
              

              - **totalStorageBytes** *(integer) --* 

                Request to query total amount of data replicated in bytes.

                
          
        
      
        

        - **isArchived** *(boolean) --* 

          Source server archived status.

          
        

        - **launchedInstance** *(dict) --* 

          Source server launched instance.

          
          

          - **ec2InstanceID** *(string) --* 

            Configure launced instance EC2 ID.

            
          

          - **firstBoot** *(string) --* 

            Configure launced instance first boot.

            
          

          - **jobID** *(string) --* 

            Configure launced instance Job ID.

            
      
        

        - **lifeCycle** *(dict) --* 

          Source server lifecycle state.

          
          

          - **addedToServiceDateTime** *(string) --* 

            Lifecycle added to service data and time.

            
          

          - **elapsedReplicationDuration** *(string) --* 

            Lifecycle elapsed time and duration.

            
          

          - **firstByteDateTime** *(string) --* 

            Lifecycle replication initiation date and time.

            
          

          - **lastCutover** *(dict) --* 

            Lifecycle last Cutover.

            
            

            - **finalized** *(dict) --* 

              Lifecycle Cutover finalized date and time.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Cutover finalized date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Cutover initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                

                
              

              - **jobID** *(string) --* 

                Lifecycle last Cutover initiated by Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Cutover reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Cutover reverted API call date time.

                
          
        
          

          - **lastSeenByServiceDateTime** *(string) --* 

            Lifecycle last seen date and time.

            
          

          - **lastTest** *(dict) --* 

            Lifecycle last Test.

            
            

            - **finalized** *(dict) --* 

              Lifecycle last Test finlized.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle Test failed API call date and time.

                
          
            

            - **initiated** *(dict) --* 

              Lifecycle last Test initiated.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test initiated API call date and time.

                
              

              - **jobID** *(string) --* 

                Lifecycle last Test initiated Job ID.

                
          
            

            - **reverted** *(dict) --* 

              Lifecycle last Test reverted.

              
              

              - **apiCallDateTime** *(string) --* 

                Lifecycle last Test reverted API call date and time.

                
          
        
          

          - **state** *(string) --* 

            Lifecycle state.

            
      
        

        - **sourceProperties** *(dict) --* 

          Source server properties.

          
          

          - **cpus** *(list) --* 

            Source Server CPUs.

            
            

            - *(dict) --* 

              Source server CPU information.

              
              

              - **cores** *(integer) --* 

                The number of CPU cores on the source server.

                
              

              - **modelName** *(string) --* 

                The source server's CPU model name.

                
          
        
          

          - **disks** *(list) --* 

            Source Server disks.

            
            

            - *(dict) --* 

              The disk identifier.

              
              

              - **bytes** *(integer) --* 

                The amount of storage on the disk in bytes.

                
              

              - **deviceName** *(string) --* 

                The disk or device name.

                
          
        
          

          - **identificationHints** *(dict) --* 

            Source server identification hints.

            
            

            - **awsInstanceID** *(string) --* 

              AWS Instance ID identification hint.

              
            

            - **fqdn** *(string) --* 

              FQDN address identification hint.

              
            

            - **hostname** *(string) --* 

              Hostname identification hint.

              
            

            - **vmWareUuid** *(string) --* 

              vmWare UUID identification hint.

              
        
          

          - **lastUpdatedDateTime** *(string) --* 

            Source server last update date and time.

            
          

          - **networkInterfaces** *(list) --* 

            Source server network interfaces.

            
            

            - *(dict) --* 

              Network interface.

              
              

              - **ips** *(list) --* 

                Network interface IPs.

                
                

                - *(string) --* 
            
              

              - **isPrimary** *(boolean) --* 

                Network interface primary IP.

                
              

              - **macAddress** *(string) --* 

                Network interface Mac address.

                
          
        
          

          - **os** *(dict) --* 

            Source server OS.

            
            

            - **fullString** *(string) --* 

              OS full string.

              
        
          

          - **ramBytes** *(integer) --* 

            Source server RAM in bytes.

            
          

          - **recommendedInstanceType** *(string) --* 

            Source server recommended instance type.

            
      
        

        - **sourceServerID** *(string) --* 

          Source server ID.

          
        

        - **tags** *(dict) --* 

          Source server Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    

  .. py:method:: start_cutover(**kwargs)

    

    Launches a Cutover Instance for specific Source Servers. This command starts a LAUNCH job whose initiatedBy property is StartCutover and changes the SourceServer.lifeCycle.state property to CUTTING_OVER.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/StartCutover>`_    


    **Request Syntax** 
    ::

      response = client.start_cutover(
          sourceServerIDs=[
              'string',
          ],
          tags={
              'string': 'string'
          }
      )
    :type sourceServerIDs: list
    :param sourceServerIDs: **[REQUIRED]** 

      Start Cutover by Source Server IDs.

      

    
      - *(string) --* 

      
  
    :type tags: dict
    :param tags: 

      Start Cutover by Tags.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'job': {
                'arn': 'string',
                'creationDateTime': 'string',
                'endDateTime': 'string',
                'initiatedBy': 'START_TEST'|'START_CUTOVER'|'DIAGNOSTIC'|'TERMINATE',
                'jobID': 'string',
                'participatingServers': [
                    {
                        'launchStatus': 'PENDING'|'IN_PROGRESS'|'LAUNCHED'|'FAILED'|'TERMINATED',
                        'sourceServerID': 'string'
                    },
                ],
                'status': 'PENDING'|'STARTED'|'COMPLETED',
                'tags': {
                    'string': 'string'
                },
                'type': 'LAUNCH'|'TERMINATE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **job** *(dict) --* 

          Start Cutover Job response.

          
          

          - **arn** *(string) --* 

            the ARN of the specific Job.

            
          

          - **creationDateTime** *(string) --* 

            Job creation time.

            
          

          - **endDateTime** *(string) --* 

            Job end time.

            
          

          - **initiatedBy** *(string) --* 

            Job initiated by field.

            
          

          - **jobID** *(string) --* 

            Job ID.

            
          

          - **participatingServers** *(list) --* 

            Servers participating in a specific Job.

            
            

            - *(dict) --* 

              Server participating in Job.

              
              

              - **launchStatus** *(string) --* 

                Participating server launch status.

                
              

              - **sourceServerID** *(string) --* 

                Participating server Source Server ID.

                
          
        
          

          - **status** *(string) --* 

            Job status.

            
          

          - **tags** *(dict) --* 

            Tags associated with spcific Job.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **type** *(string) --* 

            Job type.

            
      
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: start_test(**kwargs)

    

    Lauches a Test Instance for specific Source Servers. This command starts a LAUNCH job whose initiatedBy property is StartTest and changes the SourceServer.lifeCycle.state property to TESTING.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/StartTest>`_    


    **Request Syntax** 
    ::

      response = client.start_test(
          sourceServerIDs=[
              'string',
          ],
          tags={
              'string': 'string'
          }
      )
    :type sourceServerIDs: list
    :param sourceServerIDs: **[REQUIRED]** 

      Start Test for Source Server IDs.

      

    
      - *(string) --* 

      
  
    :type tags: dict
    :param tags: 

      Start Test by Tags.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'job': {
                'arn': 'string',
                'creationDateTime': 'string',
                'endDateTime': 'string',
                'initiatedBy': 'START_TEST'|'START_CUTOVER'|'DIAGNOSTIC'|'TERMINATE',
                'jobID': 'string',
                'participatingServers': [
                    {
                        'launchStatus': 'PENDING'|'IN_PROGRESS'|'LAUNCHED'|'FAILED'|'TERMINATED',
                        'sourceServerID': 'string'
                    },
                ],
                'status': 'PENDING'|'STARTED'|'COMPLETED',
                'tags': {
                    'string': 'string'
                },
                'type': 'LAUNCH'|'TERMINATE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **job** *(dict) --* 

          Start Test Job response.

          
          

          - **arn** *(string) --* 

            the ARN of the specific Job.

            
          

          - **creationDateTime** *(string) --* 

            Job creation time.

            
          

          - **endDateTime** *(string) --* 

            Job end time.

            
          

          - **initiatedBy** *(string) --* 

            Job initiated by field.

            
          

          - **jobID** *(string) --* 

            Job ID.

            
          

          - **participatingServers** *(list) --* 

            Servers participating in a specific Job.

            
            

            - *(dict) --* 

              Server participating in Job.

              
              

              - **launchStatus** *(string) --* 

                Participating server launch status.

                
              

              - **sourceServerID** *(string) --* 

                Participating server Source Server ID.

                
          
        
          

          - **status** *(string) --* 

            Job status.

            
          

          - **tags** *(dict) --* 

            Tags associated with spcific Job.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **type** *(string) --* 

            Job type.

            
      
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: tag_resource(**kwargs)

    

    Adds or overwrites only the specified tags for the specified Application Migration Service resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/TagResource>`_    


    **Request Syntax** 
    ::

      response = client.tag_resource(
          resourceArn='string',
          tags={
              'string': 'string'
          }
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      Tag resource by ARN.

      

    
    :type tags: dict
    :param tags: **[REQUIRED]** 

      Tag resource by Tags.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ThrottlingException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`mgn.Client.exceptions.InternalServerException`

    

  .. py:method:: terminate_target_instances(**kwargs)

    

    Starts a job that terminates specific launched EC2 Test and Cutover instances. This command will not work for any Source Server with a lifecycle.state of TESTING, CUTTING_OVER, or CUTOVER.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/TerminateTargetInstances>`_    


    **Request Syntax** 
    ::

      response = client.terminate_target_instances(
          sourceServerIDs=[
              'string',
          ],
          tags={
              'string': 'string'
          }
      )
    :type sourceServerIDs: list
    :param sourceServerIDs: **[REQUIRED]** 

      Terminate Target instance by Source Server IDs.

      

    
      - *(string) --* 

      
  
    :type tags: dict
    :param tags: 

      Terminate Target instance by Tags.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'job': {
                'arn': 'string',
                'creationDateTime': 'string',
                'endDateTime': 'string',
                'initiatedBy': 'START_TEST'|'START_CUTOVER'|'DIAGNOSTIC'|'TERMINATE',
                'jobID': 'string',
                'participatingServers': [
                    {
                        'launchStatus': 'PENDING'|'IN_PROGRESS'|'LAUNCHED'|'FAILED'|'TERMINATED',
                        'sourceServerID': 'string'
                    },
                ],
                'status': 'PENDING'|'STARTED'|'COMPLETED',
                'tags': {
                    'string': 'string'
                },
                'type': 'LAUNCH'|'TERMINATE'
            }
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **job** *(dict) --* 

          Terminate Target instance Job response.

          
          

          - **arn** *(string) --* 

            the ARN of the specific Job.

            
          

          - **creationDateTime** *(string) --* 

            Job creation time.

            
          

          - **endDateTime** *(string) --* 

            Job end time.

            
          

          - **initiatedBy** *(string) --* 

            Job initiated by field.

            
          

          - **jobID** *(string) --* 

            Job ID.

            
          

          - **participatingServers** *(list) --* 

            Servers participating in a specific Job.

            
            

            - *(dict) --* 

              Server participating in Job.

              
              

              - **launchStatus** *(string) --* 

                Participating server launch status.

                
              

              - **sourceServerID** *(string) --* 

                Participating server Source Server ID.

                
          
        
          

          - **status** *(string) --* 

            Job status.

            
          

          - **tags** *(dict) --* 

            Tags associated with spcific Job.

            
            

            - *(string) --* 
              

              - *(string) --* 
        
      
          

          - **type** *(string) --* 

            Job type.

            
      
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: untag_resource(**kwargs)

    

    Deletes the specified set of tags from the specified set of Application Migration Service resources.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/UntagResource>`_    


    **Request Syntax** 
    ::

      response = client.untag_resource(
          resourceArn='string',
          tagKeys=[
              'string',
          ]
      )
    :type resourceArn: string
    :param resourceArn: **[REQUIRED]** 

      Untag resource by ARN.

      

    
    :type tagKeys: list
    :param tagKeys: **[REQUIRED]** 

      Untag resource by Keys.

      

    
      - *(string) --* 

      
  
    
    :returns: None
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ThrottlingException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`mgn.Client.exceptions.InternalServerException`

    

  .. py:method:: update_launch_configuration(**kwargs)

    

    Updates multiple LaunchConfigurations by Source Server ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/UpdateLaunchConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.update_launch_configuration(
          copyPrivateIp=True|False,
          copyTags=True|False,
          launchDisposition='STOPPED'|'STARTED',
          licensing={
              'osByol': True|False
          },
          name='string',
          sourceServerID='string',
          targetInstanceTypeRightSizingMethod='NONE'|'BASIC'
      )
    :type copyPrivateIp: boolean
    :param copyPrivateIp: 

      Update Launch configuration copy Private IP request.

      

    
    :type copyTags: boolean
    :param copyTags: 

      Update Launch configuration copy Tags request.

      

    
    :type launchDisposition: string
    :param launchDisposition: 

      Update Launch configuration launch disposition request.

      

    
    :type licensing: dict
    :param licensing: 

      Update Launch configuration licensing request.

      

    
      - **osByol** *(boolean) --* 

        Configure BYOL OS licensing.

        

      
    
    :type name: string
    :param name: 

      Update Launch configuration name request.

      

    
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Update Launch configuration by Source Server ID request.

      

    
    :type targetInstanceTypeRightSizingMethod: string
    :param targetInstanceTypeRightSizingMethod: 

      Update Launch configuration Target instance right sizing request.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'copyPrivateIp': True|False,
            'copyTags': True|False,
            'ec2LaunchTemplateID': 'string',
            'launchDisposition': 'STOPPED'|'STARTED',
            'licensing': {
                'osByol': True|False
            },
            'name': 'string',
            'sourceServerID': 'string',
            'targetInstanceTypeRightSizingMethod': 'NONE'|'BASIC'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **copyPrivateIp** *(boolean) --* 

          Copy Private IP during Launch Configuration.

          
        

        - **copyTags** *(boolean) --* 

          Copy Tags during Launch Configuration.

          
        

        - **ec2LaunchTemplateID** *(string) --* 

          Configure EC2 lauch configuration template ID.

          
        

        - **launchDisposition** *(string) --* 

          Configure launch dispostion for launch configuration.

          
        

        - **licensing** *(dict) --* 

          Configure launch configuration OS licensing.

          
          

          - **osByol** *(boolean) --* 

            Configure BYOL OS licensing.

            
      
        

        - **name** *(string) --* 

          Configure launch configuration name.

          
        

        - **sourceServerID** *(string) --* 

          Configure launch configuration Source Server ID.

          
        

        - **targetInstanceTypeRightSizingMethod** *(string) --* 

          Configure launch configuration Target instance type right sizing method.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: update_replication_configuration(**kwargs)

    

    Allows you to update multiple ReplicationConfigurations by Source Server ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/UpdateReplicationConfiguration>`_    


    **Request Syntax** 
    ::

      response = client.update_replication_configuration(
          associateDefaultSecurityGroup=True|False,
          bandwidthThrottling=123,
          createPublicIP=True|False,
          dataPlaneRouting='PRIVATE_IP'|'PUBLIC_IP',
          defaultLargeStagingDiskType='GP2'|'ST1',
          ebsEncryption='DEFAULT'|'CUSTOM',
          ebsEncryptionKeyArn='string',
          name='string',
          replicatedDisks=[
              {
                  'deviceName': 'string',
                  'iops': 123,
                  'isBootDisk': True|False,
                  'stagingDiskType': 'AUTO'|'GP2'|'IO1'|'SC1'|'ST1'|'STANDARD'
              },
          ],
          replicationServerInstanceType='string',
          replicationServersSecurityGroupsIDs=[
              'string',
          ],
          sourceServerID='string',
          stagingAreaSubnetId='string',
          stagingAreaTags={
              'string': 'string'
          },
          useDedicatedReplicationServer=True|False
      )
    :type associateDefaultSecurityGroup: boolean
    :param associateDefaultSecurityGroup: 

      Update replication configuration associate default Application Migration Service Security group request.

      

    
    :type bandwidthThrottling: integer
    :param bandwidthThrottling: 

      Update replication configuration bandwidth throttling request.

      

    
    :type createPublicIP: boolean
    :param createPublicIP: 

      Update replication configuration create Public IP request.

      

    
    :type dataPlaneRouting: string
    :param dataPlaneRouting: 

      Update replication configuration data plane routing request.

      

    
    :type defaultLargeStagingDiskType: string
    :param defaultLargeStagingDiskType: 

      Update replication configuration use default large Staging Disk type request.

      

    
    :type ebsEncryption: string
    :param ebsEncryption: 

      Update replication configuration EBS encryption request.

      

    
    :type ebsEncryptionKeyArn: string
    :param ebsEncryptionKeyArn: 

      Update replication configuration EBS encryption key ARN request.

      

    
    :type name: string
    :param name: 

      Update replication configuration name request.

      

    
    :type replicatedDisks: list
    :param replicatedDisks: 

      Update replication configuration replicated disks request.

      

    
      - *(dict) --* 

        Replication Configuration replicated disk.

        

      
        - **deviceName** *(string) --* 

          Replication Configuration replicated disk device name.

          

        
        - **iops** *(integer) --* 

          Replication Configuration replicated disk IOPs.

          

        
        - **isBootDisk** *(boolean) --* 

          Replication Configuration replicated disk boot disk.

          

        
        - **stagingDiskType** *(string) --* 

          Replication Configuration replicated disk staging disk type.

          

        
      
  
    :type replicationServerInstanceType: string
    :param replicationServerInstanceType: 

      Update replication configuration Replication Server instance type request.

      

    
    :type replicationServersSecurityGroupsIDs: list
    :param replicationServersSecurityGroupsIDs: 

      Update replication configuration Replication Server Security Groups IDs request.

      

    
      - *(string) --* 

      
  
    :type sourceServerID: string
    :param sourceServerID: **[REQUIRED]** 

      Update replication configuration Source Server ID request.

      

    
    :type stagingAreaSubnetId: string
    :param stagingAreaSubnetId: 

      Update replication configuration Staging Area subnet request.

      

    
    :type stagingAreaTags: dict
    :param stagingAreaTags: 

      Update replication configuration Staging Area Tags request.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type useDedicatedReplicationServer: boolean
    :param useDedicatedReplicationServer: 

      Update replication configuration use dedicated Replication Server request.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'associateDefaultSecurityGroup': True|False,
            'bandwidthThrottling': 123,
            'createPublicIP': True|False,
            'dataPlaneRouting': 'PRIVATE_IP'|'PUBLIC_IP',
            'defaultLargeStagingDiskType': 'GP2'|'ST1',
            'ebsEncryption': 'DEFAULT'|'CUSTOM',
            'ebsEncryptionKeyArn': 'string',
            'name': 'string',
            'replicatedDisks': [
                {
                    'deviceName': 'string',
                    'iops': 123,
                    'isBootDisk': True|False,
                    'stagingDiskType': 'AUTO'|'GP2'|'IO1'|'SC1'|'ST1'|'STANDARD'
                },
            ],
            'replicationServerInstanceType': 'string',
            'replicationServersSecurityGroupsIDs': [
                'string',
            ],
            'sourceServerID': 'string',
            'stagingAreaSubnetId': 'string',
            'stagingAreaTags': {
                'string': 'string'
            },
            'useDedicatedReplicationServer': True|False
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **associateDefaultSecurityGroup** *(boolean) --* 

          Replication Configuration associate default Application Migration Service Security Group.

          
        

        - **bandwidthThrottling** *(integer) --* 

          Replication Configuration set bandwidth throttling.

          
        

        - **createPublicIP** *(boolean) --* 

          Replication Configuration create Public IP.

          
        

        - **dataPlaneRouting** *(string) --* 

          Replication Configuration data plane routing.

          
        

        - **defaultLargeStagingDiskType** *(string) --* 

          Replication Configuration use default large Staging Disks.

          
        

        - **ebsEncryption** *(string) --* 

          Replication Configuration EBS encryption.

          
        

        - **ebsEncryptionKeyArn** *(string) --* 

          Replication Configuration EBS encryption key ARN.

          
        

        - **name** *(string) --* 

          Replication Configuration name.

          
        

        - **replicatedDisks** *(list) --* 

          Replication Configuration replicated disks.

          
          

          - *(dict) --* 

            Replication Configuration replicated disk.

            
            

            - **deviceName** *(string) --* 

              Replication Configuration replicated disk device name.

              
            

            - **iops** *(integer) --* 

              Replication Configuration replicated disk IOPs.

              
            

            - **isBootDisk** *(boolean) --* 

              Replication Configuration replicated disk boot disk.

              
            

            - **stagingDiskType** *(string) --* 

              Replication Configuration replicated disk staging disk type.

              
        
      
        

        - **replicationServerInstanceType** *(string) --* 

          Replication Configuration Replication Server instance type.

          
        

        - **replicationServersSecurityGroupsIDs** *(list) --* 

          Replication Configuration Replication Server Security Group IDs.

          
          

          - *(string) --* 
      
        

        - **sourceServerID** *(string) --* 

          Replication Configuration Source Server ID.

          
        

        - **stagingAreaSubnetId** *(string) --* 

          Replication Configuration Staging Area subnet ID.

          
        

        - **stagingAreaTags** *(dict) --* 

          Replication Configuration Staging Area tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **useDedicatedReplicationServer** *(boolean) --* 

          Replication Configuration use Dedicated Replication Server.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    
    *     :py:class:`mgn.Client.exceptions.ConflictException`

    

  .. py:method:: update_replication_configuration_template(**kwargs)

    

    Updates multiple ReplicationConfigurationTemplates by ID.

    

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/UpdateReplicationConfigurationTemplate>`_    


    **Request Syntax** 
    ::

      response = client.update_replication_configuration_template(
          arn='string',
          associateDefaultSecurityGroup=True|False,
          bandwidthThrottling=123,
          createPublicIP=True|False,
          dataPlaneRouting='PRIVATE_IP'|'PUBLIC_IP',
          defaultLargeStagingDiskType='GP2'|'ST1',
          ebsEncryption='DEFAULT'|'CUSTOM',
          ebsEncryptionKeyArn='string',
          replicationConfigurationTemplateID='string',
          replicationServerInstanceType='string',
          replicationServersSecurityGroupsIDs=[
              'string',
          ],
          stagingAreaSubnetId='string',
          stagingAreaTags={
              'string': 'string'
          },
          useDedicatedReplicationServer=True|False
      )
    :type arn: string
    :param arn: 

      Update replication configuration template ARN request.

      

    
    :type associateDefaultSecurityGroup: boolean
    :param associateDefaultSecurityGroup: 

      Update replication configuration template associate default Application Migration Service Security group request.

      

    
    :type bandwidthThrottling: integer
    :param bandwidthThrottling: 

      Update replication configuration template bandwidth throttling request.

      

    
    :type createPublicIP: boolean
    :param createPublicIP: 

      Update replication configuration template create Public IP request.

      

    
    :type dataPlaneRouting: string
    :param dataPlaneRouting: 

      Update replication configuration template data plane routing request.

      

    
    :type defaultLargeStagingDiskType: string
    :param defaultLargeStagingDiskType: 

      Update replication configuration template use default large Staging Disk type request.

      

    
    :type ebsEncryption: string
    :param ebsEncryption: 

      Update replication configuration template EBS encryption request.

      

    
    :type ebsEncryptionKeyArn: string
    :param ebsEncryptionKeyArn: 

      Update replication configuration template EBS encryption key ARN request.

      

    
    :type replicationConfigurationTemplateID: string
    :param replicationConfigurationTemplateID: **[REQUIRED]** 

      Update replication configuration template template ID request.

      

    
    :type replicationServerInstanceType: string
    :param replicationServerInstanceType: 

      Update replication configuration template Replication Server instance type request.

      

    
    :type replicationServersSecurityGroupsIDs: list
    :param replicationServersSecurityGroupsIDs: 

      Update replication configuration template Replication Server Security groups IDs request.

      

    
      - *(string) --* 

      
  
    :type stagingAreaSubnetId: string
    :param stagingAreaSubnetId: 

      Update replication configuration template Staging Area subnet ID request.

      

    
    :type stagingAreaTags: dict
    :param stagingAreaTags: 

      Update replication configuration template Staging Area Tags request.

      

    
      - *(string) --* 

      
        - *(string) --* 

        
  

    :type useDedicatedReplicationServer: boolean
    :param useDedicatedReplicationServer: 

      Update replication configuration template use dedicated Replication Server request.

      

    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'arn': 'string',
            'associateDefaultSecurityGroup': True|False,
            'bandwidthThrottling': 123,
            'createPublicIP': True|False,
            'dataPlaneRouting': 'PRIVATE_IP'|'PUBLIC_IP',
            'defaultLargeStagingDiskType': 'GP2'|'ST1',
            'ebsEncryption': 'DEFAULT'|'CUSTOM',
            'ebsEncryptionKeyArn': 'string',
            'replicationConfigurationTemplateID': 'string',
            'replicationServerInstanceType': 'string',
            'replicationServersSecurityGroupsIDs': [
                'string',
            ],
            'stagingAreaSubnetId': 'string',
            'stagingAreaTags': {
                'string': 'string'
            },
            'tags': {
                'string': 'string'
            },
            'useDedicatedReplicationServer': True|False
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **arn** *(string) --* 

          Replication Configuration template ARN.

          
        

        - **associateDefaultSecurityGroup** *(boolean) --* 

          Replication Configuration template associate default Application Migration Service Security group.

          
        

        - **bandwidthThrottling** *(integer) --* 

          Replication Configuration template bandwidth throtting.

          
        

        - **createPublicIP** *(boolean) --* 

          Replication Configuration template create Public IP.

          
        

        - **dataPlaneRouting** *(string) --* 

          Replication Configuration template data plane routing.

          
        

        - **defaultLargeStagingDiskType** *(string) --* 

          Replication Configuration template use dedault large Staging Disk type.

          
        

        - **ebsEncryption** *(string) --* 

          Replication Configuration template EBS encryption.

          
        

        - **ebsEncryptionKeyArn** *(string) --* 

          Replication Configuration template EBS encryption key ARN.

          
        

        - **replicationConfigurationTemplateID** *(string) --* 

          Replication Configuration template template ID.

          
        

        - **replicationServerInstanceType** *(string) --* 

          Replication Configuration template server instance type.

          
        

        - **replicationServersSecurityGroupsIDs** *(list) --* 

          Replication Configuration template server Security Groups IDs.

          
          

          - *(string) --* 
      
        

        - **stagingAreaSubnetId** *(string) --* 

          Replication Configuration template Staging Area subnet ID.

          
        

        - **stagingAreaTags** *(dict) --* 

          Replication Configuration template Staging Area Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **tags** *(dict) --* 

          Replication Configuration template Tags.

          
          

          - *(string) --* 
            

            - *(string) --* 
      
    
        

        - **useDedicatedReplicationServer** *(boolean) --* 

          Replication Configuration template use Dedicated Replication Server.

          
    
    **Exceptions** 
    
    *     :py:class:`mgn.Client.exceptions.UninitializedAccountException`

    
    *     :py:class:`mgn.Client.exceptions.ResourceNotFoundException`

    
    *     :py:class:`mgn.Client.exceptions.ValidationException`

    
    *     :py:class:`mgn.Client.exceptions.AccessDeniedException`

    

==========
Paginators
==========


The available paginators are:

* :py:class:`mgn.Paginator.DescribeJobLogItems`


* :py:class:`mgn.Paginator.DescribeJobs`


* :py:class:`mgn.Paginator.DescribeReplicationConfigurationTemplates`


* :py:class:`mgn.Paginator.DescribeSourceServers`



.. py:class:: mgn.Paginator.DescribeJobLogItems

  ::

    
    paginator = client.get_paginator('describe_job_log_items')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`mgn.Client.describe_job_log_items`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeJobLogItems>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          jobID='string',
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type jobID: string
    :param jobID: **[REQUIRED]** 

      Request to describe Job log job ID.

      

    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'event': 'JOB_START'|'SERVER_SKIPPED'|'CLEANUP_START'|'CLEANUP_END'|'CLEANUP_FAIL'|'SNAPSHOT_START'|'SNAPSHOT_END'|'SNAPSHOT_FAIL'|'USING_PREVIOUS_SNAPSHOT'|'CONVERSION_START'|'CONVERSION_END'|'CONVERSION_FAIL'|'LAUNCH_START'|'LAUNCH_FAILED'|'JOB_CANCEL'|'JOB_END',
                    'eventData': {
                        'conversionServerID': 'string',
                        'rawError': 'string',
                        'sourceServerID': 'string',
                        'targetInstanceID': 'string'
                    },
                    'logDateTime': 'string'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to describe Job log response items.

          
          

          - *(dict) --* 

            Job log.

            
            

            - **event** *(string) --* 

              Job log event.

              
            

            - **eventData** *(dict) --* 

              Job event data

              
              

              - **conversionServerID** *(string) --* 

                Job Event conversion Server ID.

                
              

              - **rawError** *(string) --* 

                Job error.

                
              

              - **sourceServerID** *(string) --* 

                Job Event Source Server ID.

                
              

              - **targetInstanceID** *(string) --* 

                Job Event Target instance ID.

                
          
            

            - **logDateTime** *(string) --* 

              Job log event date and time.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: mgn.Paginator.DescribeJobs

  ::

    
    paginator = client.get_paginator('describe_jobs')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`mgn.Client.describe_jobs`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeJobs>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          filters={
              'fromDate': 'string',
              'jobIDs': [
                  'string',
              ],
              'toDate': 'string'
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type filters: dict
    :param filters: **[REQUIRED]** 

      Request to describe Job log filters.

      

    
      - **fromDate** *(string) --* 

        Request to describe Job log filters by date.

        

      
      - **jobIDs** *(list) --* 

        Request to describe Job log filters by job ID.

        

      
        - *(string) --* 

        
    
      - **toDate** *(string) --* 

        Request to describe Job log by last date.

        

      
    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'arn': 'string',
                    'creationDateTime': 'string',
                    'endDateTime': 'string',
                    'initiatedBy': 'START_TEST'|'START_CUTOVER'|'DIAGNOSTIC'|'TERMINATE',
                    'jobID': 'string',
                    'participatingServers': [
                        {
                            'launchStatus': 'PENDING'|'IN_PROGRESS'|'LAUNCHED'|'FAILED'|'TERMINATED',
                            'sourceServerID': 'string'
                        },
                    ],
                    'status': 'PENDING'|'STARTED'|'COMPLETED',
                    'tags': {
                        'string': 'string'
                    },
                    'type': 'LAUNCH'|'TERMINATE'
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to describe Job log items.

          
          

          - *(dict) --* 

            Job.

            
            

            - **arn** *(string) --* 

              the ARN of the specific Job.

              
            

            - **creationDateTime** *(string) --* 

              Job creation time.

              
            

            - **endDateTime** *(string) --* 

              Job end time.

              
            

            - **initiatedBy** *(string) --* 

              Job initiated by field.

              
            

            - **jobID** *(string) --* 

              Job ID.

              
            

            - **participatingServers** *(list) --* 

              Servers participating in a specific Job.

              
              

              - *(dict) --* 

                Server participating in Job.

                
                

                - **launchStatus** *(string) --* 

                  Participating server launch status.

                  
                

                - **sourceServerID** *(string) --* 

                  Participating server Source Server ID.

                  
            
          
            

            - **status** *(string) --* 

              Job status.

              
            

            - **tags** *(dict) --* 

              Tags associated with spcific Job.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **type** *(string) --* 

              Job type.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: mgn.Paginator.DescribeReplicationConfigurationTemplates

  ::

    
    paginator = client.get_paginator('describe_replication_configuration_templates')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`mgn.Client.describe_replication_configuration_templates`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeReplicationConfigurationTemplates>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          replicationConfigurationTemplateIDs=[
              'string',
          ],
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type replicationConfigurationTemplateIDs: list
    :param replicationConfigurationTemplateIDs: **[REQUIRED]** 

      Request to describe Replication Configuration template by template IDs.

      

    
      - *(string) --* 

      
  
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'arn': 'string',
                    'associateDefaultSecurityGroup': True|False,
                    'bandwidthThrottling': 123,
                    'createPublicIP': True|False,
                    'dataPlaneRouting': 'PRIVATE_IP'|'PUBLIC_IP',
                    'defaultLargeStagingDiskType': 'GP2'|'ST1',
                    'ebsEncryption': 'DEFAULT'|'CUSTOM',
                    'ebsEncryptionKeyArn': 'string',
                    'replicationConfigurationTemplateID': 'string',
                    'replicationServerInstanceType': 'string',
                    'replicationServersSecurityGroupsIDs': [
                        'string',
                    ],
                    'stagingAreaSubnetId': 'string',
                    'stagingAreaTags': {
                        'string': 'string'
                    },
                    'tags': {
                        'string': 'string'
                    },
                    'useDedicatedReplicationServer': True|False
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to describe Replication Configuration template by items.

          
          

          - *(dict) --* 
            

            - **arn** *(string) --* 

              Replication Configuration template ARN.

              
            

            - **associateDefaultSecurityGroup** *(boolean) --* 

              Replication Configuration template associate default Application Migration Service Security group.

              
            

            - **bandwidthThrottling** *(integer) --* 

              Replication Configuration template bandwidth throtting.

              
            

            - **createPublicIP** *(boolean) --* 

              Replication Configuration template create Public IP.

              
            

            - **dataPlaneRouting** *(string) --* 

              Replication Configuration template data plane routing.

              
            

            - **defaultLargeStagingDiskType** *(string) --* 

              Replication Configuration template use dedault large Staging Disk type.

              
            

            - **ebsEncryption** *(string) --* 

              Replication Configuration template EBS encryption.

              
            

            - **ebsEncryptionKeyArn** *(string) --* 

              Replication Configuration template EBS encryption key ARN.

              
            

            - **replicationConfigurationTemplateID** *(string) --* 

              Replication Configuration template template ID.

              
            

            - **replicationServerInstanceType** *(string) --* 

              Replication Configuration template server instance type.

              
            

            - **replicationServersSecurityGroupsIDs** *(list) --* 

              Replication Configuration template server Security Groups IDs.

              
              

              - *(string) --* 
          
            

            - **stagingAreaSubnetId** *(string) --* 

              Replication Configuration template Staging Area subnet ID.

              
            

            - **stagingAreaTags** *(dict) --* 

              Replication Configuration template Staging Area Tags.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **tags** *(dict) --* 

              Replication Configuration template Tags.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
            

            - **useDedicatedReplicationServer** *(boolean) --* 

              Replication Configuration template use Dedicated Replication Server.

              
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    

.. py:class:: mgn.Paginator.DescribeSourceServers

  ::

    
    paginator = client.get_paginator('describe_source_servers')

  
  

  .. py:method:: paginate(**kwargs)

    Creates an iterator that will paginate through responses from :py:meth:`mgn.Client.describe_source_servers`.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mgn-2020-02-26/DescribeSourceServers>`_    


    **Request Syntax** 
    ::

      response_iterator = paginator.paginate(
          filters={
              'isArchived': True|False,
              'sourceServerIDs': [
                  'string',
              ]
          },
          PaginationConfig={
              'MaxItems': 123,
              'PageSize': 123,
              'StartingToken': 'string'
          }
      )
    :type filters: dict
    :param filters: **[REQUIRED]** 

      Request to filter Source Servers list.

      

    
      - **isArchived** *(boolean) --* 

        Request to filter Source Servers list by archived.

        

      
      - **sourceServerIDs** *(list) --* 

        Request to filter Source Servers list by Source Server ID.

        

      
        - *(string) --* 

        
    
    
    :type PaginationConfig: dict
    :param PaginationConfig: 

      A dictionary that provides parameters to control pagination.

      

    
      - **MaxItems** *(integer) --* 

        The total number of items to return. If the total number of items available is more than the value specified in max-items then a ``NextToken`` will be provided in the output that you can use to resume pagination.

        

      
      - **PageSize** *(integer) --* 

        The size of each page.

        

        

        

      
      - **StartingToken** *(string) --* 

        A token to specify where to start paginating. This is the ``NextToken`` from a previous response.

        

      
    
    
    :rtype: dict
    :returns: 
      
      **Response Syntax** 

      
      ::

        {
            'items': [
                {
                    'arn': 'string',
                    'dataReplicationInfo': {
                        'dataReplicationError': {
                            'error': 'AGENT_NOT_SEEN'|'SNAPSHOTS_FAILURE'|'NOT_CONVERGING'|'UNSTABLE_NETWORK'|'FAILED_TO_CREATE_SECURITY_GROUP'|'FAILED_TO_LAUNCH_REPLICATION_SERVER'|'FAILED_TO_BOOT_REPLICATION_SERVER'|'FAILED_TO_AUTHENTICATE_WITH_SERVICE'|'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'|'FAILED_TO_CREATE_STAGING_DISKS'|'FAILED_TO_ATTACH_STAGING_DISKS'|'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'|'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'|'FAILED_TO_START_DATA_TRANSFER',
                            'rawError': 'string'
                        },
                        'dataReplicationInitiation': {
                            'nextAttemptDateTime': 'string',
                            'startDateTime': 'string',
                            'steps': [
                                {
                                    'name': 'WAIT'|'CREATE_SECURITY_GROUP'|'LAUNCH_REPLICATION_SERVER'|'BOOT_REPLICATION_SERVER'|'AUTHENTICATE_WITH_SERVICE'|'DOWNLOAD_REPLICATION_SOFTWARE'|'CREATE_STAGING_DISKS'|'ATTACH_STAGING_DISKS'|'PAIR_REPLICATION_SERVER_WITH_AGENT'|'CONNECT_AGENT_TO_REPLICATION_SERVER'|'START_DATA_TRANSFER',
                                    'status': 'NOT_STARTED'|'IN_PROGRESS'|'SUCCEEDED'|'FAILED'|'SKIPPED'
                                },
                            ]
                        },
                        'dataReplicationState': 'STOPPED'|'INITIATING'|'INITIAL_SYNC'|'BACKLOG'|'CREATING_SNAPSHOT'|'CONTINUOUS'|'PAUSED'|'RESCAN'|'STALLED'|'DISCONNECTED',
                        'etaDateTime': 'string',
                        'lagDuration': 'string',
                        'replicatedDisks': [
                            {
                                'backloggedStorageBytes': 123,
                                'deviceName': 'string',
                                'replicatedStorageBytes': 123,
                                'rescannedStorageBytes': 123,
                                'totalStorageBytes': 123
                            },
                        ]
                    },
                    'isArchived': True|False,
                    'launchedInstance': {
                        'ec2InstanceID': 'string',
                        'firstBoot': 'WAITING'|'SUCCEEDED'|'UNKNOWN'|'STOPPED',
                        'jobID': 'string'
                    },
                    'lifeCycle': {
                        'addedToServiceDateTime': 'string',
                        'elapsedReplicationDuration': 'string',
                        'firstByteDateTime': 'string',
                        'lastCutover': {
                            'finalized': {
                                'apiCallDateTime': 'string'
                            },
                            'initiated': {
                                'apiCallDateTime': 'string',
                                'jobID': 'string'
                            },
                            'reverted': {
                                'apiCallDateTime': 'string'
                            }
                        },
                        'lastSeenByServiceDateTime': 'string',
                        'lastTest': {
                            'finalized': {
                                'apiCallDateTime': 'string'
                            },
                            'initiated': {
                                'apiCallDateTime': 'string',
                                'jobID': 'string'
                            },
                            'reverted': {
                                'apiCallDateTime': 'string'
                            }
                        },
                        'state': 'STOPPED'|'NOT_READY'|'READY_FOR_TEST'|'TESTING'|'READY_FOR_CUTOVER'|'CUTTING_OVER'|'CUTOVER'|'DISCONNECTED'
                    },
                    'sourceProperties': {
                        'cpus': [
                            {
                                'cores': 123,
                                'modelName': 'string'
                            },
                        ],
                        'disks': [
                            {
                                'bytes': 123,
                                'deviceName': 'string'
                            },
                        ],
                        'identificationHints': {
                            'awsInstanceID': 'string',
                            'fqdn': 'string',
                            'hostname': 'string',
                            'vmWareUuid': 'string'
                        },
                        'lastUpdatedDateTime': 'string',
                        'networkInterfaces': [
                            {
                                'ips': [
                                    'string',
                                ],
                                'isPrimary': True|False,
                                'macAddress': 'string'
                            },
                        ],
                        'os': {
                            'fullString': 'string'
                        },
                        'ramBytes': 123,
                        'recommendedInstanceType': 'string'
                    },
                    'sourceServerID': 'string',
                    'tags': {
                        'string': 'string'
                    }
                },
            ],
            'NextToken': 'string'
        }
      **Response Structure** 

      

      - *(dict) --* 
        

        - **items** *(list) --* 

          Request to filter Source Servers list by item.

          
          

          - *(dict) --* 
            

            - **arn** *(string) --* 

              Source server ARN.

              
            

            - **dataReplicationInfo** *(dict) --* 

              Source server data replication info.

              
              

              - **dataReplicationError** *(dict) --* 

                Error in obtaining data replication info.

                
                

                - **error** *(string) --* 

                  Error in data replication.

                  
                

                - **rawError** *(string) --* 

                  Error in data replication.

                  
            
              

              - **dataReplicationInitiation** *(dict) --* 

                Request to query whether data replication has been initiated.

                
                

                - **nextAttemptDateTime** *(string) --* 

                  Request to query next data initiation date and time.

                  
                

                - **startDateTime** *(string) --* 

                  Request to query data initiation start date and time.

                  
                

                - **steps** *(list) --* 

                  Request to query data initiation steps.

                  
                  

                  - *(dict) --* 

                    Data replication intiation step.

                    
                    

                    - **name** *(string) --* 

                      Request to query data initiation step name.

                      
                    

                    - **status** *(string) --* 

                      Request to query data initiation status.

                      
                
              
            
              

              - **dataReplicationState** *(string) --* 

                Request to query the data replication state.

                
              

              - **etaDateTime** *(string) --* 

                Request to query the time when data replication will be complete.

                
              

              - **lagDuration** *(string) --* 

                Request to query data replication lag durating.

                
              

              - **replicatedDisks** *(list) --* 

                Request to query disks replicated.

                
                

                - *(dict) --* 

                  Request to query disks replicated.

                  
                  

                  - **backloggedStorageBytes** *(integer) --* 

                    Request to query data replication backlog size in bytes.

                    
                  

                  - **deviceName** *(string) --* 

                    Request to query device name.

                    
                  

                  - **replicatedStorageBytes** *(integer) --* 

                    Request to query amount of data replicated in bytes.

                    
                  

                  - **rescannedStorageBytes** *(integer) --* 

                    Request to query amount of data rescanned in bytes.

                    
                  

                  - **totalStorageBytes** *(integer) --* 

                    Request to query total amount of data replicated in bytes.

                    
              
            
          
            

            - **isArchived** *(boolean) --* 

              Source server archived status.

              
            

            - **launchedInstance** *(dict) --* 

              Source server launched instance.

              
              

              - **ec2InstanceID** *(string) --* 

                Configure launced instance EC2 ID.

                
              

              - **firstBoot** *(string) --* 

                Configure launced instance first boot.

                
              

              - **jobID** *(string) --* 

                Configure launced instance Job ID.

                
          
            

            - **lifeCycle** *(dict) --* 

              Source server lifecycle state.

              
              

              - **addedToServiceDateTime** *(string) --* 

                Lifecycle added to service data and time.

                
              

              - **elapsedReplicationDuration** *(string) --* 

                Lifecycle elapsed time and duration.

                
              

              - **firstByteDateTime** *(string) --* 

                Lifecycle replication initiation date and time.

                
              

              - **lastCutover** *(dict) --* 

                Lifecycle last Cutover.

                
                

                - **finalized** *(dict) --* 

                  Lifecycle Cutover finalized date and time.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle Cutover finalized date and time.

                    
              
                

                - **initiated** *(dict) --* 

                  Lifecycle last Cutover initiated.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    

                    
                  

                  - **jobID** *(string) --* 

                    Lifecycle last Cutover initiated by Job ID.

                    
              
                

                - **reverted** *(dict) --* 

                  Lifecycle last Cutover reverted.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle last Cutover reverted API call date time.

                    
              
            
              

              - **lastSeenByServiceDateTime** *(string) --* 

                Lifecycle last seen date and time.

                
              

              - **lastTest** *(dict) --* 

                Lifecycle last Test.

                
                

                - **finalized** *(dict) --* 

                  Lifecycle last Test finlized.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle Test failed API call date and time.

                    
              
                

                - **initiated** *(dict) --* 

                  Lifecycle last Test initiated.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle last Test initiated API call date and time.

                    
                  

                  - **jobID** *(string) --* 

                    Lifecycle last Test initiated Job ID.

                    
              
                

                - **reverted** *(dict) --* 

                  Lifecycle last Test reverted.

                  
                  

                  - **apiCallDateTime** *(string) --* 

                    Lifecycle last Test reverted API call date and time.

                    
              
            
              

              - **state** *(string) --* 

                Lifecycle state.

                
          
            

            - **sourceProperties** *(dict) --* 

              Source server properties.

              
              

              - **cpus** *(list) --* 

                Source Server CPUs.

                
                

                - *(dict) --* 

                  Source server CPU information.

                  
                  

                  - **cores** *(integer) --* 

                    The number of CPU cores on the source server.

                    
                  

                  - **modelName** *(string) --* 

                    The source server's CPU model name.

                    
              
            
              

              - **disks** *(list) --* 

                Source Server disks.

                
                

                - *(dict) --* 

                  The disk identifier.

                  
                  

                  - **bytes** *(integer) --* 

                    The amount of storage on the disk in bytes.

                    
                  

                  - **deviceName** *(string) --* 

                    The disk or device name.

                    
              
            
              

              - **identificationHints** *(dict) --* 

                Source server identification hints.

                
                

                - **awsInstanceID** *(string) --* 

                  AWS Instance ID identification hint.

                  
                

                - **fqdn** *(string) --* 

                  FQDN address identification hint.

                  
                

                - **hostname** *(string) --* 

                  Hostname identification hint.

                  
                

                - **vmWareUuid** *(string) --* 

                  vmWare UUID identification hint.

                  
            
              

              - **lastUpdatedDateTime** *(string) --* 

                Source server last update date and time.

                
              

              - **networkInterfaces** *(list) --* 

                Source server network interfaces.

                
                

                - *(dict) --* 

                  Network interface.

                  
                  

                  - **ips** *(list) --* 

                    Network interface IPs.

                    
                    

                    - *(string) --* 
                
                  

                  - **isPrimary** *(boolean) --* 

                    Network interface primary IP.

                    
                  

                  - **macAddress** *(string) --* 

                    Network interface Mac address.

                    
              
            
              

              - **os** *(dict) --* 

                Source server OS.

                
                

                - **fullString** *(string) --* 

                  OS full string.

                  
            
              

              - **ramBytes** *(integer) --* 

                Source server RAM in bytes.

                
              

              - **recommendedInstanceType** *(string) --* 

                Source server recommended instance type.

                
          
            

            - **sourceServerID** *(string) --* 

              Source server ID.

              
            

            - **tags** *(dict) --* 

              Source server Tags.

              
              

              - *(string) --* 
                

                - *(string) --* 
          
        
        
      
        

        - **NextToken** *(string) --* 

          A token to resume pagination.

          
    